//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:42:42 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__GPad.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TAttCanvas_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TAttCanvas(void *p = 0);
   static void *newArray_TAttCanvas(Long_t size, void *p);
   static void delete_TAttCanvas(void *p);
   static void deleteArray_TAttCanvas(void *p);
   static void destruct_TAttCanvas(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TAttCanvas*)
   {
      ::TAttCanvas *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TAttCanvas >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TAttCanvas", ::TAttCanvas::Class_Version(), "include/TAttCanvas.h", 28,
                  typeid(::TAttCanvas), DefineBehavior(ptr, ptr),
                  &::TAttCanvas::Dictionary, isa_proxy, 4,
                  sizeof(::TAttCanvas) );
      instance.SetNew(&new_TAttCanvas);
      instance.SetNewArray(&newArray_TAttCanvas);
      instance.SetDelete(&delete_TAttCanvas);
      instance.SetDeleteArray(&deleteArray_TAttCanvas);
      instance.SetDestructor(&destruct_TAttCanvas);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TAttCanvas*)
   {
      return GenerateInitInstanceLocal((::TAttCanvas*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TAttCanvas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TView_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TView(void *p);
   static void deleteArray_TView(void *p);
   static void destruct_TView(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TView*)
   {
      ::TView *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TView >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TView", ::TView::Class_Version(), "include/TView.h", 36,
                  typeid(::TView), DefineBehavior(ptr, ptr),
                  &::TView::Dictionary, isa_proxy, 4,
                  sizeof(::TView) );
      instance.SetDelete(&delete_TView);
      instance.SetDeleteArray(&deleteArray_TView);
      instance.SetDestructor(&destruct_TView);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TView*)
   {
      return GenerateInitInstanceLocal((::TView*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TView*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCanvas_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TCanvas(void *p = 0);
   static void *newArray_TCanvas(Long_t size, void *p);
   static void delete_TCanvas(void *p);
   static void deleteArray_TCanvas(void *p);
   static void destruct_TCanvas(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCanvas*)
   {
      ::TCanvas *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCanvas >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCanvas", ::TCanvas::Class_Version(), "include/TCanvas.h", 48,
                  typeid(::TCanvas), DefineBehavior(ptr, ptr),
                  &::TCanvas::Dictionary, isa_proxy, 1,
                  sizeof(::TCanvas) );
      instance.SetNew(&new_TCanvas);
      instance.SetNewArray(&newArray_TCanvas);
      instance.SetDelete(&delete_TCanvas);
      instance.SetDeleteArray(&deleteArray_TCanvas);
      instance.SetDestructor(&destruct_TCanvas);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCanvas*)
   {
      return GenerateInitInstanceLocal((::TCanvas*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCanvas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPad_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TPad(void *p = 0);
   static void *newArray_TPad(Long_t size, void *p);
   static void delete_TPad(void *p);
   static void deleteArray_TPad(void *p);
   static void destruct_TPad(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPad*)
   {
      ::TPad *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPad >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPad", ::TPad::Class_Version(), "include/TPad.h", 35,
                  typeid(::TPad), DefineBehavior(ptr, ptr),
                  &::TPad::Dictionary, isa_proxy, 1,
                  sizeof(::TPad) );
      instance.SetNew(&new_TPad);
      instance.SetNewArray(&newArray_TPad);
      instance.SetDelete(&delete_TPad);
      instance.SetDeleteArray(&deleteArray_TPad);
      instance.SetDestructor(&destruct_TPad);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPad*)
   {
      return GenerateInitInstanceLocal((::TPad*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPad*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TButton_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TButton(void *p = 0);
   static void *newArray_TButton(Long_t size, void *p);
   static void delete_TButton(void *p);
   static void deleteArray_TButton(void *p);
   static void destruct_TButton(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TButton*)
   {
      ::TButton *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TButton >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TButton", ::TButton::Class_Version(), "include/TButton.h", 32,
                  typeid(::TButton), DefineBehavior(ptr, ptr),
                  &::TButton::Dictionary, isa_proxy, 4,
                  sizeof(::TButton) );
      instance.SetNew(&new_TButton);
      instance.SetNewArray(&newArray_TButton);
      instance.SetDelete(&delete_TButton);
      instance.SetDeleteArray(&deleteArray_TButton);
      instance.SetDestructor(&destruct_TButton);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TButton*)
   {
      return GenerateInitInstanceLocal((::TButton*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TButton*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TControlBar_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TControlBar(void *p = 0);
   static void *newArray_TControlBar(Long_t size, void *p);
   static void delete_TControlBar(void *p);
   static void deleteArray_TControlBar(void *p);
   static void destruct_TControlBar(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TControlBar*)
   {
      ::TControlBar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TControlBar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TControlBar", ::TControlBar::Class_Version(), "include/TControlBar.h", 37,
                  typeid(::TControlBar), DefineBehavior(ptr, ptr),
                  &::TControlBar::Dictionary, isa_proxy, 4,
                  sizeof(::TControlBar) );
      instance.SetNew(&new_TControlBar);
      instance.SetNewArray(&newArray_TControlBar);
      instance.SetDelete(&delete_TControlBar);
      instance.SetDeleteArray(&deleteArray_TControlBar);
      instance.SetDestructor(&destruct_TControlBar);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TControlBar*)
   {
      return GenerateInitInstanceLocal((::TControlBar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TControlBar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TClassTree_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TClassTree(void *p = 0);
   static void *newArray_TClassTree(Long_t size, void *p);
   static void delete_TClassTree(void *p);
   static void deleteArray_TClassTree(void *p);
   static void destruct_TClassTree(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TClassTree*)
   {
      ::TClassTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TClassTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TClassTree", ::TClassTree::Class_Version(), "include/TClassTree.h", 31,
                  typeid(::TClassTree), DefineBehavior(ptr, ptr),
                  &::TClassTree::Dictionary, isa_proxy, 1,
                  sizeof(::TClassTree) );
      instance.SetNew(&new_TClassTree);
      instance.SetNewArray(&newArray_TClassTree);
      instance.SetDelete(&delete_TClassTree);
      instance.SetDeleteArray(&deleteArray_TClassTree);
      instance.SetDestructor(&destruct_TClassTree);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TClassTree*)
   {
      return GenerateInitInstanceLocal((::TClassTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TClassTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TColorWheel_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TColorWheel(void *p = 0);
   static void *newArray_TColorWheel(Long_t size, void *p);
   static void delete_TColorWheel(void *p);
   static void deleteArray_TColorWheel(void *p);
   static void destruct_TColorWheel(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TColorWheel*)
   {
      ::TColorWheel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TColorWheel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TColorWheel", ::TColorWheel::Class_Version(), "include/TColorWheel.h", 34,
                  typeid(::TColorWheel), DefineBehavior(ptr, ptr),
                  &::TColorWheel::Dictionary, isa_proxy, 4,
                  sizeof(::TColorWheel) );
      instance.SetNew(&new_TColorWheel);
      instance.SetNewArray(&newArray_TColorWheel);
      instance.SetDelete(&delete_TColorWheel);
      instance.SetDeleteArray(&deleteArray_TColorWheel);
      instance.SetDestructor(&destruct_TColorWheel);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TColorWheel*)
   {
      return GenerateInitInstanceLocal((::TColorWheel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TColorWheel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TControlBarButton_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TControlBarButton(void *p = 0);
   static void *newArray_TControlBarButton(Long_t size, void *p);
   static void delete_TControlBarButton(void *p);
   static void deleteArray_TControlBarButton(void *p);
   static void destruct_TControlBarButton(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TControlBarButton*)
   {
      ::TControlBarButton *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TControlBarButton >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TControlBarButton", ::TControlBarButton::Class_Version(), "include/TControlBarButton.h", 35,
                  typeid(::TControlBarButton), DefineBehavior(ptr, ptr),
                  &::TControlBarButton::Dictionary, isa_proxy, 4,
                  sizeof(::TControlBarButton) );
      instance.SetNew(&new_TControlBarButton);
      instance.SetNewArray(&newArray_TControlBarButton);
      instance.SetDelete(&delete_TControlBarButton);
      instance.SetDeleteArray(&deleteArray_TControlBarButton);
      instance.SetDestructor(&destruct_TControlBarButton);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TControlBarButton*)
   {
      return GenerateInitInstanceLocal((::TControlBarButton*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TControlBarButton*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDialogCanvas_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TDialogCanvas(void *p = 0);
   static void *newArray_TDialogCanvas(Long_t size, void *p);
   static void delete_TDialogCanvas(void *p);
   static void deleteArray_TDialogCanvas(void *p);
   static void destruct_TDialogCanvas(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDialogCanvas*)
   {
      ::TDialogCanvas *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDialogCanvas >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDialogCanvas", ::TDialogCanvas::Class_Version(), "include/TDialogCanvas.h", 31,
                  typeid(::TDialogCanvas), DefineBehavior(ptr, ptr),
                  &::TDialogCanvas::Dictionary, isa_proxy, 4,
                  sizeof(::TDialogCanvas) );
      instance.SetNew(&new_TDialogCanvas);
      instance.SetNewArray(&newArray_TDialogCanvas);
      instance.SetDelete(&delete_TDialogCanvas);
      instance.SetDeleteArray(&deleteArray_TDialogCanvas);
      instance.SetDestructor(&destruct_TDialogCanvas);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDialogCanvas*)
   {
      return GenerateInitInstanceLocal((::TDialogCanvas*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDialogCanvas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TGroupButton_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TGroupButton(void *p = 0);
   static void *newArray_TGroupButton(Long_t size, void *p);
   static void delete_TGroupButton(void *p);
   static void deleteArray_TGroupButton(void *p);
   static void destruct_TGroupButton(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGroupButton*)
   {
      ::TGroupButton *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGroupButton >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGroupButton", ::TGroupButton::Class_Version(), "include/TGroupButton.h", 34,
                  typeid(::TGroupButton), DefineBehavior(ptr, ptr),
                  &::TGroupButton::Dictionary, isa_proxy, 4,
                  sizeof(::TGroupButton) );
      instance.SetNew(&new_TGroupButton);
      instance.SetNewArray(&newArray_TGroupButton);
      instance.SetDelete(&delete_TGroupButton);
      instance.SetDeleteArray(&deleteArray_TGroupButton);
      instance.SetDestructor(&destruct_TGroupButton);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGroupButton*)
   {
      return GenerateInitInstanceLocal((::TGroupButton*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGroupButton*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TInspectCanvas_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TInspectCanvas(void *p = 0);
   static void *newArray_TInspectCanvas(Long_t size, void *p);
   static void delete_TInspectCanvas(void *p);
   static void deleteArray_TInspectCanvas(void *p);
   static void destruct_TInspectCanvas(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TInspectCanvas*)
   {
      ::TInspectCanvas *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TInspectCanvas >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TInspectCanvas", ::TInspectCanvas::Class_Version(), "include/TInspectCanvas.h", 33,
                  typeid(::TInspectCanvas), DefineBehavior(ptr, ptr),
                  &::TInspectCanvas::Dictionary, isa_proxy, 4,
                  sizeof(::TInspectCanvas) );
      instance.SetNew(&new_TInspectCanvas);
      instance.SetNewArray(&newArray_TInspectCanvas);
      instance.SetDelete(&delete_TInspectCanvas);
      instance.SetDeleteArray(&deleteArray_TInspectCanvas);
      instance.SetDestructor(&destruct_TInspectCanvas);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TInspectCanvas*)
   {
      return GenerateInitInstanceLocal((::TInspectCanvas*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TInspectCanvas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPadPainter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TPadPainter(void *p = 0);
   static void *newArray_TPadPainter(Long_t size, void *p);
   static void delete_TPadPainter(void *p);
   static void deleteArray_TPadPainter(void *p);
   static void destruct_TPadPainter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPadPainter*)
   {
      ::TPadPainter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPadPainter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPadPainter", ::TPadPainter::Class_Version(), "include/TPadPainter.h", 17,
                  typeid(::TPadPainter), DefineBehavior(ptr, ptr),
                  &::TPadPainter::Dictionary, isa_proxy, 0,
                  sizeof(::TPadPainter) );
      instance.SetNew(&new_TPadPainter);
      instance.SetNewArray(&newArray_TPadPainter);
      instance.SetDelete(&delete_TPadPainter);
      instance.SetDeleteArray(&deleteArray_TPadPainter);
      instance.SetDestructor(&destruct_TPadPainter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPadPainter*)
   {
      return GenerateInitInstanceLocal((::TPadPainter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPadPainter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPaveClass_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TPaveClass(void *p = 0);
   static void *newArray_TPaveClass(Long_t size, void *p);
   static void delete_TPaveClass(void *p);
   static void deleteArray_TPaveClass(void *p);
   static void destruct_TPaveClass(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPaveClass*)
   {
      ::TPaveClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPaveClass >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPaveClass", ::TPaveClass::Class_Version(), "include/TPaveClass.h", 31,
                  typeid(::TPaveClass), DefineBehavior(ptr, ptr),
                  &::TPaveClass::Dictionary, isa_proxy, 4,
                  sizeof(::TPaveClass) );
      instance.SetNew(&new_TPaveClass);
      instance.SetNewArray(&newArray_TPaveClass);
      instance.SetDelete(&delete_TPaveClass);
      instance.SetDeleteArray(&deleteArray_TPaveClass);
      instance.SetDestructor(&destruct_TPaveClass);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPaveClass*)
   {
      return GenerateInitInstanceLocal((::TPaveClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPaveClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSlider_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TSlider(void *p = 0);
   static void *newArray_TSlider(Long_t size, void *p);
   static void delete_TSlider(void *p);
   static void deleteArray_TSlider(void *p);
   static void destruct_TSlider(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSlider*)
   {
      ::TSlider *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSlider >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSlider", ::TSlider::Class_Version(), "include/TSlider.h", 31,
                  typeid(::TSlider), DefineBehavior(ptr, ptr),
                  &::TSlider::Dictionary, isa_proxy, 4,
                  sizeof(::TSlider) );
      instance.SetNew(&new_TSlider);
      instance.SetNewArray(&newArray_TSlider);
      instance.SetDelete(&delete_TSlider);
      instance.SetDeleteArray(&deleteArray_TSlider);
      instance.SetDestructor(&destruct_TSlider);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSlider*)
   {
      return GenerateInitInstanceLocal((::TSlider*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSlider*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSliderBox_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TSliderBox(void *p = 0);
   static void *newArray_TSliderBox(Long_t size, void *p);
   static void delete_TSliderBox(void *p);
   static void deleteArray_TSliderBox(void *p);
   static void destruct_TSliderBox(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSliderBox*)
   {
      ::TSliderBox *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSliderBox >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSliderBox", ::TSliderBox::Class_Version(), "include/TSliderBox.h", 31,
                  typeid(::TSliderBox), DefineBehavior(ptr, ptr),
                  &::TSliderBox::Dictionary, isa_proxy, 4,
                  sizeof(::TSliderBox) );
      instance.SetNew(&new_TSliderBox);
      instance.SetNewArray(&newArray_TSliderBox);
      instance.SetDelete(&delete_TSliderBox);
      instance.SetDeleteArray(&deleteArray_TSliderBox);
      instance.SetDestructor(&destruct_TSliderBox);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSliderBox*)
   {
      return GenerateInitInstanceLocal((::TSliderBox*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSliderBox*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TViewer3DPad_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TViewer3DPad(void *p);
   static void deleteArray_TViewer3DPad(void *p);
   static void destruct_TViewer3DPad(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TViewer3DPad*)
   {
      ::TViewer3DPad *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TViewer3DPad >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TViewer3DPad", ::TViewer3DPad::Class_Version(), "include/TViewer3DPad.h", 30,
                  typeid(::TViewer3DPad), DefineBehavior(ptr, ptr),
                  &::TViewer3DPad::Dictionary, isa_proxy, 0,
                  sizeof(::TViewer3DPad) );
      instance.SetDelete(&delete_TViewer3DPad);
      instance.SetDeleteArray(&deleteArray_TViewer3DPad);
      instance.SetDestructor(&destruct_TViewer3DPad);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TViewer3DPad*)
   {
      return GenerateInitInstanceLocal((::TViewer3DPad*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TViewer3DPad*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TAttCanvas::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAttCanvas::Class_Name()
{
   return "TAttCanvas";
}

//______________________________________________________________________________
const char *TAttCanvas::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TAttCanvas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAttCanvas::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TAttCanvas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAttCanvas::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TAttCanvas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAttCanvas::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TAttCanvas*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TView::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TView::Class_Name()
{
   return "TView";
}

//______________________________________________________________________________
const char *TView::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TView*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TView::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TView*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TView::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TView*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TView::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TView*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCanvas::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCanvas::Class_Name()
{
   return "TCanvas";
}

//______________________________________________________________________________
const char *TCanvas::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCanvas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCanvas::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCanvas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCanvas::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCanvas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCanvas::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCanvas*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPad::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPad::Class_Name()
{
   return "TPad";
}

//______________________________________________________________________________
const char *TPad::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPad*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPad::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPad*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPad::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPad*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPad::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPad*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TButton::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TButton::Class_Name()
{
   return "TButton";
}

//______________________________________________________________________________
const char *TButton::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TButton*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TButton::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TButton*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TButton::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TButton*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TButton::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TButton*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TControlBar::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TControlBar::Class_Name()
{
   return "TControlBar";
}

//______________________________________________________________________________
const char *TControlBar::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TControlBar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TControlBar::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TControlBar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TControlBar::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TControlBar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TControlBar::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TControlBar*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TClassTree::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TClassTree::Class_Name()
{
   return "TClassTree";
}

//______________________________________________________________________________
const char *TClassTree::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TClassTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TClassTree::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TClassTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TClassTree::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TClassTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TClassTree::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TClassTree*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TColorWheel::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TColorWheel::Class_Name()
{
   return "TColorWheel";
}

//______________________________________________________________________________
const char *TColorWheel::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TColorWheel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TColorWheel::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TColorWheel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TColorWheel::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TColorWheel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TColorWheel::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TColorWheel*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TControlBarButton::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TControlBarButton::Class_Name()
{
   return "TControlBarButton";
}

//______________________________________________________________________________
const char *TControlBarButton::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TControlBarButton*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TControlBarButton::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TControlBarButton*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TControlBarButton::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TControlBarButton*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TControlBarButton::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TControlBarButton*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDialogCanvas::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDialogCanvas::Class_Name()
{
   return "TDialogCanvas";
}

//______________________________________________________________________________
const char *TDialogCanvas::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDialogCanvas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDialogCanvas::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDialogCanvas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDialogCanvas::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDialogCanvas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDialogCanvas::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDialogCanvas*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGroupButton::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGroupButton::Class_Name()
{
   return "TGroupButton";
}

//______________________________________________________________________________
const char *TGroupButton::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGroupButton*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGroupButton::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGroupButton*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGroupButton::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGroupButton*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGroupButton::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGroupButton*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TInspectCanvas::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TInspectCanvas::Class_Name()
{
   return "TInspectCanvas";
}

//______________________________________________________________________________
const char *TInspectCanvas::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TInspectCanvas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TInspectCanvas::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TInspectCanvas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TInspectCanvas::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TInspectCanvas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TInspectCanvas::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TInspectCanvas*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPadPainter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPadPainter::Class_Name()
{
   return "TPadPainter";
}

//______________________________________________________________________________
const char *TPadPainter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPadPainter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPadPainter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPadPainter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPadPainter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPadPainter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPadPainter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPadPainter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPaveClass::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPaveClass::Class_Name()
{
   return "TPaveClass";
}

//______________________________________________________________________________
const char *TPaveClass::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPaveClass*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPaveClass::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPaveClass*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPaveClass::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPaveClass*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPaveClass::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPaveClass*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSlider::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSlider::Class_Name()
{
   return "TSlider";
}

//______________________________________________________________________________
const char *TSlider::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSlider*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSlider::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSlider*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSlider::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSlider*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSlider::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSlider*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSliderBox::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSliderBox::Class_Name()
{
   return "TSliderBox";
}

//______________________________________________________________________________
const char *TSliderBox::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSliderBox*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSliderBox::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSliderBox*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSliderBox::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSliderBox*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSliderBox::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSliderBox*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TViewer3DPad::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TViewer3DPad::Class_Name()
{
   return "TViewer3DPad";
}

//______________________________________________________________________________
const char *TViewer3DPad::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TViewer3DPad*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TViewer3DPad::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TViewer3DPad*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TViewer3DPad::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TViewer3DPad*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TViewer3DPad::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TViewer3DPad*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TAttCanvas::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAttCanvas.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TAttCanvas::Class(),this);
   } else {
      R__b.WriteClassBuffer(TAttCanvas::Class(),this);
   }
}

//______________________________________________________________________________
void TAttCanvas::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TAttCanvas.
      TClass *R__cl = ::TAttCanvas::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fXBetween", &fXBetween);
      R__insp.Inspect(R__cl, R__parent, "fYBetween", &fYBetween);
      R__insp.Inspect(R__cl, R__parent, "fTitleFromTop", &fTitleFromTop);
      R__insp.Inspect(R__cl, R__parent, "fXdate", &fXdate);
      R__insp.Inspect(R__cl, R__parent, "fYdate", &fYdate);
      R__insp.Inspect(R__cl, R__parent, "fAdate", &fAdate);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TAttCanvas(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAttCanvas : new ::TAttCanvas;
   }
   static void *newArray_TAttCanvas(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAttCanvas[nElements] : new ::TAttCanvas[nElements];
   }
   // Wrapper around operator delete
   static void delete_TAttCanvas(void *p) {
      delete ((::TAttCanvas*)p);
   }
   static void deleteArray_TAttCanvas(void *p) {
      delete [] ((::TAttCanvas*)p);
   }
   static void destruct_TAttCanvas(void *p) {
      typedef ::TAttCanvas current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAttCanvas

//______________________________________________________________________________
void TButton::Streamer(TBuffer &R__b)
{
   // Stream an object of class TButton.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TButton::Class(),this);
   } else {
      R__b.WriteClassBuffer(TButton::Class(),this);
   }
}

//______________________________________________________________________________
void TButton::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TButton.
      TClass *R__cl = ::TButton::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fFocused", &fFocused);
      R__insp.Inspect(R__cl, R__parent, "fFraming", &fFraming);
      R__insp.Inspect(R__cl, R__parent, "fMethod", &fMethod);
      fMethod.ShowMembers(R__insp, strcat(R__parent,"fMethod.")); R__parent[R__ncp] = 0;
      TPad::ShowMembers(R__insp, R__parent);
      TAttText::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TButton(void *p) {
      return  p ? new(p) ::TButton : new ::TButton;
   }
   static void *newArray_TButton(Long_t nElements, void *p) {
      return p ? new(p) ::TButton[nElements] : new ::TButton[nElements];
   }
   // Wrapper around operator delete
   static void delete_TButton(void *p) {
      delete ((::TButton*)p);
   }
   static void deleteArray_TButton(void *p) {
      delete [] ((::TButton*)p);
   }
   static void destruct_TButton(void *p) {
      typedef ::TButton current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TButton

//______________________________________________________________________________
void TCanvas::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TCanvas.
      TClass *R__cl = ::TCanvas::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fCatt", &fCatt);
      fCatt.ShowMembers(R__insp, strcat(R__parent,"fCatt.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDISPLAY", &fDISPLAY);
      fDISPLAY.ShowMembers(R__insp, strcat(R__parent,"fDISPLAY.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fXsizeUser", &fXsizeUser);
      R__insp.Inspect(R__cl, R__parent, "fYsizeUser", &fYsizeUser);
      R__insp.Inspect(R__cl, R__parent, "fXsizeReal", &fXsizeReal);
      R__insp.Inspect(R__cl, R__parent, "fYsizeReal", &fYsizeReal);
      R__insp.Inspect(R__cl, R__parent, "fHighLightColor", &fHighLightColor);
      R__insp.Inspect(R__cl, R__parent, "fDoubleBuffer", &fDoubleBuffer);
      R__insp.Inspect(R__cl, R__parent, "fWindowTopX", &fWindowTopX);
      R__insp.Inspect(R__cl, R__parent, "fWindowTopY", &fWindowTopY);
      R__insp.Inspect(R__cl, R__parent, "fWindowWidth", &fWindowWidth);
      R__insp.Inspect(R__cl, R__parent, "fWindowHeight", &fWindowHeight);
      R__insp.Inspect(R__cl, R__parent, "fCw", &fCw);
      R__insp.Inspect(R__cl, R__parent, "fCh", &fCh);
      R__insp.Inspect(R__cl, R__parent, "fEvent", &fEvent);
      R__insp.Inspect(R__cl, R__parent, "fEventX", &fEventX);
      R__insp.Inspect(R__cl, R__parent, "fEventY", &fEventY);
      R__insp.Inspect(R__cl, R__parent, "fCanvasID", &fCanvasID);
      R__insp.Inspect(R__cl, R__parent, "*fSelected", &fSelected);
      R__insp.Inspect(R__cl, R__parent, "*fClickSelected", &fClickSelected);
      R__insp.Inspect(R__cl, R__parent, "fSelectedX", &fSelectedX);
      R__insp.Inspect(R__cl, R__parent, "fSelectedY", &fSelectedY);
      R__insp.Inspect(R__cl, R__parent, "fSelectedOpt", &fSelectedOpt);
      fSelectedOpt.ShowMembers(R__insp, strcat(R__parent,"fSelectedOpt.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fSelectedPad", &fSelectedPad);
      R__insp.Inspect(R__cl, R__parent, "*fClickSelectedPad", &fClickSelectedPad);
      R__insp.Inspect(R__cl, R__parent, "*fPadSave", &fPadSave);
      R__insp.Inspect(R__cl, R__parent, "*fCanvasImp", &fCanvasImp);
      R__insp.Inspect(R__cl, R__parent, "*fContextMenu", &fContextMenu);
      R__insp.Inspect(R__cl, R__parent, "fBatch", &fBatch);
      R__insp.Inspect(R__cl, R__parent, "fUpdating", &fUpdating);
      R__insp.Inspect(R__cl, R__parent, "fRetained", &fRetained);
      R__insp.Inspect(R__cl, R__parent, "fUseGL", &fUseGL);
      R__insp.Inspect(R__cl, R__parent, "*fPainter", &fPainter);
      TPad::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCanvas(void *p) {
      return  p ? new(p) ::TCanvas : new ::TCanvas;
   }
   static void *newArray_TCanvas(Long_t nElements, void *p) {
      return p ? new(p) ::TCanvas[nElements] : new ::TCanvas[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCanvas(void *p) {
      delete ((::TCanvas*)p);
   }
   static void deleteArray_TCanvas(void *p) {
      delete [] ((::TCanvas*)p);
   }
   static void destruct_TCanvas(void *p) {
      typedef ::TCanvas current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCanvas

//______________________________________________________________________________
void TClassTree::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TClassTree.
      TClass *R__cl = ::TClassTree::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fClasses", &fClasses);
      fClasses.ShowMembers(R__insp, strcat(R__parent,"fClasses.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fYoffset", &fYoffset);
      R__insp.Inspect(R__cl, R__parent, "fLabelDx", &fLabelDx);
      R__insp.Inspect(R__cl, R__parent, "fNclasses", &fNclasses);
      R__insp.Inspect(R__cl, R__parent, "fShowCod", &fShowCod);
      R__insp.Inspect(R__cl, R__parent, "fShowMul", &fShowMul);
      R__insp.Inspect(R__cl, R__parent, "fShowHas", &fShowHas);
      R__insp.Inspect(R__cl, R__parent, "fShowRef", &fShowRef);
      R__insp.Inspect(R__cl, R__parent, "*fCstatus", &fCstatus);
      R__insp.Inspect(R__cl, R__parent, "*fNdata", &fNdata);
      R__insp.Inspect(R__cl, R__parent, "*fParents", &fParents);
      R__insp.Inspect(R__cl, R__parent, "*fCparent", &fCparent);
      R__insp.Inspect(R__cl, R__parent, "*fDerived", &fDerived);
      R__insp.Inspect(R__cl, R__parent, "*fCpointer", &fCpointer);
      R__insp.Inspect(R__cl, R__parent, "*fCnames", &fCnames);
      R__insp.Inspect(R__cl, R__parent, "*fCtitles", &fCtitles);
      R__insp.Inspect(R__cl, R__parent, "*fOptions", &fOptions);
      R__insp.Inspect(R__cl, R__parent, "fSourceDir", &fSourceDir);
      fSourceDir.ShowMembers(R__insp, strcat(R__parent,"fSourceDir.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fLinks", &fLinks);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TClassTree(void *p) {
      return  p ? new(p) ::TClassTree : new ::TClassTree;
   }
   static void *newArray_TClassTree(Long_t nElements, void *p) {
      return p ? new(p) ::TClassTree[nElements] : new ::TClassTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_TClassTree(void *p) {
      delete ((::TClassTree*)p);
   }
   static void deleteArray_TClassTree(void *p) {
      delete [] ((::TClassTree*)p);
   }
   static void destruct_TClassTree(void *p) {
      typedef ::TClassTree current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TClassTree

//______________________________________________________________________________
void TColorWheel::Streamer(TBuffer &R__b)
{
   // Stream an object of class TColorWheel.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TColorWheel::Class(),this);
   } else {
      R__b.WriteClassBuffer(TColorWheel::Class(),this);
   }
}

//______________________________________________________________________________
void TColorWheel::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TColorWheel.
      TClass *R__cl = ::TColorWheel::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRmin", &fRmin);
      R__insp.Inspect(R__cl, R__parent, "fRmax", &fRmax);
      R__insp.Inspect(R__cl, R__parent, "fR0", &fR0);
      R__insp.Inspect(R__cl, R__parent, "fDr", &fDr);
      R__insp.Inspect(R__cl, R__parent, "fRgray", &fRgray);
      R__insp.Inspect(R__cl, R__parent, "fX[15]", fX);
      R__insp.Inspect(R__cl, R__parent, "fY[15]", fY);
      R__insp.Inspect(R__cl, R__parent, "*fCanvas", &fCanvas);
      R__insp.Inspect(R__cl, R__parent, "*fArc", &fArc);
      R__insp.Inspect(R__cl, R__parent, "*fLine", &fLine);
      R__insp.Inspect(R__cl, R__parent, "*fText", &fText);
      R__insp.Inspect(R__cl, R__parent, "*fGraph", &fGraph);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TColorWheel(void *p) {
      return  p ? new(p) ::TColorWheel : new ::TColorWheel;
   }
   static void *newArray_TColorWheel(Long_t nElements, void *p) {
      return p ? new(p) ::TColorWheel[nElements] : new ::TColorWheel[nElements];
   }
   // Wrapper around operator delete
   static void delete_TColorWheel(void *p) {
      delete ((::TColorWheel*)p);
   }
   static void deleteArray_TColorWheel(void *p) {
      delete [] ((::TColorWheel*)p);
   }
   static void destruct_TColorWheel(void *p) {
      typedef ::TColorWheel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TColorWheel

//______________________________________________________________________________
void TControlBar::Streamer(TBuffer &R__b)
{
   // Stream an object of class TControlBar.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TControlBar::Class(),this);
   } else {
      R__b.WriteClassBuffer(TControlBar::Class(),this);
   }
}

//______________________________________________________________________________
void TControlBar::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TControlBar.
      TClass *R__cl = ::TControlBar::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fControlBarImp", &fControlBarImp);
      R__insp.Inspect(R__cl, R__parent, "fOrientation", &fOrientation);
      R__insp.Inspect(R__cl, R__parent, "*fButtons", &fButtons);
      R__insp.Inspect(R__cl, R__parent, "fNoroc", &fNoroc);
      TControlBarButton::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TControlBar(void *p) {
      return  p ? new(p) ::TControlBar : new ::TControlBar;
   }
   static void *newArray_TControlBar(Long_t nElements, void *p) {
      return p ? new(p) ::TControlBar[nElements] : new ::TControlBar[nElements];
   }
   // Wrapper around operator delete
   static void delete_TControlBar(void *p) {
      delete ((::TControlBar*)p);
   }
   static void deleteArray_TControlBar(void *p) {
      delete [] ((::TControlBar*)p);
   }
   static void destruct_TControlBar(void *p) {
      typedef ::TControlBar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TControlBar

//______________________________________________________________________________
void TControlBarButton::Streamer(TBuffer &R__b)
{
   // Stream an object of class TControlBarButton.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TControlBarButton::Class(),this);
   } else {
      R__b.WriteClassBuffer(TControlBarButton::Class(),this);
   }
}

//______________________________________________________________________________
void TControlBarButton::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TControlBarButton.
      TClass *R__cl = ::TControlBarButton::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      R__insp.Inspect(R__cl, R__parent, "fAction", &fAction);
      fAction.ShowMembers(R__insp, strcat(R__parent,"fAction.")); R__parent[R__ncp] = 0;
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TControlBarButton(void *p) {
      return  p ? new(p) ::TControlBarButton : new ::TControlBarButton;
   }
   static void *newArray_TControlBarButton(Long_t nElements, void *p) {
      return p ? new(p) ::TControlBarButton[nElements] : new ::TControlBarButton[nElements];
   }
   // Wrapper around operator delete
   static void delete_TControlBarButton(void *p) {
      delete ((::TControlBarButton*)p);
   }
   static void deleteArray_TControlBarButton(void *p) {
      delete [] ((::TControlBarButton*)p);
   }
   static void destruct_TControlBarButton(void *p) {
      typedef ::TControlBarButton current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TControlBarButton

//______________________________________________________________________________
void TDialogCanvas::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDialogCanvas.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TDialogCanvas::Class(),this);
   } else {
      R__b.WriteClassBuffer(TDialogCanvas::Class(),this);
   }
}

//______________________________________________________________________________
void TDialogCanvas::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDialogCanvas.
      TClass *R__cl = ::TDialogCanvas::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fRefObject", &fRefObject);
      R__insp.Inspect(R__cl, R__parent, "*fRefPad", &fRefPad);
      TCanvas::ShowMembers(R__insp, R__parent);
      TAttText::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDialogCanvas(void *p) {
      return  p ? new(p) ::TDialogCanvas : new ::TDialogCanvas;
   }
   static void *newArray_TDialogCanvas(Long_t nElements, void *p) {
      return p ? new(p) ::TDialogCanvas[nElements] : new ::TDialogCanvas[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDialogCanvas(void *p) {
      delete ((::TDialogCanvas*)p);
   }
   static void deleteArray_TDialogCanvas(void *p) {
      delete [] ((::TDialogCanvas*)p);
   }
   static void destruct_TDialogCanvas(void *p) {
      typedef ::TDialogCanvas current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDialogCanvas

//______________________________________________________________________________
void TGroupButton::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGroupButton.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TGroupButton::Class(),this);
   } else {
      R__b.WriteClassBuffer(TGroupButton::Class(),this);
   }
}

//______________________________________________________________________________
void TGroupButton::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGroupButton.
      TClass *R__cl = ::TGroupButton::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TButton::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TGroupButton(void *p) {
      return  p ? new(p) ::TGroupButton : new ::TGroupButton;
   }
   static void *newArray_TGroupButton(Long_t nElements, void *p) {
      return p ? new(p) ::TGroupButton[nElements] : new ::TGroupButton[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGroupButton(void *p) {
      delete ((::TGroupButton*)p);
   }
   static void deleteArray_TGroupButton(void *p) {
      delete [] ((::TGroupButton*)p);
   }
   static void destruct_TGroupButton(void *p) {
      typedef ::TGroupButton current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGroupButton

//______________________________________________________________________________
void TInspectCanvas::Streamer(TBuffer &R__b)
{
   // Stream an object of class TInspectCanvas.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TInspectCanvas::Class(),this);
   } else {
      R__b.WriteClassBuffer(TInspectCanvas::Class(),this);
   }
}

//______________________________________________________________________________
void TInspectCanvas::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TInspectCanvas.
      TClass *R__cl = ::TInspectCanvas::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fBackward", &fBackward);
      R__insp.Inspect(R__cl, R__parent, "*fForward", &fForward);
      R__insp.Inspect(R__cl, R__parent, "*fObjects", &fObjects);
      R__insp.Inspect(R__cl, R__parent, "*fCurObject", &fCurObject);
      TCanvas::ShowMembers(R__insp, R__parent);
      TAttText::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TInspectCanvas(void *p) {
      return  p ? new(p) ::TInspectCanvas : new ::TInspectCanvas;
   }
   static void *newArray_TInspectCanvas(Long_t nElements, void *p) {
      return p ? new(p) ::TInspectCanvas[nElements] : new ::TInspectCanvas[nElements];
   }
   // Wrapper around operator delete
   static void delete_TInspectCanvas(void *p) {
      delete ((::TInspectCanvas*)p);
   }
   static void deleteArray_TInspectCanvas(void *p) {
      delete [] ((::TInspectCanvas*)p);
   }
   static void destruct_TInspectCanvas(void *p) {
      typedef ::TInspectCanvas current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TInspectCanvas

//______________________________________________________________________________
void TPad::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPad.
      TClass *R__cl = ::TPad::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTip", &fTip);
      R__insp.Inspect(R__cl, R__parent, "fX1", &fX1);
      R__insp.Inspect(R__cl, R__parent, "fY1", &fY1);
      R__insp.Inspect(R__cl, R__parent, "fX2", &fX2);
      R__insp.Inspect(R__cl, R__parent, "fY2", &fY2);
      R__insp.Inspect(R__cl, R__parent, "fXtoAbsPixelk", &fXtoAbsPixelk);
      R__insp.Inspect(R__cl, R__parent, "fXtoPixelk", &fXtoPixelk);
      R__insp.Inspect(R__cl, R__parent, "fXtoPixel", &fXtoPixel);
      R__insp.Inspect(R__cl, R__parent, "fYtoAbsPixelk", &fYtoAbsPixelk);
      R__insp.Inspect(R__cl, R__parent, "fYtoPixelk", &fYtoPixelk);
      R__insp.Inspect(R__cl, R__parent, "fYtoPixel", &fYtoPixel);
      R__insp.Inspect(R__cl, R__parent, "fUtoAbsPixelk", &fUtoAbsPixelk);
      R__insp.Inspect(R__cl, R__parent, "fUtoPixelk", &fUtoPixelk);
      R__insp.Inspect(R__cl, R__parent, "fUtoPixel", &fUtoPixel);
      R__insp.Inspect(R__cl, R__parent, "fVtoAbsPixelk", &fVtoAbsPixelk);
      R__insp.Inspect(R__cl, R__parent, "fVtoPixelk", &fVtoPixelk);
      R__insp.Inspect(R__cl, R__parent, "fVtoPixel", &fVtoPixel);
      R__insp.Inspect(R__cl, R__parent, "fAbsPixeltoXk", &fAbsPixeltoXk);
      R__insp.Inspect(R__cl, R__parent, "fPixeltoXk", &fPixeltoXk);
      R__insp.Inspect(R__cl, R__parent, "fPixeltoX", &fPixeltoX);
      R__insp.Inspect(R__cl, R__parent, "fAbsPixeltoYk", &fAbsPixeltoYk);
      R__insp.Inspect(R__cl, R__parent, "fPixeltoYk", &fPixeltoYk);
      R__insp.Inspect(R__cl, R__parent, "fPixeltoY", &fPixeltoY);
      R__insp.Inspect(R__cl, R__parent, "fXlowNDC", &fXlowNDC);
      R__insp.Inspect(R__cl, R__parent, "fYlowNDC", &fYlowNDC);
      R__insp.Inspect(R__cl, R__parent, "fWNDC", &fWNDC);
      R__insp.Inspect(R__cl, R__parent, "fHNDC", &fHNDC);
      R__insp.Inspect(R__cl, R__parent, "fAbsXlowNDC", &fAbsXlowNDC);
      R__insp.Inspect(R__cl, R__parent, "fAbsYlowNDC", &fAbsYlowNDC);
      R__insp.Inspect(R__cl, R__parent, "fAbsWNDC", &fAbsWNDC);
      R__insp.Inspect(R__cl, R__parent, "fAbsHNDC", &fAbsHNDC);
      R__insp.Inspect(R__cl, R__parent, "fUxmin", &fUxmin);
      R__insp.Inspect(R__cl, R__parent, "fUymin", &fUymin);
      R__insp.Inspect(R__cl, R__parent, "fUxmax", &fUxmax);
      R__insp.Inspect(R__cl, R__parent, "fUymax", &fUymax);
      R__insp.Inspect(R__cl, R__parent, "fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__parent, "fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__parent, "fAspectRatio", &fAspectRatio);
      R__insp.Inspect(R__cl, R__parent, "fPixmapID", &fPixmapID);
      R__insp.Inspect(R__cl, R__parent, "fGLDevice", &fGLDevice);
      R__insp.Inspect(R__cl, R__parent, "fCopyGLDevice", &fCopyGLDevice);
      R__insp.Inspect(R__cl, R__parent, "fEmbeddedGL", &fEmbeddedGL);
      R__insp.Inspect(R__cl, R__parent, "fNumber", &fNumber);
      R__insp.Inspect(R__cl, R__parent, "fTickx", &fTickx);
      R__insp.Inspect(R__cl, R__parent, "fTicky", &fTicky);
      R__insp.Inspect(R__cl, R__parent, "fLogx", &fLogx);
      R__insp.Inspect(R__cl, R__parent, "fLogy", &fLogy);
      R__insp.Inspect(R__cl, R__parent, "fLogz", &fLogz);
      R__insp.Inspect(R__cl, R__parent, "fPadPaint", &fPadPaint);
      R__insp.Inspect(R__cl, R__parent, "fCrosshair", &fCrosshair);
      R__insp.Inspect(R__cl, R__parent, "fCrosshairPos", &fCrosshairPos);
      R__insp.Inspect(R__cl, R__parent, "fBorderSize", &fBorderSize);
      R__insp.Inspect(R__cl, R__parent, "fBorderMode", &fBorderMode);
      R__insp.Inspect(R__cl, R__parent, "fModified", &fModified);
      R__insp.Inspect(R__cl, R__parent, "fGridx", &fGridx);
      R__insp.Inspect(R__cl, R__parent, "fGridy", &fGridy);
      R__insp.Inspect(R__cl, R__parent, "fAbsCoord", &fAbsCoord);
      R__insp.Inspect(R__cl, R__parent, "fEditable", &fEditable);
      R__insp.Inspect(R__cl, R__parent, "fFixedAspectRatio", &fFixedAspectRatio);
      R__insp.Inspect(R__cl, R__parent, "*fMother", &fMother);
      R__insp.Inspect(R__cl, R__parent, "*fCanvas", &fCanvas);
      R__insp.Inspect(R__cl, R__parent, "*fPrimitives", &fPrimitives);
      R__insp.Inspect(R__cl, R__parent, "*fExecs", &fExecs);
      R__insp.Inspect(R__cl, R__parent, "fName", &fName);
      fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTitle", &fTitle);
      fTitle.ShowMembers(R__insp, strcat(R__parent,"fTitle.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fFrame", &fFrame);
      R__insp.Inspect(R__cl, R__parent, "*fView", &fView);
      R__insp.Inspect(R__cl, R__parent, "*fPadPointer", &fPadPointer);
      R__insp.Inspect(R__cl, R__parent, "*fPadView3D", &fPadView3D);
      R__insp.Inspect(R__cl, R__parent, "*fViewer3D", &fViewer3D);
      TVirtualPad::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPad(void *p) {
      return  p ? new(p) ::TPad : new ::TPad;
   }
   static void *newArray_TPad(Long_t nElements, void *p) {
      return p ? new(p) ::TPad[nElements] : new ::TPad[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPad(void *p) {
      delete ((::TPad*)p);
   }
   static void deleteArray_TPad(void *p) {
      delete [] ((::TPad*)p);
   }
   static void destruct_TPad(void *p) {
      typedef ::TPad current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPad

//______________________________________________________________________________
void TPaveClass::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPaveClass.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPaveClass::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPaveClass::Class(),this);
   }
}

//______________________________________________________________________________
void TPaveClass::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPaveClass.
      TClass *R__cl = ::TPaveClass::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fClassTree", &fClassTree);
      TPaveLabel::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPaveClass(void *p) {
      return  p ? new(p) ::TPaveClass : new ::TPaveClass;
   }
   static void *newArray_TPaveClass(Long_t nElements, void *p) {
      return p ? new(p) ::TPaveClass[nElements] : new ::TPaveClass[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPaveClass(void *p) {
      delete ((::TPaveClass*)p);
   }
   static void deleteArray_TPaveClass(void *p) {
      delete [] ((::TPaveClass*)p);
   }
   static void destruct_TPaveClass(void *p) {
      typedef ::TPaveClass current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPaveClass

//______________________________________________________________________________
void TSlider::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSlider.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSlider::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSlider::Class(),this);
   }
}

//______________________________________________________________________________
void TSlider::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSlider.
      TClass *R__cl = ::TSlider::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMinimum", &fMinimum);
      R__insp.Inspect(R__cl, R__parent, "fMaximum", &fMaximum);
      R__insp.Inspect(R__cl, R__parent, "*fObject", &fObject);
      R__insp.Inspect(R__cl, R__parent, "fMethod", &fMethod);
      fMethod.ShowMembers(R__insp, strcat(R__parent,"fMethod.")); R__parent[R__ncp] = 0;
      TPad::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSlider(void *p) {
      return  p ? new(p) ::TSlider : new ::TSlider;
   }
   static void *newArray_TSlider(Long_t nElements, void *p) {
      return p ? new(p) ::TSlider[nElements] : new ::TSlider[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSlider(void *p) {
      delete ((::TSlider*)p);
   }
   static void deleteArray_TSlider(void *p) {
      delete [] ((::TSlider*)p);
   }
   static void destruct_TSlider(void *p) {
      typedef ::TSlider current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSlider

//______________________________________________________________________________
void TSliderBox::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSliderBox.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSliderBox::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSliderBox::Class(),this);
   }
}

//______________________________________________________________________________
void TSliderBox::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSliderBox.
      TClass *R__cl = ::TSliderBox::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSlider", &fSlider);
      TWbox::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSliderBox(void *p) {
      return  p ? new(p) ::TSliderBox : new ::TSliderBox;
   }
   static void *newArray_TSliderBox(Long_t nElements, void *p) {
      return p ? new(p) ::TSliderBox[nElements] : new ::TSliderBox[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSliderBox(void *p) {
      delete ((::TSliderBox*)p);
   }
   static void deleteArray_TSliderBox(void *p) {
      delete [] ((::TSliderBox*)p);
   }
   static void destruct_TSliderBox(void *p) {
      typedef ::TSliderBox current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSliderBox

//______________________________________________________________________________
void TView::Streamer(TBuffer &R__b)
{
   // Stream an object of class TView.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TView::Class(),this);
   } else {
      R__b.WriteClassBuffer(TView::Class(),this);
   }
}

//______________________________________________________________________________
void TView::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TView.
      TClass *R__cl = ::TView::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
      TAttLine::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TView(void *p) {
      delete ((::TView*)p);
   }
   static void deleteArray_TView(void *p) {
      delete [] ((::TView*)p);
   }
   static void destruct_TView(void *p) {
      typedef ::TView current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TView

//______________________________________________________________________________
void TViewer3DPad::Streamer(TBuffer &R__b)
{
   // Stream an object of class TViewer3DPad.

   TVirtualViewer3D::Streamer(R__b);
}

//______________________________________________________________________________
void TViewer3DPad::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TViewer3DPad.
      TClass *R__cl = ::TViewer3DPad::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fBuilding", &fBuilding);
      TVirtualViewer3D::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TViewer3DPad(void *p) {
      delete ((::TViewer3DPad*)p);
   }
   static void deleteArray_TViewer3DPad(void *p) {
      delete [] ((::TViewer3DPad*)p);
   }
   static void destruct_TViewer3DPad(void *p) {
      typedef ::TViewer3DPad current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TViewer3DPad

//______________________________________________________________________________
void TPadPainter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPadPainter.

   TVirtualPadPainter::Streamer(R__b);
}

//______________________________________________________________________________
void TPadPainter::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPadPainter.
      TClass *R__cl = ::TPadPainter::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TVirtualPadPainter::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPadPainter(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TPadPainter : new ::TPadPainter;
   }
   static void *newArray_TPadPainter(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TPadPainter[nElements] : new ::TPadPainter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPadPainter(void *p) {
      delete ((::TPadPainter*)p);
   }
   static void deleteArray_TPadPainter(void *p) {
      delete [] ((::TPadPainter*)p);
   }
   static void destruct_TPadPainter(void *p) {
      typedef ::TPadPainter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPadPainter

/********************************************************
* graf2d/gpad/src/G__GPad.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__GPad();

extern "C" void G__set_cpp_environmentG__GPad() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TAttCanvas.h");
  G__add_compiledheader("TButton.h");
  G__add_compiledheader("TCanvas.h");
  G__add_compiledheader("TClassTree.h");
  G__add_compiledheader("TColorWheel.h");
  G__add_compiledheader("TControlBarButton.h");
  G__add_compiledheader("TControlBar.h");
  G__add_compiledheader("TCreatePrimitives.h");
  G__add_compiledheader("TDialogCanvas.h");
  G__add_compiledheader("TGroupButton.h");
  G__add_compiledheader("TInspectCanvas.h");
  G__add_compiledheader("TPad.h");
  G__add_compiledheader("TPadPainter.h");
  G__add_compiledheader("TPaveClass.h");
  G__add_compiledheader("TSliderBox.h");
  G__add_compiledheader("TSlider.h");
  G__add_compiledheader("TViewer3DPad.h");
  G__add_compiledheader("TView.h");
  G__cpp_reset_tagtableG__GPad();
}
#include <new>
extern "C" int G__cpp_dllrevG__GPad() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TAttCanvas */
static int G__G__GPad_95_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAttCanvas* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAttCanvas[n];
     } else {
       p = new((void*) gvp) TAttCanvas[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAttCanvas;
     } else {
       p = new((void*) gvp) TAttCanvas;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TAttCanvas*) G__getstructoffset())->Copy(*(TAttCanvas*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TAttCanvas*) G__getstructoffset())->GetAdate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TAttCanvas*) G__getstructoffset())->GetTitleFromTop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TAttCanvas*) G__getstructoffset())->GetXBetween());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TAttCanvas*) G__getstructoffset())->GetXdate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TAttCanvas*) G__getstructoffset())->GetYBetween());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TAttCanvas*) G__getstructoffset())->GetYdate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const TAttCanvas*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const TAttCanvas*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TAttCanvas*) G__getstructoffset())->ResetAttCanvas((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TAttCanvas*) G__getstructoffset())->ResetAttCanvas();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttCanvas*) G__getstructoffset())->SetAdate((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttCanvas*) G__getstructoffset())->SetTitleFromTop((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttCanvas*) G__getstructoffset())->SetXBetween((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttCanvas*) G__getstructoffset())->SetXdate((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttCanvas*) G__getstructoffset())->SetYBetween((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttCanvas*) G__getstructoffset())->SetYdate((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAttCanvas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAttCanvas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TAttCanvas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAttCanvas::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TAttCanvas*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttCanvas*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttCanvas*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttCanvas*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAttCanvas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAttCanvas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAttCanvas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_95_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAttCanvas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GPad_95_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TAttCanvas* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TAttCanvas(*(TAttCanvas*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAttCanvas G__TTAttCanvas;
static int G__G__GPad_95_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TAttCanvas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TAttCanvas*) (soff+(sizeof(TAttCanvas)*i)))->~G__TTAttCanvas();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TAttCanvas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TAttCanvas*) (soff))->~G__TTAttCanvas();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GPad_95_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAttCanvas* dest = (TAttCanvas*) G__getstructoffset();
   *dest = *(TAttCanvas*) libp->para[0].ref;
   const TAttCanvas& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TView */
static int G__G__GPad_146_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->DefinePerspectiveView();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->AxisVertex(
(Double_t) G__double(libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]), *(Int_t*) G__Intref(&libp->para[5])
, *(Int_t*) G__Intref(&libp->para[6]), *(Int_t*) G__Intref(&libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->DefineViewDirection(
(const Double_t*) G__int(libp->para[0]), (const Double_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t*) G__int(libp->para[8]), (Double_t*) G__int(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->DrawOutlineCube((TList*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->ExecuteRotateView((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->FindScope((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TView*) G__getstructoffset())->GetDistancetoAxis((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TView*) G__getstructoffset())->GetDview());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TView*) G__getstructoffset())->GetDproj());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TView*) G__getstructoffset())->GetExtent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TView*) G__getstructoffset())->GetAutoRange());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TView*) G__getstructoffset())->GetLatitude());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TView*) G__getstructoffset())->GetLongitude());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TView*) G__getstructoffset())->GetPsi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->GetRange((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->GetRange((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TView*) G__getstructoffset())->GetRmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TView*) G__getstructoffset())->GetRmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TView*) G__getstructoffset())->GetOutline());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TView*) G__getstructoffset())->GetTback());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TView*) G__getstructoffset())->GetTN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TView*) G__getstructoffset())->GetTnorm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TView*) G__getstructoffset())->GetSystem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TView*) G__getstructoffset())->GetWindow(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TView*) G__getstructoffset())->GetWindowWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TView*) G__getstructoffset())->GetWindowHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->FindNormal((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->FindPhiSectors((Int_t) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, (Double_t*) G__int(libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->FindThetaSectors((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), (Double_t*) G__int(libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]), *(Int_t*) G__Intref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TView*) G__getstructoffset())->IsClippedNDC((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TView*) G__getstructoffset())->IsPerspective());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TView*) G__getstructoffset())->IsViewChanged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->NDCtoWC((const Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->NDCtoWC((const Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->NormalWCtoNDC((const Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->NormalWCtoNDC((const Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->PadRange((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->ResizePad();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TView*) G__getstructoffset())->SetAutoRange((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TView*) G__getstructoffset())->SetAutoRange();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->SetAxisNDC((const Double_t*) G__int(libp->para[0]), (const Double_t*) G__int(libp->para[1])
, (const Double_t*) G__int(libp->para[2]), (const Double_t*) G__int(libp->para[3])
, (const Double_t*) G__int(libp->para[4]), (const Double_t*) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->SetDefaultWindow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->SetDview((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->SetDproj((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->SetLatitude((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->SetLongitude((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->SetPsi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->SetOutlineToCube();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->SetParallel();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->SetPerspective();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->SetRange((const Double_t*) G__int(libp->para[0]), (const Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((TView*) G__getstructoffset())->SetRange(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((TView*) G__getstructoffset())->SetRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->SetSystem((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->SetView((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(Int_t*) G__Intref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TView*) G__getstructoffset())->SetViewChanged((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TView*) G__getstructoffset())->SetViewChanged();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->SetWindow((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->WCtoNDC((const Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->WCtoNDC((const Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      ((TView*) G__getstructoffset())->MoveFocus(
(Double_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((TView*) G__getstructoffset())->MoveFocus(
(Double_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((TView*) G__getstructoffset())->MoveFocus((Double_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TView*) G__getstructoffset())->MoveFocus((Double_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TView*) G__getstructoffset())->MoveFocus((Double_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TView*) G__getstructoffset())->MoveViewCommand((Char_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TView*) G__getstructoffset())->MoveViewCommand((Char_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->MoveWindow((Char_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TView*) G__getstructoffset())->AdjustScales((TVirtualPad*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TView*) G__getstructoffset())->AdjustScales();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TView*) G__getstructoffset())->Centered3DImages((TVirtualPad*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TView*) G__getstructoffset())->Centered3DImages();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->Centered();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TView*) G__getstructoffset())->FrontView((TVirtualPad*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TView*) G__getstructoffset())->FrontView();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->Front();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->ZoomIn();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->ZoomOut();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TView*) G__getstructoffset())->ZoomView((TVirtualPad*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TView*) G__getstructoffset())->ZoomView((TVirtualPad*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TView*) G__getstructoffset())->ZoomView();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TView*) G__getstructoffset())->UnzoomView((TVirtualPad*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TView*) G__getstructoffset())->UnzoomView((TVirtualPad*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TView*) G__getstructoffset())->UnzoomView();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TView*) G__getstructoffset())->RotateView((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (TVirtualPad*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TView*) G__getstructoffset())->RotateView((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TView*) G__getstructoffset())->SideView((TVirtualPad*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TView*) G__getstructoffset())->SideView();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->Side();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TView*) G__getstructoffset())->TopView((TVirtualPad*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TView*) G__getstructoffset())->TopView();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->Top();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TView*) G__getstructoffset())->ToggleRulers((TVirtualPad*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TView*) G__getstructoffset())->ToggleRulers();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->ShowAxis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TView*) G__getstructoffset())->ToggleZoom((TVirtualPad*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TView*) G__getstructoffset())->ToggleZoom();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->ZoomMove();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->Zoom();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->UnZoom();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) TView::CreateView((Int_t) G__int(libp->para[0]), (const Double_t*) G__int(libp->para[1])
, (const Double_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) TView::CreateView((Int_t) G__int(libp->para[0]), (const Double_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) TView::CreateView((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) TView::CreateView());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TView::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TView::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TView::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TView::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TView*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TView::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TView::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TView::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_146_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TView::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TView G__TTView;
static int G__G__GPad_146_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TView*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TView*) (soff+(sizeof(TView)*i)))->~G__TTView();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TView*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TView*) (soff))->~G__TTView();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GPad_146_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TView* dest = (TView*) G__getstructoffset();
   *dest = *(TView*) libp->para[0].ref;
   const TView& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCanvas */
static int G__G__GPad_147_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCanvas* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCanvas((Bool_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TCanvas((Bool_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TCanvas[n];
       } else {
         p = new((void*) gvp) TCanvas[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TCanvas;
       } else {
         p = new((void*) gvp) TCanvas;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TCanvas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCanvas* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCanvas(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TCanvas(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCanvas((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TCanvas((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCanvas((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TCanvas((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TCanvas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCanvas* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCanvas(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) TCanvas(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TCanvas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCanvas* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCanvas(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) TCanvas(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TCanvas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCanvas* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCanvas(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) TCanvas(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TCanvas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->Constructor();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->Constructor((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->Constructor((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->Constructor((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->Destructor();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->DisconnectWidget();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TCanvas*) G__getstructoffset())->DrawClonePad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->EditorBar();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->EmbedInto((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->EnterLeave((TPad*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->FeedbackMode((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->Flush();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->ForceUpdate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TCanvas*) G__getstructoffset())->GetDISPLAY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TCanvas*) G__getstructoffset())->GetContextMenu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TCanvas*) G__getstructoffset())->GetDoubleBuffer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->ClearPadSave();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TCanvas*) G__getstructoffset())->GetClickSelected());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TCanvas*) G__getstructoffset())->GetSelectedX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TCanvas*) G__getstructoffset())->GetSelectedY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TCanvas*) G__getstructoffset())->GetSelectedOpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TCanvas*) G__getstructoffset())->GetClickSelectedPad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TCanvas*) G__getstructoffset())->GetShowEventStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TCanvas*) G__getstructoffset())->GetShowToolBar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TCanvas*) G__getstructoffset())->GetShowEditor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TCanvas*) G__getstructoffset())->GetShowToolTips());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TCanvas*) G__getstructoffset())->GetAutoExec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TCanvas*) G__getstructoffset())->GetXsizeUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TCanvas*) G__getstructoffset())->GetYsizeUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TCanvas*) G__getstructoffset())->GetXsizeReal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TCanvas*) G__getstructoffset())->GetYsizeReal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TCanvas*) G__getstructoffset())->GetWindowTopX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TCanvas*) G__getstructoffset())->GetWindowTopY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TCanvas*) G__getstructoffset())->GetWindowWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TCanvas*) G__getstructoffset())->GetWindowHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->GetCanvasPar(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, *(UInt_t*) G__UIntref(&libp->para[2]), *(UInt_t*) G__UIntref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->HandleInput((EEventType) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TCanvas*) G__getstructoffset())->HasMenuBar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->Iconify();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCanvas*) G__getstructoffset())->IsGrayscale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TCanvas*) G__getstructoffset())->MoveOpaque((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TCanvas*) G__getstructoffset())->MoveOpaque();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TCanvas*) G__getstructoffset())->Pick((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TObject*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->Picked((TPad*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->ProcessedEvent((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TObject*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->Selected((TVirtualPad*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->Cleared((TVirtualPad*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->RaiseWindow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TCanvas*) G__getstructoffset())->Resize((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TCanvas*) G__getstructoffset())->Resize();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TCanvas*) G__getstructoffset())->ResizeOpaque((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TCanvas*) G__getstructoffset())->ResizeOpaque();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TCanvas*) G__getstructoffset())->SaveSource((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TCanvas*) G__getstructoffset())->SaveSource((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TCanvas*) G__getstructoffset())->SaveSource();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TCanvas*) G__getstructoffset())->SetGrayscale((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TCanvas*) G__getstructoffset())->SetGrayscale();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->SetWindowPosition((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->SetWindowSize((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->SetHighLightColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->SetClickSelected((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->SetSelectedPad((TPad*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->SetClickSelectedPad((TPad*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TCanvas*) G__getstructoffset())->Size((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TCanvas*) G__getstructoffset())->Size((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TCanvas*) G__getstructoffset())->Size();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      TCanvas::SetFolder((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TCanvas::SetFolder();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->SetPadSave((TPad*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TCanvas*) G__getstructoffset())->SetRetained((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TCanvas*) G__getstructoffset())->SetRetained();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->ToggleEventStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->ToggleAutoExec();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->ToggleToolBar();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->ToggleEditor();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->ToggleToolTips();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TCanvas*) G__getstructoffset())->UseGL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->SetSupportGL((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TCanvas*) G__getstructoffset())->GetCanvasPainter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCanvas::MakeDefCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCanvas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCanvas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCanvas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCanvas::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCanvas*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCanvas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCanvas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCanvas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_147_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCanvas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCanvas G__TTCanvas;
static int G__G__GPad_147_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCanvas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCanvas*) (soff+(sizeof(TCanvas)*i)))->~G__TTCanvas();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCanvas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCanvas*) (soff))->~G__TTCanvas();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPad */
static int G__G__GPad_156_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPad* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPad[n];
     } else {
       p = new((void*) gvp) TPad[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPad;
     } else {
       p = new((void*) gvp) TPad;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TPad));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPad* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPad(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Color_t) G__int(libp->para[6]), (Short_t) G__int(libp->para[7])
, (Short_t) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) TPad(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Color_t) G__int(libp->para[6]), (Short_t) G__int(libp->para[7])
, (Short_t) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPad(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Color_t) G__int(libp->para[6]), (Short_t) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) TPad(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Color_t) G__int(libp->para[6]), (Short_t) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPad(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Color_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TPad(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Color_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPad(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TPad(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TPad));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPad*) G__getstructoffset())->AbsPixeltoXY((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPad*) G__getstructoffset())->AutoExec();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) ((TPad*) G__getstructoffset())->BuildLegend((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((TPad*) G__getstructoffset())->BuildLegend((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((TPad*) G__getstructoffset())->BuildLegend((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((TPad*) G__getstructoffset())->BuildLegend((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TPad*) G__getstructoffset())->BuildLegend((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TPad*) G__getstructoffset())->BuildLegend());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TPad*) G__getstructoffset())->Clip((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TPad*) G__getstructoffset())->Clip((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TPad*) G__getstructoffset())->ClippingCode((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TPad*) G__getstructoffset())->ClipPolygon(
(Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPad*) G__getstructoffset())->Closed();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPad::DrawColorTable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPad*) G__getstructoffset())->DrawCrosshair();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPad*) G__getstructoffset())->GetCrosshair());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPad::GetMaxPickDistance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPad*) G__getstructoffset())->GetPainter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPad*) G__getstructoffset())->PaintFillAreaHatches((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPad*) G__getstructoffset())->PaintHatches((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPad*) G__getstructoffset())->Pick((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, libp->para[2].ref ? *(TObjLink**) libp->para[2].ref : *(TObjLink**) (&G__Mlong(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_146(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPad*) G__getstructoffset())->PixeltoXY((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_151(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPad*) G__getstructoffset())->RangeChanged();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_153(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPad*) G__getstructoffset())->RangeAxisChanged();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_176(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPad*) G__getstructoffset())->SetNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_183(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      TPad::SetMaxPickDistance((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TPad::SetMaxPickDistance();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_196(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPad*) G__getstructoffset())->SetGLDevice((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_210(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TPad*) G__getstructoffset())->XYtoAbsPixel((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_211(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TPad*) G__getstructoffset())->XYtoPixel((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_216(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TPad*) G__getstructoffset())->x3d((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TPad*) G__getstructoffset())->x3d();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_220(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPad*) G__getstructoffset())->RecordPave((const TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_221(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPad*) G__getstructoffset())->RecordLatex((const TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_222(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPad*) G__getstructoffset())->EventPave();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_223(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPad*) G__getstructoffset())->StartEditing();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_224(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPad::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_225(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPad::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_226(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPad::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_227(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPad::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_231(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPad*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_232(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPad::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_233(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPad::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_234(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPad::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_156_0_235(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPad::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPad G__TTPad;
static int G__G__GPad_156_0_236(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPad*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPad*) (soff+(sizeof(TPad)*i)))->~G__TTPad();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPad*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPad*) (soff))->~G__TTPad();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TButton */
static int G__G__GPad_158_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TButton* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TButton[n];
     } else {
       p = new((void*) gvp) TButton[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TButton;
     } else {
       p = new((void*) gvp) TButton;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TButton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_158_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TButton* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TButton(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
   } else {
     p = new((void*) gvp) TButton(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TButton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_158_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TButton*) G__getstructoffset())->GetMethod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_158_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TButton*) G__getstructoffset())->SetFraming((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TButton*) G__getstructoffset())->SetFraming();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_158_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TButton*) G__getstructoffset())->GetFraming());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_158_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TButton*) G__getstructoffset())->SetMethod((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_158_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TButton::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_158_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TButton::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_158_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TButton::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_158_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TButton::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_158_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TButton*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_158_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TButton::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_158_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TButton::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_158_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TButton::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_158_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TButton::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TButton G__TTButton;
static int G__G__GPad_158_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TButton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TButton*) (soff+(sizeof(TButton)*i)))->~G__TTButton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TButton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TButton*) (soff))->~G__TTButton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TControlBar */
static int G__G__GPad_160_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TControlBar* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TControlBar[n];
     } else {
       p = new((void*) gvp) TControlBar[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TControlBar;
     } else {
       p = new((void*) gvp) TControlBar;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TControlBar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TControlBar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TControlBar((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TControlBar((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TControlBar((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TControlBar((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TControlBar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TControlBar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TControlBar(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) TControlBar(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TControlBar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBar*) G__getstructoffset())->AddButton((TControlBarButton*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBar*) G__getstructoffset())->AddButton(*(TControlBarButton*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((TControlBar*) G__getstructoffset())->AddButton((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TControlBar*) G__getstructoffset())->AddButton((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TControlBar*) G__getstructoffset())->AddButton((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBar*) G__getstructoffset())->AddControlBar((TControlBar*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBar*) G__getstructoffset())->AddControlBar(*(TControlBar*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBar*) G__getstructoffset())->AddSeparator();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TControlBar*) G__getstructoffset())->GetClicked());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TControlBar*) G__getstructoffset())->GetControlBarImp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TControlBar*) G__getstructoffset())->GetListOfButtons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TControlBar*) G__getstructoffset())->GetNumberOfColumns());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TControlBar*) G__getstructoffset())->GetNumberOfRows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TControlBar*) G__getstructoffset())->GetOrientation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBar*) G__getstructoffset())->Hide();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TControlBar*) G__getstructoffset())->SetButtonState((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TControlBar*) G__getstructoffset())->SetButtonState((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBar*) G__getstructoffset())->SetFont((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBar*) G__getstructoffset())->SetTextColor((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBar*) G__getstructoffset())->SetNumberOfColumns((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBar*) G__getstructoffset())->SetNumberOfRows((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBar*) G__getstructoffset())->SetOrientation((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBar*) G__getstructoffset())->SetOrientation((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBar*) G__getstructoffset())->SetButtonWidth((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBar*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TControlBar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TControlBar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TControlBar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TControlBar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TControlBar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TControlBar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TControlBar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_160_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TControlBar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GPad_160_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TControlBar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TControlBar(*(TControlBar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TControlBar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TControlBar G__TTControlBar;
static int G__G__GPad_160_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TControlBar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TControlBar*) (soff+(sizeof(TControlBar)*i)))->~G__TTControlBar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TControlBar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TControlBar*) (soff))->~G__TTControlBar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GPad_160_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TControlBar* dest = (TControlBar*) G__getstructoffset();
   *dest = *(TControlBar*) libp->para[0].ref;
   const TControlBar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TClassTree */
static int G__G__GPad_165_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TClassTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TClassTree[n];
     } else {
       p = new((void*) gvp) TClassTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TClassTree;
     } else {
       p = new((void*) gvp) TClassTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TClassTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TClassTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TClassTree((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TClassTree((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TClassTree((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TClassTree((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TClassTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TClassTree*) G__getstructoffset())->FindClass((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TClassTree*) G__getstructoffset())->GetClasses());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TClassTree*) G__getstructoffset())->GetSourceDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TClassTree*) G__getstructoffset())->SetClasses((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TClassTree*) G__getstructoffset())->SetClasses((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TClassTree*) G__getstructoffset())->SetSourceDir((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TClassTree*) G__getstructoffset())->SetSourceDir();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TClassTree*) G__getstructoffset())->SetYoffset((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TClassTree*) G__getstructoffset())->SetYoffset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TClassTree*) G__getstructoffset())->SetLabelDx((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TClassTree*) G__getstructoffset())->SetLabelDx();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TClassTree*) G__getstructoffset())->ShowClassesUsedBy((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TClassTree*) G__getstructoffset())->ShowClassesUsing((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TClassTree*) G__getstructoffset())->ShowLinks((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TClassTree*) G__getstructoffset())->ShowLinks();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TClassTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TClassTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TClassTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TClassTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TClassTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TClassTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TClassTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TClassTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_165_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TClassTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GPad_165_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TClassTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TClassTree(*(TClassTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TClassTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TClassTree G__TTClassTree;
static int G__G__GPad_165_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TClassTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TClassTree*) (soff+(sizeof(TClassTree)*i)))->~G__TTClassTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TClassTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TClassTree*) (soff))->~G__TTClassTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GPad_165_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TClassTree* dest = (TClassTree*) G__getstructoffset();
   *dest = *(TClassTree*) libp->para[0].ref;
   const TClassTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TColorWheel */
static int G__G__GPad_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TColorWheel* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TColorWheel[n];
     } else {
       p = new((void*) gvp) TColorWheel[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TColorWheel;
     } else {
       p = new((void*) gvp) TColorWheel;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TColorWheel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TColorWheel*) G__getstructoffset())->GetCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TColorWheel*) G__getstructoffset())->GetColor((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_170_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TColorWheel*) G__getstructoffset())->SetCanvas((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_170_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TColorWheel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_170_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TColorWheel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_170_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TColorWheel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_170_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TColorWheel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_170_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TColorWheel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_170_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TColorWheel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_170_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TColorWheel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_170_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TColorWheel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_170_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TColorWheel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TColorWheel G__TTColorWheel;
static int G__G__GPad_170_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TColorWheel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TColorWheel*) (soff+(sizeof(TColorWheel)*i)))->~G__TTColorWheel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TColorWheel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TColorWheel*) (soff))->~G__TTColorWheel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TControlBarButton */
static int G__G__GPad_171_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TControlBarButton* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TControlBarButton[n];
     } else {
       p = new((void*) gvp) TControlBarButton[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TControlBarButton;
     } else {
       p = new((void*) gvp) TControlBarButton;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TControlBarButton* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TControlBarButton(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TControlBarButton(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TControlBarButton(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TControlBarButton(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TControlBarButton((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TControlBarButton((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TControlBarButton((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TControlBarButton((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBarButton*) G__getstructoffset())->Create();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBarButton*) G__getstructoffset())->Action();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TControlBarButton*) G__getstructoffset())->GetAction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TControlBarButton*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBarButton*) G__getstructoffset())->SetAction((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBarButton*) G__getstructoffset())->SetType((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBarButton*) G__getstructoffset())->SetType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TControlBarButton::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TControlBarButton::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TControlBarButton::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TControlBarButton::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TControlBarButton*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TControlBarButton::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TControlBarButton::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TControlBarButton::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_171_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TControlBarButton::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GPad_171_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TControlBarButton* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TControlBarButton(*(TControlBarButton*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TControlBarButton G__TTControlBarButton;
static int G__G__GPad_171_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TControlBarButton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TControlBarButton*) (soff+(sizeof(TControlBarButton)*i)))->~G__TTControlBarButton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TControlBarButton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TControlBarButton*) (soff))->~G__TTControlBarButton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GPad_171_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TControlBarButton* dest = (TControlBarButton*) G__getstructoffset();
   *dest = *(TControlBarButton*) libp->para[0].ref;
   const TControlBarButton& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDialogCanvas */
static int G__G__GPad_176_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDialogCanvas* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDialogCanvas[n];
     } else {
       p = new((void*) gvp) TDialogCanvas[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDialogCanvas;
     } else {
       p = new((void*) gvp) TDialogCanvas;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDialogCanvas* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TDialogCanvas(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) TDialogCanvas(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDialogCanvas* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TDialogCanvas(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) TDialogCanvas(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TDialogCanvas*) G__getstructoffset())->Apply((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TDialogCanvas*) G__getstructoffset())->Apply();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDialogCanvas*) G__getstructoffset())->BuildStandardButtons();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDialogCanvas*) G__getstructoffset())->GetRefObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDialogCanvas*) G__getstructoffset())->GetRefPad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDialogCanvas*) G__getstructoffset())->SetRefObject((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDialogCanvas*) G__getstructoffset())->SetRefPad((TPad*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDialogCanvas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDialogCanvas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDialogCanvas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDialogCanvas::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDialogCanvas*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDialogCanvas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDialogCanvas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDialogCanvas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_176_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDialogCanvas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDialogCanvas G__TTDialogCanvas;
static int G__G__GPad_176_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDialogCanvas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDialogCanvas*) (soff+(sizeof(TDialogCanvas)*i)))->~G__TTDialogCanvas();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDialogCanvas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDialogCanvas*) (soff))->~G__TTDialogCanvas();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGroupButton */
static int G__G__GPad_177_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGroupButton* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGroupButton[n];
     } else {
       p = new((void*) gvp) TGroupButton[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGroupButton;
     } else {
       p = new((void*) gvp) TGroupButton;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TGroupButton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_177_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGroupButton* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TGroupButton(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TGroupButton(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TGroupButton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_177_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGroupButton*) G__getstructoffset())->DisplayColorTable((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_177_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGroupButton*) G__getstructoffset())->ExecuteAction();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_177_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGroupButton::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_177_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGroupButton::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_177_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGroupButton::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_177_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGroupButton::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_177_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGroupButton*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_177_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGroupButton::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_177_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGroupButton::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_177_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGroupButton::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_177_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGroupButton::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGroupButton G__TTGroupButton;
static int G__G__GPad_177_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGroupButton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGroupButton*) (soff+(sizeof(TGroupButton)*i)))->~G__TTGroupButton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGroupButton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGroupButton*) (soff))->~G__TTGroupButton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TInspectCanvas */
static int G__G__GPad_178_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TInspectCanvas* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TInspectCanvas[n];
     } else {
       p = new((void*) gvp) TInspectCanvas[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TInspectCanvas;
     } else {
       p = new((void*) gvp) TInspectCanvas;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TInspectCanvas* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TInspectCanvas((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TInspectCanvas((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TInspectCanvas*) G__getstructoffset())->GetBackward());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TInspectCanvas*) G__getstructoffset())->GetForward());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TInspectCanvas*) G__getstructoffset())->GetCurObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TInspectCanvas*) G__getstructoffset())->GetObjects());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TInspectCanvas::GoBackward();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TInspectCanvas::GoForward();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TInspectCanvas::Inspector((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TInspectCanvas*) G__getstructoffset())->InspectObject((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TInspectCanvas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TInspectCanvas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TInspectCanvas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TInspectCanvas::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TInspectCanvas*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TInspectCanvas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TInspectCanvas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TInspectCanvas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_178_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TInspectCanvas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TInspectCanvas G__TTInspectCanvas;
static int G__G__GPad_178_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TInspectCanvas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TInspectCanvas*) (soff+(sizeof(TInspectCanvas)*i)))->~G__TTInspectCanvas();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TInspectCanvas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TInspectCanvas*) (soff))->~G__TTInspectCanvas();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPadPainter */
static int G__G__GPad_181_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPadPainter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPadPainter[n];
     } else {
       p = new((void*) gvp) TPadPainter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPadPainter;
     } else {
       p = new((void*) gvp) TPadPainter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TPadPainter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_181_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPadPainter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_181_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPadPainter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_181_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPadPainter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_181_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPadPainter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_181_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPadPainter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_181_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPadPainter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_181_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPadPainter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_181_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPadPainter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_181_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPadPainter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPadPainter G__TTPadPainter;
static int G__G__GPad_181_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPadPainter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPadPainter*) (soff+(sizeof(TPadPainter)*i)))->~G__TTPadPainter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPadPainter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPadPainter*) (soff))->~G__TTPadPainter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPaveClass */
static int G__G__GPad_186_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPaveClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPaveClass[n];
     } else {
       p = new((void*) gvp) TPaveClass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPaveClass;
     } else {
       p = new((void*) gvp) TPaveClass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TPaveClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPaveClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TPaveClass(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]), (TClassTree*) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) TPaveClass(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]), (TClassTree*) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TPaveClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPaveClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TPaveClass(*(TPaveClass*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TPaveClass(*(TPaveClass*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TPaveClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TPaveClass*) G__getstructoffset())->DrawClasses((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TPaveClass*) G__getstructoffset())->DrawClasses();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TPaveClass*) G__getstructoffset())->GetClassTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TPaveClass*) G__getstructoffset())->SetClasses((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TPaveClass*) G__getstructoffset())->SetClasses((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TPaveClass*) G__getstructoffset())->SetClasses();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TPaveClass*) G__getstructoffset())->ShowClassesUsedBy((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TPaveClass*) G__getstructoffset())->ShowClassesUsedBy();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TPaveClass*) G__getstructoffset())->ShowClassesUsing((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TPaveClass*) G__getstructoffset())->ShowClassesUsing();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPaveClass*) G__getstructoffset())->SetClassTree((TClassTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TPaveClass*) G__getstructoffset())->ShowLinks((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TPaveClass*) G__getstructoffset())->ShowLinks();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPaveClass::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPaveClass::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPaveClass::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPaveClass::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPaveClass*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPaveClass::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPaveClass::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPaveClass::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_186_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPaveClass::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPaveClass G__TTPaveClass;
static int G__G__GPad_186_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPaveClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPaveClass*) (soff+(sizeof(TPaveClass)*i)))->~G__TTPaveClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPaveClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPaveClass*) (soff))->~G__TTPaveClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GPad_186_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPaveClass* dest = (TPaveClass*) G__getstructoffset();
   *dest = *(TPaveClass*) libp->para[0].ref;
   const TPaveClass& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSlider */
static int G__G__GPad_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSlider* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSlider[n];
     } else {
       p = new((void*) gvp) TSlider[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSlider;
     } else {
       p = new((void*) gvp) TSlider;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TSlider));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSlider* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSlider(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Color_t) G__int(libp->para[6]), (Short_t) G__int(libp->para[7])
, (Short_t) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) TSlider(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Color_t) G__int(libp->para[6]), (Short_t) G__int(libp->para[7])
, (Short_t) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSlider(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Color_t) G__int(libp->para[6]), (Short_t) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) TSlider(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Color_t) G__int(libp->para[6]), (Short_t) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSlider(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Color_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TSlider(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Color_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSlider(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TSlider(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TSlider));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSlider*) G__getstructoffset())->GetObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSlider*) G__getstructoffset())->GetMinimum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSlider*) G__getstructoffset())->GetMaximum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSlider*) G__getstructoffset())->GetMethod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSlider*) G__getstructoffset())->SetMethod((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSlider*) G__getstructoffset())->SetObject((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSlider*) G__getstructoffset())->SetObject();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSlider*) G__getstructoffset())->SetMinimum((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSlider*) G__getstructoffset())->SetMinimum();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSlider*) G__getstructoffset())->SetMaximum((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSlider*) G__getstructoffset())->SetMaximum();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TSlider*) G__getstructoffset())->SetRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TSlider*) G__getstructoffset())->SetRange((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSlider*) G__getstructoffset())->SetRange();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSlider::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSlider::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSlider::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSlider::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSlider*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSlider::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSlider::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSlider::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_191_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSlider::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSlider G__TTSlider;
static int G__G__GPad_191_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSlider*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSlider*) (soff+(sizeof(TSlider)*i)))->~G__TTSlider();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSlider*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSlider*) (soff))->~G__TTSlider();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSliderBox */
static int G__G__GPad_192_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSliderBox* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSliderBox[n];
     } else {
       p = new((void*) gvp) TSliderBox[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSliderBox;
     } else {
       p = new((void*) gvp) TSliderBox;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TSliderBox));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_192_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSliderBox* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSliderBox(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Color_t) G__int(libp->para[4]), (Short_t) G__int(libp->para[5])
, (Short_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TSliderBox(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Color_t) G__int(libp->para[4]), (Short_t) G__int(libp->para[5])
, (Short_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSliderBox(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Color_t) G__int(libp->para[4]), (Short_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TSliderBox(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Color_t) G__int(libp->para[4]), (Short_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSliderBox(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Color_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TSliderBox(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Color_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSliderBox(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TSliderBox(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TSliderBox));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_192_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSliderBox*) G__getstructoffset())->SetSlider((TSlider*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_192_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSliderBox::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_192_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSliderBox::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_192_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSliderBox::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_192_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSliderBox::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_192_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSliderBox*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_192_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSliderBox::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_192_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSliderBox::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_192_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSliderBox::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_192_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSliderBox::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSliderBox G__TTSliderBox;
static int G__G__GPad_192_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSliderBox*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSliderBox*) (soff+(sizeof(TSliderBox)*i)))->~G__TTSliderBox();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSliderBox*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSliderBox*) (soff))->~G__TTSliderBox();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TViewer3DPad */
static int G__G__GPad_195_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TViewer3DPad* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TViewer3DPad(*(TVirtualPad*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TViewer3DPad(*(TVirtualPad*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_195_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TViewer3DPad::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_195_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TViewer3DPad::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_195_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TViewer3DPad::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_195_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TViewer3DPad::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_195_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TViewer3DPad*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_195_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TViewer3DPad::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_195_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TViewer3DPad::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_195_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TViewer3DPad::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_195_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TViewer3DPad::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TViewer3DPad G__TTViewer3DPad;
static int G__G__GPad_195_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TViewer3DPad*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TViewer3DPad*) (soff+(sizeof(TViewer3DPad)*i)))->~G__TTViewer3DPad();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TViewer3DPad*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TViewer3DPad*) (soff))->~G__TTViewer3DPad();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TAttCanvas */

/* TView */

/* TCanvas */

/* TPad */

/* TButton */

/* TControlBar */

/* TClassTree */

/* TColorWheel */

/* TControlBarButton */

/* TDialogCanvas */

/* TGroupButton */

/* TInspectCanvas */

/* TPadPainter */

/* TPaveClass */

/* TSlider */

/* TSliderBox */

/* TViewer3DPad */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__GPad {
 public:
  G__Sizep2memfuncG__GPad(): p(&G__Sizep2memfuncG__GPad::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__GPad::*p)();
};

size_t G__get_sizep2memfuncG__GPad()
{
  G__Sizep2memfuncG__GPad a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__GPad() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TView))) {
     TView *G__Lderived;
     G__Lderived=(TView*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TView),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TView),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TCanvas))) {
     TCanvas *G__Lderived;
     G__Lderived=(TCanvas*)0x1000;
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad))) {
     TVirtualPad *G__Lderived;
     G__Lderived=(TVirtualPad*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TPad))) {
     TPad *G__Lderived;
     G__Lderived=(TPad*)0x1000;
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TButton))) {
     TButton *G__Lderived;
     G__Lderived=(TButton*)0x1000;
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TControlBar))) {
     TControlBar *G__Lderived;
     G__Lderived=(TControlBar*)0x1000;
     {
       TControlBarButton *G__Lpbase=(TControlBarButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBar),G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBar),G__get_linked_tagnum(&G__G__GPadLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBar),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TClassTree))) {
     TClassTree *G__Lderived;
     G__Lderived=(TClassTree*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TClassTree),G__get_linked_tagnum(&G__G__GPadLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TClassTree),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TColorWheel))) {
     TColorWheel *G__Lderived;
     G__Lderived=(TColorWheel*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TColorWheel),G__get_linked_tagnum(&G__G__GPadLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TColorWheel),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton))) {
     TControlBarButton *G__Lderived;
     G__Lderived=(TControlBarButton*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton),G__get_linked_tagnum(&G__G__GPadLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas))) {
     TDialogCanvas *G__Lderived;
     G__Lderived=(TDialogCanvas*)0x1000;
     {
       TCanvas *G__Lpbase=(TCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TCanvas),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton))) {
     TGroupButton *G__Lderived;
     G__Lderived=(TGroupButton*)0x1000;
     {
       TButton *G__Lpbase=(TButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TButton),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas))) {
     TInspectCanvas *G__Lderived;
     G__Lderived=(TInspectCanvas*)0x1000;
     {
       TCanvas *G__Lpbase=(TCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TCanvas),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TPadPainter))) {
     TPadPainter *G__Lderived;
     G__Lderived=(TPadPainter*)0x1000;
     {
       TVirtualPadPainter *G__Lpbase=(TVirtualPadPainter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPadPainter),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPadPainter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass))) {
     TPaveClass *G__Lderived;
     G__Lderived=(TPaveClass*)0x1000;
     {
       TPaveLabel *G__Lpbase=(TPaveLabel*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),G__get_linked_tagnum(&G__G__GPadLN_TPaveLabel),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TPave *G__Lpbase=(TPave*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),G__get_linked_tagnum(&G__G__GPadLN_TPave),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TBox *G__Lpbase=(TBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),G__get_linked_tagnum(&G__G__GPadLN_TBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TSlider))) {
     TSlider *G__Lderived;
     G__Lderived=(TSlider*)0x1000;
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox))) {
     TSliderBox *G__Lderived;
     G__Lderived=(TSliderBox*)0x1000;
     {
       TWbox *G__Lpbase=(TWbox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox),G__get_linked_tagnum(&G__G__GPadLN_TWbox),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TBox *G__Lpbase=(TBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox),G__get_linked_tagnum(&G__G__GPadLN_TBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad))) {
     TViewer3DPad *G__Lderived;
     G__Lderived=(TViewer3DPad*)0x1000;
     {
       TVirtualViewer3D *G__Lpbase=(TVirtualViewer3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad),G__get_linked_tagnum(&G__G__GPadLN_TVirtualViewer3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__GPad() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Color_t",115,-1,0,-1);
   G__setnewtype(-1,"Color number (short)",0);
   G__search_typename2("Size_t",102,-1,0,-1);
   G__setnewtype(-1,"Attribute size (float)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__GPadLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GPadLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GPadLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GPadLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GPadLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__GPadLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TAttCanvas */
static void G__setup_memvarTAttCanvas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas));
   { TAttCanvas *p; p=(TAttCanvas*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fXBetween=",0,"X distance between pads");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fYBetween=",0,"Y distance between pads");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTitleFromTop=",0,"Y distance of Global Title from top");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fXdate=",0,"X position where to draw the date");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fYdate=",0,"X position where to draw the date");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fAdate=",0,"Alignment for the date");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TView */
static void G__setup_memvarTView(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TView));
   { TView *p; p=(TView*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCanvas */
static void G__setup_memvarTCanvas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas));
   { TCanvas *p; p=(TCanvas*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas),-1,-1,2,"fCatt=",0,"Canvas attributes");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fDISPLAY=",0,"Name of destination screen");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Size_t"),-1,2,"fXsizeUser=",0,"User specified size of canvas along X in CM");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Size_t"),-1,2,"fYsizeUser=",0,"User specified size of canvas along Y in CM");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Size_t"),-1,2,"fXsizeReal=",0,"Current size of canvas along X in CM");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Size_t"),-1,2,"fYsizeReal=",0,"Current size of canvas along Y in CM");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Color_t"),-1,2,"fHighLightColor=",0,"Highlight color of active pad");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDoubleBuffer=",0,"Double buffer flag (0=off, 1=on)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fWindowTopX=",0,"Top X position of window (in pixels)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fWindowTopY=",0,"Top Y position of window (in pixels)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fWindowWidth=",0,"Width of window (including borders, etc.)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fWindowHeight=",0,"Height of window (including menubar, borders, etc.)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCw=",0,"Width of the canvas along X (pixels)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCh=",0,"Height of the canvas along Y (pixels)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEvent=",0,"!Type of current or last handled event");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEventX=",0,"!Last X mouse position in canvas");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEventY=",0,"!Last Y mouse position in canvas");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCanvasID=",0,"!Canvas identifier");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,-1,2,"fSelected=",0,"!Currently selected object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,-1,2,"fClickSelected=",0,"!Currently click-selected object");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSelectedX=",0,"!X of selected object");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSelectedY=",0,"!Y of selected object");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fSelectedOpt=",0,"!Drawing option of selected object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,-1,2,"fSelectedPad=",0,"!Pad containing currently selected object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,-1,2,"fClickSelectedPad=",0,"!Pad containing currently click-selected object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,-1,2,"fPadSave=",0,"!Pointer to saved pad in HandleInput");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TCanvasImp),-1,-1,2,"fCanvasImp=",0,"!Window system specific canvas implementation");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TContextMenu),-1,-1,2,"fContextMenu=",0,"!Context menu pointer");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fBatch=",0,"!True when in batchmode");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUpdating=",0,"!True when Updating the canvas");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fRetained=",0,"Retain structure flag");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUseGL=",0,"!True when rendering is with GL");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TVirtualPadPainter),-1,-1,2,"fPainter=",0,"!Canvas (pad) painter.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,2,"fgIsFolder=",0,"Indicates if canvas can be browsed as a folder");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TCanvascLcLdA),-1,-2,1,"kShowEventStatus=32768",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TCanvascLcLdA),-1,-2,1,"kAutoExec=65536",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TCanvascLcLdA),-1,-2,1,"kMenuBar=131072",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TCanvascLcLdA),-1,-2,1,"kShowToolBar=262144",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TCanvascLcLdA),-1,-2,1,"kShowEditor=524288",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TCanvascLcLdA),-1,-2,1,"kMoveOpaque=1048576",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TCanvascLcLdA),-1,-2,1,"kResizeOpaque=2097152",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TCanvascLcLdA),-1,-2,1,"kIsGrayscale=4194304",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TCanvascLcLdA),-1,-2,1,"kShowToolTips=8388608",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPad */
static void G__setup_memvarTPad(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad));
   { TPad *p; p=(TPad*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,-1,4,"fTip=",0,"! tool tip associated with box");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fX1=",0,"X of lower X coordinate");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fY1=",0,"Y of lower Y coordinate");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fX2=",0,"X of upper X coordinate");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fY2=",0,"Y of upper Y coordinate");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXtoAbsPixelk=",0,"Conversion coefficient for X World to absolute pixel");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXtoPixelk=",0,"Conversion coefficient for X World to pixel");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXtoPixel=",0,"xpixel = fXtoPixelk + fXtoPixel*xworld");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYtoAbsPixelk=",0,"Conversion coefficient for Y World to absolute pixel");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYtoPixelk=",0,"Conversion coefficient for Y World to pixel");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYtoPixel=",0,"ypixel = fYtoPixelk + fYtoPixel*yworld");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUtoAbsPixelk=",0,"Conversion coefficient for U NDC to absolute pixel");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUtoPixelk=",0,"Conversion coefficient for U NDC to pixel");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUtoPixel=",0,"xpixel = fUtoPixelk + fUtoPixel*undc");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVtoAbsPixelk=",0,"Conversion coefficient for V NDC to absolute pixel");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVtoPixelk=",0,"Conversion coefficient for V NDC to pixel");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVtoPixel=",0,"ypixel = fVtoPixelk + fVtoPixel*vndc");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsPixeltoXk=",0,"Conversion coefficient for absolute pixel to X World");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPixeltoXk=",0,"Conversion coefficient for pixel to X World");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPixeltoX=",0,"xworld = fPixeltoXk + fPixeltoX*xpixel");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsPixeltoYk=",0,"Conversion coefficient for absolute pixel to Y World");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPixeltoYk=",0,"Conversion coefficient for pixel to Y World");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPixeltoY=",0,"yworld = fPixeltoYk + fPixeltoY*ypixel");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXlowNDC=",0,"X bottom left corner of pad in NDC [0,1]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYlowNDC=",0,"Y bottom left corner of pad in NDC [0,1]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWNDC=",0,"Width of pad along X in NDC");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fHNDC=",0,"Height of pad along Y in NDC");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsXlowNDC=",0,"Absolute X top left corner of pad in NDC [0,1]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsYlowNDC=",0,"Absolute Y top left corner of pad in NDC [0,1]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsWNDC=",0,"Absolute Width of pad along X in NDC");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsHNDC=",0,"Absolute Height of pad along Y in NDC");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUxmin=",0,"Minimum value on the X axis");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUymin=",0,"Minimum value on the Y axis");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUxmax=",0,"Maximum value on the X axis");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUymax=",0,"Maximum value on the Y axis");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTheta=",0,"theta angle to view as lego/surface");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi=",0,"phi angle   to view as lego/surface");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAspectRatio=",0,"ratio of w/h in case of fixed ratio");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPixmapID=",0,"! Off-screen pixmap identifier");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fGLDevice=",0,"! OpenGL off-screen pixmap identifier");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fCopyGLDevice=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fEmbeddedGL=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumber=",0,"pad number identifier");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTickx=",0,"Set to 1 if tick marks along X");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTicky=",0,"Set to 1 if tick marks along Y");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLogx=",0,"(=0 if X linear scale, =1 if log scale)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLogy=",0,"(=0 if Y linear scale, =1 if log scale)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLogz=",0,"(=0 if Z linear scale, =1 if log scale)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPadPaint=",0,"Set to 1 while painting the pad");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCrosshair=",0,"Crosshair type (0 if no crosshair requested)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCrosshairPos=",0,"Position of crosshair");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fBorderSize=",0,"pad bordersize in pixels");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fBorderMode=",0,"Bordermode (-1=down, 0 = no border, 1=up)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fModified=",0,"Set to true when pad is modified");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fGridx=",0,"Set to true if grid along X");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fGridy=",0,"Set to true if grid along Y");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fAbsCoord=",0,"Use absolute coordinates");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fEditable=",0,"True if canvas is editable");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fFixedAspectRatio=",0,"True if fixed aspect ratio");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,-1,2,"fMother=",0,"! pointer to mother of the list");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TCanvas),-1,-1,2,"fCanvas=",0,"! Pointer to mother canvas");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TList),-1,-1,2,"fPrimitives=",0,"->List of primitives (subpads)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TList),-1,-1,2,"fExecs=",0,"List of commands to be executed when a pad event occurs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fName=",0,"Pad name");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fTitle=",0,"Pad title");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TFrame),-1,-1,2,"fFrame=",0,"! Pointer to 2-D frame (if one exists)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TView),-1,-1,2,"fView=",0,"! Pointer to 3-D view (if one exists)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,-1,2,"fPadPointer=",0,"! free pointer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,-1,2,"fPadView3D=",0,"! 3D View of this TPad");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"fgMaxPickDistance=",0,"Maximum Pick Distance");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TVirtualViewer3D),-1,-1,2,"fViewer3D=",0,"! Current 3D viewer");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TPadcLcLdA),-1,-2,1,"kFraming=64",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TPadcLcLdA),-1,-2,1,"kHori=512",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TPadcLcLdA),-1,-2,1,"kClipFrame=1024",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TPadcLcLdA),-1,-2,1,"kPrintingPS=2048",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TPadcLcLdA),-1,-2,1,"kCannotMove=4096",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TPadcLcLdA),-1,-2,1,"kClearAfterCR=16384",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TButton */
static void G__setup_memvarTButton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton));
   { TButton *p; p=(TButton*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFocused=",0,"If cursor is in...");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFraming=",0,"True if you want a frame to be painted when pressed");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fMethod=",0,"Method to be executed by this button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TControlBar */
static void G__setup_memvarTControlBar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBar));
   { TControlBar *p; p=(TControlBar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TControlBarImp),-1,-1,2,"fControlBarImp=",0,"system specific implementation");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fOrientation=",0,"orientation");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TList),-1,-1,2,"fButtons=",0,"list of buttons");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNoroc=",0,"number of rows or columns");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TControlBarcLcLdA),-1,-2,1,"kVertical=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TControlBarcLcLdA),-1,-2,1,"kHorizontal=2",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TClassTree */
static void G__setup_memvarTClassTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TClassTree));
   { TClassTree *p; p=(TClassTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fClasses=",0,"List of classes to be drawn");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fYoffset=",0,"offset at top of picture in per cent of pad");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fLabelDx=",0,"width along x of TPaveLabels in per cent of pad");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNclasses=",0,"current number of classes");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fShowCod=",0,"if 1 show classes referenced by implementation");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fShowMul=",0,"if 1 show multiple inheritance");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fShowHas=",0,"if 1 show \"has a\" relationship");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fShowRef=",0,"if 1 show classes relationship other than inheritance");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCstatus=",0,"[fNclasses] classes status");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdata=",0,"[fNclasses] Number of data members per class");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fParents=",0,"[fNclasses] parent number of classes (permanent)");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCparent=",0,"!parent number of classes (temporary)");
   G__memvar_setup((void*)0,67,2,0,-1,-1,-1,2,"fDerived=",0,"![fNclasses] table to indicate if i derives from j");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-1,2,"fCpointer=",0,"![fNclasses] pointers to the TClass objects");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fCnames=",0,"![fNclasses] class names");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fCtitles=",0,"![fNclasses] class titles");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fOptions=",0,"![fNclasses] List of options per class");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fSourceDir=",0,"Concatenated source directories");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__GPadLN_TList),-1,-1,2,"fLinks=",0,"![fNclasses] for each class, the list of referenced(ing) classes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TColorWheel */
static void G__setup_memvarTColorWheel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TColorWheel));
   { TColorWheel *p; p=(TColorWheel*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRmin=",0,"Minimum radius for rectangles");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRmax=",0,"Maximum radius for rectangles");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fR0=",0,"Minimum radius for circles");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDr=",0,"Circles radius");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRgray=",0,"Maximum radius of gray circle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX[15]=",0,"X coordinates of the center of circles");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY[15]=",0,"Y coordinates of the center of circles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TCanvas),-1,-1,4,"fCanvas=",0,"! Canvas used to draw the Color Wheel");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TArc),-1,-1,4,"fArc=",0,"! pointer to utility arc");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TLine),-1,-1,4,"fLine=",0,"! pointer to utility line");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TText),-1,-1,4,"fText=",0,"! pointer to utility text");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TGraph),-1,-1,4,"fGraph=",0,"! pointer to utility graph");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TControlBarButton */
static void G__setup_memvarTControlBarButton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton));
   { TControlBarButton *p; p=(TControlBarButton*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fType=",0,"button type");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fAction=",0,"action to be executed");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TControlBarButtoncLcLdA),-1,-2,1,"kButton=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TControlBarButtoncLcLdA),-1,-2,1,"kDrawnButton=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TControlBarButtoncLcLdA),-1,-2,1,"kSeparator=3",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDialogCanvas */
static void G__setup_memvarTDialogCanvas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas));
   { TDialogCanvas *p; p=(TDialogCanvas*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,-1,2,"fRefObject=",0,"Pointer to object to set attributes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,-1,2,"fRefPad=",0,"Pad containing object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGroupButton */
static void G__setup_memvarTGroupButton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton));
   { TGroupButton *p; p=(TGroupButton*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TInspectCanvas */
static void G__setup_memvarTInspectCanvas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas));
   { TInspectCanvas *p; p=(TInspectCanvas*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TButton),-1,-1,2,"fBackward=",0,"Pointer to the Backward button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TButton),-1,-1,2,"fForward=",0,"Pointer to the Forward button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TList),-1,-1,2,"fObjects=",0,"List of objects inspected");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,-1,2,"fCurObject=",0,"Pointer to object being inspected");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPadPainter */
static void G__setup_memvarTPadPainter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TPadPainter));
   { TPadPainter *p; p=(TPadPainter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPaveClass */
static void G__setup_memvarTPaveClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass));
   { TPaveClass *p; p=(TPaveClass*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClassTree),-1,-1,2,"fClassTree=",0,"Pointer to the TClassTree referencing this object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSlider */
static void G__setup_memvarTSlider(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider));
   { TSlider *p; p=(TSlider*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMinimum=",0,"Slider minimum value in [0,1]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaximum=",0,"Slider maximum value in [0,1]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,-1,2,"fObject=",0,"!Pointer to associated object");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fMethod=",0,"command to be executed when slider is changed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSliderBox */
static void G__setup_memvarTSliderBox(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox));
   { TSliderBox *p; p=(TSliderBox*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TSlider),-1,-1,2,"fSlider=",0,"Pointer to slider");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TViewer3DPad */
static void G__setup_memvarTViewer3DPad(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad));
   { TViewer3DPad *p; p=(TViewer3DPad*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,1,0,G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),-1,-1,4,"fPad=",0,"the pad we paint into.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fBuilding=",0,"is scene being built?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__GPad() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTAttCanvas(void) {
   /* TAttCanvas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas));
   G__memfunc_setup("TAttCanvas",985,G__G__GPad_95_0_1, 105, G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,G__G__GPad_95_0_2, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TAttCanvas' - 1 - attcanvas", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAdate",767,G__G__GPad_95_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTitleFromTop",1513,G__G__GPad_95_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXBetween",1090,G__G__GPad_95_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXdate",790,G__G__GPad_95_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYBetween",1091,G__G__GPad_95_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYdate",791,G__G__GPad_95_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__GPad_95_0_9, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetAttCanvas",1416,G__G__GPad_95_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAdate",779,G__G__GPad_95_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - adate", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTitleFromTop",1525,G__G__GPad_95_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - titlefromtop", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetXBetween",1102,G__G__GPad_95_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xbetween", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetXdate",802,G__G__GPad_95_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xdate", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetYBetween",1103,G__G__GPad_95_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - ybetween", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetYdate",803,G__G__GPad_95_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - ydate", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__GPad_95_0_17, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TAttCanvas::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_95_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAttCanvas::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_95_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TAttCanvas::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_95_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAttCanvas::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__GPad_95_0_21, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_95_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__GPad_95_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_95_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_95_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAttCanvas::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_95_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAttCanvas::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_95_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAttCanvas::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_95_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAttCanvas::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TAttCanvas", 985, G__G__GPad_95_0_29, (int) ('i'), G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas), -1, 0, 1, 1, 1, 0, "u 'TAttCanvas' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAttCanvas", 1111, G__G__GPad_95_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GPad_95_0_31, (int) ('u'), G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas), -1, 1, 1, 1, 1, 0, "u 'TAttCanvas' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTView(void) {
   /* TView */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TView));
   G__memfunc_setup("DefinePerspectiveView",2160,G__G__GPad_146_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("AxisVertex",1043,G__G__GPad_146_0_4, 121, -1, -1, 0, 8, 1, 1, 0, 
"d - 'Double_t' 0 - ang D - 'Double_t' 0 - av "
"i - 'Int_t' 1 - ix1 i - 'Int_t' 1 - ix2 "
"i - 'Int_t' 1 - iy1 i - 'Int_t' 1 - iy2 "
"i - 'Int_t' 1 - iz1 i - 'Int_t' 1 - iz2", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("DefineViewDirection",1927,G__G__GPad_146_0_5, 121, -1, -1, 0, 10, 1, 1, 0, 
"D - 'Double_t' 10 - s D - 'Double_t' 10 - c "
"d - 'Double_t' 0 - cosphi d - 'Double_t' 0 - sinphi "
"d - 'Double_t' 0 - costhe d - 'Double_t' 0 - sinthe "
"d - 'Double_t' 0 - cospsi d - 'Double_t' 0 - sinpsi "
"D - 'Double_t' 0 - tnorm D - 'Double_t' 0 - tback", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("DrawOutlineCube",1517,G__G__GPad_146_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TList' - 0 - outline D - 'Double_t' 0 - rmin "
"D - 'Double_t' 0 - rmax", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ExecuteRotateView",1757,G__G__GPad_146_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindScope",891,G__G__GPad_146_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"D - 'Double_t' 0 - scale D - 'Double_t' 0 - center "
"i - 'Int_t' 1 - irep", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetDistancetoAxis",1731,G__G__GPad_146_0_10, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - axis i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py d - 'Double_t' 1 - ratio", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetDview",799,G__G__GPad_146_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetDproj",799,G__G__GPad_146_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetExtent",920,G__G__GPad_146_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetAutoRange",1190,G__G__GPad_146_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetLatitude",1116,G__G__GPad_146_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetLongitude",1227,G__G__GPad_146_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPsi",588,G__G__GPad_146_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetRange",781,G__G__GPad_146_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"F - 'Float_t' 0 - min F - 'Float_t' 0 - max", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetRange",781,G__G__GPad_146_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - min D - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetRmax",696,G__G__GPad_146_0_20, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetRmin",694,G__G__GPad_146_0_21, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetOutline",1024,G__G__GPad_146_0_22, 85, G__get_linked_tagnum(&G__G__GPadLN_TSeqCollection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetTback",773,G__G__GPad_146_0_23, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetTN",450,G__G__GPad_146_0_24, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetTnorm",816,G__G__GPad_146_0_25, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetSystem",933,G__G__GPad_146_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetWindow",920,G__G__GPad_146_0_27, 121, -1, -1, 0, 4, 1, 1, 8, 
"d - 'Double_t' 1 - u0 d - 'Double_t' 1 - v0 "
"d - 'Double_t' 1 - du d - 'Double_t' 1 - dv", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetWindowWidth",1432,G__G__GPad_146_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetWindowHeight",1521,G__G__GPad_146_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindNormal",1002,G__G__GPad_146_0_30, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 1 - zn", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindPhiSectors",1413,G__G__GPad_146_0_31, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - iopt i - 'Int_t' 1 - kphi "
"D - 'Double_t' 0 - aphi i - 'Int_t' 1 - iphi1 "
"i - 'Int_t' 1 - iphi2", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindThetaSectors",1626,G__G__GPad_146_0_32, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - iopt d - 'Double_t' 0 - phi "
"i - 'Int_t' 1 - kth D - 'Double_t' 0 - ath "
"i - 'Int_t' 1 - ith1 i - 'Int_t' 1 - ith2", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("IsClippedNDC",1106,G__G__GPad_146_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("IsPerspective",1350,G__G__GPad_146_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("IsViewChanged",1281,G__G__GPad_146_0_35, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("NDCtoWC",594,G__G__GPad_146_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"F - 'Float_t' 10 - pn F - 'Float_t' 0 - pw", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("NDCtoWC",594,G__G__GPad_146_0_37, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 10 - pn D - 'Double_t' 0 - pw", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("NormalWCtoNDC",1211,G__G__GPad_146_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"F - 'Float_t' 10 - pw F - 'Float_t' 0 - pn", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("NormalWCtoNDC",1211,G__G__GPad_146_0_39, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 10 - pw D - 'Double_t' 0 - pn", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PadRange",770,G__G__GPad_146_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - rback", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ResizePad",903,G__G__GPad_146_0_41, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetAutoRange",1202,G__G__GPad_146_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' autorange", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetAxisNDC",918,G__G__GPad_146_0_43, 121, -1, -1, 0, 6, 1, 1, 0, 
"D - 'Double_t' 10 - x1 D - 'Double_t' 10 - x2 "
"D - 'Double_t' 10 - y1 D - 'Double_t' 10 - y2 "
"D - 'Double_t' 10 - z1 D - 'Double_t' 10 - z2", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetDefaultWindow",1641,G__G__GPad_146_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetDview",811,G__G__GPad_146_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - dview", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetDproj",811,G__G__GPad_146_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - dproj", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetLatitude",1128,G__G__GPad_146_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - latitude", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetLongitude",1239,G__G__GPad_146_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - longitude", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetPsi",600,G__G__GPad_146_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - psi", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetOutlineToCube",1614,G__G__GPad_146_0_50, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetParallel",1113,G__G__GPad_146_0_51, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetPerspective",1462,G__G__GPad_146_0_52, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetRange",793,G__G__GPad_146_0_53, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 10 - min D - 'Double_t' 10 - max", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetRange",793,G__G__GPad_146_0_54, 121, -1, -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - x0 d - 'Double_t' 0 - y0 "
"d - 'Double_t' 0 - z0 d - 'Double_t' 0 - x1 "
"d - 'Double_t' 0 - y1 d - 'Double_t' 0 - z1 "
"i - 'Int_t' 0 '0' flag", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetSystem",945,G__G__GPad_146_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - system", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetView",711,G__G__GPad_146_0_56, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - longitude d - 'Double_t' 0 - latitude "
"d - 'Double_t' 0 - psi i - 'Int_t' 1 - irep", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetViewChanged",1393,G__G__GPad_146_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetWindow",932,G__G__GPad_146_0_58, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - u0 d - 'Double_t' 0 - v0 "
"d - 'Double_t' 0 - du d - 'Double_t' 0 - dv", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("WCtoNDC",594,G__G__GPad_146_0_59, 121, -1, -1, 0, 2, 1, 1, 0, 
"F - 'Float_t' 10 - pw F - 'Float_t' 0 - pn", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("WCtoNDC",594,G__G__GPad_146_0_60, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 10 - pw D - 'Double_t' 0 - pn", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("MoveFocus",919,G__G__GPad_146_0_61, 121, -1, -1, 0, 8, 1, 1, 0, 
"D - 'Double_t' 0 - center d - 'Double_t' 0 - dx "
"d - 'Double_t' 0 - dy d - 'Double_t' 0 - dz "
"i - 'Int_t' 0 '10' nsteps d - 'Double_t' 0 '0' dlong "
"d - 'Double_t' 0 '0' dlat d - 'Double_t' 0 '0' dpsi", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("MoveViewCommand",1521,G__G__GPad_146_0_62, 121, -1, -1, 0, 2, 1, 1, 0, 
"c - 'Char_t' 0 - chCode i - 'Int_t' 0 '1' count", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("MoveWindow",1039,G__G__GPad_146_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "c - 'Char_t' 0 - option", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("AdjustScales",1222,G__G__GPad_146_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVirtualPad' - 0 '0' pad", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Centered3DImages",1527,G__G__GPad_146_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVirtualPad' - 0 '0' pad", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Centered",810,G__G__GPad_146_0_66, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FrontView",932,G__G__GPad_146_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVirtualPad' - 0 '0' pad", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Front",521,G__G__GPad_146_0_68, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ZoomIn",604,G__G__GPad_146_0_69, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ZoomOut",733,G__G__GPad_146_0_70, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ZoomView",832,G__G__GPad_146_0_71, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TVirtualPad' - 0 '0' pad d - 'Double_t' 0 '1.25' zoomFactor", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("UnzoomView",1059,G__G__GPad_146_0_72, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TVirtualPad' - 0 '0' pad d - 'Double_t' 0 '1.25' unZoomFactor", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("RotateView",1034,G__G__GPad_146_0_73, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - phi d - 'Double_t' 0 - theta "
"U 'TVirtualPad' - 0 '0' pad", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SideView",800,G__G__GPad_146_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVirtualPad' - 0 '0' pad", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Side",389,G__G__GPad_146_0_75, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("TopView",718,G__G__GPad_146_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVirtualPad' - 0 '0' pad", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Top",307,G__G__GPad_146_0_77, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ToggleRulers",1247,G__G__GPad_146_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVirtualPad' - 0 '0' pad", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ShowAxis",822,G__G__GPad_146_0_79, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ToggleZoom",1031,G__G__GPad_146_0_80, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVirtualPad' - 0 '0' pad", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ZoomMove",828,G__G__GPad_146_0_81, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Zoom",421,G__G__GPad_146_0_82, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("UnZoom",616,G__G__GPad_146_0_83, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("CreateView",1007,G__G__GPad_146_0_84, 85, G__get_linked_tagnum(&G__G__GPadLN_TView), -1, 0, 3, 3, 1, 0, 
"i - 'Int_t' 0 '1' system D - 'Double_t' 10 '0' rmin "
"D - 'Double_t' 10 '0' rmax", (char*)NULL, (void*) G__func2void( (TView* (*)(Int_t, const Double_t*, const Double_t*))(&TView::CreateView) ), 0);
   G__memfunc_setup("Class",502,G__G__GPad_146_0_85, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TView::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_146_0_86, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TView::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_146_0_87, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TView::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_146_0_88, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TView::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_146_0_92, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_146_0_93, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TView::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_146_0_94, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TView::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_146_0_95, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TView::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_146_0_96, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TView::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TView", 621, G__G__GPad_146_0_97, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GPad_146_0_98, (int) ('u'), G__get_linked_tagnum(&G__G__GPadLN_TView), -1, 1, 1, 1, 1, 0, "u 'TView' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCanvas(void) {
   /* TCanvas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas));
   G__memfunc_setup("TCanvas",688,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GPadLN_TCanvas), -1, 0, 1, 1, 4, 0, "u 'TCanvas' - 11 - canvas", "cannot copy canvas, use TObject::Clone()", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GPadLN_TCanvas), -1, 1, 1, 1, 4, 0, "u 'TCanvas' - 11 - rhs", "idem", (void*) NULL, 0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyPixmaps",1149,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawEventStatus",1556,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y U 'TObject' - 0 - selected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunAutoExec",1107,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreatePainter",1319,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCanvas",688,G__G__GPad_147_0_10, 105, G__get_linked_tagnum(&G__G__GPadLN_TCanvas), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' build", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCanvas",688,G__G__GPad_147_0_11, 105, G__get_linked_tagnum(&G__G__GPadLN_TCanvas), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"\"' title "
"i - 'Int_t' 0 '1' form", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCanvas",688,G__G__GPad_147_0_12, 105, G__get_linked_tagnum(&G__G__GPadLN_TCanvas), -1, 0, 4, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 - ww i - 'Int_t' 0 - wh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCanvas",688,G__G__GPad_147_0_13, 105, G__get_linked_tagnum(&G__G__GPadLN_TCanvas), -1, 0, 6, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 - wtopx i - 'Int_t' 0 - wtopy "
"i - 'Int_t' 0 - ww i - 'Int_t' 0 - wh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCanvas",688,G__G__GPad_147_0_14, 105, G__get_linked_tagnum(&G__G__GPadLN_TCanvas), -1, 0, 4, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 - ww "
"i - 'Int_t' 0 - wh i - 'Int_t' 0 - winid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Constructor",1190,G__G__GPad_147_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Constructor",1190,G__G__GPad_147_0_16, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 - form", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Constructor",1190,G__G__GPad_147_0_17, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 - ww i - 'Int_t' 0 - wh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Constructor",1190,G__G__GPad_147_0_18, 121, -1, -1, 0, 6, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 - wtopx i - 'Int_t' 0 - wtopy "
"i - 'Int_t' 0 - ww i - 'Int_t' 0 - wh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destructor",1071,G__G__GPad_147_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cd",199,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' subpadnumber", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Delete",595,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DisconnectWidget",1646,G__G__GPad_147_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", "used by TCanvasImp", (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawClone",895,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TObject), -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("DrawClonePad",1172,G__G__GPad_147_0_28, 85, G__get_linked_tagnum(&G__G__GPadLN_TObject), -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("EditorBar",892,G__G__GPad_147_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EmbedInto",887,G__G__GPad_147_0_30, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - winid i - 'Int_t' 0 - ww "
"i - 'Int_t' 0 - wh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnterLeave",1003,G__G__GPad_147_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TPad' - 0 - prevSelPad U 'TObject' - 0 - prevSelObj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FeedbackMode",1162,G__G__GPad_147_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - set", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Flush",514,G__G__GPad_147_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseCurrentStyle",1569,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("ForceUpdate",1106,G__G__GPad_147_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDISPLAY",822,G__G__GPad_147_0_36, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetContextMenu",1434,G__G__GPad_147_0_37, 85, G__get_linked_tagnum(&G__G__GPadLN_TContextMenu), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDoubleBuffer",1493,G__G__GPad_147_0_38, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventX",890,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventY",891,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHighLightColor",1687,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPadSave",964,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearPadSave",1163,G__G__GPad_147_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSelected",1097,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetClickSelected",1583,G__G__GPad_147_0_46, 85, G__get_linked_tagnum(&G__G__GPadLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSelectedX",1185,G__G__GPad_147_0_47, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSelectedY",1186,G__G__GPad_147_0_48, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSelectedOpt",1404,G__G__GPad_147_0_49, 67, -1, G__defined_typename("Option_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSelectedPad",1374,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetClickSelectedPad",1860,G__G__GPad_147_0_51, 85, G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShowEventStatus",1863,G__G__GPad_147_0_52, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShowToolBar",1396,G__G__GPad_147_0_53, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShowEditor",1320,G__G__GPad_147_0_54, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShowToolTips",1535,G__G__GPad_147_0_55, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAutoExec",1086,G__G__GPad_147_0_56, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXsizeUser",1234,G__G__GPad_147_0_57, 102, -1, G__defined_typename("Size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYsizeUser",1235,G__G__GPad_147_0_58, 102, -1, G__defined_typename("Size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXsizeReal",1207,G__G__GPad_147_0_59, 102, -1, G__defined_typename("Size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYsizeReal",1208,G__G__GPad_147_0_60, 102, -1, G__defined_typename("Size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvasID",1033,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCanvasImp",1186,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TCanvasImp), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWindowTopX",1315,G__G__GPad_147_0_63, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWindowTopY",1316,G__G__GPad_147_0_64, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWindowWidth",1432,G__G__GPad_147_0_65, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWindowHeight",1521,G__G__GPad_147_0_66, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWw",494,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWh",479,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCanvasPar",1183,G__G__GPad_147_0_69, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 1 - wtopx i - 'Int_t' 1 - wtopy "
"h - 'UInt_t' 1 - ww h - 'UInt_t' 1 - wh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleInput",1116,G__G__GPad_147_0_70, 121, -1, -1, 0, 3, 1, 1, 0, 
"i 'EEventType' - 0 - button i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HasMenuBar",966,G__G__GPad_147_0_71, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Iconify",721,G__G__GPad_147_0_72, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBatch",670,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsGrayscale",1111,G__G__GPad_147_0_75, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRetained",1000,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MoveOpaque",1026,G__G__GPad_147_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' set", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpaqueMoving",1243,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OpaqueResizing",1462,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Pick",391,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TPad), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py "
"U 'TObjLink' - 1 - pickobj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Pick",391,G__G__GPad_147_0_83, 85, G__get_linked_tagnum(&G__G__GPadLN_TPad), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py "
"U 'TObject' - 0 - prevSelObj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Picked",592,G__G__GPad_147_0_84, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TPad' - 0 - selpad U 'TObject' - 0 - selected "
"i - 'Int_t' 0 - event", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("ProcessedEvent",1450,G__G__GPad_147_0_85, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y U 'TObject' - 0 - selected", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("Selected",809,G__G__GPad_147_0_86, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("Cleared",688,G__G__GPad_147_0_87, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVirtualPad' - 0 - pad", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("Closed",602,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("RaiseWindow",1132,G__G__GPad_147_0_89, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Resize",626,G__G__GPad_147_0_90, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResizeOpaque",1245,G__G__GPad_147_0_91, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' set", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveSource",1024,G__G__GPad_147_0_92, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' filename C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCursor",938,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i 'ECursor' - 0 - cursor", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDoubleBuffer",1505,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFixedAspectRatio",1915,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' fixed", "*TOGGLE*", (void*) NULL, 1);
   G__memfunc_setup("SetGrayscale",1223,G__G__GPad_147_0_97, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' set", "*TOGGLE* *GETTER=IsGrayscale", (void*) NULL, 0);
   G__memfunc_setup("SetWindowPosition",1785,G__G__GPad_147_0_98, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWindowSize",1343,G__G__GPad_147_0_99, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - ww h - 'UInt_t' 0 - wh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvasSize",1315,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - ww h - 'UInt_t' 0 - wh", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetHighLightColor",1699,G__G__GPad_147_0_101, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSelected",1109,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetClickSelected",1595,G__G__GPad_147_0_103, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSelectedPad",1386,G__G__GPad_147_0_104, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TPad' - 0 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetClickSelectedPad",1872,G__G__GPad_147_0_105, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TPad' - 0 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__G__GPad_147_0_106, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Size",411,G__G__GPad_147_0_107, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 '0' xsizeuser f - 'Float_t' 0 '0' ysizeuser", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBatch",782,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' batch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFolder",904,G__G__GPad_147_0_109, 121, -1, -1, 0, 1, 3, 1, 0, "g - 'Bool_t' 0 'kTRUE' isfolder", (char*)NULL, (void*) G__func2void( (void (*)(Bool_t))(&TCanvas::SetFolder) ), 0);
   G__memfunc_setup("SetPadSave",976,G__G__GPad_147_0_110, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TPad' - 0 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRetained",1112,G__G__GPad_147_0_111, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' retained", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTitle",814,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' title", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ToggleEventStatus",1768,G__G__GPad_147_0_113, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ToggleAutoExec",1408,G__G__GPad_147_0_114, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ToggleToolBar",1301,G__G__GPad_147_0_115, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ToggleEditor",1225,G__G__GPad_147_0_116, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ToggleToolTips",1440,G__G__GPad_147_0_117, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Update",611,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UseGL",448,G__G__GPad_147_0_119, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSupportGL",1212,G__G__GPad_147_0_120, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - support", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvasPainter",1615,G__G__GPad_147_0_121, 85, G__get_linked_tagnum(&G__G__GPadLN_TVirtualPadPainter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeDefCanvas",1257,G__G__GPad_147_0_122, 85, G__get_linked_tagnum(&G__G__GPadLN_TCanvas), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCanvas* (*)())(&TCanvas::MakeDefCanvas) ), 0);
   G__memfunc_setup("Class",502,G__G__GPad_147_0_123, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCanvas::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_147_0_124, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCanvas::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_147_0_125, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCanvas::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_147_0_126, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCanvas::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_147_0_130, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_147_0_131, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCanvas::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_147_0_132, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCanvas::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_147_0_133, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCanvas::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_147_0_134, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCanvas::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TCanvas", 814, G__G__GPad_147_0_135, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPad(void) {
   /* TPad */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad));
   G__memfunc_setup("DestroyExternalViewer3D",2326,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HideToolTip",1093,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - event", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintBorder",1114,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"s - 'Color_t' 0 - color g - 'Bool_t' 0 - tops", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintBorderPS",1277,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 8, 1, 2, 0, 
"d - 'Double_t' 0 - xl d - 'Double_t' 0 - yl "
"d - 'Double_t' 0 - xt d - 'Double_t' 0 - yt "
"i - 'Int_t' 0 - bmode i - 'Int_t' 0 - bsize "
"i - 'Int_t' 0 - dark i - 'Int_t' 0 - light", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintDate",890,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBatch",782,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "g - 'Bool_t' 0 'kTRUE' batch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TPad",361,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GPadLN_TPad), -1, 0, 1, 1, 4, 0, "u 'TPad' - 11 - pad", "cannot copy pads, use TObject::Clone()", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GPadLN_TPad), -1, 1, 1, 1, 4, 0, "u 'TPad' - 11 - rhs", "idem", (void*) NULL, 0);
   G__memfunc_setup("CopyBackgroundPixmap",2058,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyBackgroundPixmaps",2173,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"U 'TPad' - 0 - start U 'TPad' - 0 - stop "
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPad",361,G__G__GPad_156_0_14, 105, G__get_linked_tagnum(&G__G__GPadLN_TPad), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPad",361,G__G__GPad_156_0_15, 105, G__get_linked_tagnum(&G__G__GPadLN_TPad), -1, 0, 9, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"d - 'Double_t' 0 - xlow d - 'Double_t' 0 - ylow "
"d - 'Double_t' 0 - xup d - 'Double_t' 0 - yup "
"s - 'Color_t' 0 '-1' color s - 'Short_t' 0 '-1' bordersize "
"s - 'Short_t' 0 '-2' bordermode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AbsCoordinates",1425,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - set", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AbsPixeltoX",1107,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - px", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AbsPixeltoY",1108,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AbsPixeltoXY",1196,G__G__GPad_156_0_19, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - xpixel i - 'Int_t' 0 - ypixel "
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddExec",654,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - command", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AutoExec",798,G__G__GPad_156_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildLegend",1087,G__G__GPad_156_0_23, 85, G__get_linked_tagnum(&G__G__GPadLN_TLegend), -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 '0.5' x1 d - 'Double_t' 0 '0.67' y1 "
"d - 'Double_t' 0 '0.88' x2 d - 'Double_t' 0 '0.88' y2 "
"C - - 10 '\"\"' title", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("cd",199,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' subpadnumber", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clip",392,G__G__GPad_156_0_26, 105, -1, G__defined_typename("Int_t"), 0, 6, 1, 1, 0, 
"F - 'Float_t' 0 - x F - 'Float_t' 0 - y "
"f - 'Float_t' 0 - xclipl f - 'Float_t' 0 - yclipb "
"f - 'Float_t' 0 - xclipr f - 'Float_t' 0 - yclipt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clip",392,G__G__GPad_156_0_27, 105, -1, G__defined_typename("Int_t"), 0, 6, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - y "
"d - 'Double_t' 0 - xclipl d - 'Double_t' 0 - yclipb "
"d - 'Double_t' 0 - xclipr d - 'Double_t' 0 - yclipt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClippingCode",1201,G__G__GPad_156_0_28, 105, -1, G__defined_typename("Int_t"), 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - xcl1 d - 'Double_t' 0 - ycl1 "
"d - 'Double_t' 0 - xcl2 d - 'Double_t' 0 - ycl2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClipPolygon",1136,G__G__GPad_156_0_29, 105, -1, G__defined_typename("Int_t"), 0, 10, 1, 1, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y i - 'Int_t' 0 - nn "
"D - 'Double_t' 0 - xc D - 'Double_t' 0 - yc "
"d - 'Double_t' 0 - xclipl d - 'Double_t' 0 - yclipb "
"d - 'Double_t' 0 - xclipr d - 'Double_t' 0 - yclipt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Closed",602,G__G__GPad_156_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("CopyPixmap",1034,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CopyPixmaps",1149,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeleteExec",984,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Divide",597,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 '1' nx i - 'Int_t' 0 '1' ny "
"f - 'Float_t' 0 '0.01' xmargin f - 'Float_t' 0 '0.01' ymargin "
"i - 'Int_t' 0 '0' color", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawClassObject",1499,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 10 - obj C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawColorTable",1397,G__G__GPad_156_0_38, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPad::DrawColorTable) ), 0);
   G__memfunc_setup("DrawCrosshair",1340,G__G__GPad_156_0_39, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawFrame",889,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TH1F), -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - xmin d - 'Double_t' 0 - ymin "
"d - 'Double_t' 0 - xmax d - 'Double_t' 0 - ymax "
"C - - 10 '\"\"' title", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEventAxis",1642,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py U 'TAxis' - 0 - axis", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindObject",984,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindObject",984,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TObject), -1, 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UseCurrentStyle",1569,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("GetBorderMode",1283,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBorderSize",1305,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCrosshair",1230,G__G__GPad_156_0_47, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvasID",1033,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCanvasImp",1186,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TCanvasImp), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFrame",779,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TFrame), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEvent",802,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventX",890,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventY",891,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHighLightColor",1687,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRange",781,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 1 - x1 d - 'Double_t' 1 - y1 "
"d - 'Double_t' 1 - x2 d - 'Double_t' 1 - y2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRangeAxis",1186,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 1 - xmin d - 'Double_t' 1 - ymin "
"d - 'Double_t' 1 - xmax d - 'Double_t' 1 - ymax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPadPar",856,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 1 - xlow d - 'Double_t' 1 - ylow "
"d - 'Double_t' 1 - xup d - 'Double_t' 1 - yup", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXlowNDC",927,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetYlowNDC",928,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWNDC",588,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHNDC",573,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWw",494,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWh",479,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAbsXlowNDC",1205,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAbsYlowNDC",1206,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAbsWNDC",866,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAbsHNDC",851,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAspectRatio",1407,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhi",577,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTheta",790,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUxmin",817,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUymin",818,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUxmax",819,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUymax",820,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGridx",798,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGridy",799,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumber",905,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTickx",803,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTicky",804,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetX1",425,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetX2",426,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetY1",426,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetY2",427,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxPickDistance",1784,G__G__GPad_156_0_84, 105, -1, G__defined_typename("Int_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Int_t (*)())(&TPad::GetMaxPickDistance) ), 0);
   G__memfunc_setup("GetListOfPrimitives",1949,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfExecs",1385,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPrimitive",1241,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - name", "obsolete, use FindObject instead", (void*) NULL, 1);
   G__memfunc_setup("GetSelected",1097,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPad",565,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - subpadnumber", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPadPointer",1302,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPadSave",964,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSelectedPad",1374,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGLDevice",1027,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetView",699,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TView), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetView3D",818,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TObject), -1, 0, 0, 1, 1, 8, "", "Return 3D View of this TPad", (void*) NULL, 1);
   G__memfunc_setup("GetLogx",698,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLogy",699,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLogz",700,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMother",911,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTitle",802,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCanvas",892,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TCanvas), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVirtCanvas",1313,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPainter",1011,G__G__GPad_156_0_104, 85, G__get_linked_tagnum(&G__G__GPadLN_TVirtualPadPainter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPadPaint",1073,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPixmapID",1052,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hash",388,(G__InterfaceMethod) NULL,107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HasCrosshair",1226,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HighLight",888,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Color_t' 0 'kRed' col g - 'Bool_t' 0 'kTRUE' set", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HasFixedAspectRatio",1899,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsBatch",670,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsEditable",982,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsModified",989,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsRetained",1000,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsVertical",1014,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Modified",801,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' flag", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("OpaqueMoving",1243,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OpaqueResizing",1462,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PadtoX",592,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PadtoY",593,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintBox",805,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2 "
"C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintFillArea",1276,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - n F - 'Float_t' 0 - x "
"F - 'Float_t' 0 - y C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintFillArea",1276,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintFillAreaHatches",1980,G__G__GPad_156_0_127, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y i - 'Int_t' 0 - FillStyle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintHatches",1212,G__G__GPad_156_0_128, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - dy d - 'Double_t' 0 - angle "
"i - 'Int_t' 0 - nn D - 'Double_t' 0 - xx "
"D - 'Double_t' 0 - yy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintPadFrame",1276,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - xmin d - 'Double_t' 0 - ymin "
"d - 'Double_t' 0 - xmax d - 'Double_t' 0 - ymax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintLine",900,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintLineNDC",1113,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - u1 d - 'Double_t' 0 - v1 "
"d - 'Double_t' 0 - u2 d - 'Double_t' 0 - v2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintLine3D",1019,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"F - 'Float_t' 0 - p1 F - 'Float_t' 0 - p2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintLine3D",1019,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - p1 D - 'Double_t' 0 - p2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintPolyLine",1320,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - n F - 'Float_t' 0 - x "
"F - 'Float_t' 0 - y C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintPolyLine",1320,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintPolyLine3D",1439,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintPolyLineNDC",1533,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintPolyMarker",1538,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - n F - 'Float_t' 0 - x "
"F - 'Float_t' 0 - y C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintPolyMarker",1538,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintModified",1309,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintText",929,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"C - - 10 - text", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintTextNDC",1142,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - u d - 'Double_t' 0 - v "
"C - - 10 - text", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Pick",391,G__G__GPad_156_0_143, 85, G__get_linked_tagnum(&G__G__GPadLN_TPad), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py "
"U 'TObjLink' - 1 - pickobj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PixeltoX",829,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - px", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PixeltoY",830,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PixeltoXY",918,G__G__GPad_156_0_146, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - xpixel i - 'Int_t' 0 - ypixel "
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Pop",303,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - - 10 '\"\"' filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - filename C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Range",493,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2", "*MENU* *ARGS={x1=>fX1,y1=>fY1,x2=>fX2,y2=>fY2}", (void*) NULL, 1);
   G__memfunc_setup("RangeChanged",1175,G__G__GPad_156_0_151, 121, -1, -1, 0, 0, 1, 1, 0, "", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("RangeAxis",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - xmin d - 'Double_t' 0 - ymin "
"d - 'Double_t' 0 - xmax d - 'Double_t' 0 - ymax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RangeAxisChanged",1580,G__G__GPad_156_0_153, 121, -1, -1, 0, 0, 1, 1, 0, "", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("RecursiveRemove",1574,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RedrawAxis",1018,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetView3D",1045,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 '0' view", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResizePad",903,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SaveAs",579,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"C - - 10 '\"\"' filename C - 'Option_t' 10 '\"\"' option", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetBorderMode",1295,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - bordermode", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetBorderSize",1317,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - bordersize", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetCanvas",904,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCanvasSize",1315,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - ww h - 'UInt_t' 0 - wh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCrosshair",1242,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' crhair", "*TOGGLE*", (void*) NULL, 1);
   G__memfunc_setup("SetCursor",938,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i 'ECursor' - 0 - cursor", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDoubleBuffer",1505,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDrawOption",1331,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEditable",1094,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' mode", "*TOGGLE*", (void*) NULL, 1);
   G__memfunc_setup("SetFixedAspectRatio",1915,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' fixed", "*TOGGLE*", (void*) NULL, 1);
   G__memfunc_setup("SetGrid",690,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '1' valuex i - 'Int_t' 0 '1' valuey", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGridx",810,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", "*TOGGLE*", (void*) NULL, 1);
   G__memfunc_setup("SetGridy",811,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", "*TOGGLE*", (void*) NULL, 1);
   G__memfunc_setup("SetFillStyle",1220,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - fstyle", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogx",710,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", "*TOGGLE*", (void*) NULL, 1);
   G__memfunc_setup("SetLogy",711,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", "*TOGGLE*", (void*) NULL, 1);
   G__memfunc_setup("SetLogz",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", "*TOGGLE*", (void*) NULL, 1);
   G__memfunc_setup("SetNumber",917,G__G__GPad_156_0_176, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - number", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPad",577,(G__InterfaceMethod) NULL,121, -1, -1, 0, 9, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"d - 'Double_t' 0 - xlow d - 'Double_t' 0 - ylow "
"d - 'Double_t' 0 - xup d - 'Double_t' 0 - yup "
"s - 'Color_t' 0 '35' color s - 'Short_t' 0 '5' bordersize "
"s - 'Short_t' 0 '-1' bordermode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPad",577,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - xlow d - 'Double_t' 0 - ylow "
"d - 'Double_t' 0 - xup d - 'Double_t' 0 - yup", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAttFillPS",1151,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Color_t' 0 - color s - 'Style_t' 0 - style", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAttLinePS",1152,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"s - 'Color_t' 0 - color s - 'Style_t' 0 - style "
"s - 'Width_t' 0 - lwidth", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAttMarkerPS",1370,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"s - 'Color_t' 0 - color s - 'Style_t' 0 - style "
"f - 'Size_t' 0 - msize", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAttTextPS",1181,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - align f - 'Float_t' 0 - angle "
"s - 'Color_t' 0 - color s - 'Style_t' 0 - font "
"f - 'Float_t' 0 - tsize", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMaxPickDistance",1796,G__G__GPad_156_0_183, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 '5' maxPick", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&TPad::SetMaxPickDistance) ), 0);
   G__memfunc_setup("SetName",685,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetSelected",1109,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTicks",810,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '1' valuex i - 'Int_t' 0 '1' valuey", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTickx",815,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", "*TOGGLE*", (void*) NULL, 1);
   G__memfunc_setup("SetTicky",816,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", "*TOGGLE*", (void*) NULL, 1);
   G__memfunc_setup("SetTitle",814,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' title", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTheta",802,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '30' theta", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPhi",589,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '30' phi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetToolTipText",1436,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - text l - 'Long_t' 0 '1000' delayms", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVertical",1126,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' vert", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetView",711,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TView' - 0 '0' view", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetViewer3D",1045,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TVirtualViewer3D' - 0 - viewer3d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGLDevice",1039,G__G__GPad_156_0_196, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - dev", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCopyGLDevice",1450,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - copy", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Update",611,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UtoAbsPixel",1104,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - u", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("VtoAbsPixel",1105,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UtoPixel",826,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - u", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("VtoPixel",827,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WaitPrimitive",1358,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TObject), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' pname C - - 10 '\"\"' emode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("XtoAbsPixel",1107,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("YtoAbsPixel",1108,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("XtoPad",592,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("YtoPad",593,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("XtoPixel",829,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("YtoPixel",830,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("XYtoAbsPixel",1196,G__G__GPad_156_0_210, 121, -1, -1, 0, 4, 1, 1, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"i - 'Int_t' 1 - xpixel i - 'Int_t' 1 - ypixel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("XYtoPixel",918,G__G__GPad_156_0_211, 121, -1, -1, 0, 4, 1, 1, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"i - 'Int_t' 1 - xpixel i - 'Int_t' 1 - ypixel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateToolTip",1311,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TObject), -1, 0, 3, 1, 1, 0, 
"U 'TBox' - 10 - b C - - 10 - text "
"l - 'Long_t' 0 - delayms", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeleteToolTip",1310,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - tip", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetToolTip",1230,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - tip", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseToolTip",1217,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - tip", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("x3d",271,G__G__GPad_156_0_216, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' type", "Depreciated", (void*) NULL, 1);
   G__memfunc_setup("GetViewer3D",1033,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TVirtualViewer3D), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HasViewer3D",1029,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReleaseViewer3D",1450,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RecordPave",1003,G__G__GPad_156_0_220, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 10 - obj", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("RecordLatex",1117,G__G__GPad_156_0_221, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 10 - obj", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("EventPave",910,G__G__GPad_156_0_222, 121, -1, -1, 0, 0, 1, 1, 0, "", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("StartEditing",1234,G__G__GPad_156_0_223, 121, -1, -1, 0, 0, 1, 1, 0, "", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__GPad_156_0_224, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPad::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_156_0_225, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPad::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_156_0_226, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPad::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_156_0_227, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPad::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_156_0_231, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_156_0_232, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPad::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_156_0_233, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPad::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_156_0_234, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPad::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_156_0_235, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPad::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TPad", 487, G__G__GPad_156_0_236, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTButton(void) {
   /* TButton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton));
   G__memfunc_setup("TButton",720,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GPadLN_TButton), -1, 0, 1, 1, 4, 0, "u 'TButton' - 11 - org", "no copy ctor, use TObject::Clone()", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GPadLN_TButton), -1, 1, 1, 1, 4, 0, "u 'TButton' - 11 - rhs", "idem", (void*) NULL, 0);
   G__memfunc_setup("TButton",720,G__G__GPad_158_0_3, 105, G__get_linked_tagnum(&G__G__GPadLN_TButton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TButton",720,G__G__GPad_158_0_4, 105, G__get_linked_tagnum(&G__G__GPadLN_TButton), -1, 0, 6, 1, 1, 0, 
"C - - 10 - title C - - 10 - method "
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Divide",597,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 '1' nx i - 'Int_t' 0 '1' ny "
"f - 'Float_t' 0 '0.01' xmargin f - 'Float_t' 0 '0.01' ymargin "
"i - 'Int_t' 0 '0' color", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMethod",897,G__G__GPad_158_0_8, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintModified",1309,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Range",493,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBorderMode",1295,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - bordermode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFraming",1008,G__G__GPad_158_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' f", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFraming",996,G__G__GPad_158_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGrid",690,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '1' valuex i - 'Int_t' 0 '1' valuey", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogx",710,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogy",711,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMethod",909,G__G__GPad_158_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetName",685,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("x3d",271,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__GPad_158_0_22, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TButton::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_158_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TButton::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_158_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TButton::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_158_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TButton::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_158_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_158_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TButton::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_158_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TButton::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_158_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TButton::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_158_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TButton::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TButton", 846, G__G__GPad_158_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTControlBar(void) {
   /* TControlBar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBar));
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TControlBar",1098,G__G__GPad_160_0_3, 105, G__get_linked_tagnum(&G__G__GPadLN_TControlBar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TControlBar",1098,G__G__GPad_160_0_4, 105, G__get_linked_tagnum(&G__G__GPadLN_TControlBar), -1, 0, 2, 1, 1, 0, 
"C - - 10 - orientation C - - 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TControlBar",1098,G__G__GPad_160_0_5, 105, G__get_linked_tagnum(&G__G__GPadLN_TControlBar), -1, 0, 4, 1, 1, 0, 
"C - - 10 - orientation C - - 10 - title "
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddButton",901,G__G__GPad_160_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TControlBarButton' - 0 - button", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddButton",901,G__G__GPad_160_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TControlBarButton' - 1 - button", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddButton",901,G__G__GPad_160_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - label C - - 10 - action "
"C - - 10 '\"\"' hint C - - 10 '\"button\"' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddControlBar",1279,G__G__GPad_160_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TControlBar' - 0 - controlBar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddControlBar",1279,G__G__GPad_160_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TControlBar' - 1 - controlBar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSeparator",1210,G__G__GPad_160_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClicked",975,G__G__GPad_160_0_12, 85, G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetControlBarImp",1596,G__G__GPad_160_0_13, 85, G__get_linked_tagnum(&G__G__GPadLN_TControlBarImp), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfButtons",1632,G__G__GPad_160_0_14, 85, G__get_linked_tagnum(&G__G__GPadLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfColumns",1823,G__G__GPad_160_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfRows",1513,G__G__GPad_160_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOrientation",1452,G__G__GPad_160_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hide",378,G__G__GPad_160_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetButtonState",1449,G__G__GPad_160_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - label i - 'Int_t' 0 '0' state", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFont",707,G__G__GPad_160_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - fontName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTextColor",1232,G__G__GPad_160_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - colorName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberOfColumns",1835,G__G__GPad_160_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberOfRows",1525,G__G__GPad_160_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOrientation",1464,G__G__GPad_160_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOrientation",1464,G__G__GPad_160_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetButtonWidth",1448,G__G__GPad_160_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__G__GPad_160_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__GPad_160_0_28, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TControlBar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_160_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TControlBar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_160_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TControlBar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_160_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TControlBar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_160_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_160_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TControlBar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_160_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TControlBar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_160_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TControlBar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_160_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TControlBar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TControlBar", 1098, G__G__GPad_160_0_40, (int) ('i'), G__get_linked_tagnum(&G__G__GPadLN_TControlBar), -1, 0, 1, 1, 1, 0, "u 'TControlBar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TControlBar", 1224, G__G__GPad_160_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GPad_160_0_42, (int) ('u'), G__get_linked_tagnum(&G__G__GPadLN_TControlBar), -1, 1, 1, 1, 1, 0, "u 'TControlBar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTClassTree(void) {
   /* TClassTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TClassTree));
   G__memfunc_setup("FindClassPosition",1740,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"C - - 10 - classname f - 'Float_t' 1 - x "
"f - 'Float_t' 1 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindClassesUsedBy",1691,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - iclass", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindClassesUsing",1621,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - iclass", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Mark",395,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__GPadLN_TObjString), -1, 0, 3, 1, 2, 0, 
"C - - 10 - classname U 'TList' - 0 - los "
"i - 'Int_t' 0 - abit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintClass",1010,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"i - 'Int_t' 0 - iclass f - 'Float_t' 0 - xleft "
"f - 'Float_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ScanClasses",1107,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - iclass", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowCod",695,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowHas",701,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMul",719,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowRef",702,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TClassTree",986,G__G__GPad_165_0_12, 105, G__get_linked_tagnum(&G__G__GPadLN_TClassTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TClassTree",986,G__G__GPad_165_0_13, 105, G__get_linked_tagnum(&G__G__GPadLN_TClassTree), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"\"' classes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' classes", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindClass",887,G__G__GPad_165_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - classname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetClasses",1006,G__G__GPad_165_0_16, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSourceDir",1200,G__G__GPad_165_0_17, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SaveAs",579,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"C - - 10 '\"\"' filename C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetClasses",1018,G__G__GPad_165_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - classes C - 'Option_t' 10 '\"ID\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSourceDir",1212,G__G__GPad_165_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"src\"' dir", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetYoffset",1036,G__G__GPad_165_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '0' offset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLabelDx",968,G__G__GPad_165_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '0.15' labeldx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowClassesUsedBy",1723,G__G__GPad_165_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - classes", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowClassesUsing",1653,G__G__GPad_165_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - classes", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowLinks",930,G__G__GPad_165_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"HMR\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__GPad_165_0_28, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TClassTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_165_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TClassTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_165_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TClassTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_165_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TClassTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_165_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_165_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TClassTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_165_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TClassTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_165_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TClassTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_165_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TClassTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TClassTree", 986, G__G__GPad_165_0_40, (int) ('i'), G__get_linked_tagnum(&G__G__GPadLN_TClassTree), -1, 0, 1, 1, 1, 0, "u 'TClassTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TClassTree", 1112, G__G__GPad_165_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GPad_165_0_42, (int) ('u'), G__get_linked_tagnum(&G__G__GPadLN_TClassTree), -1, 1, 1, 1, 1, 0, "u 'TClassTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTColorWheel(void) {
   /* TColorWheel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TColorWheel));
   G__memfunc_setup("TColorWheel",1096,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GPadLN_TColorWheel), -1, 0, 1, 1, 4, 0, "u 'TColorWheel' - 11 - org", "no copy, use TObject::Clone()", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GPadLN_TColorWheel), -1, 1, 1, 1, 4, 0, "u 'TColorWheel' - 11 - rhs", "idem", (void*) NULL, 0);
   G__memfunc_setup("InCircles",892,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 2, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"i - 'Int_t' 0 - coffset d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InGray",586,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InRectangles",1215,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 2, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"i - 'Int_t' 0 - coffset d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintCircle",1102,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 8, 
"i - 'Int_t' 0 - coffset i - 'Int_t' 0 - n "
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - ang", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintCircles",1217,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 8, 
"i - 'Int_t' 0 - coffset d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintGray",911,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintRectangles",1540,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 8, 
"i - 'Int_t' 0 - coffset d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rotate",623,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 1 - u d - 'Double_t' 1 - v "
"d - 'Double_t' 0 - ang", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TColorWheel",1096,G__G__GPad_170_0_11, 105, G__get_linked_tagnum(&G__G__GPadLN_TColorWheel), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCanvas",892,G__G__GPad_170_0_14, 85, G__get_linked_tagnum(&G__G__GPadLN_TCanvas), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetColor",799,G__G__GPad_170_0_15, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObjectInfo",1283,(G__InterfaceMethod) NULL,67, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCanvas",904,G__G__GPad_170_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - can", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__GPad_170_0_19, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TColorWheel::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_170_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TColorWheel::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_170_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TColorWheel::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_170_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TColorWheel::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_170_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_170_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TColorWheel::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_170_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TColorWheel::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_170_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TColorWheel::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_170_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TColorWheel::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TColorWheel", 1222, G__G__GPad_170_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTControlBarButton(void) {
   /* TControlBarButton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton));
   G__memfunc_setup("TControlBarButton",1734,G__G__GPad_171_0_1, 105, G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TControlBarButton",1734,G__G__GPad_171_0_2, 105, G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton), -1, 0, 4, 1, 1, 0, 
"C - - 10 - label C - - 10 '\"\"' action "
"C - - 10 '\"\"' hint C - - 10 '\"button\"' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,G__G__GPad_171_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Action",606,G__G__GPad_171_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAction",894,G__G__GPad_171_0_5, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__G__GPad_171_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAction",906,G__G__GPad_171_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - action", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetType",718,G__G__GPad_171_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetType",718,G__G__GPad_171_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__GPad_171_0_10, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TControlBarButton::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_171_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TControlBarButton::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_171_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TControlBarButton::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_171_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TControlBarButton::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_171_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_171_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TControlBarButton::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_171_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TControlBarButton::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_171_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TControlBarButton::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_171_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TControlBarButton::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TControlBarButton", 1734, G__G__GPad_171_0_22, (int) ('i'), G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton), -1, 0, 1, 1, 1, 0, "u 'TControlBarButton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TControlBarButton", 1860, G__G__GPad_171_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GPad_171_0_24, (int) ('u'), G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton), -1, 1, 1, 1, 1, 0, "u 'TControlBarButton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDialogCanvas(void) {
   /* TDialogCanvas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas));
   G__memfunc_setup("TDialogCanvas",1280,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas), -1, 0, 1, 1, 4, 0, "u 'TDialogCanvas' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas), -1, 1, 1, 1, 4, 0, "u 'TDialogCanvas' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDialogCanvas",1280,G__G__GPad_176_0_3, 105, G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDialogCanvas",1280,G__G__GPad_176_0_4, 105, G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas), -1, 0, 4, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 - ww i - 'Int_t' 0 - wh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDialogCanvas",1280,G__G__GPad_176_0_5, 105, G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas), -1, 0, 6, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 - wtopx i - 'Int_t' 0 - wtopy "
"h - 'UInt_t' 0 - ww h - 'UInt_t' 0 - wh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Apply",518,G__G__GPad_176_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' action", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildStandardButtons",2064,G__G__GPad_176_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Divide",597,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 '1' nx i - 'Int_t' 0 '1' ny "
"f - 'Float_t' 0 '0.01' xmargin f - 'Float_t' 0 '0.01' ymargin "
"i - 'Int_t' 0 '0' color", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRefObject",1172,G__G__GPad_176_0_9, 85, G__get_linked_tagnum(&G__G__GPadLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefPad",850,G__G__GPad_176_0_10, 85, G__get_linked_tagnum(&G__G__GPadLN_TPad), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Range",493,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RecursiveRemove",1574,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBorderMode",1295,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - bordermode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGrid",690,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '1' valuex i - 'Int_t' 0 '1' valuey", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogx",710,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogy",711,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetName",685,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRefObject",1184,G__G__GPad_176_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRefPad",862,G__G__GPad_176_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TPad' - 0 - pad", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("x3d",271,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__GPad_176_0_21, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDialogCanvas::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_176_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDialogCanvas::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_176_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDialogCanvas::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_176_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDialogCanvas::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_176_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_176_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDialogCanvas::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_176_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDialogCanvas::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_176_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDialogCanvas::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_176_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDialogCanvas::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDialogCanvas", 1406, G__G__GPad_176_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGroupButton(void) {
   /* TGroupButton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton));
   G__memfunc_setup("TGroupButton",1245,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GPadLN_TGroupButton), -1, 0, 1, 1, 4, 0, "u 'TGroupButton' - 11 - org", "no copy, use TObject::Clone()", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GPadLN_TGroupButton), -1, 1, 1, 1, 4, 0, "u 'TGroupButton' - 11 - rhs", "idem", (void*) NULL, 0);
   G__memfunc_setup("TGroupButton",1245,G__G__GPad_177_0_3, 105, G__get_linked_tagnum(&G__G__GPadLN_TGroupButton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGroupButton",1245,G__G__GPad_177_0_4, 105, G__get_linked_tagnum(&G__G__GPadLN_TGroupButton), -1, 0, 7, 1, 1, 0, 
"C - - 10 - groupname C - - 10 - title "
"C - - 10 - method d - 'Double_t' 0 - x1 "
"d - 'Double_t' 0 - y1 d - 'Double_t' 0 - x2 "
"d - 'Double_t' 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayColorTable",1725,G__G__GPad_177_0_5, 121, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - action d - 'Double_t' 0 - x0 "
"d - 'Double_t' 0 - y0 d - 'Double_t' 0 - wc "
"d - 'Double_t' 0 - hc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteAction",1329,G__G__GPad_177_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__GPad_177_0_9, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGroupButton::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_177_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGroupButton::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_177_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGroupButton::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_177_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGroupButton::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_177_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_177_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGroupButton::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_177_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGroupButton::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_177_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGroupButton::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_177_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGroupButton::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGroupButton", 1371, G__G__GPad_177_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTInspectCanvas(void) {
   /* TInspectCanvas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas));
   G__memfunc_setup("TInspectCanvas",1414,G__G__GPad_178_0_1, 105, G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TInspectCanvas",1414,G__G__GPad_178_0_2, 105, G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - ww h - 'UInt_t' 0 - wh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBackward",1087,G__G__GPad_178_0_3, 85, G__get_linked_tagnum(&G__G__GPadLN_TButton), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetForward",1013,G__G__GPad_178_0_4, 85, G__get_linked_tagnum(&G__G__GPadLN_TButton), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurObject",1185,G__G__GPad_178_0_5, 85, G__get_linked_tagnum(&G__G__GPadLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObjects",1002,G__G__GPad_178_0_6, 85, G__get_linked_tagnum(&G__G__GPadLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoBackward",981,G__G__GPad_178_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TInspectCanvas::GoBackward) ), 0);
   G__memfunc_setup("GoForward",907,G__G__GPad_178_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TInspectCanvas::GoForward) ), 0);
   G__memfunc_setup("Inspector",951,G__G__GPad_178_0_9, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) G__func2void( (void (*)(TObject*))(&TInspectCanvas::Inspector) ), 0);
   G__memfunc_setup("InspectObject",1325,G__G__GPad_178_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RecursiveRemove",1574,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Divide",597,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 '1' nx i - 'Int_t' 0 '1' ny "
"f - 'Float_t' 0 '0.01' xmargin f - 'Float_t' 0 '0.01' ymargin "
"i - 'Int_t' 0 '0' color", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGrid",690,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '1' valuex i - 'Int_t' 0 '1' valuey", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGridx",810,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGridy",811,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogx",710,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogy",711,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogz",712,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTickx",815,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTicky",816,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("x3d",271,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__GPad_178_0_22, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TInspectCanvas::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_178_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TInspectCanvas::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_178_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TInspectCanvas::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_178_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TInspectCanvas::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_178_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_178_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TInspectCanvas::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_178_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TInspectCanvas::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_178_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TInspectCanvas::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_178_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TInspectCanvas::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TInspectCanvas", 1540, G__G__GPad_178_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPadPainter(void) {
   /* TPadPainter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TPadPainter));
   G__memfunc_setup("TPadPainter",1084,G__G__GPad_181_0_1, 105, G__get_linked_tagnum(&G__G__GPadLN_TPadPainter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLineColor",1191,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLineStyle",1209,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLineWidth",1192,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Width_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLineColor",1203,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - lcolor", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLineStyle",1221,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - lstyle", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLineWidth",1204,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Width_t' 0 - lwidth", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFillColor",1190,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFillStyle",1208,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsTransparent",1358,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFillColor",1202,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - fcolor", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFillStyle",1220,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - fstyle", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetOpacity",1029,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - percent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTextAlign",1200,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTextAngle",1196,(G__InterfaceMethod) NULL,102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTextColor",1220,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTextFont",1116,(G__InterfaceMethod) NULL,115, -1, G__defined_typename("Font_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTextSize",1120,(G__InterfaceMethod) NULL,102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTextMagnitude",1635,(G__InterfaceMethod) NULL,102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTextAlign",1212,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - align", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTextAngle",1208,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tangle", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTextColor",1232,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - tcolor", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTextFont",1128,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Font_t' 0 - tfont", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTextSize",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tsize", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTextSizePixels",1761,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - npixels", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateDrawable",1398,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - w h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearDrawable",1289,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CopyDrawable",1213,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - id i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DestroyDrawable",1548,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SelectDrawable",1410,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - device", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawLine",790,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawLineNDC",1003,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - u1 d - 'Double_t' 0 - v1 "
"d - 'Double_t' 0 - u2 d - 'Double_t' 0 - v2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawBox",695,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2 "
"i 'TVirtualPadPainter::EBoxMode' - 0 - mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawFillArea",1166,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 10 - x "
"D - 'Double_t' 10 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawFillArea",1166,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - n F - 'Float_t' 10 - x "
"F - 'Float_t' 10 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawPolyLine",1210,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 10 - x "
"D - 'Double_t' 10 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawPolyLine",1210,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - n F - 'Float_t' 10 - x "
"F - 'Float_t' 10 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawPolyLineNDC",1423,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 10 - u "
"D - 'Double_t' 10 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawPolyMarker",1428,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 10 - x "
"D - 'Double_t' 10 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawPolyMarker",1428,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - n F - 'Float_t' 10 - x "
"F - 'Float_t' 10 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawText",819,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"C - - 10 - text i 'TVirtualPadPainter::ETextMode' - 0 - mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawTextNDC",1032,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - u d - 'Double_t' 0 - v "
"C - - 10 - text i 'TVirtualPadPainter::ETextMode' - 0 - mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TPadPainter",1084,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GPadLN_TPadPainter), -1, 0, 1, 1, 4, 0, "u 'TPadPainter' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GPadLN_TPadPainter), -1, 1, 1, 1, 4, 0, "u 'TPadPainter' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__GPad_181_0_45, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPadPainter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_181_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPadPainter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_181_0_47, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPadPainter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_181_0_48, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPadPainter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_181_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_181_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPadPainter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_181_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPadPainter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_181_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPadPainter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_181_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPadPainter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TPadPainter", 1210, G__G__GPad_181_0_57, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPaveClass(void) {
   /* TPaveClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass));
   G__memfunc_setup("TPaveClass",982,G__G__GPad_186_0_1, 105, G__get_linked_tagnum(&G__G__GPadLN_TPaveClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPaveClass",982,G__G__GPad_186_0_2, 105, G__get_linked_tagnum(&G__G__GPadLN_TPaveClass), -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2 "
"C - - 10 - label U 'TClassTree' - 0 - classtree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPaveClass",982,G__G__GPad_186_0_3, 105, G__get_linked_tagnum(&G__G__GPadLN_TPaveClass), -1, 0, 1, 1, 1, 0, "u 'TPaveClass' - 11 - PaveVar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - PaveVar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawClasses",1116,G__G__GPad_186_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"this\"' classes", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("GetClassTree",1190,G__G__GPad_186_0_6, 85, G__get_linked_tagnum(&G__G__GPadLN_TClassTree), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAs",579,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"C - - 10 '\"\"' filename C - 'Option_t' 10 '\"\"' option", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetClasses",1018,G__G__GPad_186_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"this\"' classes C - 'Option_t' 10 '\"ID\"' option", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("ShowClassesUsedBy",1723,G__G__GPad_186_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"this\"' classes", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("ShowClassesUsing",1653,G__G__GPad_186_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"this\"' classes", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetClassTree",1202,G__G__GPad_186_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TClassTree' - 0 - classtree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowLinks",930,G__G__GPad_186_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"HMR\"' option", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__GPad_186_0_14, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPaveClass::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_186_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPaveClass::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_186_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPaveClass::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_186_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPaveClass::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_186_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_186_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPaveClass::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_186_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPaveClass::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_186_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPaveClass::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_186_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPaveClass::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TPaveClass", 1108, G__G__GPad_186_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__GPad_186_0_27, (int) ('u'), G__get_linked_tagnum(&G__G__GPadLN_TPaveClass), -1, 1, 1, 1, 1, 0, "u 'TPaveClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSlider(void) {
   /* TSlider */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider));
   G__memfunc_setup("TSlider",695,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GPadLN_TSlider), -1, 0, 1, 1, 4, 0, "u 'TSlider' - 11 - org", "no copy, use TObject::Clone()", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GPadLN_TSlider), -1, 1, 1, 1, 4, 0, "u 'TSlider' - 11 - rhs", "idem", (void*) NULL, 0);
   G__memfunc_setup("TSlider",695,G__G__GPad_191_0_3, 105, G__get_linked_tagnum(&G__G__GPadLN_TSlider), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSlider",695,G__G__GPad_191_0_4, 105, G__get_linked_tagnum(&G__G__GPadLN_TSlider), -1, 0, 9, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2 "
"s - 'Color_t' 0 '16' color s - 'Short_t' 0 '2' bordersize "
"s - 'Short_t' 0 '-1' bordermode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObject",887,G__G__GPad_191_0_5, 85, G__get_linked_tagnum(&G__G__GPadLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinimum",1020,G__G__GPad_191_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaximum",1022,G__G__GPad_191_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMethod",897,G__G__GPad_191_0_8, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMethod",909,G__G__GPad_191_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetObject",899,G__G__GPad_191_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 '0' obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinimum",1032,G__G__GPad_191_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0' min", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMaximum",1034,G__G__GPad_191_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '1' max", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRange",793,G__G__GPad_191_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '0' xmin d - 'Double_t' 0 '1' xmax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__GPad_191_0_16, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSlider::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_191_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSlider::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_191_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSlider::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_191_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSlider::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_191_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_191_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSlider::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_191_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSlider::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_191_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSlider::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_191_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSlider::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSlider", 821, G__G__GPad_191_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSliderBox(void) {
   /* TSliderBox */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox));
   G__memfunc_setup("TSliderBox",992,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GPadLN_TSliderBox), -1, 0, 1, 1, 2, 0, "u 'TSliderBox' - 11 - sb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GPadLN_TSliderBox), -1, 1, 1, 1, 2, 0, "u 'TSliderBox' - 11 - sb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSliderBox",992,G__G__GPad_192_0_3, 105, G__get_linked_tagnum(&G__G__GPadLN_TSliderBox), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSliderBox",992,G__G__GPad_192_0_4, 105, G__get_linked_tagnum(&G__G__GPadLN_TSliderBox), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2 "
"s - 'Color_t' 0 '18' color s - 'Short_t' 0 '2' bordersize "
"s - 'Short_t' 0 '-1' bordermode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSlider",911,G__G__GPad_192_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSlider' - 0 - slider", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__GPad_192_0_8, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSliderBox::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_192_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSliderBox::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_192_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSliderBox::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_192_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSliderBox::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_192_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_192_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSliderBox::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_192_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSliderBox::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_192_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSliderBox::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_192_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSliderBox::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSliderBox", 1118, G__G__GPad_192_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTViewer3DPad(void) {
   /* TViewer3DPad */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad));
   G__memfunc_setup("TViewer3DPad",1106,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad), -1, 0, 1, 1, 4, 0, "u 'TViewer3DPad' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad), -1, 1, 1, 1, 4, 0, "u 'TViewer3DPad' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TViewer3DPad",1106,G__G__GPad_195_0_3, 105, G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad), -1, 0, 1, 1, 1, 0, "u 'TVirtualPad' - 1 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreferLocalFrame",1594,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BeginScene",979,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildingScene",1308,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndScene",773,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddObject",864,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'TBuffer3D' - 11 - buffer G - 'Bool_t' 0 '0' addChildren", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddObject",864,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - placedID u 'TBuffer3D' - 11 - buffer "
"G - 'Bool_t' 0 '0' addChildren", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OpenComposite",1349,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TBuffer3D' - 11 - buffer G - 'Bool_t' 0 '0' addChildren", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseComposite",1449,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddCompositeOp",1403,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - operation", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__GPad_195_0_13, 85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TViewer3DPad::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_195_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TViewer3DPad::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_195_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TViewer3DPad::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_195_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TViewer3DPad::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__GPadLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_195_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_195_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TViewer3DPad::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_195_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TViewer3DPad::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_195_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TViewer3DPad::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_195_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TViewer3DPad::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TViewer3DPad", 1232, G__G__GPad_195_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__GPad() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__GPad() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__GPad() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__GPadLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TBrowser = { "TBrowser" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TAttCanvas = { "TAttCanvas" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TAttPad = { "TAttPad" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TAttText = { "TAttText" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_ECursor = { "ECursor" , 101 , -1 };
G__linked_taginfo G__G__GPadLN_EEventType = { "EEventType" , 101 , -1 };
G__linked_taginfo G__G__GPadLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TAxis = { "TAxis" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TObjLink = { "TObjLink" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TView = { "TView" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TCanvasImp = { "TCanvasImp" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TFrame = { "TFrame" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TBox = { "TBox" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TVirtualViewer3D = { "TVirtualViewer3D" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TVirtualPad = { "TVirtualPad" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TVirtualPadPainter = { "TVirtualPadPainter" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TLegend = { "TLegend" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TPad = { "TPad" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TPadcLcLdA = { "TPad::$" , 101 , -1 };
G__linked_taginfo G__G__GPadLN_TButton = { "TButton" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TContextMenu = { "TContextMenu" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TControlBar = { "TControlBar" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TCanvascLcLdA = { "TCanvas::$" , 101 , -1 };
G__linked_taginfo G__G__GPadLN_TObjString = { "TObjString" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TClassTree = { "TClassTree" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TArc = { "TArc" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TLine = { "TLine" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TText = { "TText" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TColorWheel = { "TColorWheel" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TControlBarButton = { "TControlBarButton" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TControlBarButtoncLcLdA = { "TControlBarButton::$" , 101 , -1 };
G__linked_taginfo G__G__GPadLN_TControlBarImp = { "TControlBarImp" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TControlBarcLcLdA = { "TControlBar::$" , 101 , -1 };
G__linked_taginfo G__G__GPadLN_TDialogCanvas = { "TDialogCanvas" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TGroupButton = { "TGroupButton" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TInspectCanvas = { "TInspectCanvas" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TVirtualPadPaintercLcLEBoxMode = { "TVirtualPadPainter::EBoxMode" , 101 , -1 };
G__linked_taginfo G__G__GPadLN_TVirtualPadPaintercLcLETextMode = { "TVirtualPadPainter::ETextMode" , 101 , -1 };
G__linked_taginfo G__G__GPadLN_TPadPainter = { "TPadPainter" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TPave = { "TPave" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TPaveLabel = { "TPaveLabel" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TPaveClass = { "TPaveClass" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TWbox = { "TWbox" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TSlider = { "TSlider" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TSliderBox = { "TSliderBox" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TBuffer3D = { "TBuffer3D" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TViewer3DPad = { "TViewer3DPad" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__GPad() {
  G__G__GPadLN_TClass.tagnum = -1 ;
  G__G__GPadLN_TBuffer.tagnum = -1 ;
  G__G__GPadLN_TMemberInspector.tagnum = -1 ;
  G__G__GPadLN_TObject.tagnum = -1 ;
  G__G__GPadLN_TNamed.tagnum = -1 ;
  G__G__GPadLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__GPadLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__GPadLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GPadLN_TList.tagnum = -1 ;
  G__G__GPadLN_TBrowser.tagnum = -1 ;
  G__G__GPadLN_TString.tagnum = -1 ;
  G__G__GPadLN_TAttCanvas.tagnum = -1 ;
  G__G__GPadLN_TAttPad.tagnum = -1 ;
  G__G__GPadLN_TAttLine.tagnum = -1 ;
  G__G__GPadLN_TAttFill.tagnum = -1 ;
  G__G__GPadLN_TAttText.tagnum = -1 ;
  G__G__GPadLN_ECursor.tagnum = -1 ;
  G__G__GPadLN_EEventType.tagnum = -1 ;
  G__G__GPadLN_TQObject.tagnum = -1 ;
  G__G__GPadLN_TAxis.tagnum = -1 ;
  G__G__GPadLN_TObjLink.tagnum = -1 ;
  G__G__GPadLN_TView.tagnum = -1 ;
  G__G__GPadLN_TCanvas.tagnum = -1 ;
  G__G__GPadLN_TCanvasImp.tagnum = -1 ;
  G__G__GPadLN_TH1F.tagnum = -1 ;
  G__G__GPadLN_TFrame.tagnum = -1 ;
  G__G__GPadLN_TBox.tagnum = -1 ;
  G__G__GPadLN_TVirtualViewer3D.tagnum = -1 ;
  G__G__GPadLN_TVirtualPad.tagnum = -1 ;
  G__G__GPadLN_TVirtualPadPainter.tagnum = -1 ;
  G__G__GPadLN_TLegend.tagnum = -1 ;
  G__G__GPadLN_TPad.tagnum = -1 ;
  G__G__GPadLN_TPadcLcLdA.tagnum = -1 ;
  G__G__GPadLN_TButton.tagnum = -1 ;
  G__G__GPadLN_TContextMenu.tagnum = -1 ;
  G__G__GPadLN_TControlBar.tagnum = -1 ;
  G__G__GPadLN_TCanvascLcLdA.tagnum = -1 ;
  G__G__GPadLN_TObjString.tagnum = -1 ;
  G__G__GPadLN_TClassTree.tagnum = -1 ;
  G__G__GPadLN_TArc.tagnum = -1 ;
  G__G__GPadLN_TLine.tagnum = -1 ;
  G__G__GPadLN_TText.tagnum = -1 ;
  G__G__GPadLN_TGraph.tagnum = -1 ;
  G__G__GPadLN_TColorWheel.tagnum = -1 ;
  G__G__GPadLN_TControlBarButton.tagnum = -1 ;
  G__G__GPadLN_TControlBarButtoncLcLdA.tagnum = -1 ;
  G__G__GPadLN_TControlBarImp.tagnum = -1 ;
  G__G__GPadLN_TControlBarcLcLdA.tagnum = -1 ;
  G__G__GPadLN_TDialogCanvas.tagnum = -1 ;
  G__G__GPadLN_TGroupButton.tagnum = -1 ;
  G__G__GPadLN_TInspectCanvas.tagnum = -1 ;
  G__G__GPadLN_TVirtualPadPaintercLcLEBoxMode.tagnum = -1 ;
  G__G__GPadLN_TVirtualPadPaintercLcLETextMode.tagnum = -1 ;
  G__G__GPadLN_TPadPainter.tagnum = -1 ;
  G__G__GPadLN_TPave.tagnum = -1 ;
  G__G__GPadLN_TPaveLabel.tagnum = -1 ;
  G__G__GPadLN_TPaveClass.tagnum = -1 ;
  G__G__GPadLN_TWbox.tagnum = -1 ;
  G__G__GPadLN_TSlider.tagnum = -1 ;
  G__G__GPadLN_TSliderBox.tagnum = -1 ;
  G__G__GPadLN_TBuffer3D.tagnum = -1 ;
  G__G__GPadLN_TViewer3DPad.tagnum = -1 ;
  G__G__GPadLN_TSeqCollection.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__GPad() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TList);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TBrowser);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TString);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas),sizeof(TAttCanvas),-1,263424,"Canvas attributes",G__setup_memvarTAttCanvas,G__setup_memfuncTAttCanvas);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TAttPad);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TAttText);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_ECursor);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_EEventType);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TQObject);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TAxis);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TObjLink);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TView),sizeof(TView),-1,325457,"3-D View abstract interface for 3-D views",G__setup_memvarTView,G__setup_memfuncTView);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas),sizeof(TCanvas),-1,130816,"Graphics canvas",G__setup_memvarTCanvas,G__setup_memfuncTCanvas);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TCanvasImp);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TH1F);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TFrame);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TBox);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TVirtualViewer3D);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TVirtualPad);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TVirtualPadPainter);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TLegend);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad),sizeof(TPad),-1,130816,"A Graphics pad",G__setup_memvarTPad,G__setup_memfuncTPad);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TPadcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),sizeof(TButton),-1,327424,"A user interface button.",G__setup_memvarTButton,G__setup_memfuncTButton);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TContextMenu);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBar),sizeof(TControlBar),-1,324864,"Control bar",G__setup_memvarTControlBar,G__setup_memfuncTControlBar);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TCanvascLcLdA);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TObjString);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TClassTree),sizeof(TClassTree),-1,128256,"Manager class to draw classes inheritance tree and relations",G__setup_memvarTClassTree,G__setup_memfuncTClassTree);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TArc);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TLine);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TText);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TGraph);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TColorWheel),sizeof(TColorWheel),-1,327424,"The ROOT Color Wheel",G__setup_memvarTColorWheel,G__setup_memfuncTColorWheel);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton),sizeof(TControlBarButton),-1,324864,"The Control bar button",G__setup_memvarTControlBarButton,G__setup_memfuncTControlBarButton);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TControlBarButtoncLcLdA);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TControlBarImp);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TControlBarcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),sizeof(TDialogCanvas),-1,327424,"A specialized canvas to set attributes.",G__setup_memvarTDialogCanvas,G__setup_memfuncTDialogCanvas);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),sizeof(TGroupButton),-1,327424,"A user interface button in a group of buttons.",G__setup_memvarTGroupButton,G__setup_memfuncTGroupButton);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),sizeof(TInspectCanvas),-1,324864,"The canvas Inspector",G__setup_memvarTInspectCanvas,G__setup_memfuncTInspectCanvas);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TVirtualPadPaintercLcLEBoxMode);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TVirtualPadPaintercLcLETextMode);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TPadPainter),sizeof(TPadPainter),-1,2816,"Abstract interface for painting in TPad",G__setup_memvarTPadPainter,G__setup_memfuncTPadPainter);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TPave);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TPaveLabel);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),sizeof(TPaveClass),-1,325376,"A TPaveLabel specialized for TClassTree objects",G__setup_memvarTPaveClass,G__setup_memfuncTPaveClass);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TWbox);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider),sizeof(TSlider),-1,327424,"A user interface slider.",G__setup_memvarTSlider,G__setup_memfuncTSlider);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox),sizeof(TSliderBox),-1,327424,"The moving box of a TSlider",G__setup_memvarTSliderBox,G__setup_memfuncTSliderBox);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TBuffer3D);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad),sizeof(TViewer3DPad),-1,65024,"A 3D Viewer painter for TPads",G__setup_memvarTViewer3DPad,G__setup_memfuncTViewer3DPad);
   G__get_linked_tagnum_fwd(&G__G__GPadLN_TSeqCollection);
}
extern "C" void G__cpp_setupG__GPad(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__GPad()");
  G__set_cpp_environmentG__GPad();
  G__cpp_setup_tagtableG__GPad();

  G__cpp_setup_inheritanceG__GPad();

  G__cpp_setup_typetableG__GPad();

  G__cpp_setup_memvarG__GPad();

  G__cpp_setup_memfuncG__GPad();
  G__cpp_setup_globalG__GPad();
  G__cpp_setup_funcG__GPad();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__GPad();
  return;
}
class G__cpp_setup_initG__GPad {
  public:
    G__cpp_setup_initG__GPad() { G__add_setup_func("G__GPad",(G__incsetup)(&G__cpp_setupG__GPad)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__GPad() { G__remove_setup_func("G__GPad"); }
};
G__cpp_setup_initG__GPad G__cpp_setup_initializerG__GPad;

