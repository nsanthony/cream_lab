//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:53:32 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__Proofx.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TXHandler_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TXHandler(void *p = 0);
   static void *newArray_TXHandler(Long_t size, void *p);
   static void delete_TXHandler(void *p);
   static void deleteArray_TXHandler(void *p);
   static void destruct_TXHandler(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TXHandler*)
   {
      ::TXHandler *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TXHandler >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TXHandler", ::TXHandler::Class_Version(), "proof/proofx/inc/TXHandler.h", 30,
                  typeid(::TXHandler), DefineBehavior(ptr, ptr),
                  &::TXHandler::Dictionary, isa_proxy, 0,
                  sizeof(::TXHandler) );
      instance.SetNew(&new_TXHandler);
      instance.SetNewArray(&newArray_TXHandler);
      instance.SetDelete(&delete_TXHandler);
      instance.SetDeleteArray(&deleteArray_TXHandler);
      instance.SetDestructor(&destruct_TXHandler);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TXHandler*)
   {
      return GenerateInitInstanceLocal((::TXHandler*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TXHandler*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TXSocket_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TXSocket(void *p);
   static void deleteArray_TXSocket(void *p);
   static void destruct_TXSocket(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TXSocket*)
   {
      ::TXSocket *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TXSocket >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TXSocket", ::TXSocket::Class_Version(), "proof/proofx/inc/TXSocket.h", 74,
                  typeid(::TXSocket), DefineBehavior(ptr, ptr),
                  &::TXSocket::Dictionary, isa_proxy, 0,
                  sizeof(::TXSocket) );
      instance.SetDelete(&delete_TXSocket);
      instance.SetDeleteArray(&deleteArray_TXSocket);
      instance.SetDestructor(&destruct_TXSocket);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TXSocket*)
   {
      return GenerateInitInstanceLocal((::TXSocket*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TXSocket*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TXProofMgr_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TXProofMgr(void *p);
   static void deleteArray_TXProofMgr(void *p);
   static void destruct_TXProofMgr(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TXProofMgr*)
   {
      ::TXProofMgr *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TXProofMgr >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TXProofMgr", ::TXProofMgr::Class_Version(), "proof/proofx/inc/TXProofMgr.h", 46,
                  typeid(::TXProofMgr), DefineBehavior(ptr, ptr),
                  &::TXProofMgr::Dictionary, isa_proxy, 0,
                  sizeof(::TXProofMgr) );
      instance.SetDelete(&delete_TXProofMgr);
      instance.SetDeleteArray(&deleteArray_TXProofMgr);
      instance.SetDestructor(&destruct_TXProofMgr);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TXProofMgr*)
   {
      return GenerateInitInstanceLocal((::TXProofMgr*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TXProofMgr*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TXProofServ_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TXProofServ(void *p);
   static void deleteArray_TXProofServ(void *p);
   static void destruct_TXProofServ(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TXProofServ*)
   {
      ::TXProofServ *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TXProofServ >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TXProofServ", ::TXProofServ::Class_Version(), "proof/proofx/inc/TXProofServ.h", 34,
                  typeid(::TXProofServ), DefineBehavior(ptr, ptr),
                  &::TXProofServ::Dictionary, isa_proxy, 0,
                  sizeof(::TXProofServ) );
      instance.SetDelete(&delete_TXProofServ);
      instance.SetDeleteArray(&deleteArray_TXProofServ);
      instance.SetDestructor(&destruct_TXProofServ);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TXProofServ*)
   {
      return GenerateInitInstanceLocal((::TXProofServ*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TXProofServ*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TXSocketHandler_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TXSocketHandler(void *p);
   static void deleteArray_TXSocketHandler(void *p);
   static void destruct_TXSocketHandler(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TXSocketHandler*)
   {
      ::TXSocketHandler *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TXSocketHandler >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TXSocketHandler", ::TXSocketHandler::Class_Version(), "proof/proofx/inc/TXSocketHandler.h", 32,
                  typeid(::TXSocketHandler), DefineBehavior(ptr, ptr),
                  &::TXSocketHandler::Dictionary, isa_proxy, 0,
                  sizeof(::TXSocketHandler) );
      instance.SetDelete(&delete_TXSocketHandler);
      instance.SetDeleteArray(&deleteArray_TXSocketHandler);
      instance.SetDestructor(&destruct_TXSocketHandler);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TXSocketHandler*)
   {
      return GenerateInitInstanceLocal((::TXSocketHandler*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TXSocketHandler*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TXSlave_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TXSlave(void *p);
   static void deleteArray_TXSlave(void *p);
   static void destruct_TXSlave(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TXSlave*)
   {
      ::TXSlave *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TXSlave >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TXSlave", ::TXSlave::Class_Version(), "proof/proofx/inc/TXSlave.h", 36,
                  typeid(::TXSlave), DefineBehavior(ptr, ptr),
                  &::TXSlave::Dictionary, isa_proxy, 0,
                  sizeof(::TXSlave) );
      instance.SetDelete(&delete_TXSlave);
      instance.SetDeleteArray(&deleteArray_TXSlave);
      instance.SetDestructor(&destruct_TXSlave);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TXSlave*)
   {
      return GenerateInitInstanceLocal((::TXSlave*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TXSlave*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TXUnixSocket_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TXUnixSocket(void *p);
   static void deleteArray_TXUnixSocket(void *p);
   static void destruct_TXUnixSocket(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TXUnixSocket*)
   {
      ::TXUnixSocket *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TXUnixSocket >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TXUnixSocket", ::TXUnixSocket::Class_Version(), "proof/proofx/inc/TXUnixSocket.h", 31,
                  typeid(::TXUnixSocket), DefineBehavior(ptr, ptr),
                  &::TXUnixSocket::Dictionary, isa_proxy, 0,
                  sizeof(::TXUnixSocket) );
      instance.SetDelete(&delete_TXUnixSocket);
      instance.SetDeleteArray(&deleteArray_TXUnixSocket);
      instance.SetDestructor(&destruct_TXUnixSocket);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TXUnixSocket*)
   {
      return GenerateInitInstanceLocal((::TXUnixSocket*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TXUnixSocket*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TXHandler::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXHandler::Class_Name()
{
   return "TXHandler";
}

//______________________________________________________________________________
const char *TXHandler::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXHandler*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXHandler::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXHandler*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXHandler::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXHandler*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXHandler::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXHandler*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TXSocket::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXSocket::Class_Name()
{
   return "TXSocket";
}

//______________________________________________________________________________
const char *TXSocket::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXSocket*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXSocket::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXSocket*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXSocket::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXSocket*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXSocket::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXSocket*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TXProofMgr::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXProofMgr::Class_Name()
{
   return "TXProofMgr";
}

//______________________________________________________________________________
const char *TXProofMgr::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXProofMgr*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXProofMgr::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXProofMgr*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXProofMgr::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXProofMgr*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXProofMgr::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXProofMgr*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TXProofServ::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXProofServ::Class_Name()
{
   return "TXProofServ";
}

//______________________________________________________________________________
const char *TXProofServ::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXProofServ*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXProofServ::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXProofServ*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXProofServ::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXProofServ*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXProofServ::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXProofServ*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TXSocketHandler::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXSocketHandler::Class_Name()
{
   return "TXSocketHandler";
}

//______________________________________________________________________________
const char *TXSocketHandler::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXSocketHandler*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXSocketHandler::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXSocketHandler*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXSocketHandler::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXSocketHandler*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXSocketHandler::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXSocketHandler*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TXSlave::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXSlave::Class_Name()
{
   return "TXSlave";
}

//______________________________________________________________________________
const char *TXSlave::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXSlave*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXSlave::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXSlave*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXSlave::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXSlave*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXSlave::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXSlave*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TXUnixSocket::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXUnixSocket::Class_Name()
{
   return "TXUnixSocket";
}

//______________________________________________________________________________
const char *TXUnixSocket::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXUnixSocket*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXUnixSocket::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXUnixSocket*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXUnixSocket::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXUnixSocket*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXUnixSocket::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXUnixSocket*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TXHandler::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXHandler.

   ::Error("TXHandler::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TXHandler::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXHandler.
      TClass *R__cl = ::TXHandler::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TXHandler(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TXHandler : new ::TXHandler;
   }
   static void *newArray_TXHandler(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TXHandler[nElements] : new ::TXHandler[nElements];
   }
   // Wrapper around operator delete
   static void delete_TXHandler(void *p) {
      delete ((::TXHandler*)p);
   }
   static void deleteArray_TXHandler(void *p) {
      delete [] ((::TXHandler*)p);
   }
   static void destruct_TXHandler(void *p) {
      typedef ::TXHandler current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXHandler

//______________________________________________________________________________
void TXProofMgr::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXProofMgr.

   TProofMgr::Streamer(R__b);
   TXHandler::Streamer(R__b);
}

//______________________________________________________________________________
void TXProofMgr::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXProofMgr.
      TClass *R__cl = ::TXProofMgr::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSocket", &fSocket);
      TProofMgr::ShowMembers(R__insp, R__parent);
      TXHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TXProofMgr(void *p) {
      delete ((::TXProofMgr*)p);
   }
   static void deleteArray_TXProofMgr(void *p) {
      delete [] ((::TXProofMgr*)p);
   }
   static void destruct_TXProofMgr(void *p) {
      typedef ::TXProofMgr current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXProofMgr

//______________________________________________________________________________
void TXSlave::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXSlave.

   TSlave::Streamer(R__b);
   TXHandler::Streamer(R__b);
}

//______________________________________________________________________________
void TXSlave::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXSlave.
      TClass *R__cl = ::TXSlave::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fValid", &fValid);
      R__insp.Inspect(R__cl, R__parent, "*fIntHandler", &fIntHandler);
      TSlave::ShowMembers(R__insp, R__parent);
      TXHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TXSlave(void *p) {
      delete ((::TXSlave*)p);
   }
   static void deleteArray_TXSlave(void *p) {
      delete [] ((::TXSlave*)p);
   }
   static void destruct_TXSlave(void *p) {
      typedef ::TXSlave current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXSlave

//______________________________________________________________________________
void TXSocket::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXSocket.

   TSocket::Streamer(R__b);
}

//______________________________________________________________________________
void TXSocket::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXSocket.
      TClass *R__cl = ::TXSocket::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMode", &fMode);
      R__insp.Inspect(R__cl, R__parent, "fSendOpt", &fSendOpt);
      R__insp.Inspect(R__cl, R__parent, "fSessionID", &fSessionID);
      R__insp.Inspect(R__cl, R__parent, "fUser", &fUser);
      fUser.ShowMembers(R__insp, strcat(R__parent,"fUser.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fHost", &fHost);
      fHost.ShowMembers(R__insp, strcat(R__parent,"fHost.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPort", &fPort);
      R__insp.Inspect(R__cl, R__parent, "fLogLevel", &fLogLevel);
      R__insp.Inspect(R__cl, R__parent, "fBuffer", &fBuffer);
      fBuffer.ShowMembers(R__insp, strcat(R__parent,"fBuffer.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fReference", &fReference);
      R__insp.Inspect(R__cl, R__parent, "*fHandler", &fHandler);
      R__insp.Inspect(R__cl, R__parent, "*fConn", &fConn);
      R__insp.Inspect(R__cl, R__parent, "fASem", &fASem);
      fASem.ShowMembers(R__insp, strcat(R__parent,"fASem.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fAMtx", &fAMtx);
      R__insp.Inspect(R__cl, R__parent, "fAQue", (void*)&fAQue);
      ::ROOT::GenericShowMembers("list<TXSockBuf*>", (void*)&fAQue, R__insp, strcat(R__parent,"fAQue."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fByteLeft", &fByteLeft);
      R__insp.Inspect(R__cl, R__parent, "fByteCur", &fByteCur);
      R__insp.Inspect(R__cl, R__parent, "*fBufCur", &fBufCur);
      R__insp.Inspect(R__cl, R__parent, "*fIMtx", &fIMtx);
      R__insp.Inspect(R__cl, R__parent, "fILev", &fILev);
      R__insp.Inspect(R__cl, R__parent, "fIForward", &fIForward);
      R__insp.Inspect(R__cl, R__parent, "fPid", &fPid);
      R__insp.Inspect(R__cl, R__parent, "fDontTimeout", &fDontTimeout);
      R__insp.Inspect(R__cl, R__parent, "fRDInterrupt", &fRDInterrupt);
      R__insp.Inspect(R__cl, R__parent, "fXrdProofdVersion", &fXrdProofdVersion);
      TSocket::ShowMembers(R__insp, R__parent);
      ::ROOT::GenericShowMembers("XrdClientAbsUnsolMsgHandler", ( ::XrdClientAbsUnsolMsgHandler *) (this ), R__insp, R__parent, false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TXSocket(void *p) {
      delete ((::TXSocket*)p);
   }
   static void deleteArray_TXSocket(void *p) {
      delete [] ((::TXSocket*)p);
   }
   static void destruct_TXSocket(void *p) {
      typedef ::TXSocket current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXSocket

//______________________________________________________________________________
void TXSocketHandler::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXSocketHandler.

   TFileHandler::Streamer(R__b);
}

//______________________________________________________________________________
void TXSocketHandler::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXSocketHandler.
      TClass *R__cl = ::TXSocketHandler::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fHandler", &fHandler);
      R__insp.Inspect(R__cl, R__parent, "*fInputSock", &fInputSock);
      TFileHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TXSocketHandler(void *p) {
      delete ((::TXSocketHandler*)p);
   }
   static void deleteArray_TXSocketHandler(void *p) {
      delete [] ((::TXSocketHandler*)p);
   }
   static void destruct_TXSocketHandler(void *p) {
      typedef ::TXSocketHandler current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXSocketHandler

//______________________________________________________________________________
void TXProofServ::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXProofServ.

   TProofServ::Streamer(R__b);
   TXHandler::Streamer(R__b);
}

//______________________________________________________________________________
void TXProofServ::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXProofServ.
      TClass *R__cl = ::TXProofServ::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fInterruptHandler", &fInterruptHandler);
      R__insp.Inspect(R__cl, R__parent, "*fInputHandler", &fInputHandler);
      R__insp.Inspect(R__cl, R__parent, "fSockPath", &fSockPath);
      fSockPath.ShowMembers(R__insp, strcat(R__parent,"fSockPath.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTerminated", &fTerminated);
      TProofServ::ShowMembers(R__insp, R__parent);
      TXHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TXProofServ(void *p) {
      delete ((::TXProofServ*)p);
   }
   static void deleteArray_TXProofServ(void *p) {
      delete [] ((::TXProofServ*)p);
   }
   static void destruct_TXProofServ(void *p) {
      typedef ::TXProofServ current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXProofServ

//______________________________________________________________________________
void TXUnixSocket::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXUnixSocket.

   TXSocket::Streamer(R__b);
}

//______________________________________________________________________________
void TXUnixSocket::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXUnixSocket.
      TClass *R__cl = ::TXUnixSocket::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fClientIDs", (void*)&fClientIDs);
      ::ROOT::GenericShowMembers("list<Int_t>", (void*)&fClientIDs, R__insp, strcat(R__parent,"fClientIDs."),false);
      R__parent[R__ncp] = 0;
      TXSocket::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TXUnixSocket(void *p) {
      delete ((::TXUnixSocket*)p);
   }
   static void deleteArray_TXUnixSocket(void *p) {
      delete [] ((::TXUnixSocket*)p);
   }
   static void destruct_TXUnixSocket(void *p) {
      typedef ::TXUnixSocket current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXUnixSocket

/********************************************************
* proof/proofx/src/G__Proofx.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__Proofx();

extern "C" void G__set_cpp_environmentG__Proofx() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TXHandler.h");
  G__add_compiledheader("TXProofMgr.h");
  G__add_compiledheader("TXProofServ.h");
  G__add_compiledheader("TXSlave.h");
  G__add_compiledheader("TXSocket.h");
  G__add_compiledheader("TXSocketHandler.h");
  G__add_compiledheader("TXUnixSocket.h");
  G__cpp_reset_tagtableG__Proofx();
}
#include <new>
extern "C" int G__cpp_dllrevG__Proofx() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TXHandler */
static int G__G__Proofx_95_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TXHandler* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXHandler[n];
     } else {
       p = new((void*) gvp) TXHandler[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXHandler;
     } else {
       p = new((void*) gvp) TXHandler;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofxLN_TXHandler));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_95_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((TXHandler*) G__getstructoffset())->HandleInput((const void*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TXHandler*) G__getstructoffset())->HandleInput());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_95_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((TXHandler*) G__getstructoffset())->HandleError((const void*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TXHandler*) G__getstructoffset())->HandleError());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_95_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TXHandler::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_95_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXHandler::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_95_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TXHandler::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_95_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TXHandler::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_95_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TXHandler*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_95_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXHandler*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_95_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXHandler*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_95_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXHandler*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_95_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXHandler::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_95_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXHandler::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_95_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXHandler::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_95_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXHandler::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proofx_95_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TXHandler* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TXHandler(*(TXHandler*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofxLN_TXHandler));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXHandler G__TTXHandler;
static int G__G__Proofx_95_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TXHandler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TXHandler*) (soff+(sizeof(TXHandler)*i)))->~G__TTXHandler();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TXHandler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TXHandler*) (soff))->~G__TTXHandler();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proofx_95_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TXHandler* dest = (TXHandler*) G__getstructoffset();
   *dest = *(TXHandler*) libp->para[0].ref;
   const TXHandler& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXSocket */
static int G__G__Proofx_129_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TXSocket* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXSocket(
(const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Char_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (TXHandler*) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TXSocket(
(const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Char_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (TXHandler*) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXSocket(
(const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Char_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TXSocket(
(const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Char_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXSocket(
(const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Char_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TXSocket(
(const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Char_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXSocket(
(const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Char_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TXSocket(
(const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Char_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXSocket(
(const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TXSocket(
(const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXSocket((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TXSocket((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXSocket((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TXSocket((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofxLN_TXSocket));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TXSocket* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TXSocket(*(TXSocket*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TXSocket(*(TXSocket*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofxLN_TXSocket));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TXSocket& obj = ((TXSocket*) G__getstructoffset())->operator=(*(TXSocket*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((TXSocket*) G__getstructoffset())->Create((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TXSocket*) G__getstructoffset())->Create());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TXSocket*) G__getstructoffset())->DisconnectSession((Int_t) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TXSocket*) G__getstructoffset())->DisconnectSession((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TXSocket*) G__getstructoffset())->GetClientID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TXSocket*) G__getstructoffset())->GetClientIDSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TXSocket*) G__getstructoffset())->GetLogConnID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TXSocket*) G__getstructoffset())->GetOpenError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TXSocket*) G__getstructoffset())->GetServType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TXSocket*) G__getstructoffset())->GetSessionID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TXSocket*) G__getstructoffset())->GetXrdProofdVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TXSocket*) G__getstructoffset())->IsServProofd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXSocket*) G__getstructoffset())->RemoveClientID();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXSocket*) G__getstructoffset())->SetClientID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXSocket*) G__getstructoffset())->SetSendOpt((ESendRecvOptions) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXSocket*) G__getstructoffset())->SetSessionID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) ((TXSocket*) G__getstructoffset())->SendCoordinator((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Int_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) ((TXSocket*) G__getstructoffset())->SendCoordinator((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Int_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((TXSocket*) G__getstructoffset())->SendCoordinator((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((TXSocket*) G__getstructoffset())->SendCoordinator((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((TXSocket*) G__getstructoffset())->SendCoordinator((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TXSocket*) G__getstructoffset())->SendCoordinator((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TXSocket*) G__getstructoffset())->SendInterrupt((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TXSocket*) G__getstructoffset())->GetInterrupt(*(Bool_t*) G__Boolref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXSocket*) G__getstructoffset())->SendUrgent((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXSocket*) G__getstructoffset())->SetInterrupt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TXSocket*) G__getstructoffset())->Flush());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((TXSocket*) G__getstructoffset())->Ping((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TXSocket*) G__getstructoffset())->Ping());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXSocket*) G__getstructoffset())->RemoteTouch();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXSocket*) G__getstructoffset())->CtrlC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXSocket*) G__getstructoffset())->DisableTimeout();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXSocket*) G__getstructoffset())->EnableTimeout();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TXSocket::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXSocket::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TXSocket::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TXSocket::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXSocket*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXSocket::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXSocket::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXSocket::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_129_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXSocket::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXSocket G__TTXSocket;
static int G__G__Proofx_129_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TXSocket*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TXSocket*) (soff+(sizeof(TXSocket)*i)))->~G__TTXSocket();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TXSocket*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TXSocket*) (soff))->~G__TTXSocket();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXProofMgr */
static int G__G__Proofx_176_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TXProofMgr* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXProofMgr(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TXProofMgr(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXProofMgr((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TXProofMgr((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXProofMgr((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TXProofMgr((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofxLN_TXProofMgr));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_176_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TXProofMgr::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_176_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXProofMgr::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_176_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TXProofMgr::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_176_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TXProofMgr::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_176_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXProofMgr*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_176_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXProofMgr::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_176_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXProofMgr::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_176_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXProofMgr::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_176_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXProofMgr::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXProofMgr G__TTXProofMgr;
static int G__G__Proofx_176_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TXProofMgr*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TXProofMgr*) (soff+(sizeof(TXProofMgr)*i)))->~G__TTXProofMgr();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TXProofMgr*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TXProofMgr*) (soff))->~G__TTXProofMgr();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXProofServ */
static int G__G__Proofx_206_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TXProofServ* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXProofServ(
(Int_t*) G__int(libp->para[0]), (char**) G__int(libp->para[1])
, (FILE*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TXProofServ(
(Int_t*) G__int(libp->para[0]), (char**) G__int(libp->para[1])
, (FILE*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXProofServ((Int_t*) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TXProofServ((Int_t*) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofxLN_TXProofServ));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_206_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TXProofServ::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_206_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXProofServ::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_206_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TXProofServ::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_206_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TXProofServ::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_206_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXProofServ*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_206_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXProofServ::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_206_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXProofServ::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_206_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXProofServ::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_206_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXProofServ::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXProofServ G__TTXProofServ;
static int G__G__Proofx_206_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TXProofServ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TXProofServ*) (soff+(sizeof(TXProofServ)*i)))->~G__TTXProofServ();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TXProofServ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TXProofServ*) (soff))->~G__TTXProofServ();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXSocketHandler */
static int G__G__Proofx_213_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) TXSocketHandler::GetSocketHandler((TFileHandler*) G__int(libp->para[0]), (TSocket*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) TXSocketHandler::GetSocketHandler((TFileHandler*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) TXSocketHandler::GetSocketHandler());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_213_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TXSocketHandler::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_213_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXSocketHandler::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_213_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TXSocketHandler::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_213_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TXSocketHandler::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_213_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXSocketHandler*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_213_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXSocketHandler::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_213_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXSocketHandler::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_213_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXSocketHandler::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_213_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXSocketHandler::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXSocketHandler G__TTXSocketHandler;
static int G__G__Proofx_213_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TXSocketHandler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TXSocketHandler*) (soff+(sizeof(TXSocketHandler)*i)))->~G__TTXSocketHandler();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TXSocketHandler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TXSocketHandler*) (soff))->~G__TTXSocketHandler();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXSlave */
static int G__G__Proofx_216_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TXSlave* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TXSlave(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (TProof*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7]));
   } else {
     p = new((void*) gvp) TXSlave(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (TProof*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofxLN_TXSlave));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_216_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TXSlave*) G__getstructoffset())->SetInterruptHandler((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TXSlave*) G__getstructoffset())->SetInterruptHandler();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_216_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TXSlave::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_216_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXSlave::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_216_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TXSlave::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_216_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TXSlave::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_216_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXSlave*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_216_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXSlave::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_216_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXSlave::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_216_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXSlave::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_216_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXSlave::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXSlave G__TTXSlave;
static int G__G__Proofx_216_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TXSlave*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TXSlave*) (soff+(sizeof(TXSlave)*i)))->~G__TTXSlave();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TXSlave*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TXSlave*) (soff))->~G__TTXSlave();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXUnixSocket */
static int G__G__Proofx_363_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TXUnixSocket* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXUnixSocket(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Char_t) G__int(libp->para[2]), (TXHandler*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TXUnixSocket(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Char_t) G__int(libp->para[2]), (TXHandler*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXUnixSocket(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Char_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TXUnixSocket(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Char_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXUnixSocket((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TXUnixSocket((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXUnixSocket((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TXUnixSocket((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofxLN_TXUnixSocket));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_363_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TXUnixSocket::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_363_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXUnixSocket::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_363_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TXUnixSocket::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_363_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TXUnixSocket::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_363_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXUnixSocket*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_363_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXUnixSocket::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_363_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXUnixSocket::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_363_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXUnixSocket::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proofx_363_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXUnixSocket::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXUnixSocket G__TTXUnixSocket;
static int G__G__Proofx_363_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TXUnixSocket*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TXUnixSocket*) (soff+(sizeof(TXUnixSocket)*i)))->~G__TTXUnixSocket();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TXUnixSocket*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TXUnixSocket*) (soff))->~G__TTXUnixSocket();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TXHandler */

/* TXSocket */

/* TXProofMgr */

/* TXProofServ */

/* TXSocketHandler */

/* TXSlave */

/* TXUnixSocket */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Proofx {
 public:
  G__Sizep2memfuncG__Proofx(): p(&G__Sizep2memfuncG__Proofx::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Proofx::*p)();
};

size_t G__get_sizep2memfuncG__Proofx()
{
  G__Sizep2memfuncG__Proofx a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Proofx() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofxLN_TXSocket))) {
     TXSocket *G__Lderived;
     G__Lderived=(TXSocket*)0x1000;
     {
       TSocket *G__Lpbase=(TSocket*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSocket),G__get_linked_tagnum(&G__G__ProofxLN_TSocket),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSocket),G__get_linked_tagnum(&G__G__ProofxLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSocket),G__get_linked_tagnum(&G__G__ProofxLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       XrdClientAbsUnsolMsgHandler *G__Lpbase=(XrdClientAbsUnsolMsgHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSocket),G__get_linked_tagnum(&G__G__ProofxLN_XrdClientAbsUnsolMsgHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofxLN_TXProofMgr))) {
     TXProofMgr *G__Lderived;
     G__Lderived=(TXProofMgr*)0x1000;
     {
       TProofMgr *G__Lpbase=(TProofMgr*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXProofMgr),G__get_linked_tagnum(&G__G__ProofxLN_TProofMgr),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXProofMgr),G__get_linked_tagnum(&G__G__ProofxLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXProofMgr),G__get_linked_tagnum(&G__G__ProofxLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TXHandler *G__Lpbase=(TXHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXProofMgr),G__get_linked_tagnum(&G__G__ProofxLN_TXHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofxLN_TXProofServ))) {
     TXProofServ *G__Lderived;
     G__Lderived=(TXProofServ*)0x1000;
     {
       TProofServ *G__Lpbase=(TProofServ*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXProofServ),G__get_linked_tagnum(&G__G__ProofxLN_TProofServ),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TApplication *G__Lpbase=(TApplication*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXProofServ),G__get_linked_tagnum(&G__G__ProofxLN_TApplication),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXProofServ),G__get_linked_tagnum(&G__G__ProofxLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXProofServ),G__get_linked_tagnum(&G__G__ProofxLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TXHandler *G__Lpbase=(TXHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXProofServ),G__get_linked_tagnum(&G__G__ProofxLN_TXHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofxLN_TXSocketHandler))) {
     TXSocketHandler *G__Lderived;
     G__Lderived=(TXSocketHandler*)0x1000;
     {
       TFileHandler *G__Lpbase=(TFileHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSocketHandler),G__get_linked_tagnum(&G__G__ProofxLN_TFileHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSysEvtHandler *G__Lpbase=(TSysEvtHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSocketHandler),G__get_linked_tagnum(&G__G__ProofxLN_TSysEvtHandler),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSocketHandler),G__get_linked_tagnum(&G__G__ProofxLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSocketHandler),G__get_linked_tagnum(&G__G__ProofxLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofxLN_TXSlave))) {
     TXSlave *G__Lderived;
     G__Lderived=(TXSlave*)0x1000;
     {
       TSlave *G__Lpbase=(TSlave*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSlave),G__get_linked_tagnum(&G__G__ProofxLN_TSlave),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSlave),G__get_linked_tagnum(&G__G__ProofxLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TXHandler *G__Lpbase=(TXHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSlave),G__get_linked_tagnum(&G__G__ProofxLN_TXHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofxLN_TXUnixSocket))) {
     TXUnixSocket *G__Lderived;
     G__Lderived=(TXUnixSocket*)0x1000;
     {
       TXSocket *G__Lpbase=(TXSocket*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXUnixSocket),G__get_linked_tagnum(&G__G__ProofxLN_TXSocket),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSocket *G__Lpbase=(TSocket*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXUnixSocket),G__get_linked_tagnum(&G__G__ProofxLN_TSocket),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXUnixSocket),G__get_linked_tagnum(&G__G__ProofxLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXUnixSocket),G__get_linked_tagnum(&G__G__ProofxLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       XrdClientAbsUnsolMsgHandler *G__Lpbase=(XrdClientAbsUnsolMsgHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXUnixSocket),G__get_linked_tagnum(&G__G__ProofxLN_XrdClientAbsUnsolMsgHandler),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Proofx() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__ProofxLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofxLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofxLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofxLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofxLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__ProofxLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__ProofxLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__ProofxLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__ProofxLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__ProofxLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__ProofxLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofxLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofxLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofxLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofxLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned int>",117,G__get_linked_tagnum(&G__G__ProofxLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__ProofxLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofxLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofxLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofxLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofxLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__ProofxLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofxLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofxLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofxLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofxLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__ProofxLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofxLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofxLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofxLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofxLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TXSockBuf*>",117,G__get_linked_tagnum(&G__G__ProofxLN_listlETXSockBufmUcOallocatorlETXSockBufmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<Int_t>",117,G__get_linked_tagnum(&G__G__ProofxLN_listlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<int>",117,G__get_linked_tagnum(&G__G__ProofxLN_listlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TXHandler */
static void G__setup_memvarTXHandler(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXHandler));
   { TXHandler *p; p=(TXHandler*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXSocket */
static void G__setup_memvarTXSocket(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSocket));
   { TXSocket *p; p=(TXSocket*)0x1000; if (p) { }
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"fMode=",0,"'e' (def) or 'i' (internal - proofsrv)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("kXR_int32"),-1,4,"fSendOpt=",0,"Options for sending messages");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fSessionID=",0,"proofsrv: remote ID of connected session");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TString),-1,-1,4,"fUser=",0,"Username used for login");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TString),-1,-1,4,"fHost=",0,"Remote host");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPort=",0,"Remote port");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLogLevel=",0,"Log level to be transmitted to servers");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TString),-1,-1,4,"fBuffer=",0,"Container for exchanging information");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TObject),-1,-1,4,"fReference=",0,"Generic object reference of this socket");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TXHandler),-1,-1,4,"fHandler=",0,"Handler of asynchronous events (input, error)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_XrdProofConn),-1,-1,4,"fConn=",0,"instance of the underlying connection module");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TSemaphore),-1,-1,4,"fASem=",0,"Control access to conn async msg queue");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TMutex),-1,-1,4,"fAMtx=",0,"To protect async msg queue");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofxLN_listlETXSockBufmUcOallocatorlETXSockBufmUgRsPgR),G__defined_typename("list<TXSockBuf*>"),-1,4,"fAQue=",0,"list of asynchronous messages");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fByteLeft=",0,"bytes left in the first buffer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fByteCur=",0,"current position in the first buffer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TXSockBuf),-1,-1,4,"fBufCur=",0,"current read buffer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TMutex),-1,-1,4,"fIMtx=",0,"To protect interrupt queue");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("kXR_int32"),-1,4,"fILev=",0,"Highest received interrupt");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIForward=",0,"Wheter the interrupt should be propagated");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPid=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDontTimeout=",0,"If true wait forever for incoming messages");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fRDInterrupt=",0,"To interrupt waiting for messages");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fXrdProofdVersion=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TXSockPipe),-1,-2,4,"fgPipe=",0,"Pipe for input monitoring");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TString),-1,-2,4,"fgLoc=",0,"Location string");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"fgInitDone=",0,"Avoid initializing more than once");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TMutex),-1,-2,4,"fgSMtx=",0,"To protect spare list");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofxLN_listlETXSockBufmUcOallocatorlETXSockBufmUgRsPgR),G__defined_typename("list<TXSockBuf*>"),-2,4,"fgSQue=",0,"list of spare buffers");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofxLN_TXSocketcLcLEUrgentMsgType),-1,-2,1,"kStopProcess=2000",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXProofMgr */
static void G__setup_memvarTXProofMgr(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXProofMgr));
   { TXProofMgr *p; p=(TXProofMgr*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TXSocket),-1,-1,4,"fSocket=",0,"Connection to XRD");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXProofServ */
static void G__setup_memvarTXProofServ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXProofServ));
   { TXProofServ *p; p=(TXProofServ*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TXProofServInterruptHandler),-1,-1,4,"fInterruptHandler=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TXSocketHandler),-1,-1,4,"fInputHandler=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TString),-1,-1,4,"fSockPath=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fTerminated=",0,"true if Terminate() has been already called");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXSocketHandler */
static void G__setup_memvarTXSocketHandler(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSocketHandler));
   { TXSocketHandler *p; p=(TXSocketHandler*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TFileHandler),-1,-1,4,"fHandler=",0,"Handler associated to the input socket");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TSocket),-1,-1,4,"fInputSock=",0,"Input socket from client or master");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TXSocketHandler),-1,-2,4,"fgSocketHandler=",0,"Input socket handler");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXSlave */
static void G__setup_memvarTXSlave(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSlave));
   { TXSlave *p; p=(TXSlave*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fValid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TSignalHandler),-1,-1,4,"fIntHandler=",0,"interrupt signal handler (ctrl-c)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXUnixSocket */
static void G__setup_memvarTXUnixSocket(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXUnixSocket));
   { TXUnixSocket *p; p=(TXUnixSocket*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofxLN_listlEintcOallocatorlEintgRsPgR),G__defined_typename("list<Int_t>"),-1,4,"fClientIDs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofxLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Proofx() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTXHandler(void) {
   /* TXHandler */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXHandler));
   G__memfunc_setup("TXHandler",874,G__G__Proofx_95_0_1, 105, G__get_linked_tagnum(&G__G__ProofxLN_TXHandler), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleInput",1116,G__G__Proofx_95_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 10 '0' in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleError",1110,G__G__Proofx_95_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 10 '0' in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Proofx_95_0_4, 85, G__get_linked_tagnum(&G__G__ProofxLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TXHandler::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proofx_95_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXHandler::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proofx_95_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TXHandler::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proofx_95_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TXHandler::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__Proofx_95_0_8, 85, G__get_linked_tagnum(&G__G__ProofxLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proofx_95_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__Proofx_95_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proofx_95_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proofx_95_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXHandler::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proofx_95_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXHandler::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proofx_95_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXHandler::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proofx_95_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXHandler::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TXHandler", 874, G__G__Proofx_95_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__ProofxLN_TXHandler), -1, 0, 1, 1, 1, 0, "u 'TXHandler' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TXHandler", 1000, G__G__Proofx_95_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Proofx_95_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__ProofxLN_TXHandler), -1, 1, 1, 1, 1, 0, "u 'TXHandler' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXSocket(void) {
   /* TXSocket */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSocket));
   G__memfunc_setup("PickUpReady",1089,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PopUpSpare",1007,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofxLN_TXSockBuf), -1, 0, 1, 1, 4, 0, "i - 'Int_t' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PushBackSpare",1292,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PostMsg",717,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLowSocket",1211,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLocation",1125,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 3, 4, 0, "C - - 10 '\"\"' loc", "Set location string", (void*) NULL, 0);
   G__memfunc_setup("InitEnvs",816,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 3, 4, 0, "", "Initialize environment variables", (void*) NULL, 0);
   G__memfunc_setup("TXSocket",789,G__G__Proofx_129_0_8, 105, G__get_linked_tagnum(&G__G__ProofxLN_TXSocket), -1, 0, 7, 1, 1, 0, 
"C - - 10 - url c - 'Char_t' 0 ''M'' mode "
"i - 'Int_t' 0 '-1' psid c - 'Char_t' 0 '-1' ver "
"C - - 10 '0' logbuf i - 'Int_t' 0 '-1' loglevel "
"U 'TXHandler' - 0 '0' handler", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TXSocket",789,G__G__Proofx_129_0_9, 105, G__get_linked_tagnum(&G__G__ProofxLN_TXSocket), -1, 0, 1, 1, 1, 0, "u 'TXSocket' - 11 - xs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Proofx_129_0_10, 117, G__get_linked_tagnum(&G__G__ProofxLN_TXSocket), -1, 1, 1, 1, 1, 0, "u 'TXSocket' - 11 - xs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Create",596,G__G__Proofx_129_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' attach", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisconnectSession",1774,G__G__Proofx_129_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - id C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoError",701,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 8, 
"i - - 0 - level C - - 10 - location "
"C - - 10 - fmt u 'va_list' - 0 - va", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessUnsolicitedMsg",2185,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__G__ProofxLN_UnsolRespProcResult), -1, 0, 2, 1, 1, 0, 
"U 'XrdClientUnsolMsgSender' - 0 - s U 'XrdClientMessage' - 0 - msg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetClientID",1036,G__G__Proofx_129_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetClientIDSize",1447,G__G__Proofx_129_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLogConnID",1117,G__G__Proofx_129_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOpenError",1212,G__G__Proofx_129_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetServType",1122,G__G__Proofx_129_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSessionID",1169,G__G__Proofx_129_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXrdProofdVersion",1950,G__G__Proofx_129_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsServProofd",1222,G__G__Proofx_129_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveClientID",1370,G__G__Proofx_129_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetClientID",1048,G__G__Proofx_129_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSendOpt",1001,G__G__Proofx_129_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i 'ESendRecvOptions' - 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSessionID",1181,G__G__Proofx_129_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Send",394,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TMessage' - 11 - mess", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Send",394,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - kind", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Send",394,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - status i - 'Int_t' 0 - kind", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Send",394,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - mess i - 'Int_t' 0 'kMESS_STRING' kind", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SendRaw",692,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"Y - - 10 - buf i - 'Int_t' 0 - len "
"i 'ESendRecvOptions' - 0 'kDontBlock' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SendCoordinator",1550,G__G__Proofx_129_0_34, 85, G__get_linked_tagnum(&G__G__ProofxLN_TObjString), -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - kind C - - 10 '0' msg "
"i - 'Int_t' 0 '0' int2 n - 'Long64_t' 0 '0' l64 "
"i - 'Int_t' 0 '0' int3 C - - 10 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Recv",400,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TMessage' - 1 - mess", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Recv",400,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - status i - 'Int_t' 1 - kind", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Recv",400,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 0 - mess i - 'Int_t' 0 - max", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Recv",400,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 0 - mess i - 'Int_t' 0 - max "
"i - 'Int_t' 1 - kind", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RecvRaw",698,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"Y - - 0 - buf i - 'Int_t' 0 - len "
"i 'ESendRecvOptions' - 0 'kDefault' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SendInterrupt",1367,G__G__Proofx_129_0_40, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInterrupt",1261,G__G__Proofx_129_0_41, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 1 - forward", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SendUrgent",1023,G__G__Proofx_129_0_42, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - type i - 'Int_t' 0 - int1 "
"i - 'Int_t' 0 - int2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInterrupt",1273,G__G__Proofx_129_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Flush",514,G__G__Proofx_129_0_44, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ping",398,G__G__Proofx_129_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 '0' ord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoteTouch",1135,G__G__Proofx_129_0_46, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CtrlC",472,G__G__Proofx_129_0_47, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOption",933,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i 'ESockOptions' - 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DisableTimeout",1435,G__G__Proofx_129_0_49, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnableTimeout",1326,G__G__Proofx_129_0_50, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reconnect",929,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Proofx_129_0_52, 85, G__get_linked_tagnum(&G__G__ProofxLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TXSocket::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proofx_129_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXSocket::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proofx_129_0_54, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TXSocket::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proofx_129_0_55, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TXSocket::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofxLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proofx_129_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proofx_129_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXSocket::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proofx_129_0_61, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXSocket::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proofx_129_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXSocket::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proofx_129_0_63, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXSocket::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TXSocket", 915, G__G__Proofx_129_0_64, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXProofMgr(void) {
   /* TXProofMgr */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXProofMgr));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "i - 'Int_t' 0 '-1' loglevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CpProgress",1032,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 0, 
"C - - 10 - pfx n - 'Long64_t' 0 - bytes "
"n - 'Long64_t' 0 - size U 'TStopwatch' - 0 - watch "
"g - 'Bool_t' 0 'kFALSE' cr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofxLN_TObjString), -1, 0, 4, 1, 4, 0, 
"i - 'Int_t' 0 - action C - - 10 - what "
"C - - 10 - how C - - 10 - where", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TXProofMgr",984,G__G__Proofx_176_0_4, 105, G__get_linked_tagnum(&G__G__ProofxLN_TXProofMgr), -1, 0, 3, 1, 1, 0, 
"C - - 10 - url i - 'Int_t' 0 '-1' loglevel "
"C - - 10 '\"\"' alias", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleInput",1116,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleError",1110,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 10 '0' in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsValid",684,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInvalid",1011,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AttachSession",1337,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofxLN_TProof), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - id g - 'Bool_t' 0 'kFALSE' gui", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AttachSession",1337,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofxLN_TProof), -1, 0, 2, 1, 1, 0, 
"U 'TProofDesc' - 0 - d g - 'Bool_t' 0 'kFALSE' gui", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DetachSession",1325,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DetachSession",1325,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TProof' - 0 - - C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSessionLogs",1433,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofxLN_TProofLog), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 '0' ridx C - - 10 '0' stag "
"C - - 10 '\"-v \\\"| SvcMsg\\\"\"' pattern", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MatchUrl",800,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - url", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowROOTVersions",1598,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("QuerySessions",1389,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofxLN_TList), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"S\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadBuffer",982,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofxLN_TObjString), -1, 0, 3, 1, 1, 0, 
"C - - 10 - file n - 'Long64_t' 0 - ofs "
"i - 'Int_t' 0 - len", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadBuffer",982,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofxLN_TObjString), -1, 0, 2, 1, 1, 0, 
"C - - 10 - file C - - 10 - pattern", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' hard C - - 10 '0' usr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SendMsgToUsers",1414,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - msg C - - 10 '0' usr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetROOTVersion",1366,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - tag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowWorkers",1166,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cp",179,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - src C - - 10 '0' dst "
"C - - 10 '0' opts", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Find",385,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 '\"~/\"' what C - - 10 '\"-type f\"' how "
"C - - 10 '0' where", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Grep",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - what C - - 10 '0' how "
"C - - 10 '0' where", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Ls",191,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 '\"~/\"' what C - - 10 '0' how "
"C - - 10 '0' where", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("More",403,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - what C - - 10 '0' how "
"C - - 10 '0' where", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Rm",191,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - what C - - 10 '0' how "
"C - - 10 '0' where", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Tail",394,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - what C - - 10 '0' how "
"C - - 10 '0' where", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Md5sum",571,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - what u 'TString' - 1 - sum "
"C - - 10 '0' where", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Stat",412,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - what u 'FileStat_t' - 1 - st "
"C - - 10 '0' where", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFile",672,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - remote C - - 10 - local "
"C - - 10 '0' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PutFile",697,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - local C - - 10 - remote "
"C - - 10 '0' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Proofx_176_0_34, 85, G__get_linked_tagnum(&G__G__ProofxLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TXProofMgr::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proofx_176_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXProofMgr::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proofx_176_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TXProofMgr::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proofx_176_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TXProofMgr::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofxLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proofx_176_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proofx_176_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXProofMgr::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proofx_176_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXProofMgr::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proofx_176_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXProofMgr::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proofx_176_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXProofMgr::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TXProofMgr", 1110, G__G__Proofx_176_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXProofServ(void) {
   /* TXProofServ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXProofServ));
   G__memfunc_setup("LockSession",1133,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"C - - 10 - sessiontag U 'TProofLockPath' - 2 - lck", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setup",529,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TXProofServ",1106,G__G__Proofx_206_0_3, 105, G__get_linked_tagnum(&G__G__ProofxLN_TXProofServ), -1, 0, 3, 1, 1, 0, 
"I - 'Int_t' 0 - argc C - - 2 - argv "
"E - - 0 '0' flog", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateServer",1227,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DisableTimeout",1435,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EnableTimeout",1326,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWorkers",1037,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__G__ProofxLN_TProofServcLcLEQueryAction), -1, 0, 3, 1, 1, 0, 
"U 'TList' - 0 - workers i - 'Int_t' 1 - prioritychange "
"g - 'Bool_t' 0 'kFALSE' resume", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleError",1110,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 10 '0' in", "Error Handler", (void*) NULL, 1);
   G__memfunc_setup("HandleInput",1116,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 10 '0' in", "Input handler", (void*) NULL, 1);
   G__memfunc_setup("HandleUrgentData",1595,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleSigPipe",1277,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleTermination",1750,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReleaseWorker",1339,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - ord", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - status", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Proofx_206_0_15, 85, G__get_linked_tagnum(&G__G__ProofxLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TXProofServ::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proofx_206_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXProofServ::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proofx_206_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TXProofServ::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proofx_206_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TXProofServ::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofxLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proofx_206_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proofx_206_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXProofServ::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proofx_206_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXProofServ::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proofx_206_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXProofServ::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proofx_206_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXProofServ::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TXProofServ", 1232, G__G__Proofx_206_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXSocketHandler(void) {
   /* TXSocketHandler */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSocketHandler));
   G__memfunc_setup("SetHandler",1002,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TFileHandler' - 0 - h U 'TSocket' - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TXSocketHandler",1491,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofxLN_TXSocketHandler), -1, 0, 2, 1, 4, 0, 
"U 'TFileHandler' - 0 - h U 'TSocket' - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadNotify",1013,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSocketHandler",1607,G__G__Proofx_213_0_5, 85, G__get_linked_tagnum(&G__G__ProofxLN_TXSocketHandler), -1, 0, 2, 3, 1, 0, 
"U 'TFileHandler' - 0 '0' h U 'TSocket' - 0 '0' s", (char*)NULL, (void*) G__func2void( (TXSocketHandler* (*)(TFileHandler*, TSocket*))(&TXSocketHandler::GetSocketHandler) ), 0);
   G__memfunc_setup("Class",502,G__G__Proofx_213_0_6, 85, G__get_linked_tagnum(&G__G__ProofxLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TXSocketHandler::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proofx_213_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXSocketHandler::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proofx_213_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TXSocketHandler::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proofx_213_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TXSocketHandler::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofxLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proofx_213_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proofx_213_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXSocketHandler::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proofx_213_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXSocketHandler::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proofx_213_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXSocketHandler::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proofx_213_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXSocketHandler::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TXSocketHandler", 1617, G__G__Proofx_213_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXSlave(void) {
   /* TXSlave */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSlave));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"C - - 10 - host i - 'Int_t' 0 - stype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProofdProtocol",1756,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 4, 0, "U 'TSocket' - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FlushSocket",1131,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Interrupt",973,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Ping",398,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SendCoordinator",1550,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofxLN_TObjString), -1, 0, 3, 1, 2, 0, 
"i - 'Int_t' 0 - kind C - - 10 '0' msg "
"i - 'Int_t' 0 '0' int2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SendGroupPriority",1785,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 0, 
"C - - 10 - grp i - 'Int_t' 0 - priority", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAlias",790,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - - 10 - alias", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StopProcess",1157,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"g - 'Bool_t' 0 - abort i - 'Int_t' 0 - timeout", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TXSlave",679,G__G__Proofx_216_0_10, 105, G__get_linked_tagnum(&G__G__ProofxLN_TXSlave), -1, 0, 8, 1, 1, 0, 
"C - - 10 - url C - - 10 - ord "
"i - 'Int_t' 0 - perf C - - 10 - image "
"U 'TProof' - 0 - proof i - 'Int_t' 0 - stype "
"C - - 10 - workdir C - - 10 - msd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoError",701,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 8, 
"i - - 0 - level C - - 10 - location "
"C - - 10 - fmt u 'va_list' - 0 - va", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleError",1110,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 10 '0' in", "Error Handler", (void*) NULL, 1);
   G__memfunc_setup("HandleInput",1116,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "Y - - 10 '0' in", "Input handler", (void*) NULL, 1);
   G__memfunc_setup("SetInterruptHandler",1975,G__G__Proofx_216_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupServ",945,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - stype C - - 10 - conffile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Touch",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Proofx_216_0_18, 85, G__get_linked_tagnum(&G__G__ProofxLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TXSlave::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proofx_216_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXSlave::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proofx_216_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TXSlave::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proofx_216_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TXSlave::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofxLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proofx_216_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proofx_216_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXSlave::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proofx_216_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXSlave::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proofx_216_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXSlave::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proofx_216_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXSlave::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TXSlave", 805, G__G__Proofx_216_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXUnixSocket(void) {
   /* TXUnixSocket */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXUnixSocket));
   G__memfunc_setup("TXUnixSocket",1209,G__G__Proofx_363_0_1, 105, G__get_linked_tagnum(&G__G__ProofxLN_TXUnixSocket), -1, 0, 4, 1, 1, 0, 
"C - - 10 - u i - 'Int_t' 0 '-1' psid "
"c - 'Char_t' 0 '-1' ver U 'TXHandler' - 0 '0' handler", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClientID",1036,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetClientIDSize",1447,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveClientID",1370,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetClientID",1048,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - cid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconnect",929,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Proofx_363_0_7, 85, G__get_linked_tagnum(&G__G__ProofxLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TXUnixSocket::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Proofx_363_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXUnixSocket::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Proofx_363_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TXUnixSocket::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Proofx_363_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TXUnixSocket::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofxLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proofx_363_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proofx_363_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXUnixSocket::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proofx_363_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXUnixSocket::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proofx_363_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXUnixSocket::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proofx_363_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXUnixSocket::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TXUnixSocket", 1335, G__G__Proofx_363_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Proofx() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Proofx() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Proofx() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__ProofxLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_va_list = { "va_list" , 115 , -1 };
G__linked_taginfo G__G__ProofxLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TXHandler = { "TXHandler" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__ProofxLN_TSocket = { "TSocket" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TXSocket = { "TXSocket" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TSysEvtHandler = { "TSysEvtHandler" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TFileHandler = { "TFileHandler" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TSignalHandler = { "TSignalHandler" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_FileStat_t = { "FileStat_t" , 115 , -1 };
G__linked_taginfo G__G__ProofxLN_TObjString = { "TObjString" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TProof = { "TProof" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TProofDesc = { "TProofDesc" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TProofLog = { "TProofLog" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TProofMgr = { "TProofMgr" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TStopwatch = { "TStopwatch" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TXProofMgr = { "TXProofMgr" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TApplication = { "TApplication" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TProofServ = { "TProofServ" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TProofLockPath = { "TProofLockPath" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TMessage = { "TMessage" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TMutex = { "TMutex" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TXProofServ = { "TXProofServ" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TProofServcLcLEQueryAction = { "TProofServ::EQueryAction" , 101 , -1 };
G__linked_taginfo G__G__ProofxLN_TXProofServInterruptHandler = { "TXProofServInterruptHandler" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TXSocketHandler = { "TXSocketHandler" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TSlave = { "TSlave" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TXSlave = { "TXSlave" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TSemaphore = { "TSemaphore" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_ESockOptions = { "ESockOptions" , 101 , -1 };
G__linked_taginfo G__G__ProofxLN_ESendRecvOptions = { "ESendRecvOptions" , 101 , -1 };
G__linked_taginfo G__G__ProofxLN_XrdClientMessage = { "XrdClientMessage" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_XrdClientUnsolMsgSender = { "XrdClientUnsolMsgSender" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_UnsolRespProcResult = { "UnsolRespProcResult" , 101 , -1 };
G__linked_taginfo G__G__ProofxLN_XrdClientAbsUnsolMsgHandler = { "XrdClientAbsUnsolMsgHandler" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_XrdProofConn = { "XrdProofConn" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TXUnixSocket = { "TXUnixSocket" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TXSockBuf = { "TXSockBuf" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TXSockPipe = { "TXSockPipe" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_listlETXSockBufmUcOallocatorlETXSockBufmUgRsPgR = { "list<TXSockBuf*,allocator<TXSockBuf*> >" , 99 , -1 };
G__linked_taginfo G__G__ProofxLN_TXSocketcLcLEUrgentMsgType = { "TXSocket::EUrgentMsgType" , 101 , -1 };
G__linked_taginfo G__G__ProofxLN_listlEintcOallocatorlEintgRsPgR = { "list<int,allocator<int> >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Proofx() {
  G__G__ProofxLN_TClass.tagnum = -1 ;
  G__G__ProofxLN_TBuffer.tagnum = -1 ;
  G__G__ProofxLN_TMemberInspector.tagnum = -1 ;
  G__G__ProofxLN_TObject.tagnum = -1 ;
  G__G__ProofxLN_TNamed.tagnum = -1 ;
  G__G__ProofxLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__ProofxLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ProofxLN_va_list.tagnum = -1 ;
  G__G__ProofxLN_TList.tagnum = -1 ;
  G__G__ProofxLN_TString.tagnum = -1 ;
  G__G__ProofxLN_TXHandler.tagnum = -1 ;
  G__G__ProofxLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__ProofxLN_TSocket.tagnum = -1 ;
  G__G__ProofxLN_TXSocket.tagnum = -1 ;
  G__G__ProofxLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__ProofxLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ProofxLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__ProofxLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ProofxLN_TQObject.tagnum = -1 ;
  G__G__ProofxLN_TSysEvtHandler.tagnum = -1 ;
  G__G__ProofxLN_TFileHandler.tagnum = -1 ;
  G__G__ProofxLN_TSignalHandler.tagnum = -1 ;
  G__G__ProofxLN_FileStat_t.tagnum = -1 ;
  G__G__ProofxLN_TObjString.tagnum = -1 ;
  G__G__ProofxLN_TProof.tagnum = -1 ;
  G__G__ProofxLN_TProofDesc.tagnum = -1 ;
  G__G__ProofxLN_TProofLog.tagnum = -1 ;
  G__G__ProofxLN_TProofMgr.tagnum = -1 ;
  G__G__ProofxLN_TStopwatch.tagnum = -1 ;
  G__G__ProofxLN_TXProofMgr.tagnum = -1 ;
  G__G__ProofxLN_TApplication.tagnum = -1 ;
  G__G__ProofxLN_TProofServ.tagnum = -1 ;
  G__G__ProofxLN_TProofLockPath.tagnum = -1 ;
  G__G__ProofxLN_TMessage.tagnum = -1 ;
  G__G__ProofxLN_TMutex.tagnum = -1 ;
  G__G__ProofxLN_TXProofServ.tagnum = -1 ;
  G__G__ProofxLN_TProofServcLcLEQueryAction.tagnum = -1 ;
  G__G__ProofxLN_TXProofServInterruptHandler.tagnum = -1 ;
  G__G__ProofxLN_TXSocketHandler.tagnum = -1 ;
  G__G__ProofxLN_TSlave.tagnum = -1 ;
  G__G__ProofxLN_TXSlave.tagnum = -1 ;
  G__G__ProofxLN_TSemaphore.tagnum = -1 ;
  G__G__ProofxLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__ProofxLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ProofxLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__ProofxLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ProofxLN_ESockOptions.tagnum = -1 ;
  G__G__ProofxLN_ESendRecvOptions.tagnum = -1 ;
  G__G__ProofxLN_XrdClientMessage.tagnum = -1 ;
  G__G__ProofxLN_XrdClientUnsolMsgSender.tagnum = -1 ;
  G__G__ProofxLN_UnsolRespProcResult.tagnum = -1 ;
  G__G__ProofxLN_XrdClientAbsUnsolMsgHandler.tagnum = -1 ;
  G__G__ProofxLN_XrdProofConn.tagnum = -1 ;
  G__G__ProofxLN_TXUnixSocket.tagnum = -1 ;
  G__G__ProofxLN_TXSockBuf.tagnum = -1 ;
  G__G__ProofxLN_TXSockPipe.tagnum = -1 ;
  G__G__ProofxLN_listlETXSockBufmUcOallocatorlETXSockBufmUgRsPgR.tagnum = -1 ;
  G__G__ProofxLN_TXSocketcLcLEUrgentMsgType.tagnum = -1 ;
  G__G__ProofxLN_listlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Proofx() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_va_list);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TList);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TString);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXHandler),sizeof(TXHandler),-1,1280,"Template class for handling of async events",G__setup_memvarTXHandler,G__setup_memfuncTXHandler);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TSocket);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSocket),sizeof(TXSocket),-1,65024,"A high level connection class for PROOF",G__setup_memvarTXSocket,G__setup_memfuncTXSocket);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TQObject);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TSysEvtHandler);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TFileHandler);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TSignalHandler);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_FileStat_t);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TObjString);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TProof);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TProofDesc);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TProofLog);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TProofMgr);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TStopwatch);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXProofMgr),sizeof(TXProofMgr),-1,62464,"XrdProofd PROOF manager interface",G__setup_memvarTXProofMgr,G__setup_memfuncTXProofMgr);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TApplication);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TProofServ);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TProofLockPath);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TMessage);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TMutex);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXProofServ),sizeof(TXProofServ),-1,62464,"XRD PROOF Server Application Interface",G__setup_memvarTXProofServ,G__setup_memfuncTXProofServ);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TProofServcLcLEQueryAction);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TXProofServInterruptHandler);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSocketHandler),sizeof(TXSocketHandler),-1,62464,"Input handler class for xproofd sockets",G__setup_memvarTXSocketHandler,G__setup_memfuncTXSocketHandler);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TSlave);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXSlave),sizeof(TXSlave),-1,62464,"Xrd PROOF slave server",G__setup_memvarTXSlave,G__setup_memfuncTXSlave);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TSemaphore);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_ESockOptions);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_ESendRecvOptions);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_XrdClientMessage);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_XrdClientUnsolMsgSender);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_UnsolRespProcResult);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_XrdClientAbsUnsolMsgHandler);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_XrdProofConn);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofxLN_TXUnixSocket),sizeof(TXUnixSocket),-1,62464,"Connection class for Xrd PROOF using UNIX sockets",G__setup_memvarTXUnixSocket,G__setup_memfuncTXUnixSocket);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TXSockBuf);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TXSockPipe);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_listlETXSockBufmUcOallocatorlETXSockBufmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_TXSocketcLcLEUrgentMsgType);
   G__get_linked_tagnum_fwd(&G__G__ProofxLN_listlEintcOallocatorlEintgRsPgR);
}
extern "C" void G__cpp_setupG__Proofx(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Proofx()");
  G__set_cpp_environmentG__Proofx();
  G__cpp_setup_tagtableG__Proofx();

  G__cpp_setup_inheritanceG__Proofx();

  G__cpp_setup_typetableG__Proofx();

  G__cpp_setup_memvarG__Proofx();

  G__cpp_setup_memfuncG__Proofx();
  G__cpp_setup_globalG__Proofx();
  G__cpp_setup_funcG__Proofx();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Proofx();
  return;
}
class G__cpp_setup_initG__Proofx {
  public:
    G__cpp_setup_initG__Proofx() { G__add_setup_func("G__Proofx",(G__incsetup)(&G__cpp_setupG__Proofx)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Proofx() { G__remove_setup_func("G__Proofx"); }
};
G__cpp_setup_initG__Proofx G__cpp_setup_initializerG__Proofx;

