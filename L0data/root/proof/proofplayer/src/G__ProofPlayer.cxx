//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:47:22 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__ProofPlayer.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TDrawFeedback_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TDrawFeedback(void *p = 0);
   static void *newArray_TDrawFeedback(Long_t size, void *p);
   static void delete_TDrawFeedback(void *p);
   static void deleteArray_TDrawFeedback(void *p);
   static void destruct_TDrawFeedback(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDrawFeedback*)
   {
      ::TDrawFeedback *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDrawFeedback >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDrawFeedback", ::TDrawFeedback::Class_Version(), "include/TDrawFeedback.h", 36,
                  typeid(::TDrawFeedback), DefineBehavior(ptr, ptr),
                  &::TDrawFeedback::Dictionary, isa_proxy, 4,
                  sizeof(::TDrawFeedback) );
      instance.SetNew(&new_TDrawFeedback);
      instance.SetNewArray(&newArray_TDrawFeedback);
      instance.SetDelete(&delete_TDrawFeedback);
      instance.SetDeleteArray(&deleteArray_TDrawFeedback);
      instance.SetDestructor(&destruct_TDrawFeedback);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDrawFeedback*)
   {
      return GenerateInitInstanceLocal((::TDrawFeedback*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDrawFeedback*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEventIter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TEventIter(void *p);
   static void deleteArray_TEventIter(void *p);
   static void destruct_TEventIter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEventIter*)
   {
      ::TEventIter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEventIter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEventIter", ::TEventIter::Class_Version(), "include/TEventIter.h", 46,
                  typeid(::TEventIter), DefineBehavior(ptr, ptr),
                  &::TEventIter::Dictionary, isa_proxy, 4,
                  sizeof(::TEventIter) );
      instance.SetDelete(&delete_TEventIter);
      instance.SetDeleteArray(&deleteArray_TEventIter);
      instance.SetDestructor(&destruct_TEventIter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEventIter*)
   {
      return GenerateInitInstanceLocal((::TEventIter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEventIter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEventIterUnit_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TEventIterUnit(void *p = 0);
   static void *newArray_TEventIterUnit(Long_t size, void *p);
   static void delete_TEventIterUnit(void *p);
   static void deleteArray_TEventIterUnit(void *p);
   static void destruct_TEventIterUnit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEventIterUnit*)
   {
      ::TEventIterUnit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEventIterUnit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEventIterUnit", ::TEventIterUnit::Class_Version(), "include/TEventIter.h", 92,
                  typeid(::TEventIterUnit), DefineBehavior(ptr, ptr),
                  &::TEventIterUnit::Dictionary, isa_proxy, 4,
                  sizeof(::TEventIterUnit) );
      instance.SetNew(&new_TEventIterUnit);
      instance.SetNewArray(&newArray_TEventIterUnit);
      instance.SetDelete(&delete_TEventIterUnit);
      instance.SetDeleteArray(&deleteArray_TEventIterUnit);
      instance.SetDestructor(&destruct_TEventIterUnit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEventIterUnit*)
   {
      return GenerateInitInstanceLocal((::TEventIterUnit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEventIterUnit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEventIterObj_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TEventIterObj(void *p = 0);
   static void *newArray_TEventIterObj(Long_t size, void *p);
   static void delete_TEventIterObj(void *p);
   static void deleteArray_TEventIterObj(void *p);
   static void destruct_TEventIterObj(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEventIterObj*)
   {
      ::TEventIterObj *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEventIterObj >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEventIterObj", ::TEventIterObj::Class_Version(), "include/TEventIter.h", 114,
                  typeid(::TEventIterObj), DefineBehavior(ptr, ptr),
                  &::TEventIterObj::Dictionary, isa_proxy, 4,
                  sizeof(::TEventIterObj) );
      instance.SetNew(&new_TEventIterObj);
      instance.SetNewArray(&newArray_TEventIterObj);
      instance.SetDelete(&delete_TEventIterObj);
      instance.SetDeleteArray(&deleteArray_TEventIterObj);
      instance.SetDestructor(&destruct_TEventIterObj);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEventIterObj*)
   {
      return GenerateInitInstanceLocal((::TEventIterObj*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEventIterObj*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEventIterTree_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TEventIterTree(void *p = 0);
   static void *newArray_TEventIterTree(Long_t size, void *p);
   static void delete_TEventIterTree(void *p);
   static void deleteArray_TEventIterTree(void *p);
   static void destruct_TEventIterTree(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEventIterTree*)
   {
      ::TEventIterTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEventIterTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEventIterTree", ::TEventIterTree::Class_Version(), "include/TEventIter.h", 136,
                  typeid(::TEventIterTree), DefineBehavior(ptr, ptr),
                  &::TEventIterTree::Dictionary, isa_proxy, 4,
                  sizeof(::TEventIterTree) );
      instance.SetNew(&new_TEventIterTree);
      instance.SetNewArray(&newArray_TEventIterTree);
      instance.SetDelete(&delete_TEventIterTree);
      instance.SetDeleteArray(&deleteArray_TEventIterTree);
      instance.SetDestructor(&destruct_TEventIterTree);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEventIterTree*)
   {
      return GenerateInitInstanceLocal((::TEventIterTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEventIterTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TFileMerger_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TFileMerger(void *p = 0);
   static void *newArray_TFileMerger(Long_t size, void *p);
   static void delete_TFileMerger(void *p);
   static void deleteArray_TFileMerger(void *p);
   static void destruct_TFileMerger(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFileMerger*)
   {
      ::TFileMerger *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TFileMerger >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TFileMerger", ::TFileMerger::Class_Version(), "include/TFileMerger.h", 45,
                  typeid(::TFileMerger), DefineBehavior(ptr, ptr),
                  &::TFileMerger::Dictionary, isa_proxy, 4,
                  sizeof(::TFileMerger) );
      instance.SetNew(&new_TFileMerger);
      instance.SetNewArray(&newArray_TFileMerger);
      instance.SetDelete(&delete_TFileMerger);
      instance.SetDeleteArray(&deleteArray_TFileMerger);
      instance.SetDestructor(&destruct_TFileMerger);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFileMerger*)
   {
      return GenerateInitInstanceLocal((::TFileMerger*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFileMerger*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TVirtualPacketizer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TVirtualPacketizer(void *p);
   static void deleteArray_TVirtualPacketizer(void *p);
   static void destruct_TVirtualPacketizer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TVirtualPacketizer*)
   {
      ::TVirtualPacketizer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TVirtualPacketizer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TVirtualPacketizer", ::TVirtualPacketizer::Class_Version(), "include/TVirtualPacketizer.h", 55,
                  typeid(::TVirtualPacketizer), DefineBehavior(ptr, ptr),
                  &::TVirtualPacketizer::Dictionary, isa_proxy, 4,
                  sizeof(::TVirtualPacketizer) );
      instance.SetDelete(&delete_TVirtualPacketizer);
      instance.SetDeleteArray(&deleteArray_TVirtualPacketizer);
      instance.SetDestructor(&destruct_TVirtualPacketizer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TVirtualPacketizer*)
   {
      return GenerateInitInstanceLocal((::TVirtualPacketizer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TVirtualPacketizer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPacketizer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TPacketizer(void *p);
   static void deleteArray_TPacketizer(void *p);
   static void destruct_TPacketizer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPacketizer*)
   {
      ::TPacketizer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPacketizer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPacketizer", ::TPacketizer::Class_Version(), "include/TPacketizer.h", 41,
                  typeid(::TPacketizer), DefineBehavior(ptr, ptr),
                  &::TPacketizer::Dictionary, isa_proxy, 4,
                  sizeof(::TPacketizer) );
      instance.SetDelete(&delete_TPacketizer);
      instance.SetDeleteArray(&deleteArray_TPacketizer);
      instance.SetDestructor(&destruct_TPacketizer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPacketizer*)
   {
      return GenerateInitInstanceLocal((::TPacketizer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPacketizer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPacketizerAdaptive_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TPacketizerAdaptive(void *p);
   static void deleteArray_TPacketizerAdaptive(void *p);
   static void destruct_TPacketizerAdaptive(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPacketizerAdaptive*)
   {
      ::TPacketizerAdaptive *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPacketizerAdaptive >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPacketizerAdaptive", ::TPacketizerAdaptive::Class_Version(), "include/TPacketizerAdaptive.h", 51,
                  typeid(::TPacketizerAdaptive), DefineBehavior(ptr, ptr),
                  &::TPacketizerAdaptive::Dictionary, isa_proxy, 4,
                  sizeof(::TPacketizerAdaptive) );
      instance.SetDelete(&delete_TPacketizerAdaptive);
      instance.SetDeleteArray(&deleteArray_TPacketizerAdaptive);
      instance.SetDestructor(&destruct_TPacketizerAdaptive);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPacketizerAdaptive*)
   {
      return GenerateInitInstanceLocal((::TPacketizerAdaptive*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPacketizerAdaptive*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPacketizerUnit_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TPacketizerUnit(void *p);
   static void deleteArray_TPacketizerUnit(void *p);
   static void destruct_TPacketizerUnit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPacketizerUnit*)
   {
      ::TPacketizerUnit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPacketizerUnit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPacketizerUnit", ::TPacketizerUnit::Class_Version(), "include/TPacketizerUnit.h", 42,
                  typeid(::TPacketizerUnit), DefineBehavior(ptr, ptr),
                  &::TPacketizerUnit::Dictionary, isa_proxy, 4,
                  sizeof(::TPacketizerUnit) );
      instance.SetDelete(&delete_TPacketizerUnit);
      instance.SetDeleteArray(&deleteArray_TPacketizerUnit);
      instance.SetDestructor(&destruct_TPacketizerUnit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPacketizerUnit*)
   {
      return GenerateInitInstanceLocal((::TPacketizerUnit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPacketizerUnit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPerfEvent_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TPerfEvent(void *p = 0);
   static void *newArray_TPerfEvent(Long_t size, void *p);
   static void delete_TPerfEvent(void *p);
   static void deleteArray_TPerfEvent(void *p);
   static void destruct_TPerfEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPerfEvent*)
   {
      ::TPerfEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPerfEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPerfEvent", ::TPerfEvent::Class_Version(), "include/TPerfStats.h", 46,
                  typeid(::TPerfEvent), DefineBehavior(ptr, ptr),
                  &::TPerfEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TPerfEvent) );
      instance.SetNew(&new_TPerfEvent);
      instance.SetNewArray(&newArray_TPerfEvent);
      instance.SetDelete(&delete_TPerfEvent);
      instance.SetDeleteArray(&deleteArray_TPerfEvent);
      instance.SetDestructor(&destruct_TPerfEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPerfEvent*)
   {
      return GenerateInitInstanceLocal((::TPerfEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPerfEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPerfStats_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TPerfStats(void *p);
   static void deleteArray_TPerfStats(void *p);
   static void destruct_TPerfStats(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPerfStats*)
   {
      ::TPerfStats *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPerfStats >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPerfStats", ::TPerfStats::Class_Version(), "include/TPerfStats.h", 77,
                  typeid(::TPerfStats), DefineBehavior(ptr, ptr),
                  &::TPerfStats::Dictionary, isa_proxy, 0,
                  sizeof(::TPerfStats) );
      instance.SetDelete(&delete_TPerfStats);
      instance.SetDeleteArray(&deleteArray_TPerfStats);
      instance.SetDestructor(&destruct_TPerfStats);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPerfStats*)
   {
      return GenerateInitInstanceLocal((::TPerfStats*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPerfStats*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofLimitsFinder_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TProofLimitsFinder(void *p = 0);
   static void *newArray_TProofLimitsFinder(Long_t size, void *p);
   static void delete_TProofLimitsFinder(void *p);
   static void deleteArray_TProofLimitsFinder(void *p);
   static void destruct_TProofLimitsFinder(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofLimitsFinder*)
   {
      ::TProofLimitsFinder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofLimitsFinder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofLimitsFinder", ::TProofLimitsFinder::Class_Version(), "include/TProofLimitsFinder.h", 30,
                  typeid(::TProofLimitsFinder), DefineBehavior(ptr, ptr),
                  &::TProofLimitsFinder::Dictionary, isa_proxy, 0,
                  sizeof(::TProofLimitsFinder) );
      instance.SetNew(&new_TProofLimitsFinder);
      instance.SetNewArray(&newArray_TProofLimitsFinder);
      instance.SetDelete(&delete_TProofLimitsFinder);
      instance.SetDeleteArray(&deleteArray_TProofLimitsFinder);
      instance.SetDestructor(&destruct_TProofLimitsFinder);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofLimitsFinder*)
   {
      return GenerateInitInstanceLocal((::TProofLimitsFinder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofLimitsFinder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofOutputFile_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TProofOutputFile(void *p = 0);
   static void *newArray_TProofOutputFile(Long_t size, void *p);
   static void delete_TProofOutputFile(void *p);
   static void deleteArray_TProofOutputFile(void *p);
   static void destruct_TProofOutputFile(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofOutputFile*)
   {
      ::TProofOutputFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofOutputFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofOutputFile", ::TProofOutputFile::Class_Version(), "include/TProofOutputFile.h", 36,
                  typeid(::TProofOutputFile), DefineBehavior(ptr, ptr),
                  &::TProofOutputFile::Dictionary, isa_proxy, 4,
                  sizeof(::TProofOutputFile) );
      instance.SetNew(&new_TProofOutputFile);
      instance.SetNewArray(&newArray_TProofOutputFile);
      instance.SetDelete(&delete_TProofOutputFile);
      instance.SetDeleteArray(&deleteArray_TProofOutputFile);
      instance.SetDestructor(&destruct_TProofOutputFile);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofOutputFile*)
   {
      return GenerateInitInstanceLocal((::TProofOutputFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofOutputFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofPlayer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TProofPlayer(void *p = 0);
   static void *newArray_TProofPlayer(Long_t size, void *p);
   static void delete_TProofPlayer(void *p);
   static void deleteArray_TProofPlayer(void *p);
   static void destruct_TProofPlayer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofPlayer*)
   {
      ::TProofPlayer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofPlayer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofPlayer", ::TProofPlayer::Class_Version(), "include/TProofPlayer.h", 75,
                  typeid(::TProofPlayer), DefineBehavior(ptr, ptr),
                  &::TProofPlayer::Dictionary, isa_proxy, 4,
                  sizeof(::TProofPlayer) );
      instance.SetNew(&new_TProofPlayer);
      instance.SetNewArray(&newArray_TProofPlayer);
      instance.SetDelete(&delete_TProofPlayer);
      instance.SetDeleteArray(&deleteArray_TProofPlayer);
      instance.SetDestructor(&destruct_TProofPlayer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofPlayer*)
   {
      return GenerateInitInstanceLocal((::TProofPlayer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofPlayer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofPlayerLite_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TProofPlayerLite(void *p = 0);
   static void *newArray_TProofPlayerLite(Long_t size, void *p);
   static void delete_TProofPlayerLite(void *p);
   static void deleteArray_TProofPlayerLite(void *p);
   static void destruct_TProofPlayerLite(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofPlayerLite*)
   {
      ::TProofPlayerLite *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofPlayerLite >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofPlayerLite", ::TProofPlayerLite::Class_Version(), "include/TProofPlayerLite.h", 30,
                  typeid(::TProofPlayerLite), DefineBehavior(ptr, ptr),
                  &::TProofPlayerLite::Dictionary, isa_proxy, 4,
                  sizeof(::TProofPlayerLite) );
      instance.SetNew(&new_TProofPlayerLite);
      instance.SetNewArray(&newArray_TProofPlayerLite);
      instance.SetDelete(&delete_TProofPlayerLite);
      instance.SetDeleteArray(&deleteArray_TProofPlayerLite);
      instance.SetDestructor(&destruct_TProofPlayerLite);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofPlayerLite*)
   {
      return GenerateInitInstanceLocal((::TProofPlayerLite*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofPlayerLite*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofPlayerRemote_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TProofPlayerRemote(void *p = 0);
   static void *newArray_TProofPlayerRemote(Long_t size, void *p);
   static void delete_TProofPlayerRemote(void *p);
   static void deleteArray_TProofPlayerRemote(void *p);
   static void destruct_TProofPlayerRemote(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofPlayerRemote*)
   {
      ::TProofPlayerRemote *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofPlayerRemote >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofPlayerRemote", ::TProofPlayerRemote::Class_Version(), "include/TProofPlayer.h", 252,
                  typeid(::TProofPlayerRemote), DefineBehavior(ptr, ptr),
                  &::TProofPlayerRemote::Dictionary, isa_proxy, 4,
                  sizeof(::TProofPlayerRemote) );
      instance.SetNew(&new_TProofPlayerRemote);
      instance.SetNewArray(&newArray_TProofPlayerRemote);
      instance.SetDelete(&delete_TProofPlayerRemote);
      instance.SetDeleteArray(&deleteArray_TProofPlayerRemote);
      instance.SetDestructor(&destruct_TProofPlayerRemote);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofPlayerRemote*)
   {
      return GenerateInitInstanceLocal((::TProofPlayerRemote*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofPlayerRemote*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TStatus_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TStatus(void *p = 0);
   static void *newArray_TStatus(Long_t size, void *p);
   static void delete_TStatus(void *p);
   static void deleteArray_TStatus(void *p);
   static void destruct_TStatus(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TStatus*)
   {
      ::TStatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TStatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TStatus", ::TStatus::Class_Version(), "include/TStatus.h", 39,
                  typeid(::TStatus), DefineBehavior(ptr, ptr),
                  &::TStatus::Dictionary, isa_proxy, 4,
                  sizeof(::TStatus) );
      instance.SetNew(&new_TStatus);
      instance.SetNewArray(&newArray_TStatus);
      instance.SetDelete(&delete_TStatus);
      instance.SetDeleteArray(&deleteArray_TStatus);
      instance.SetDestructor(&destruct_TStatus);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TStatus*)
   {
      return GenerateInitInstanceLocal((::TStatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TStatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofPlayerLocal_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TProofPlayerLocal(void *p = 0);
   static void *newArray_TProofPlayerLocal(Long_t size, void *p);
   static void delete_TProofPlayerLocal(void *p);
   static void deleteArray_TProofPlayerLocal(void *p);
   static void destruct_TProofPlayerLocal(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofPlayerLocal*)
   {
      ::TProofPlayerLocal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofPlayerLocal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofPlayerLocal", ::TProofPlayerLocal::Class_Version(), "include/TProofPlayer.h", 216,
                  typeid(::TProofPlayerLocal), DefineBehavior(ptr, ptr),
                  &::TProofPlayerLocal::Dictionary, isa_proxy, 4,
                  sizeof(::TProofPlayerLocal) );
      instance.SetNew(&new_TProofPlayerLocal);
      instance.SetNewArray(&newArray_TProofPlayerLocal);
      instance.SetDelete(&delete_TProofPlayerLocal);
      instance.SetDeleteArray(&deleteArray_TProofPlayerLocal);
      instance.SetDestructor(&destruct_TProofPlayerLocal);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofPlayerLocal*)
   {
      return GenerateInitInstanceLocal((::TProofPlayerLocal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofPlayerLocal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofPlayerSlave_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TProofPlayerSlave(void *p = 0);
   static void *newArray_TProofPlayerSlave(Long_t size, void *p);
   static void delete_TProofPlayerSlave(void *p);
   static void deleteArray_TProofPlayerSlave(void *p);
   static void destruct_TProofPlayerSlave(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofPlayerSlave*)
   {
      ::TProofPlayerSlave *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofPlayerSlave >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofPlayerSlave", ::TProofPlayerSlave::Class_Version(), "include/TProofPlayer.h", 326,
                  typeid(::TProofPlayerSlave), DefineBehavior(ptr, ptr),
                  &::TProofPlayerSlave::Dictionary, isa_proxy, 4,
                  sizeof(::TProofPlayerSlave) );
      instance.SetNew(&new_TProofPlayerSlave);
      instance.SetNewArray(&newArray_TProofPlayerSlave);
      instance.SetDelete(&delete_TProofPlayerSlave);
      instance.SetDeleteArray(&deleteArray_TProofPlayerSlave);
      instance.SetDestructor(&destruct_TProofPlayerSlave);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofPlayerSlave*)
   {
      return GenerateInitInstanceLocal((::TProofPlayerSlave*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofPlayerSlave*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofPlayerSuperMaster_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TProofPlayerSuperMaster(void *p = 0);
   static void *newArray_TProofPlayerSuperMaster(Long_t size, void *p);
   static void delete_TProofPlayerSuperMaster(void *p);
   static void deleteArray_TProofPlayerSuperMaster(void *p);
   static void destruct_TProofPlayerSuperMaster(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofPlayerSuperMaster*)
   {
      ::TProofPlayerSuperMaster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofPlayerSuperMaster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofPlayerSuperMaster", ::TProofPlayerSuperMaster::Class_Version(), "include/TProofPlayer.h", 349,
                  typeid(::TProofPlayerSuperMaster), DefineBehavior(ptr, ptr),
                  &::TProofPlayerSuperMaster::Dictionary, isa_proxy, 4,
                  sizeof(::TProofPlayerSuperMaster) );
      instance.SetNew(&new_TProofPlayerSuperMaster);
      instance.SetNewArray(&newArray_TProofPlayerSuperMaster);
      instance.SetDelete(&delete_TProofPlayerSuperMaster);
      instance.SetDeleteArray(&deleteArray_TProofPlayerSuperMaster);
      instance.SetDestructor(&destruct_TProofPlayerSuperMaster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofPlayerSuperMaster*)
   {
      return GenerateInitInstanceLocal((::TProofPlayerSuperMaster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofPlayerSuperMaster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TDrawFeedback::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDrawFeedback::Class_Name()
{
   return "TDrawFeedback";
}

//______________________________________________________________________________
const char *TDrawFeedback::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDrawFeedback*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDrawFeedback::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDrawFeedback*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDrawFeedback::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDrawFeedback*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDrawFeedback::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDrawFeedback*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEventIter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEventIter::Class_Name()
{
   return "TEventIter";
}

//______________________________________________________________________________
const char *TEventIter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEventIter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEventIter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEventIter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEventIter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEventIter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEventIter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEventIter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEventIterUnit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEventIterUnit::Class_Name()
{
   return "TEventIterUnit";
}

//______________________________________________________________________________
const char *TEventIterUnit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEventIterUnit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEventIterUnit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEventIterUnit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEventIterUnit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEventIterUnit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEventIterUnit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEventIterUnit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEventIterObj::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEventIterObj::Class_Name()
{
   return "TEventIterObj";
}

//______________________________________________________________________________
const char *TEventIterObj::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEventIterObj*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEventIterObj::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEventIterObj*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEventIterObj::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEventIterObj*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEventIterObj::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEventIterObj*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEventIterTree::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEventIterTree::Class_Name()
{
   return "TEventIterTree";
}

//______________________________________________________________________________
const char *TEventIterTree::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEventIterTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEventIterTree::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEventIterTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEventIterTree::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEventIterTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEventIterTree::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEventIterTree*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFileMerger::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFileMerger::Class_Name()
{
   return "TFileMerger";
}

//______________________________________________________________________________
const char *TFileMerger::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFileMerger*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFileMerger::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFileMerger*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFileMerger::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFileMerger*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFileMerger::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFileMerger*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVirtualPacketizer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVirtualPacketizer::Class_Name()
{
   return "TVirtualPacketizer";
}

//______________________________________________________________________________
const char *TVirtualPacketizer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVirtualPacketizer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVirtualPacketizer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVirtualPacketizer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVirtualPacketizer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVirtualPacketizer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVirtualPacketizer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVirtualPacketizer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPacketizer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPacketizer::Class_Name()
{
   return "TPacketizer";
}

//______________________________________________________________________________
const char *TPacketizer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPacketizer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPacketizer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPacketizer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPacketizer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPacketizer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPacketizer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPacketizer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPacketizerAdaptive::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPacketizerAdaptive::Class_Name()
{
   return "TPacketizerAdaptive";
}

//______________________________________________________________________________
const char *TPacketizerAdaptive::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPacketizerAdaptive*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPacketizerAdaptive::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPacketizerAdaptive*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPacketizerAdaptive::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPacketizerAdaptive*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPacketizerAdaptive::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPacketizerAdaptive*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPacketizerUnit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPacketizerUnit::Class_Name()
{
   return "TPacketizerUnit";
}

//______________________________________________________________________________
const char *TPacketizerUnit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPacketizerUnit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPacketizerUnit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPacketizerUnit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPacketizerUnit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPacketizerUnit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPacketizerUnit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPacketizerUnit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPerfEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPerfEvent::Class_Name()
{
   return "TPerfEvent";
}

//______________________________________________________________________________
const char *TPerfEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPerfEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPerfEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPerfEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPerfEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPerfEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPerfEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPerfEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPerfStats::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPerfStats::Class_Name()
{
   return "TPerfStats";
}

//______________________________________________________________________________
const char *TPerfStats::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPerfStats*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPerfStats::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPerfStats*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPerfStats::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPerfStats*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPerfStats::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPerfStats*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofLimitsFinder::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofLimitsFinder::Class_Name()
{
   return "TProofLimitsFinder";
}

//______________________________________________________________________________
const char *TProofLimitsFinder::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofLimitsFinder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofLimitsFinder::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofLimitsFinder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofLimitsFinder::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofLimitsFinder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofLimitsFinder::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofLimitsFinder*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofOutputFile::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofOutputFile::Class_Name()
{
   return "TProofOutputFile";
}

//______________________________________________________________________________
const char *TProofOutputFile::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofOutputFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofOutputFile::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofOutputFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofOutputFile::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofOutputFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofOutputFile::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofOutputFile*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofPlayer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofPlayer::Class_Name()
{
   return "TProofPlayer";
}

//______________________________________________________________________________
const char *TProofPlayer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofPlayer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofPlayer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofPlayer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofPlayerLite::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofPlayerLite::Class_Name()
{
   return "TProofPlayerLite";
}

//______________________________________________________________________________
const char *TProofPlayerLite::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerLite*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofPlayerLite::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerLite*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofPlayerLite::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerLite*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofPlayerLite::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerLite*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofPlayerRemote::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofPlayerRemote::Class_Name()
{
   return "TProofPlayerRemote";
}

//______________________________________________________________________________
const char *TProofPlayerRemote::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerRemote*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofPlayerRemote::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerRemote*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofPlayerRemote::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerRemote*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofPlayerRemote::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerRemote*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TStatus::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TStatus::Class_Name()
{
   return "TStatus";
}

//______________________________________________________________________________
const char *TStatus::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TStatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TStatus::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TStatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TStatus::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TStatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TStatus::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TStatus*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofPlayerLocal::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofPlayerLocal::Class_Name()
{
   return "TProofPlayerLocal";
}

//______________________________________________________________________________
const char *TProofPlayerLocal::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerLocal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofPlayerLocal::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerLocal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofPlayerLocal::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerLocal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofPlayerLocal::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerLocal*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofPlayerSlave::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofPlayerSlave::Class_Name()
{
   return "TProofPlayerSlave";
}

//______________________________________________________________________________
const char *TProofPlayerSlave::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerSlave*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofPlayerSlave::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerSlave*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofPlayerSlave::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerSlave*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofPlayerSlave::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerSlave*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofPlayerSuperMaster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofPlayerSuperMaster::Class_Name()
{
   return "TProofPlayerSuperMaster";
}

//______________________________________________________________________________
const char *TProofPlayerSuperMaster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerSuperMaster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofPlayerSuperMaster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerSuperMaster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofPlayerSuperMaster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerSuperMaster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofPlayerSuperMaster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofPlayerSuperMaster*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TProofPlayer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofPlayer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TProofPlayer::Class(),this);
   } else {
      R__b.WriteClassBuffer(TProofPlayer::Class(),this);
   }
}

//______________________________________________________________________________
void TProofPlayer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofPlayer.
      TClass *R__cl = ::TProofPlayer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fAutoBins", &fAutoBins);
      R__insp.Inspect(R__cl, R__parent, "*fInput", &fInput);
      R__insp.Inspect(R__cl, R__parent, "*fOutput", &fOutput);
      R__insp.Inspect(R__cl, R__parent, "*fSelector", &fSelector);
      R__insp.Inspect(R__cl, R__parent, "*fSelectorClass", &fSelectorClass);
      R__insp.Inspect(R__cl, R__parent, "*fFeedbackTimer", &fFeedbackTimer);
      R__insp.Inspect(R__cl, R__parent, "fFeedbackPeriod", &fFeedbackPeriod);
      R__insp.Inspect(R__cl, R__parent, "*fEvIter", &fEvIter);
      R__insp.Inspect(R__cl, R__parent, "*fSelStatus", &fSelStatus);
      R__insp.Inspect(R__cl, R__parent, "fExitStatus", &fExitStatus);
      R__insp.Inspect(R__cl, R__parent, "fTotalEvents", &fTotalEvents);
      R__insp.Inspect(R__cl, R__parent, "*fProgressStatus", &fProgressStatus);
      R__insp.Inspect(R__cl, R__parent, "*fQueryResults", &fQueryResults);
      R__insp.Inspect(R__cl, R__parent, "*fQuery", &fQuery);
      R__insp.Inspect(R__cl, R__parent, "*fPreviousQuery", &fPreviousQuery);
      R__insp.Inspect(R__cl, R__parent, "fDrawQueries", &fDrawQueries);
      R__insp.Inspect(R__cl, R__parent, "fMaxDrawQueries", &fMaxDrawQueries);
      R__insp.Inspect(R__cl, R__parent, "*fStopTimer", &fStopTimer);
      R__insp.Inspect(R__cl, R__parent, "*fStopTimerMtx", &fStopTimerMtx);
      R__insp.Inspect(R__cl, R__parent, "*fDispatchTimer", &fDispatchTimer);
      TVirtualProofPlayer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofPlayer(void *p) {
      return  p ? new(p) ::TProofPlayer : new ::TProofPlayer;
   }
   static void *newArray_TProofPlayer(Long_t nElements, void *p) {
      return p ? new(p) ::TProofPlayer[nElements] : new ::TProofPlayer[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofPlayer(void *p) {
      delete ((::TProofPlayer*)p);
   }
   static void deleteArray_TProofPlayer(void *p) {
      delete [] ((::TProofPlayer*)p);
   }
   static void destruct_TProofPlayer(void *p) {
      typedef ::TProofPlayer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofPlayer

//______________________________________________________________________________
void TProofPlayerLite::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofPlayerLite.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TProofPlayerLite::Class(),this);
   } else {
      R__b.WriteClassBuffer(TProofPlayerLite::Class(),this);
   }
}

//______________________________________________________________________________
void TProofPlayerLite::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofPlayerLite.
      TClass *R__cl = ::TProofPlayerLite::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TProofPlayerRemote::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofPlayerLite(void *p) {
      return  p ? new(p) ::TProofPlayerLite : new ::TProofPlayerLite;
   }
   static void *newArray_TProofPlayerLite(Long_t nElements, void *p) {
      return p ? new(p) ::TProofPlayerLite[nElements] : new ::TProofPlayerLite[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofPlayerLite(void *p) {
      delete ((::TProofPlayerLite*)p);
   }
   static void deleteArray_TProofPlayerLite(void *p) {
      delete [] ((::TProofPlayerLite*)p);
   }
   static void destruct_TProofPlayerLite(void *p) {
      typedef ::TProofPlayerLite current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofPlayerLite

//______________________________________________________________________________
void TProofPlayerLocal::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofPlayerLocal.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TProofPlayerLocal::Class(),this);
   } else {
      R__b.WriteClassBuffer(TProofPlayerLocal::Class(),this);
   }
}

//______________________________________________________________________________
void TProofPlayerLocal::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofPlayerLocal.
      TClass *R__cl = ::TProofPlayerLocal::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fIsClient", &fIsClient);
      TProofPlayer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofPlayerLocal(void *p) {
      return  p ? new(p) ::TProofPlayerLocal : new ::TProofPlayerLocal;
   }
   static void *newArray_TProofPlayerLocal(Long_t nElements, void *p) {
      return p ? new(p) ::TProofPlayerLocal[nElements] : new ::TProofPlayerLocal[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofPlayerLocal(void *p) {
      delete ((::TProofPlayerLocal*)p);
   }
   static void deleteArray_TProofPlayerLocal(void *p) {
      delete [] ((::TProofPlayerLocal*)p);
   }
   static void destruct_TProofPlayerLocal(void *p) {
      typedef ::TProofPlayerLocal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofPlayerLocal

//______________________________________________________________________________
void TProofPlayerRemote::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofPlayerRemote.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TProofPlayerRemote::Class(),this);
   } else {
      R__b.WriteClassBuffer(TProofPlayerRemote::Class(),this);
   }
}

//______________________________________________________________________________
void TProofPlayerRemote::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofPlayerRemote.
      TClass *R__cl = ::TProofPlayerRemote::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fProof", &fProof);
      R__insp.Inspect(R__cl, R__parent, "*fOutputLists", &fOutputLists);
      R__insp.Inspect(R__cl, R__parent, "*fFeedback", &fFeedback);
      R__insp.Inspect(R__cl, R__parent, "*fFeedbackLists", &fFeedbackLists);
      R__insp.Inspect(R__cl, R__parent, "*fPacketizer", &fPacketizer);
      R__insp.Inspect(R__cl, R__parent, "fMergeFiles", &fMergeFiles);
      R__insp.Inspect(R__cl, R__parent, "*fDSet", &fDSet);
      R__insp.Inspect(R__cl, R__parent, "*fErrorHandler", &fErrorHandler);
      TProofPlayer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofPlayerRemote(void *p) {
      return  p ? new(p) ::TProofPlayerRemote : new ::TProofPlayerRemote;
   }
   static void *newArray_TProofPlayerRemote(Long_t nElements, void *p) {
      return p ? new(p) ::TProofPlayerRemote[nElements] : new ::TProofPlayerRemote[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofPlayerRemote(void *p) {
      delete ((::TProofPlayerRemote*)p);
   }
   static void deleteArray_TProofPlayerRemote(void *p) {
      delete [] ((::TProofPlayerRemote*)p);
   }
   static void destruct_TProofPlayerRemote(void *p) {
      typedef ::TProofPlayerRemote current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofPlayerRemote

//______________________________________________________________________________
void TProofPlayerSlave::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofPlayerSlave.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TProofPlayerSlave::Class(),this);
   } else {
      R__b.WriteClassBuffer(TProofPlayerSlave::Class(),this);
   }
}

//______________________________________________________________________________
void TProofPlayerSlave::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofPlayerSlave.
      TClass *R__cl = ::TProofPlayerSlave::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSocket", &fSocket);
      R__insp.Inspect(R__cl, R__parent, "*fFeedback", &fFeedback);
      TProofPlayer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofPlayerSlave(void *p) {
      return  p ? new(p) ::TProofPlayerSlave : new ::TProofPlayerSlave;
   }
   static void *newArray_TProofPlayerSlave(Long_t nElements, void *p) {
      return p ? new(p) ::TProofPlayerSlave[nElements] : new ::TProofPlayerSlave[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofPlayerSlave(void *p) {
      delete ((::TProofPlayerSlave*)p);
   }
   static void deleteArray_TProofPlayerSlave(void *p) {
      delete [] ((::TProofPlayerSlave*)p);
   }
   static void destruct_TProofPlayerSlave(void *p) {
      typedef ::TProofPlayerSlave current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofPlayerSlave

//______________________________________________________________________________
void TProofPlayerSuperMaster::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofPlayerSuperMaster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TProofPlayerSuperMaster::Class(),this);
   } else {
      R__b.WriteClassBuffer(TProofPlayerSuperMaster::Class(),this);
   }
}

//______________________________________________________________________________
void TProofPlayerSuperMaster::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofPlayerSuperMaster.
      TClass *R__cl = ::TProofPlayerSuperMaster::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fSlaveProgress", &fSlaveProgress);
      fSlaveProgress.ShowMembers(R__insp, strcat(R__parent,"fSlaveProgress.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSlaveTotals", &fSlaveTotals);
      fSlaveTotals.ShowMembers(R__insp, strcat(R__parent,"fSlaveTotals.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSlaveBytesRead", &fSlaveBytesRead);
      fSlaveBytesRead.ShowMembers(R__insp, strcat(R__parent,"fSlaveBytesRead.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSlaveInitTime", &fSlaveInitTime);
      fSlaveInitTime.ShowMembers(R__insp, strcat(R__parent,"fSlaveInitTime.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSlaveProcTime", &fSlaveProcTime);
      fSlaveProcTime.ShowMembers(R__insp, strcat(R__parent,"fSlaveProcTime.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSlaveEvtRti", &fSlaveEvtRti);
      fSlaveEvtRti.ShowMembers(R__insp, strcat(R__parent,"fSlaveEvtRti.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSlaveMBRti", &fSlaveMBRti);
      fSlaveMBRti.ShowMembers(R__insp, strcat(R__parent,"fSlaveMBRti.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSlaveActW", &fSlaveActW);
      fSlaveActW.ShowMembers(R__insp, strcat(R__parent,"fSlaveActW.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSlaveTotS", &fSlaveTotS);
      fSlaveTotS.ShowMembers(R__insp, strcat(R__parent,"fSlaveTotS.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSlaveEffS", &fSlaveEffS);
      fSlaveEffS.ShowMembers(R__insp, strcat(R__parent,"fSlaveEffS.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSlaves", &fSlaves);
      fSlaves.ShowMembers(R__insp, strcat(R__parent,"fSlaves.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fReturnFeedback", &fReturnFeedback);
      TProofPlayerRemote::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofPlayerSuperMaster(void *p) {
      return  p ? new(p) ::TProofPlayerSuperMaster : new ::TProofPlayerSuperMaster;
   }
   static void *newArray_TProofPlayerSuperMaster(Long_t nElements, void *p) {
      return p ? new(p) ::TProofPlayerSuperMaster[nElements] : new ::TProofPlayerSuperMaster[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofPlayerSuperMaster(void *p) {
      delete ((::TProofPlayerSuperMaster*)p);
   }
   static void deleteArray_TProofPlayerSuperMaster(void *p) {
      delete [] ((::TProofPlayerSuperMaster*)p);
   }
   static void destruct_TProofPlayerSuperMaster(void *p) {
      typedef ::TProofPlayerSuperMaster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofPlayerSuperMaster

//______________________________________________________________________________
void TVirtualPacketizer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TVirtualPacketizer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TVirtualPacketizer::Class(),this);
   } else {
      R__b.WriteClassBuffer(TVirtualPacketizer::Class(),this);
   }
}

//______________________________________________________________________________
void TVirtualPacketizer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TVirtualPacketizer.
      TClass *R__cl = ::TVirtualPacketizer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fProgressStatus", &fProgressStatus);
      R__insp.Inspect(R__cl, R__parent, "*fProgress", &fProgress);
      R__insp.Inspect(R__cl, R__parent, "fTotalEntries", &fTotalEntries);
      R__insp.Inspect(R__cl, R__parent, "*fFailedPackets", &fFailedPackets);
      R__insp.Inspect(R__cl, R__parent, "fStartTime", &fStartTime);
      R__insp.Inspect(R__cl, R__parent, "fInitTime", &fInitTime);
      R__insp.Inspect(R__cl, R__parent, "fProcTime", &fProcTime);
      R__insp.Inspect(R__cl, R__parent, "fTimeUpdt", &fTimeUpdt);
      R__insp.Inspect(R__cl, R__parent, "*fCircProg", &fCircProg);
      R__insp.Inspect(R__cl, R__parent, "fCircN", &fCircN);
      R__insp.Inspect(R__cl, R__parent, "fUseEstOpt", &fUseEstOpt);
      R__insp.Inspect(R__cl, R__parent, "fValid", &fValid);
      R__insp.Inspect(R__cl, R__parent, "fStop", &fStop);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TVirtualPacketizer(void *p) {
      delete ((::TVirtualPacketizer*)p);
   }
   static void deleteArray_TVirtualPacketizer(void *p) {
      delete [] ((::TVirtualPacketizer*)p);
   }
   static void destruct_TVirtualPacketizer(void *p) {
      typedef ::TVirtualPacketizer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVirtualPacketizer

//______________________________________________________________________________
void TPacketizer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPacketizer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPacketizer::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPacketizer::Class(),this);
   }
}

//______________________________________________________________________________
void TPacketizer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPacketizer.
      TClass *R__cl = ::TPacketizer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fPackets", &fPackets);
      R__insp.Inspect(R__cl, R__parent, "*fFileNodes", &fFileNodes);
      R__insp.Inspect(R__cl, R__parent, "*fUnAllocated", &fUnAllocated);
      R__insp.Inspect(R__cl, R__parent, "*fActive", &fActive);
      R__insp.Inspect(R__cl, R__parent, "*fSlaveStats", &fSlaveStats);
      R__insp.Inspect(R__cl, R__parent, "fPacketSize", &fPacketSize);
      R__insp.Inspect(R__cl, R__parent, "fMaxPerfIdx", &fMaxPerfIdx);
      R__insp.Inspect(R__cl, R__parent, "fMaxSlaveCnt", &fMaxSlaveCnt);
      R__insp.Inspect(R__cl, R__parent, "fPacketAsAFraction", &fPacketAsAFraction);
      TVirtualPacketizer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TPacketizer(void *p) {
      delete ((::TPacketizer*)p);
   }
   static void deleteArray_TPacketizer(void *p) {
      delete [] ((::TPacketizer*)p);
   }
   static void destruct_TPacketizer(void *p) {
      typedef ::TPacketizer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPacketizer

//______________________________________________________________________________
void TPacketizerUnit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPacketizerUnit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPacketizerUnit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPacketizerUnit::Class(),this);
   }
}

//______________________________________________________________________________
void TPacketizerUnit::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPacketizerUnit.
      TClass *R__cl = ::TPacketizerUnit::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fPackets", &fPackets);
      R__insp.Inspect(R__cl, R__parent, "*fSlaveStats", &fSlaveStats);
      R__insp.Inspect(R__cl, R__parent, "*fStopwatch", &fStopwatch);
      R__insp.Inspect(R__cl, R__parent, "fProcessing", &fProcessing);
      R__insp.Inspect(R__cl, R__parent, "fAssigned", &fAssigned);
      R__insp.Inspect(R__cl, R__parent, "fTimeLimit", &fTimeLimit);
      TVirtualPacketizer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TPacketizerUnit(void *p) {
      delete ((::TPacketizerUnit*)p);
   }
   static void deleteArray_TPacketizerUnit(void *p) {
      delete [] ((::TPacketizerUnit*)p);
   }
   static void destruct_TPacketizerUnit(void *p) {
      typedef ::TPacketizerUnit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPacketizerUnit

//______________________________________________________________________________
void TPacketizerAdaptive::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPacketizerAdaptive.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPacketizerAdaptive::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPacketizerAdaptive::Class(),this);
   }
}

//______________________________________________________________________________
void TPacketizerAdaptive::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPacketizerAdaptive.
      TClass *R__cl = ::TPacketizerAdaptive::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fFileNodes", &fFileNodes);
      R__insp.Inspect(R__cl, R__parent, "*fUnAllocated", &fUnAllocated);
      R__insp.Inspect(R__cl, R__parent, "*fActive", &fActive);
      R__insp.Inspect(R__cl, R__parent, "*fSlaveStats", &fSlaveStats);
      R__insp.Inspect(R__cl, R__parent, "fMaxPerfIdx", &fMaxPerfIdx);
      R__insp.Inspect(R__cl, R__parent, "fFractionOfRemoteFiles", &fFractionOfRemoteFiles);
      R__insp.Inspect(R__cl, R__parent, "fNEventsOnRemLoc", &fNEventsOnRemLoc);
      R__insp.Inspect(R__cl, R__parent, "fBaseLocalPreference", &fBaseLocalPreference);
      R__insp.Inspect(R__cl, R__parent, "fForceLocal", &fForceLocal);
      TVirtualPacketizer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TPacketizerAdaptive(void *p) {
      delete ((::TPacketizerAdaptive*)p);
   }
   static void deleteArray_TPacketizerAdaptive(void *p) {
      delete [] ((::TPacketizerAdaptive*)p);
   }
   static void destruct_TPacketizerAdaptive(void *p) {
      typedef ::TPacketizerAdaptive current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPacketizerAdaptive

//______________________________________________________________________________
void TEventIter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEventIter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEventIter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEventIter::Class(),this);
   }
}

//______________________________________________________________________________
void TEventIter::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TEventIter.
      TClass *R__cl = ::TEventIter::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fDSet", &fDSet);
      R__insp.Inspect(R__cl, R__parent, "*fElem", &fElem);
      R__insp.Inspect(R__cl, R__parent, "fFilename", &fFilename);
      fFilename.ShowMembers(R__insp, strcat(R__parent,"fFilename.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fFile", &fFile);
      R__insp.Inspect(R__cl, R__parent, "fOldBytesRead", &fOldBytesRead);
      R__insp.Inspect(R__cl, R__parent, "fPath", &fPath);
      fPath.ShowMembers(R__insp, strcat(R__parent,"fPath.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fDir", &fDir);
      R__insp.Inspect(R__cl, R__parent, "fElemFirst", &fElemFirst);
      R__insp.Inspect(R__cl, R__parent, "fElemNum", &fElemNum);
      R__insp.Inspect(R__cl, R__parent, "fElemCur", &fElemCur);
      R__insp.Inspect(R__cl, R__parent, "*fSel", &fSel);
      R__insp.Inspect(R__cl, R__parent, "fFirst", &fFirst);
      R__insp.Inspect(R__cl, R__parent, "fNum", &fNum);
      R__insp.Inspect(R__cl, R__parent, "fCur", &fCur);
      R__insp.Inspect(R__cl, R__parent, "fStop", &fStop);
      R__insp.Inspect(R__cl, R__parent, "*fEventList", &fEventList);
      R__insp.Inspect(R__cl, R__parent, "fEventListPos", &fEventListPos);
      R__insp.Inspect(R__cl, R__parent, "*fEntryList", &fEntryList);
      R__insp.Inspect(R__cl, R__parent, "fEntryListPos", &fEntryListPos);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TEventIter(void *p) {
      delete ((::TEventIter*)p);
   }
   static void deleteArray_TEventIter(void *p) {
      delete [] ((::TEventIter*)p);
   }
   static void destruct_TEventIter(void *p) {
      typedef ::TEventIter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEventIter

//______________________________________________________________________________
void TEventIterUnit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEventIterUnit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEventIterUnit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEventIterUnit::Class(),this);
   }
}

//______________________________________________________________________________
void TEventIterUnit::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TEventIterUnit.
      TClass *R__cl = ::TEventIterUnit::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNum", &fNum);
      R__insp.Inspect(R__cl, R__parent, "fCurrent", &fCurrent);
      TEventIter::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEventIterUnit(void *p) {
      return  p ? new(p) ::TEventIterUnit : new ::TEventIterUnit;
   }
   static void *newArray_TEventIterUnit(Long_t nElements, void *p) {
      return p ? new(p) ::TEventIterUnit[nElements] : new ::TEventIterUnit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEventIterUnit(void *p) {
      delete ((::TEventIterUnit*)p);
   }
   static void deleteArray_TEventIterUnit(void *p) {
      delete [] ((::TEventIterUnit*)p);
   }
   static void destruct_TEventIterUnit(void *p) {
      typedef ::TEventIterUnit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEventIterUnit

//______________________________________________________________________________
void TEventIterObj::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEventIterObj.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEventIterObj::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEventIterObj::Class(),this);
   }
}

//______________________________________________________________________________
void TEventIterObj::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TEventIterObj.
      TClass *R__cl = ::TEventIterObj::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fClassName", &fClassName);
      fClassName.ShowMembers(R__insp, strcat(R__parent,"fClassName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fKeys", &fKeys);
      R__insp.Inspect(R__cl, R__parent, "*fNextKey", &fNextKey);
      R__insp.Inspect(R__cl, R__parent, "*fObj", &fObj);
      TEventIter::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEventIterObj(void *p) {
      return  p ? new(p) ::TEventIterObj : new ::TEventIterObj;
   }
   static void *newArray_TEventIterObj(Long_t nElements, void *p) {
      return p ? new(p) ::TEventIterObj[nElements] : new ::TEventIterObj[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEventIterObj(void *p) {
      delete ((::TEventIterObj*)p);
   }
   static void deleteArray_TEventIterObj(void *p) {
      delete [] ((::TEventIterObj*)p);
   }
   static void destruct_TEventIterObj(void *p) {
      typedef ::TEventIterObj current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEventIterObj

//______________________________________________________________________________
void TEventIterTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEventIterTree.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEventIterTree::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEventIterTree::Class(),this);
   }
}

//______________________________________________________________________________
void TEventIterTree::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TEventIterTree.
      TClass *R__cl = ::TEventIterTree::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fTreeName", &fTreeName);
      fTreeName.ShowMembers(R__insp, strcat(R__parent,"fTreeName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "*fTreeCache", &fTreeCache);
      R__insp.Inspect(R__cl, R__parent, "fTreeCacheIsLearning", &fTreeCacheIsLearning);
      R__insp.Inspect(R__cl, R__parent, "fUseTreeCache", &fUseTreeCache);
      R__insp.Inspect(R__cl, R__parent, "fCacheSize", &fCacheSize);
      R__insp.Inspect(R__cl, R__parent, "fUseParallelUnzip", &fUseParallelUnzip);
      R__insp.Inspect(R__cl, R__parent, "*fFileTrees", &fFileTrees);
      TEventIter::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEventIterTree(void *p) {
      return  p ? new(p) ::TEventIterTree : new ::TEventIterTree;
   }
   static void *newArray_TEventIterTree(Long_t nElements, void *p) {
      return p ? new(p) ::TEventIterTree[nElements] : new ::TEventIterTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEventIterTree(void *p) {
      delete ((::TEventIterTree*)p);
   }
   static void deleteArray_TEventIterTree(void *p) {
      delete [] ((::TEventIterTree*)p);
   }
   static void destruct_TEventIterTree(void *p) {
      typedef ::TEventIterTree current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEventIterTree

//______________________________________________________________________________
void TPerfStats::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPerfStats.

   TVirtualPerfStats::Streamer(R__b);
}

//______________________________________________________________________________
void TPerfStats::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPerfStats.
      TClass *R__cl = ::TPerfStats::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTrace", &fTrace);
      R__insp.Inspect(R__cl, R__parent, "fTzero", &fTzero);
      fTzero.ShowMembers(R__insp, strcat(R__parent,"fTzero.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fPerfEvent", &fPerfEvent);
      R__insp.Inspect(R__cl, R__parent, "*fPacketsHist", &fPacketsHist);
      R__insp.Inspect(R__cl, R__parent, "*fEventsHist", &fEventsHist);
      R__insp.Inspect(R__cl, R__parent, "*fNodeHist", &fNodeHist);
      R__insp.Inspect(R__cl, R__parent, "*fLatencyHist", &fLatencyHist);
      R__insp.Inspect(R__cl, R__parent, "*fProcTimeHist", &fProcTimeHist);
      R__insp.Inspect(R__cl, R__parent, "*fCpuTimeHist", &fCpuTimeHist);
      R__insp.Inspect(R__cl, R__parent, "fBytesRead", &fBytesRead);
      R__insp.Inspect(R__cl, R__parent, "fTotCpuTime", &fTotCpuTime);
      R__insp.Inspect(R__cl, R__parent, "fTotBytesRead", &fTotBytesRead);
      R__insp.Inspect(R__cl, R__parent, "fTotEvents", &fTotEvents);
      R__insp.Inspect(R__cl, R__parent, "fNumEvents", &fNumEvents);
      R__insp.Inspect(R__cl, R__parent, "fSlaves", &fSlaves);
      R__insp.Inspect(R__cl, R__parent, "fDoHist", &fDoHist);
      R__insp.Inspect(R__cl, R__parent, "fDoTrace", &fDoTrace);
      R__insp.Inspect(R__cl, R__parent, "fDoTraceRate", &fDoTraceRate);
      R__insp.Inspect(R__cl, R__parent, "fDoSlaveTrace", &fDoSlaveTrace);
      R__insp.Inspect(R__cl, R__parent, "fDoQuota", &fDoQuota);
      R__insp.Inspect(R__cl, R__parent, "*fMonitoringWriter", &fMonitoringWriter);
      TVirtualPerfStats::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TPerfStats(void *p) {
      delete ((::TPerfStats*)p);
   }
   static void deleteArray_TPerfStats(void *p) {
      delete [] ((::TPerfStats*)p);
   }
   static void destruct_TPerfStats(void *p) {
      typedef ::TPerfStats current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPerfStats

//______________________________________________________________________________
void TPerfEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPerfEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPerfEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPerfEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TPerfEvent::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPerfEvent.
      TClass *R__cl = ::TPerfEvent::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fEvtNode", &fEvtNode);
      fEvtNode.ShowMembers(R__insp, strcat(R__parent,"fEvtNode.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTimeStamp", &fTimeStamp);
      fTimeStamp.ShowMembers(R__insp, strcat(R__parent,"fTimeStamp.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      R__insp.Inspect(R__cl, R__parent, "fSlaveName", &fSlaveName);
      fSlaveName.ShowMembers(R__insp, strcat(R__parent,"fSlaveName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fNodeName", &fNodeName);
      fNodeName.ShowMembers(R__insp, strcat(R__parent,"fNodeName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fFileName", &fFileName);
      fFileName.ShowMembers(R__insp, strcat(R__parent,"fFileName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fFileClass", &fFileClass);
      fFileClass.ShowMembers(R__insp, strcat(R__parent,"fFileClass.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSlave", &fSlave);
      fSlave.ShowMembers(R__insp, strcat(R__parent,"fSlave.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fEventsProcessed", &fEventsProcessed);
      R__insp.Inspect(R__cl, R__parent, "fBytesRead", &fBytesRead);
      R__insp.Inspect(R__cl, R__parent, "fLen", &fLen);
      R__insp.Inspect(R__cl, R__parent, "fLatency", &fLatency);
      R__insp.Inspect(R__cl, R__parent, "fProcTime", &fProcTime);
      R__insp.Inspect(R__cl, R__parent, "fCpuTime", &fCpuTime);
      R__insp.Inspect(R__cl, R__parent, "fIsStart", &fIsStart);
      R__insp.Inspect(R__cl, R__parent, "fIsOk", &fIsOk);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPerfEvent(void *p) {
      return  p ? new(p) ::TPerfEvent : new ::TPerfEvent;
   }
   static void *newArray_TPerfEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TPerfEvent[nElements] : new ::TPerfEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPerfEvent(void *p) {
      delete ((::TPerfEvent*)p);
   }
   static void deleteArray_TPerfEvent(void *p) {
      delete [] ((::TPerfEvent*)p);
   }
   static void destruct_TPerfEvent(void *p) {
      typedef ::TPerfEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPerfEvent

//______________________________________________________________________________
void TProofLimitsFinder::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofLimitsFinder.

   THLimitsFinder::Streamer(R__b);
}

//______________________________________________________________________________
void TProofLimitsFinder::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofLimitsFinder.
      TClass *R__cl = ::TProofLimitsFinder::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      THLimitsFinder::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofLimitsFinder(void *p) {
      return  p ? new(p) ::TProofLimitsFinder : new ::TProofLimitsFinder;
   }
   static void *newArray_TProofLimitsFinder(Long_t nElements, void *p) {
      return p ? new(p) ::TProofLimitsFinder[nElements] : new ::TProofLimitsFinder[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofLimitsFinder(void *p) {
      delete ((::TProofLimitsFinder*)p);
   }
   static void deleteArray_TProofLimitsFinder(void *p) {
      delete [] ((::TProofLimitsFinder*)p);
   }
   static void destruct_TProofLimitsFinder(void *p) {
      typedef ::TProofLimitsFinder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofLimitsFinder

//______________________________________________________________________________
void TDrawFeedback::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDrawFeedback.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TDrawFeedback::Class(),this);
   } else {
      R__b.WriteClassBuffer(TDrawFeedback::Class(),this);
   }
}

//______________________________________________________________________________
void TDrawFeedback::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDrawFeedback.
      TClass *R__cl = ::TDrawFeedback::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fAll", &fAll);
      R__insp.Inspect(R__cl, R__parent, "*fNames", &fNames);
      R__insp.Inspect(R__cl, R__parent, "*fOption", &fOption);
      R__insp.Inspect(R__cl, R__parent, "*fProof", &fProof);
      TObject::ShowMembers(R__insp, R__parent);
      TQObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDrawFeedback(void *p) {
      return  p ? new(p) ::TDrawFeedback : new ::TDrawFeedback;
   }
   static void *newArray_TDrawFeedback(Long_t nElements, void *p) {
      return p ? new(p) ::TDrawFeedback[nElements] : new ::TDrawFeedback[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDrawFeedback(void *p) {
      delete ((::TDrawFeedback*)p);
   }
   static void deleteArray_TDrawFeedback(void *p) {
      delete [] ((::TDrawFeedback*)p);
   }
   static void destruct_TDrawFeedback(void *p) {
      typedef ::TDrawFeedback current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDrawFeedback

//______________________________________________________________________________
void TStatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class TStatus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TStatus::Class(),this);
   } else {
      R__b.WriteClassBuffer(TStatus::Class(),this);
   }
}

//______________________________________________________________________________
void TStatus::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TStatus.
      TClass *R__cl = ::TStatus::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMsgs", (void*)&fMsgs);
      ::ROOT::GenericShowMembers("TStatus::MsgSet_t", (void*)&fMsgs, R__insp, strcat(R__parent,"fMsgs."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fIter", (void*)&fIter);
      ::ROOT::GenericShowMembers("TStatus::MsgIter_t", (void*)&fIter, R__insp, strcat(R__parent,"fIter."),true);
      R__parent[R__ncp] = 0;
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TStatus(void *p) {
      return  p ? new(p) ::TStatus : new ::TStatus;
   }
   static void *newArray_TStatus(Long_t nElements, void *p) {
      return p ? new(p) ::TStatus[nElements] : new ::TStatus[nElements];
   }
   // Wrapper around operator delete
   static void delete_TStatus(void *p) {
      delete ((::TStatus*)p);
   }
   static void deleteArray_TStatus(void *p) {
      delete [] ((::TStatus*)p);
   }
   static void destruct_TStatus(void *p) {
      typedef ::TStatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TStatus

//______________________________________________________________________________
void TFileMerger::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFileMerger.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TFileMerger::Class(),this);
   } else {
      R__b.WriteClassBuffer(TFileMerger::Class(),this);
   }
}

//______________________________________________________________________________
void TFileMerger::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TFileMerger.
      TClass *R__cl = ::TFileMerger::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fWatch", &fWatch);
      fWatch.ShowMembers(R__insp, strcat(R__parent,"fWatch.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fFileList", &fFileList);
      R__insp.Inspect(R__cl, R__parent, "*fOutputFile", &fOutputFile);
      R__insp.Inspect(R__cl, R__parent, "fOutputFilename", &fOutputFilename);
      fOutputFilename.ShowMembers(R__insp, strcat(R__parent,"fOutputFilename.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fOutputFilename1", &fOutputFilename1);
      fOutputFilename1.ShowMembers(R__insp, strcat(R__parent,"fOutputFilename1.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fFastMethod", &fFastMethod);
      R__insp.Inspect(R__cl, R__parent, "fNoTrees", &fNoTrees);
      R__insp.Inspect(R__cl, R__parent, "fLocal", &fLocal);
      R__insp.Inspect(R__cl, R__parent, "fHistoOneGo", &fHistoOneGo);
      R__insp.Inspect(R__cl, R__parent, "*fMergeList", &fMergeList);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFileMerger(void *p) {
      return  p ? new(p) ::TFileMerger : new ::TFileMerger;
   }
   static void *newArray_TFileMerger(Long_t nElements, void *p) {
      return p ? new(p) ::TFileMerger[nElements] : new ::TFileMerger[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFileMerger(void *p) {
      delete ((::TFileMerger*)p);
   }
   static void deleteArray_TFileMerger(void *p) {
      delete [] ((::TFileMerger*)p);
   }
   static void destruct_TFileMerger(void *p) {
      typedef ::TFileMerger current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFileMerger

//______________________________________________________________________________
void TProofOutputFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofOutputFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TProofOutputFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(TProofOutputFile::Class(),this);
   }
}

//______________________________________________________________________________
void TProofOutputFile::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofOutputFile.
      TClass *R__cl = ::TProofOutputFile::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDir", &fDir);
      fDir.ShowMembers(R__insp, strcat(R__parent,"fDir.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRawDir", &fRawDir);
      fRawDir.ShowMembers(R__insp, strcat(R__parent,"fRawDir.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fFileName", &fFileName);
      fFileName.ShowMembers(R__insp, strcat(R__parent,"fFileName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fOptionsAnchor", &fOptionsAnchor);
      fOptionsAnchor.ShowMembers(R__insp, strcat(R__parent,"fOptionsAnchor.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fOutputFileName", &fOutputFileName);
      fOutputFileName.ShowMembers(R__insp, strcat(R__parent,"fOutputFileName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fWorkerOrdinal", &fWorkerOrdinal);
      fWorkerOrdinal.ShowMembers(R__insp, strcat(R__parent,"fWorkerOrdinal.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLocalHost", &fLocalHost);
      fLocalHost.ShowMembers(R__insp, strcat(R__parent,"fLocalHost.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fIsLocal", &fIsLocal);
      R__insp.Inspect(R__cl, R__parent, "fMerged", &fMerged);
      R__insp.Inspect(R__cl, R__parent, "fRunType", &fRunType);
      R__insp.Inspect(R__cl, R__parent, "fTypeOpt", &fTypeOpt);
      R__insp.Inspect(R__cl, R__parent, "*fDataSet", &fDataSet);
      R__insp.Inspect(R__cl, R__parent, "*fMerger", &fMerger);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofOutputFile(void *p) {
      return  p ? new(p) ::TProofOutputFile : new ::TProofOutputFile;
   }
   static void *newArray_TProofOutputFile(Long_t nElements, void *p) {
      return p ? new(p) ::TProofOutputFile[nElements] : new ::TProofOutputFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofOutputFile(void *p) {
      delete ((::TProofOutputFile*)p);
   }
   static void deleteArray_TProofOutputFile(void *p) {
      delete [] ((::TProofOutputFile*)p);
   }
   static void destruct_TProofOutputFile(void *p) {
      typedef ::TProofOutputFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofOutputFile

namespace ROOT {
   void setlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void setlEstringgR_Dictionary();
   static void *new_setlEstringgR(void *p = 0);
   static void *newArray_setlEstringgR(Long_t size, void *p);
   static void delete_setlEstringgR(void *p);
   static void deleteArray_setlEstringgR(void *p);
   static void destruct_setlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const set<string>*)
   {
      set<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(set<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("set<string>", -2, "prec_stl/set", 49,
                  typeid(set<string>), DefineBehavior(ptr, ptr),
                  0, &setlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(set<string>) );
      instance.SetNew(&new_setlEstringgR);
      instance.SetNewArray(&newArray_setlEstringgR);
      instance.SetDelete(&delete_setlEstringgR);
      instance.SetDeleteArray(&deleteArray_setlEstringgR);
      instance.SetDestructor(&destruct_setlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Insert< set<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const set<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const set<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_setlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<string> : new set<string>;
   }
   static void *newArray_setlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) set<string>[nElements] : new set<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_setlEstringgR(void *p) {
      delete ((set<string>*)p);
   }
   static void deleteArray_setlEstringgR(void *p) {
      delete [] ((set<string>*)p);
   }
   static void destruct_setlEstringgR(void *p) {
      typedef set<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class set<string>

/********************************************************
* proof/proofplayer/src/G__ProofPlayer.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__ProofPlayer();

extern "C" void G__set_cpp_environmentG__ProofPlayer() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TDrawFeedback.h");
  G__add_compiledheader("TEventIter.h");
  G__add_compiledheader("TFileMerger.h");
  G__add_compiledheader("TPacketizerAdaptive.h");
  G__add_compiledheader("TPacketizer.h");
  G__add_compiledheader("TPacketizerUnit.h");
  G__add_compiledheader("TPerfStats.h");
  G__add_compiledheader("TProofLimitsFinder.h");
  G__add_compiledheader("TProofOutputFile.h");
  G__add_compiledheader("TProofPlayer.h");
  G__add_compiledheader("TProofPlayerLite.h");
  G__add_compiledheader("TStatus.h");
  G__add_compiledheader("TVirtualPacketizer.h");
  G__cpp_reset_tagtableG__ProofPlayer();
}
#include <new>
extern "C" int G__cpp_dllrevG__ProofPlayer() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TDrawFeedback */
static int G__G__ProofPlayer_112_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDrawFeedback* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDrawFeedback((TProof*) G__int(libp->para[0]), (TSeqCollection*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TDrawFeedback((TProof*) G__int(libp->para[0]), (TSeqCollection*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDrawFeedback((TProof*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TDrawFeedback((TProof*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TDrawFeedback[n];
       } else {
         p = new((void*) gvp) TDrawFeedback[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TDrawFeedback;
       } else {
         p = new((void*) gvp) TDrawFeedback;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TDrawFeedback));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_112_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDrawFeedback*) G__getstructoffset())->Feedback((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_112_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDrawFeedback*) G__getstructoffset())->SetOption((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_112_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDrawFeedback::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_112_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDrawFeedback::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_112_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDrawFeedback::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_112_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDrawFeedback::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_112_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDrawFeedback*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_112_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDrawFeedback::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_112_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDrawFeedback::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_112_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDrawFeedback::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_112_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDrawFeedback::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDrawFeedback G__TTDrawFeedback;
static int G__G__ProofPlayer_112_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDrawFeedback*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDrawFeedback*) (soff+(sizeof(TDrawFeedback)*i)))->~G__TTDrawFeedback();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDrawFeedback*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDrawFeedback*) (soff))->~G__TTDrawFeedback();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEventIter */
static int G__G__ProofPlayer_122_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((TEventIter*) G__getstructoffset())->GetCacheSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_122_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TEventIter*) G__getstructoffset())->GetLearnEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_122_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((TEventIter*) G__getstructoffset())->GetNextEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_122_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEventIter*) G__getstructoffset())->StopProcess((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_122_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEventIter::Create((TDSet*) G__int(libp->para[0]), (TSelector*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_122_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEventIter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_122_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEventIter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_122_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEventIter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_122_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEventIter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_122_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEventIter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_122_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEventIter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_122_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEventIter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_122_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEventIter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_122_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEventIter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEventIter G__TTEventIter;
static int G__G__ProofPlayer_122_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEventIter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEventIter*) (soff+(sizeof(TEventIter)*i)))->~G__TTEventIter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEventIter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEventIter*) (soff))->~G__TTEventIter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ProofPlayer_122_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEventIter* dest = (TEventIter*) G__getstructoffset();
   *dest = *(TEventIter*) libp->para[0].ref;
   const TEventIter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEventIterUnit */
static int G__G__ProofPlayer_123_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEventIterUnit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEventIterUnit[n];
     } else {
       p = new((void*) gvp) TEventIterUnit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEventIterUnit;
     } else {
       p = new((void*) gvp) TEventIterUnit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterUnit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_123_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEventIterUnit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TEventIterUnit(
(TDSet*) G__int(libp->para[0]), (TSelector*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]));
   } else {
     p = new((void*) gvp) TEventIterUnit(
(TDSet*) G__int(libp->para[0]), (TSelector*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterUnit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_123_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEventIterUnit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_123_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEventIterUnit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_123_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEventIterUnit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_123_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEventIterUnit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_123_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEventIterUnit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_123_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEventIterUnit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_123_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEventIterUnit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_123_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEventIterUnit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_123_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEventIterUnit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ProofPlayer_123_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEventIterUnit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEventIterUnit(*(TEventIterUnit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterUnit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEventIterUnit G__TTEventIterUnit;
static int G__G__ProofPlayer_123_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEventIterUnit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEventIterUnit*) (soff+(sizeof(TEventIterUnit)*i)))->~G__TTEventIterUnit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEventIterUnit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEventIterUnit*) (soff))->~G__TTEventIterUnit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ProofPlayer_123_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEventIterUnit* dest = (TEventIterUnit*) G__getstructoffset();
   *dest = *(TEventIterUnit*) libp->para[0].ref;
   const TEventIterUnit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEventIterObj */
static int G__G__ProofPlayer_124_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEventIterObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEventIterObj[n];
     } else {
       p = new((void*) gvp) TEventIterObj[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEventIterObj;
     } else {
       p = new((void*) gvp) TEventIterObj;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_124_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEventIterObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TEventIterObj(
(TDSet*) G__int(libp->para[0]), (TSelector*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3]));
   } else {
     p = new((void*) gvp) TEventIterObj(
(TDSet*) G__int(libp->para[0]), (TSelector*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_124_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEventIterObj::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_124_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEventIterObj::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_124_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEventIterObj::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_124_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEventIterObj::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_124_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEventIterObj*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_124_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEventIterObj::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_124_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEventIterObj::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_124_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEventIterObj::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_124_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEventIterObj::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ProofPlayer_124_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEventIterObj* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEventIterObj(*(TEventIterObj*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterObj));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEventIterObj G__TTEventIterObj;
static int G__G__ProofPlayer_124_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEventIterObj*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEventIterObj*) (soff+(sizeof(TEventIterObj)*i)))->~G__TTEventIterObj();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEventIterObj*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEventIterObj*) (soff))->~G__TTEventIterObj();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ProofPlayer_124_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEventIterObj* dest = (TEventIterObj*) G__getstructoffset();
   *dest = *(TEventIterObj*) libp->para[0].ref;
   const TEventIterObj& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEventIterTree */
static int G__G__ProofPlayer_125_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEventIterTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEventIterTree[n];
     } else {
       p = new((void*) gvp) TEventIterTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEventIterTree;
     } else {
       p = new((void*) gvp) TEventIterTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_125_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEventIterTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TEventIterTree(
(TDSet*) G__int(libp->para[0]), (TSelector*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3]));
   } else {
     p = new((void*) gvp) TEventIterTree(
(TDSet*) G__int(libp->para[0]), (TSelector*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_125_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEventIterTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_125_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEventIterTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_125_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEventIterTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_125_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEventIterTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_125_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEventIterTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_125_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEventIterTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_125_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEventIterTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_125_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEventIterTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_125_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEventIterTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ProofPlayer_125_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEventIterTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEventIterTree(*(TEventIterTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEventIterTree G__TTEventIterTree;
static int G__G__ProofPlayer_125_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEventIterTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEventIterTree*) (soff+(sizeof(TEventIterTree)*i)))->~G__TTEventIterTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEventIterTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEventIterTree*) (soff))->~G__TTEventIterTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ProofPlayer_125_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEventIterTree* dest = (TEventIterTree*) G__getstructoffset();
   *dest = *(TEventIterTree*) libp->para[0].ref;
   const TEventIterTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFileMerger */
static int G__G__ProofPlayer_129_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFileMerger* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFileMerger((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TFileMerger((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFileMerger((Bool_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TFileMerger((Bool_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TFileMerger[n];
       } else {
         p = new((void*) gvp) TFileMerger[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TFileMerger;
       } else {
         p = new((void*) gvp) TFileMerger;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TFileMerger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TFileMerger*) G__getstructoffset())->GetOutputFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TFileMerger*) G__getstructoffset())->GetMergeList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TFileMerger*) G__getstructoffset())->SetCWD((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TFileMerger*) G__getstructoffset())->GetCWD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFileMerger*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TFileMerger*) G__getstructoffset())->AddFile((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TFileMerger*) G__getstructoffset())->OutputFile((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFileMerger*) G__getstructoffset())->PrintFiles((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((TFileMerger*) G__getstructoffset())->Merge((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TFileMerger*) G__getstructoffset())->Merge());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TFileMerger*) G__getstructoffset())->MergeRecursive((TDirectory*) G__int(libp->para[0]), (TList*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TFileMerger*) G__getstructoffset())->SetFastMethod((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TFileMerger*) G__getstructoffset())->SetFastMethod();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TFileMerger*) G__getstructoffset())->SetNotrees((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TFileMerger*) G__getstructoffset())->SetNotrees();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TFileMerger::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFileMerger::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TFileMerger::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TFileMerger::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFileMerger*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFileMerger::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFileMerger::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFileMerger::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_129_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFileMerger::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFileMerger G__TTFileMerger;
static int G__G__ProofPlayer_129_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFileMerger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFileMerger*) (soff+(sizeof(TFileMerger)*i)))->~G__TTFileMerger();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFileMerger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFileMerger*) (soff))->~G__TTFileMerger();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVirtualPacketizer */
static int G__G__ProofPlayer_143_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TVirtualPacketizer*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TVirtualPacketizer*) G__getstructoffset())->GetEntriesProcessed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TVirtualPacketizer*) G__getstructoffset())->GetEstEntriesProcessed((Float_t) G__double(libp->para[0]), *(Long64_t*) G__Longlongref(&libp->para[1])
, *(Long64_t*) G__Longlongref(&libp->para[2]), *(Long64_t*) G__Longlongref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TVirtualPacketizer*) G__getstructoffset())->GetCurrentRate(*(Bool_t*) G__Boolref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TVirtualPacketizer*) G__getstructoffset())->GetTotalEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TVirtualPacketizer*) G__getstructoffset())->GetNextPacket((TSlave*) G__int(libp->para[0]), (TMessage*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualPacketizer*) G__getstructoffset())->SetInitTime();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualPacketizer*) G__getstructoffset())->StopProcess((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TVirtualPacketizer*) G__getstructoffset())->GetFailedPackets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualPacketizer*) G__getstructoffset())->SetFailedPackets((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TVirtualPacketizer*) G__getstructoffset())->GetBytesRead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TVirtualPacketizer*) G__getstructoffset())->GetReadCalls());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVirtualPacketizer*) G__getstructoffset())->GetCumProcTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TVirtualPacketizer*) G__getstructoffset())->GetInitTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TVirtualPacketizer*) G__getstructoffset())->GetProcTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualPacketizer*) G__getstructoffset())->MarkBad((TSlave*) G__int(libp->para[0]), (TProofProgressStatus*) G__int(libp->para[1])
, (TList**) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TVirtualPacketizer*) G__getstructoffset())->AddProcessed((TSlave*) G__int(libp->para[0]), (TProofProgressStatus*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (TList**) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TVirtualPacketizer*) G__getstructoffset())->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualPacketizer*) G__getstructoffset())->SetProgressStatus((TProofProgressStatus*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TVirtualPacketizer*) G__getstructoffset())->GetActiveWorkers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TVirtualPacketizer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVirtualPacketizer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TVirtualPacketizer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TVirtualPacketizer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualPacketizer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVirtualPacketizer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVirtualPacketizer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVirtualPacketizer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_143_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVirtualPacketizer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVirtualPacketizer G__TTVirtualPacketizer;
static int G__G__ProofPlayer_143_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TVirtualPacketizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TVirtualPacketizer*) (soff+(sizeof(TVirtualPacketizer)*i)))->~G__TTVirtualPacketizer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TVirtualPacketizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TVirtualPacketizer*) (soff))->~G__TTVirtualPacketizer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPacketizer */
static int G__G__ProofPlayer_144_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPacketizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TPacketizer(
(TDSet*) G__int(libp->para[0]), (TList*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (TList*) G__int(libp->para[4]), (TProofProgressStatus*) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) TPacketizer(
(TDSet*) G__int(libp->para[0]), (TList*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (TList*) G__int(libp->para[4]), (TProofProgressStatus*) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_144_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const TPacketizer*) G__getstructoffset())->GetEntriesProcessed((TSlave*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_144_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPacketizer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_144_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPacketizer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_144_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPacketizer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_144_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPacketizer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_144_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPacketizer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_144_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPacketizer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_144_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPacketizer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_144_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPacketizer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_144_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPacketizer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPacketizer G__TTPacketizer;
static int G__G__ProofPlayer_144_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPacketizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPacketizer*) (soff+(sizeof(TPacketizer)*i)))->~G__TTPacketizer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPacketizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPacketizer*) (soff))->~G__TTPacketizer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPacketizerAdaptive */
static int G__G__ProofPlayer_145_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPacketizerAdaptive* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TPacketizerAdaptive(
(TDSet*) G__int(libp->para[0]), (TList*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (TList*) G__int(libp->para[4]), (TProofProgressStatus*) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) TPacketizerAdaptive(
(TDSet*) G__int(libp->para[0]), (TList*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (TList*) G__int(libp->para[4]), (TProofProgressStatus*) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerAdaptive));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_145_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TPacketizerAdaptive*) G__getstructoffset())->CalculatePacketSize((TObject*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_145_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPacketizerAdaptive::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_145_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPacketizerAdaptive::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_145_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPacketizerAdaptive::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_145_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPacketizerAdaptive::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_145_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPacketizerAdaptive*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_145_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPacketizerAdaptive::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_145_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPacketizerAdaptive::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_145_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPacketizerAdaptive::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_145_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPacketizerAdaptive::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPacketizerAdaptive G__TTPacketizerAdaptive;
static int G__G__ProofPlayer_145_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPacketizerAdaptive*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPacketizerAdaptive*) (soff+(sizeof(TPacketizerAdaptive)*i)))->~G__TTPacketizerAdaptive();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPacketizerAdaptive*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPacketizerAdaptive*) (soff))->~G__TTPacketizerAdaptive();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPacketizerUnit */
static int G__G__ProofPlayer_147_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPacketizerUnit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPacketizerUnit(
(TList*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (TList*) G__int(libp->para[2]), (TProofProgressStatus*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TPacketizerUnit(
(TList*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (TList*) G__int(libp->para[2]), (TProofProgressStatus*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPacketizerUnit(
(TList*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (TList*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TPacketizerUnit(
(TList*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (TList*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerUnit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_147_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TPacketizerUnit*) G__getstructoffset())->GetCurrentTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_147_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPacketizerUnit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_147_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPacketizerUnit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_147_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPacketizerUnit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_147_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPacketizerUnit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_147_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPacketizerUnit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_147_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPacketizerUnit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_147_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPacketizerUnit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_147_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPacketizerUnit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_147_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPacketizerUnit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPacketizerUnit G__TTPacketizerUnit;
static int G__G__ProofPlayer_147_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPacketizerUnit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPacketizerUnit*) (soff+(sizeof(TPacketizerUnit)*i)))->~G__TTPacketizerUnit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPacketizerUnit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPacketizerUnit*) (soff))->~G__TTPacketizerUnit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPerfEvent */
static int G__G__ProofPlayer_183_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPerfEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPerfEvent((TTimeStamp*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TPerfEvent((TTimeStamp*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TPerfEvent[n];
       } else {
         p = new((void*) gvp) TPerfEvent[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TPerfEvent;
       } else {
         p = new((void*) gvp) TPerfEvent;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_183_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPerfEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_183_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPerfEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_183_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPerfEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_183_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPerfEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_183_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPerfEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_183_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPerfEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_183_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPerfEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_183_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPerfEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_183_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPerfEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ProofPlayer_183_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TPerfEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TPerfEvent(*(TPerfEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPerfEvent G__TTPerfEvent;
static int G__G__ProofPlayer_183_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPerfEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPerfEvent*) (soff+(sizeof(TPerfEvent)*i)))->~G__TTPerfEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPerfEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPerfEvent*) (soff))->~G__TTPerfEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ProofPlayer_183_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPerfEvent* dest = (TPerfEvent*) G__getstructoffset();
   *dest = *(TPerfEvent*) libp->para[0].ref;
   const TPerfEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPerfStats */
static int G__G__ProofPlayer_184_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPerfStats::Start((TList*) G__int(libp->para[0]), (TList*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_184_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPerfStats::Stop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_184_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPerfStats::Setup((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_184_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPerfStats::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_184_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPerfStats::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_184_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPerfStats::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_184_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPerfStats::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_184_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPerfStats*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_184_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPerfStats::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_184_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPerfStats::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_184_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPerfStats::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_184_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPerfStats::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ProofPlayer_184_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TPerfStats* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TPerfStats(*(TPerfStats*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfStats));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPerfStats G__TTPerfStats;
static int G__G__ProofPlayer_184_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPerfStats*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPerfStats*) (soff+(sizeof(TPerfStats)*i)))->~G__TTPerfStats();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPerfStats*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPerfStats*) (soff))->~G__TTPerfStats();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ProofPlayer_184_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPerfStats* dest = (TPerfStats*) G__getstructoffset();
   *dest = *(TPerfStats*) libp->para[0].ref;
   const TPerfStats& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofLimitsFinder */
static int G__G__ProofPlayer_187_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofLimitsFinder* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofLimitsFinder[n];
     } else {
       p = new((void*) gvp) TProofLimitsFinder[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofLimitsFinder;
     } else {
       p = new((void*) gvp) TProofLimitsFinder;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofLimitsFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_187_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofLimitsFinder::AutoBinFunc(
*(TString*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_187_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofLimitsFinder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_187_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofLimitsFinder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_187_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofLimitsFinder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_187_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofLimitsFinder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_187_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofLimitsFinder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_187_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofLimitsFinder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_187_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofLimitsFinder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_187_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofLimitsFinder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_187_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofLimitsFinder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ProofPlayer_187_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TProofLimitsFinder* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TProofLimitsFinder(*(TProofLimitsFinder*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofLimitsFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofLimitsFinder G__TTProofLimitsFinder;
static int G__G__ProofPlayer_187_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofLimitsFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofLimitsFinder*) (soff+(sizeof(TProofLimitsFinder)*i)))->~G__TTProofLimitsFinder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofLimitsFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofLimitsFinder*) (soff))->~G__TTProofLimitsFinder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ProofPlayer_187_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofLimitsFinder* dest = (TProofLimitsFinder*) G__getstructoffset();
   *dest = *(TProofLimitsFinder*) libp->para[0].ref;
   const TProofLimitsFinder& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofOutputFile */
static int G__G__ProofPlayer_188_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofOutputFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofOutputFile[n];
     } else {
       p = new((void*) gvp) TProofOutputFile[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofOutputFile;
     } else {
       p = new((void*) gvp) TProofOutputFile;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofOutputFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofOutputFile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TProofOutputFile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofOutputFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TProofOutputFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofOutputFile((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofOutputFile((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofOutputFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofOutputFile(
(const char*) G__int(libp->para[0]), (TProofOutputFile::ERunType) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TProofOutputFile(
(const char*) G__int(libp->para[0]), (TProofOutputFile::ERunType) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofOutputFile(
(const char*) G__int(libp->para[0]), (TProofOutputFile::ERunType) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TProofOutputFile(
(const char*) G__int(libp->para[0]), (TProofOutputFile::ERunType) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofOutputFile((const char*) G__int(libp->para[0]), (TProofOutputFile::ERunType) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TProofOutputFile((const char*) G__int(libp->para[0]), (TProofOutputFile::ERunType) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 67, (long) ((const TProofOutputFile*) G__getstructoffset())->GetDir((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 67, (long) ((const TProofOutputFile*) G__getstructoffset())->GetDir());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProofOutputFile*) G__getstructoffset())->GetFileCollection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((TProofOutputFile*) G__getstructoffset())->GetFileMerger((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TProofOutputFile*) G__getstructoffset())->GetFileMerger());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofOutputFile*) G__getstructoffset())->GetFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofOutputFile*) G__getstructoffset())->GetLocalHost());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofOutputFile*) G__getstructoffset())->GetOptionsAnchor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofOutputFile*) G__getstructoffset())->GetOutputFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TProofOutputFile*) G__getstructoffset())->GetWorkerOrdinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TProofOutputFile*) G__getstructoffset())->GetRunType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TProofOutputFile*) G__getstructoffset())->GetTypeOpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofOutputFile*) G__getstructoffset())->IsMerge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofOutputFile*) G__getstructoffset())->IsMerged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TProofOutputFile*) G__getstructoffset())->IsRegister());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProofOutputFile*) G__getstructoffset())->AdoptFile((TFile*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProofOutputFile*) G__getstructoffset())->OpenFile((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((TProofOutputFile*) G__getstructoffset())->Merge((TCollection*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofOutputFile*) G__getstructoffset())->SetOutputFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofOutputFile*) G__getstructoffset())->ResetFileCollection();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofOutputFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofOutputFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofOutputFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofOutputFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofOutputFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofOutputFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofOutputFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofOutputFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_188_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofOutputFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofOutputFile G__TTProofOutputFile;
static int G__G__ProofPlayer_188_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofOutputFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofOutputFile*) (soff+(sizeof(TProofOutputFile)*i)))->~G__TTProofOutputFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofOutputFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofOutputFile*) (soff))->~G__TTProofOutputFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofPlayer */
static int G__G__ProofPlayer_190_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofPlayer*) G__getstructoffset())->StopFeedback();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_190_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofPlayer* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofPlayer((TProof*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofPlayer((TProof*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofPlayer[n];
       } else {
         p = new((void*) gvp) TProofPlayer[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofPlayer;
       } else {
         p = new((void*) gvp) TProofPlayer;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_190_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofPlayer*) G__getstructoffset())->FeedBackCanvas((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_190_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProofPlayer*) G__getstructoffset())->SetProcessing((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProofPlayer*) G__getstructoffset())->SetProcessing();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_190_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofPlayer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_190_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_190_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofPlayer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_190_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofPlayer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_190_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofPlayer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_190_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_190_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofPlayer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_190_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_190_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofPlayer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofPlayer G__TTProofPlayer;
static int G__G__ProofPlayer_190_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofPlayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofPlayer*) (soff+(sizeof(TProofPlayer)*i)))->~G__TTProofPlayer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofPlayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofPlayer*) (soff))->~G__TTProofPlayer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofPlayerLite */
static int G__G__ProofPlayer_246_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofPlayerLite* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofPlayerLite((TProof*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofPlayerLite((TProof*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofPlayerLite[n];
       } else {
         p = new((void*) gvp) TProofPlayerLite[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofPlayerLite;
       } else {
         p = new((void*) gvp) TProofPlayerLite;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLite));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_246_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofPlayerLite::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_246_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayerLite::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_246_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofPlayerLite::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_246_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofPlayerLite::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_246_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofPlayerLite*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_246_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayerLite::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_246_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofPlayerLite::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_246_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayerLite::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_246_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofPlayerLite::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofPlayerLite G__TTProofPlayerLite;
static int G__G__ProofPlayer_246_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofPlayerLite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofPlayerLite*) (soff+(sizeof(TProofPlayerLite)*i)))->~G__TTProofPlayerLite();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofPlayerLite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofPlayerLite*) (soff))->~G__TTProofPlayerLite();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofPlayerRemote */
static int G__G__ProofPlayer_247_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofPlayerRemote* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofPlayerRemote((TProof*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofPlayerRemote((TProof*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofPlayerRemote[n];
       } else {
         p = new((void*) gvp) TProofPlayerRemote[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofPlayerRemote;
       } else {
         p = new((void*) gvp) TProofPlayerRemote;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerRemote));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_247_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProofPlayerRemote*) G__getstructoffset())->RedirectOutput((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProofPlayerRemote*) G__getstructoffset())->RedirectOutput();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_247_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TProofPlayerRemote*) G__getstructoffset())->Incorporate((TObject*) G__int(libp->para[0]), (TList*) G__int(libp->para[1])
, *(Bool_t*) G__Boolref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_247_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TProofPlayerRemote*) G__getstructoffset())->HandleHistogram((TObject*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_247_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofPlayerRemote::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_247_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayerRemote::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_247_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofPlayerRemote::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_247_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofPlayerRemote::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_247_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofPlayerRemote*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_247_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayerRemote::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_247_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofPlayerRemote::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_247_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayerRemote::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_247_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofPlayerRemote::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofPlayerRemote G__TTProofPlayerRemote;
static int G__G__ProofPlayer_247_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofPlayerRemote*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofPlayerRemote*) (soff+(sizeof(TProofPlayerRemote)*i)))->~G__TTProofPlayerRemote();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofPlayerRemote*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofPlayerRemote*) (soff))->~G__TTProofPlayerRemote();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TStatus */
static int G__G__ProofPlayer_252_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TStatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStatus[n];
     } else {
       p = new((void*) gvp) TStatus[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStatus;
     } else {
       p = new((void*) gvp) TStatus;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_252_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TStatus*) G__getstructoffset())->IsOk());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_252_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStatus*) G__getstructoffset())->Add((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_252_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TStatus*) G__getstructoffset())->Merge((TCollection*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_252_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStatus*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_252_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TStatus*) G__getstructoffset())->NextMesg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_252_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TStatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_252_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_252_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TStatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_252_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TStatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_252_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_252_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_252_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TStatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_252_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_252_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TStatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ProofPlayer_252_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TStatus* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TStatus(*(TStatus*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TStatus G__TTStatus;
static int G__G__ProofPlayer_252_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TStatus*) (soff+(sizeof(TStatus)*i)))->~G__TTStatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TStatus*) (soff))->~G__TTStatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ProofPlayer_252_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TStatus* dest = (TStatus*) G__getstructoffset();
   *dest = *(TStatus*) libp->para[0].ref;
   const TStatus& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofPlayerLocal */
static int G__G__ProofPlayer_255_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofPlayerLocal* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofPlayerLocal((Bool_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofPlayerLocal((Bool_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofPlayerLocal[n];
       } else {
         p = new((void*) gvp) TProofPlayerLocal[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofPlayerLocal;
       } else {
         p = new((void*) gvp) TProofPlayerLocal;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLocal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_255_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofPlayerLocal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_255_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayerLocal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_255_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofPlayerLocal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_255_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofPlayerLocal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_255_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofPlayerLocal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_255_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayerLocal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_255_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofPlayerLocal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_255_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayerLocal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_255_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofPlayerLocal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofPlayerLocal G__TTProofPlayerLocal;
static int G__G__ProofPlayer_255_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofPlayerLocal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofPlayerLocal*) (soff+(sizeof(TProofPlayerLocal)*i)))->~G__TTProofPlayerLocal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofPlayerLocal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofPlayerLocal*) (soff))->~G__TTProofPlayerLocal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofPlayerSlave */
static int G__G__ProofPlayer_256_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofPlayerSlave* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofPlayerSlave((TSocket*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofPlayerSlave((TSocket*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofPlayerSlave[n];
       } else {
         p = new((void*) gvp) TProofPlayerSlave[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofPlayerSlave;
       } else {
         p = new((void*) gvp) TProofPlayerSlave;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSlave));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_256_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofPlayerSlave::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_256_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayerSlave::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_256_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofPlayerSlave::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_256_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofPlayerSlave::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_256_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofPlayerSlave*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_256_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayerSlave::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_256_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofPlayerSlave::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_256_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayerSlave::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_256_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofPlayerSlave::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofPlayerSlave G__TTProofPlayerSlave;
static int G__G__ProofPlayer_256_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofPlayerSlave*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofPlayerSlave*) (soff+(sizeof(TProofPlayerSlave)*i)))->~G__TTProofPlayerSlave();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofPlayerSlave*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofPlayerSlave*) (soff))->~G__TTProofPlayerSlave();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofPlayerSuperMaster */
static int G__G__ProofPlayer_257_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofPlayerSuperMaster* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofPlayerSuperMaster((TProof*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofPlayerSuperMaster((TProof*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofPlayerSuperMaster[n];
       } else {
         p = new((void*) gvp) TProofPlayerSuperMaster[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofPlayerSuperMaster;
       } else {
         p = new((void*) gvp) TProofPlayerSuperMaster;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSuperMaster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_257_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofPlayerSuperMaster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_257_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayerSuperMaster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_257_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofPlayerSuperMaster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_257_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofPlayerSuperMaster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_257_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofPlayerSuperMaster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_257_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayerSuperMaster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_257_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofPlayerSuperMaster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_257_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofPlayerSuperMaster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ProofPlayer_257_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofPlayerSuperMaster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofPlayerSuperMaster G__TTProofPlayerSuperMaster;
static int G__G__ProofPlayer_257_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofPlayerSuperMaster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofPlayerSuperMaster*) (soff+(sizeof(TProofPlayerSuperMaster)*i)))->~G__TTProofPlayerSuperMaster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofPlayerSuperMaster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofPlayerSuperMaster*) (soff))->~G__TTProofPlayerSuperMaster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TDrawFeedback */

/* TEventIter */

/* TEventIterUnit */

/* TEventIterObj */

/* TEventIterTree */

/* TFileMerger */

/* TVirtualPacketizer */

/* TPacketizer */

/* TPacketizerAdaptive */

/* TPacketizerUnit */

/* TPerfEvent */

/* TPerfStats */

/* TProofLimitsFinder */

/* TProofOutputFile */

/* TProofPlayer */

/* TProofPlayerLite */

/* TProofPlayerRemote */

/* TStatus */

/* TProofPlayerLocal */

/* TProofPlayerSlave */

/* TProofPlayerSuperMaster */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__ProofPlayer {
 public:
  G__Sizep2memfuncG__ProofPlayer(): p(&G__Sizep2memfuncG__ProofPlayer::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__ProofPlayer::*p)();
};

size_t G__get_sizep2memfuncG__ProofPlayer()
{
  G__Sizep2memfuncG__ProofPlayer a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__ProofPlayer() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TDrawFeedback))) {
     TDrawFeedback *G__Lderived;
     G__Lderived=(TDrawFeedback*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TDrawFeedback),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TDrawFeedback),G__get_linked_tagnum(&G__G__ProofPlayerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIter))) {
     TEventIter *G__Lderived;
     G__Lderived=(TEventIter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIter),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterUnit))) {
     TEventIterUnit *G__Lderived;
     G__Lderived=(TEventIterUnit*)0x1000;
     {
       TEventIter *G__Lpbase=(TEventIter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterUnit),G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterUnit),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterObj))) {
     TEventIterObj *G__Lderived;
     G__Lderived=(TEventIterObj*)0x1000;
     {
       TEventIter *G__Lpbase=(TEventIter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterObj),G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterObj),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterTree))) {
     TEventIterTree *G__Lderived;
     G__Lderived=(TEventIterTree*)0x1000;
     {
       TEventIter *G__Lpbase=(TEventIter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterTree),G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterTree),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TFileMerger))) {
     TFileMerger *G__Lderived;
     G__Lderived=(TFileMerger*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TFileMerger),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizer))) {
     TVirtualPacketizer *G__Lderived;
     G__Lderived=(TVirtualPacketizer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizer),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizer))) {
     TPacketizer *G__Lderived;
     G__Lderived=(TPacketizer*)0x1000;
     {
       TVirtualPacketizer *G__Lpbase=(TVirtualPacketizer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizer),G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizer),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerAdaptive))) {
     TPacketizerAdaptive *G__Lderived;
     G__Lderived=(TPacketizerAdaptive*)0x1000;
     {
       TVirtualPacketizer *G__Lpbase=(TVirtualPacketizer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerAdaptive),G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerAdaptive),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerUnit))) {
     TPacketizerUnit *G__Lderived;
     G__Lderived=(TPacketizerUnit*)0x1000;
     {
       TVirtualPacketizer *G__Lpbase=(TVirtualPacketizer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerUnit),G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerUnit),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfEvent))) {
     TPerfEvent *G__Lderived;
     G__Lderived=(TPerfEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfEvent),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfStats))) {
     TPerfStats *G__Lderived;
     G__Lderived=(TPerfStats*)0x1000;
     {
       TVirtualPerfStats *G__Lpbase=(TVirtualPerfStats*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfStats),G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPerfStats),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfStats),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofLimitsFinder))) {
     TProofLimitsFinder *G__Lderived;
     G__Lderived=(TProofLimitsFinder*)0x1000;
     {
       THLimitsFinder *G__Lpbase=(THLimitsFinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofLimitsFinder),G__get_linked_tagnum(&G__G__ProofPlayerLN_THLimitsFinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofLimitsFinder),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFile))) {
     TProofOutputFile *G__Lderived;
     G__Lderived=(TProofOutputFile*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFile),G__get_linked_tagnum(&G__G__ProofPlayerLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFile),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayer))) {
     TProofPlayer *G__Lderived;
     G__Lderived=(TProofPlayer*)0x1000;
     {
       TVirtualProofPlayer *G__Lpbase=(TVirtualProofPlayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayer),G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualProofPlayer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayer),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayer),G__get_linked_tagnum(&G__G__ProofPlayerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualProofPlayer))) {
     TVirtualProofPlayer *G__Lderived;
     G__Lderived=(TVirtualProofPlayer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualProofPlayer),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualProofPlayer),G__get_linked_tagnum(&G__G__ProofPlayerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLite))) {
     TProofPlayerLite *G__Lderived;
     G__Lderived=(TProofPlayerLite*)0x1000;
     {
       TProofPlayerRemote *G__Lpbase=(TProofPlayerRemote*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLite),G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerRemote),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TProofPlayer *G__Lpbase=(TProofPlayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLite),G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualProofPlayer *G__Lpbase=(TVirtualProofPlayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLite),G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualProofPlayer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLite),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLite),G__get_linked_tagnum(&G__G__ProofPlayerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerRemote))) {
     TProofPlayerRemote *G__Lderived;
     G__Lderived=(TProofPlayerRemote*)0x1000;
     {
       TProofPlayer *G__Lpbase=(TProofPlayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerRemote),G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualProofPlayer *G__Lpbase=(TVirtualProofPlayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerRemote),G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualProofPlayer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerRemote),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerRemote),G__get_linked_tagnum(&G__G__ProofPlayerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TStatus))) {
     TStatus *G__Lderived;
     G__Lderived=(TStatus*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TStatus),G__get_linked_tagnum(&G__G__ProofPlayerLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TStatus),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLocal))) {
     TProofPlayerLocal *G__Lderived;
     G__Lderived=(TProofPlayerLocal*)0x1000;
     {
       TProofPlayer *G__Lpbase=(TProofPlayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLocal),G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualProofPlayer *G__Lpbase=(TVirtualProofPlayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLocal),G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualProofPlayer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLocal),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLocal),G__get_linked_tagnum(&G__G__ProofPlayerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSlave))) {
     TProofPlayerSlave *G__Lderived;
     G__Lderived=(TProofPlayerSlave*)0x1000;
     {
       TProofPlayer *G__Lpbase=(TProofPlayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSlave),G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualProofPlayer *G__Lpbase=(TVirtualProofPlayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSlave),G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualProofPlayer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSlave),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSlave),G__get_linked_tagnum(&G__G__ProofPlayerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSuperMaster))) {
     TProofPlayerSuperMaster *G__Lderived;
     G__Lderived=(TProofPlayerSuperMaster*)0x1000;
     {
       TProofPlayerRemote *G__Lpbase=(TProofPlayerRemote*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSuperMaster),G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerRemote),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TProofPlayer *G__Lpbase=(TProofPlayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSuperMaster),G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualProofPlayer *G__Lpbase=(TVirtualProofPlayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSuperMaster),G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualProofPlayer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSuperMaster),G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSuperMaster),G__get_linked_tagnum(&G__G__ProofPlayerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__ProofPlayer() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofPlayerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofPlayerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofPlayerLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofPlayerLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned int>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofPlayerLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofPlayerLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::string>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<string>",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<string,less<string> >",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("MsgSet_t",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TStatus));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("MsgIter_t",117,G__get_linked_tagnum(&G__G__ProofPlayerLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TStatus));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TDrawFeedback */
static void G__setup_memvarTDrawFeedback(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TDrawFeedback));
   { TDrawFeedback *p; p=(TDrawFeedback*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fAll=",0,"draw all or selected objects");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_THashList),-1,-1,4,"fNames=",0,"selected objects");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Option_t"),-1,2,"fOption=",0,"draw option");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProof),-1,-1,2,"fProof=",0,"handle to PROOF session");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEventIter */
static void G__setup_memvarTEventIter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIter));
   { TEventIter *p; p=(TEventIter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TDSet),-1,-1,2,"fDSet=",0,"data set over which to iterate");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TDSetElement),-1,-1,2,"fElem=",0,"Current Element");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,2,"fFilename=",0,"Name of the current file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TFile),-1,-1,2,"fFile=",0,"Current file");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fOldBytesRead=",0,"last reported number of bytes read");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,2,"fPath=",0,"Path to current TDirectory");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TDirectory),-1,-1,2,"fDir=",0,"directory containing the objects or the TTree");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fElemFirst=",0,"first entry to process for this element");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fElemNum=",0,"number of entries to process for this element");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fElemCur=",0,"current entry for this element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TSelector),-1,-1,2,"fSel=",0,"selector to be used");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fFirst=",0,"first entry to process");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fNum=",0,"number of entries to process");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fCur=",0,"current entry");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fStop=",0,"termination of run requested");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventList),-1,-1,2,"fEventList=",0,"! eventList for processing");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEventListPos=",0,"! current position in the eventList");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TEntryList),-1,-1,2,"fEntryList=",0,"! entry list for processing");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fEntryListPos=",0,"! current position in the entrylist");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEventIterUnit */
static void G__setup_memvarTEventIterUnit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterUnit));
   { TEventIterUnit *p; p=(TEventIterUnit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fCurrent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEventIterObj */
static void G__setup_memvarTEventIterObj(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterObj));
   { TEventIterObj *p; p=(TEventIterObj*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,4,"fClassName=",0,"class name of objects to iterate over");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,4,"fKeys=",0,"list of keys");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TIter),-1,-1,4,"fNextKey=",0,"next key in directory");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject),-1,-1,4,"fObj=",0,"object found");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEventIterTree */
static void G__setup_memvarTEventIterTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterTree));
   { TEventIterTree *p; p=(TEventIterTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,4,"fTreeName=",0,"name of the tree object to iterate over");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TTree),-1,-1,4,"fTree=",0,"tree we are iterating over");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TTreeCache),-1,-1,4,"fTreeCache=",0,"instance of the tree cache for the tree");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fTreeCacheIsLearning=",0,"Whether cache is in learning phase");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseTreeCache=",0,"Control usage of the tree cache");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fCacheSize=",0,"Cache size");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseParallelUnzip=",0,"Control usage of parallel unzip");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,4,"fFileTrees=",0,"Files && Trees currently open");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TFileMerger */
static void G__setup_memvarTFileMerger(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TFileMerger));
   { TFileMerger *p; p=(TFileMerger*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TStopwatch),-1,-1,2,"fWatch=",0,"stop watch to measure file copy speed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,2,"fFileList=",0,"a list of files, which shall be merged");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TFile),-1,-1,2,"fOutputFile=",0,"the outputfile for merging");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,2,"fOutputFilename=",0,"the name of the outputfile for merging");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,2,"fOutputFilename1=",0,"the name of the temporary outputfile for merging");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fFastMethod=",0,"True if using Fast merging algorithm (default)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fNoTrees=",0,"True if Trees should not be merged (default is kFALSE)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fLocal=",0,"Makes local copies of merging files if True (default is kFALSE)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fHistoOneGo=",0,"Merger histos in one go");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,2,"fMergeList=",0,"list of the files need to be merged ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVirtualPacketizer */
static void G__setup_memvarTVirtualPacketizer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizer));
   { TVirtualPacketizer *p; p=(TVirtualPacketizer*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizercLcLEUseEstOpt),-1,-2,1,"kEstOff=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizercLcLEUseEstOpt),-1,-2,1,"kEstCurrent=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizercLcLEUseEstOpt),-1,-2,1,"kEstAverage=2",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofProgressStatus),-1,-1,4,"fProgressStatus=",0,"pointer to status in the player.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TTimer),-1,-1,4,"fProgress=",0,"progress updates timer");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fTotalEntries=",0,"total number of entries to be distributed;");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,4,"fFailedPackets=",0,"a list of packets that failed while processing");
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("Long_t"),-1,4,"fStartTime=",0,"time offset");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fInitTime=",0,"time before processing");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fProcTime=",0,"time since start of processing");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTimeUpdt=",0,"time between updates");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TNtupleD),-1,-1,4,"fCircProg=",0,"Keeps circular info for \"instantenous\"");
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("Long_t"),-1,4,"fCircN=",0,"Circularity");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizercLcLEUseEstOpt),-1,-1,4,"fUseEstOpt=",0,"Control usage of estimated values for the progress info");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fValid=",0,"Constructed properly?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fStop=",0,"Termination of Process() requested?");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizercLcLEStatusBits),-1,-2,1,"kIsInitializing=65536",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizercLcLEStatusBits),-1,-2,1,"kIsDone=131072",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPacketizer */
static void G__setup_memvarTPacketizer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizer));
   { TPacketizer *p; p=(TPacketizer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,4,"fPackets=",0,"all processed packets");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,4,"fFileNodes=",0,"nodes with files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,4,"fUnAllocated=",0,"nodes with unallocated files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,4,"fActive=",0,"nodes with unfinished files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TMap),-1,-1,4,"fSlaveStats=",0,"slave status, keyed by correspondig TSlave");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fPacketSize=",0,"global base packet size");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxPerfIdx=",0,"maximum of our slaves' performance index");
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("Long_t"),-1,4,"fMaxSlaveCnt=",0,"maximum number of workers per filenode (Long_t to avoid");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPacketAsAFraction=",0,"used to calculate the packet size");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPacketizerAdaptive */
static void G__setup_memvarTPacketizerAdaptive(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerAdaptive));
   { TPacketizerAdaptive *p; p=(TPacketizerAdaptive*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,4,"fFileNodes=",0,"nodes with files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,4,"fUnAllocated=",0,"nodes with unallocated files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,4,"fActive=",0,"nodes with unfinished files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TMap),-1,-1,4,"fSlaveStats=",0,"slave status, keyed by correspondig TSlave");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxPerfIdx=",0,"maximum of our slaves' performance index");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fFractionOfRemoteFiles=",0,"fraction of TDSetElements");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fNEventsOnRemLoc=",0,"number of events in currently");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fBaseLocalPreference=",0,"indicates how much more likely");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fForceLocal=",0,"if 1 - eliminate the remote processing");
   G__memvar_setup((void*)(&TPacketizerAdaptive::fgMaxSlaveCnt),108,0,0,-1,G__defined_typename("Long_t"),-2,1,"fgMaxSlaveCnt=",0,"maximum number of workers per filenode (Long_t to avoid");
   G__memvar_setup((void*)(&TPacketizerAdaptive::fgPacketAsAFraction),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"fgPacketAsAFraction=",0,"used to calculate the packet size");
   G__memvar_setup((void*)(&TPacketizerAdaptive::fgMinPacketTime),100,0,0,-1,G__defined_typename("Double_t"),-2,1,"fgMinPacketTime=",0,"minimum packet time");
   G__memvar_setup((void*)(&TPacketizerAdaptive::fgMaxPacketTime),100,0,0,-1,G__defined_typename("Double_t"),-2,1,"fgMaxPacketTime=",0,"maximum packet time");
   G__memvar_setup((void*)(&TPacketizerAdaptive::fgStrategy),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"fgStrategy=",0,"0 means the classic and 1 (default) - the adaptive strategy");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPacketizerUnit */
static void G__setup_memvarTPacketizerUnit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerUnit));
   { TPacketizerUnit *p; p=(TPacketizerUnit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,4,"fPackets=",0,"all processed packets");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TMap),-1,-1,4,"fSlaveStats=",0,"Slave status, keyed by correspondig TSlave");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TStopwatch),-1,-1,4,"fStopwatch=",0,"For measuring the start time of each packet");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fProcessing=",0,"Event being processed");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fAssigned=",0,"no. entries processed or being processed.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTimeLimit=",0,"Packet time limit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPerfEvent */
static void G__setup_memvarTPerfEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfEvent));
   { TPerfEvent *p; p=(TPerfEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fEvtNode)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,1,"fEvtNode=",0,"node on which the event was generated");
   G__memvar_setup((void*)((long)(&p->fTimeStamp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TTimeStamp),-1,-1,1,"fTimeStamp=",0,"time offset from start of run");
   G__memvar_setup((void*)((long)(&p->fType)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPerfStatscLcLEEventType),-1,-1,1,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSlaveName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,1,"fSlaveName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNodeName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,1,"fNodeName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,1,"fFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFileClass)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,1,"fFileClass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSlave)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,1,"fSlave=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEventsProcessed)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"fEventsProcessed=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fBytesRead)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"fBytesRead=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fLen)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"fLen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fLatency)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fLatency=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fProcTime)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fProcTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCpuTime)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fCpuTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIsStart)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fIsStart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIsOk)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fIsOk=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPerfStats */
static void G__setup_memvarTPerfStats(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfStats));
   { TPerfStats *p; p=(TPerfStats*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TTree),-1,-1,4,"fTrace=",0,"!TTree with trace events");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TTimeStamp),-1,-1,4,"fTzero=",0,"!start time of this run");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfEvent),-1,-1,4,"fPerfEvent=",0,"!TPerfEvent used to fill tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TH1D),-1,-1,4,"fPacketsHist=",0,"!histogram of packets processed per slave");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TH1D),-1,-1,4,"fEventsHist=",0,"!histogram of events processed per slave");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TH1D),-1,-1,4,"fNodeHist=",0,"!histogram of slaves per file serving node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TH2D),-1,-1,4,"fLatencyHist=",0,"!histogram of latency due to packet requests");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TH2D),-1,-1,4,"fProcTimeHist=",0,"!histogram of real time spent processing packets");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TH2D),-1,-1,4,"fCpuTimeHist=",0,"!histogram of cpu time spent processing packets");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fBytesRead=",0,"!track bytes read of main file");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTotCpuTime=",0,"!total cpu time of all slaves");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fTotBytesRead=",0,"!total bytes read on all slaves");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fTotEvents=",0,"!total number of events processed");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fNumEvents=",0,"!total number of events to be processed");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSlaves=",0,"!number of active slaves");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDoHist=",0,"!Fill histos");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDoTrace=",0,"!Trace details in master");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDoTraceRate=",0,"!Trace processing rate in master");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDoSlaveTrace=",0,"!Full tracing in workers");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDoQuota=",0,"!Save stats on SQL server for quota management");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualMonitoringWriter),-1,-1,4,"fMonitoringWriter=",0,"!Monitoring engine");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofLimitsFinder */
static void G__setup_memvarTProofLimitsFinder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofLimitsFinder));
   { TProofLimitsFinder *p; p=(TProofLimitsFinder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofOutputFile */
static void G__setup_memvarTProofOutputFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFile));
   { TProofOutputFile *p; p=(TProofOutputFile*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFilecLcLERunType),-1,-2,1,"kMerge=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFilecLcLERunType),-1,-2,1,"kDataset=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFilecLcLETypeOpt),-1,-2,1,"kRemote=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFilecLcLETypeOpt),-1,-2,1,"kLocal=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFilecLcLETypeOpt),-1,-2,1,"kCreate=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFilecLcLETypeOpt),-1,-2,1,"kRegister=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFilecLcLETypeOpt),-1,-2,1,"kOverwrite=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFilecLcLETypeOpt),-1,-2,1,"kVerify=32",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,4,"fDir=",0,"name of the directory to be exported");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,4,"fRawDir=",0,"name of the local directory where to create the file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,4,"fFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,4,"fOptionsAnchor=",0,"options and anchor string including delimiters, e.g. \"?myopts#myanchor\"");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,4,"fOutputFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,4,"fWorkerOrdinal=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TString),-1,-1,4,"fLocalHost=",0,"Host where the file was created");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsLocal=",0,"kTRUE if the file is in the sandbox");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMerged=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFilecLcLERunType),-1,-1,4,"fRunType=",0,"Type of run (see enum ERunType)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fTypeOpt=",0,"Option (see enum ETypeOpt)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TFileCollection),-1,-1,4,"fDataSet=",0,"Instance of the file collection in 'dataset' mode");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TFileMerger),-1,-1,4,"fMerger=",0,"Instance of the file merger in 'merge' mode");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofPlayer */
static void G__setup_memvarTProofPlayer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayer));
   { TProofPlayer *p; p=(TProofPlayer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,4,"fAutoBins=",0,"Map of min/max values by name for slaves");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,2,"fInput=",0,"-> list with input objects");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,2,"fOutput=",0,"list with output objects");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TSelector),-1,-1,2,"fSelector=",0,"!  the latest selector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-1,2,"fSelectorClass=",0,"!  class of the latest selector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TTimer),-1,-1,2,"fFeedbackTimer=",0,"!  timer for sending intermediate results");
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("Long_t"),-1,2,"fFeedbackPeriod=",0,"!  period (ms) for sending intermediate results");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIter),-1,-1,2,"fEvIter=",0,"!  iterator on events or objects");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TStatus),-1,-1,2,"fSelStatus=",0,"!  status of query in progress");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualProofPlayercLcLEExitStatus),-1,-1,2,"fExitStatus=",0,"exit status");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fTotalEvents=",0,"number of events requested");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofProgressStatus),-1,-1,2,"fProgressStatus=",0,"the progress status object;");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,2,"fQueryResults=",0,"List of TQueryResult");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TQueryResult),-1,-1,2,"fQuery=",0,"Instance of TQueryResult currently processed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TQueryResult),-1,-1,2,"fPreviousQuery=",0,"Previous instance of TQueryResult processed");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDrawQueries=",0,"Number of Draw queries in the list");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxDrawQueries=",0,"Max number of Draw queries kept");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TTimer),-1,-1,2,"fStopTimer=",0,"Timer associated with a stop request");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TMutex),-1,-1,2,"fStopTimerMtx=",0,"To protect the stop timer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TTimer),-1,-1,2,"fDispatchTimer=",0,"Dispatch pending events while processing");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_THashList),-1,-2,2,"fgDrawInputPars=",0,"List of input parameters to be kept on drawing actions");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayercLcLEStatusBits),-1,-2,1,"kDispatchOneEvent=32768",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayercLcLEStatusBits),-1,-2,1,"kIsProcessing=65536",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofPlayerLite */
static void G__setup_memvarTProofPlayerLite(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLite));
   { TProofPlayerLite *p; p=(TProofPlayerLite*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofPlayerRemote */
static void G__setup_memvarTProofPlayerRemote(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerRemote));
   { TProofPlayerRemote *p; p=(TProofPlayerRemote*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TProof),-1,-1,2,"fProof=",0,"link to associated PROOF session");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,2,"fOutputLists=",0,"results returned by slaves");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,2,"fFeedback=",0,"reference for use on master");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,2,"fFeedbackLists=",0,"intermediate results");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizer),-1,-1,2,"fPacketizer=",0,"transform TDSet into packets for slaves");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fMergeFiles=",0,"is True when merging output files centrally is needed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TDSet),-1,-1,2,"fDSet=",0,"!tdset for current processing");
   G__memvar_setup((void*)0,89,0,0,-1,G__defined_typename("ErrorHandlerFunc_t"),-1,2,"fErrorHandler=",0,"Store previous handler when redirecting output");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TStatus */
static void G__setup_memvarTStatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TStatus));
   { TStatus *p; p=(TStatus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),G__defined_typename("MsgSet_t"),-1,4,"fMsgs=",0,"list of error messages");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgRcLcLiterator),G__defined_typename("MsgIter_t"),-1,4,"fIter=",0,"!iterator in messages");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofPlayerLocal */
static void G__setup_memvarTProofPlayerLocal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLocal));
   { TProofPlayerLocal *p; p=(TProofPlayerLocal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsClient=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofPlayerSlave */
static void G__setup_memvarTProofPlayerSlave(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSlave));
   { TProofPlayerSlave *p; p=(TProofPlayerSlave*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TSocket),-1,-1,4,"fSocket=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,4,"fFeedback=",0,"List of objects to send updates of");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofPlayerSuperMaster */
static void G__setup_memvarTProofPlayerSuperMaster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSuperMaster));
   { TProofPlayerSuperMaster *p; p=(TProofPlayerSuperMaster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TArrayL64),-1,-1,4,"fSlaveProgress=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TArrayL64),-1,-1,4,"fSlaveTotals=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TArrayL64),-1,-1,4,"fSlaveBytesRead=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TArrayF),-1,-1,4,"fSlaveInitTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TArrayF),-1,-1,4,"fSlaveProcTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TArrayF),-1,-1,4,"fSlaveEvtRti=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TArrayF),-1,-1,4,"fSlaveMBRti=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TArrayI),-1,-1,4,"fSlaveActW=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TArrayI),-1,-1,4,"fSlaveTotS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TArrayF),-1,-1,4,"fSlaveEffS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TList),-1,-1,4,"fSlaves=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fReturnFeedback=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__ProofPlayer() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTDrawFeedback(void) {
   /* TDrawFeedback */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TDrawFeedback));
   G__memfunc_setup("TDrawFeedback",1255,G__G__ProofPlayer_112_0_1, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TDrawFeedback), -1, 0, 2, 1, 1, 0, 
"U 'TProof' - 0 '0' proof U 'TSeqCollection' - 0 '0' names", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Feedback",773,G__G__ProofPlayer_112_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - objs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOption",933,G__G__ProofPlayer_112_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_112_0_4, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDrawFeedback::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_112_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDrawFeedback::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_112_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDrawFeedback::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_112_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDrawFeedback::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_112_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_112_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDrawFeedback::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_112_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDrawFeedback::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_112_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDrawFeedback::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_112_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDrawFeedback::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDrawFeedback", 1381, G__G__ProofPlayer_112_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEventIter(void) {
   /* TEventIter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIter));
   G__memfunc_setup("LoadDir",671,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", "Load the directory pointed to by fElem", (void*) NULL, 0);
   G__memfunc_setup("GetCacheSize",1167,G__G__ProofPlayer_122_0_4, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetLearnEntries",1516,G__G__ProofPlayer_122_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetNextEvent",1217,G__G__ProofPlayer_122_0_6, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("StopProcess",1157,G__G__ProofPlayer_122_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - abort", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Create",596,G__G__ProofPlayer_122_0_8, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIter), -1, 0, 4, 3, 1, 0, 
"U 'TDSet' - 0 - dset U 'TSelector' - 0 - sel "
"n - 'Long64_t' 0 - first n - 'Long64_t' 0 - num", (char*)NULL, (void*) G__func2void( (TEventIter* (*)(TDSet*, TSelector*, Long64_t, Long64_t))(&TEventIter::Create) ), 0);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_122_0_9, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEventIter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_122_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEventIter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_122_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEventIter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_122_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEventIter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_122_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_122_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEventIter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_122_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEventIter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_122_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEventIter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_122_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEventIter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TEventIter", 1128, G__G__ProofPlayer_122_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ProofPlayer_122_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIter), -1, 1, 1, 1, 1, 0, "u 'TEventIter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEventIterUnit(void) {
   /* TEventIterUnit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterUnit));
   G__memfunc_setup("TEventIterUnit",1418,G__G__ProofPlayer_123_0_1, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterUnit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TEventIterUnit",1418,G__G__ProofPlayer_123_0_2, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterUnit), -1, 0, 3, 1, 1, 0, 
"U 'TDSet' - 0 - dset U 'TSelector' - 0 - sel "
"n - 'Long64_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCacheSize",1167,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLearnEntries",1516,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNextEvent",1217,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_123_0_6, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEventIterUnit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_123_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEventIterUnit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_123_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEventIterUnit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_123_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEventIterUnit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_123_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_123_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEventIterUnit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_123_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEventIterUnit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_123_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEventIterUnit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_123_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEventIterUnit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEventIterUnit", 1418, G__G__ProofPlayer_123_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterUnit), -1, 0, 1, 1, 1, 0, "u 'TEventIterUnit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEventIterUnit", 1544, G__G__ProofPlayer_123_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ProofPlayer_123_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterUnit), -1, 1, 1, 1, 1, 0, "u 'TEventIterUnit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEventIterObj(void) {
   /* TEventIterObj */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterObj));
   G__memfunc_setup("TEventIterObj",1285,G__G__ProofPlayer_124_0_1, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterObj), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TEventIterObj",1285,G__G__ProofPlayer_124_0_2, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterObj), -1, 0, 4, 1, 1, 0, 
"U 'TDSet' - 0 - dset U 'TSelector' - 0 - sel "
"n - 'Long64_t' 0 - first n - 'Long64_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCacheSize",1167,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLearnEntries",1516,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNextEvent",1217,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_124_0_6, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEventIterObj::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_124_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEventIterObj::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_124_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEventIterObj::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_124_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEventIterObj::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_124_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_124_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEventIterObj::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_124_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEventIterObj::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_124_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEventIterObj::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_124_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEventIterObj::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEventIterObj", 1285, G__G__ProofPlayer_124_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterObj), -1, 0, 1, 1, 1, 0, "u 'TEventIterObj' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEventIterObj", 1411, G__G__ProofPlayer_124_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ProofPlayer_124_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterObj), -1, 1, 1, 1, 1, 0, "u 'TEventIterObj' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEventIterTree(void) {
   /* TEventIterTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterTree));
   G__memfunc_setup("Load",384,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TTree), -1, 0, 2, 1, 4, 0, 
"U 'TDSetElement' - 0 - elem g - 'Bool_t' 1 - localfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrees",803,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TTree), -1, 0, 1, 1, 4, 0, "U 'TDSetElement' - 0 - elem", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TEventIterTree",1402,G__G__ProofPlayer_125_0_3, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TEventIterTree",1402,G__G__ProofPlayer_125_0_4, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterTree), -1, 0, 4, 1, 1, 0, 
"U 'TDSet' - 0 - dset U 'TSelector' - 0 - sel "
"n - 'Long64_t' 0 - first n - 'Long64_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCacheSize",1167,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLearnEntries",1516,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNextEvent",1217,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_125_0_8, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEventIterTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_125_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEventIterTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_125_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEventIterTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_125_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEventIterTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_125_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_125_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEventIterTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_125_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEventIterTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_125_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEventIterTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_125_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEventIterTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEventIterTree", 1402, G__G__ProofPlayer_125_0_20, (int) ('i'), G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterTree), -1, 0, 1, 1, 1, 0, "u 'TEventIterTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEventIterTree", 1528, G__G__ProofPlayer_125_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ProofPlayer_125_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterTree), -1, 1, 1, 1, 1, 0, "u 'TEventIterTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFileMerger(void) {
   /* TFileMerger */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TFileMerger));
   G__memfunc_setup("TFileMerger",1078,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TFileMerger), -1, 0, 1, 1, 4, 0, "u 'TFileMerger' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ProofPlayerLN_TFileMerger), -1, 1, 1, 1, 4, 0, "u 'TFileMerger' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("TFileMerger",1078,G__G__ProofPlayer_129_0_3, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TFileMerger), -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kTRUE' isLocal g - 'Bool_t' 0 'kTRUE' histoonego", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutputFileName",1714,G__G__ProofPlayer_129_0_4, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMergeList",1196,G__G__ProofPlayer_129_0_5, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCWD",522,G__G__ProofPlayer_129_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCWD",510,G__G__ProofPlayer_129_0_7, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__G__ProofPlayer_129_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddFile",649,G__G__ProofPlayer_129_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - url", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OutputFile",1041,G__G__ProofPlayer_129_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - url", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintFiles",1024,G__G__ProofPlayer_129_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - options", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Merge",496,G__G__ProofPlayer_129_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MergeRecursive",1448,G__G__ProofPlayer_129_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TDirectory' - 0 - target U 'TList' - 0 - sourcelist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFastMethod",1307,G__G__ProofPlayer_129_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' fast", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNotrees",1036,G__G__ProofPlayer_129_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' notrees", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_129_0_16, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TFileMerger::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_129_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFileMerger::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_129_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TFileMerger::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_129_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TFileMerger::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_129_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_129_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFileMerger::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_129_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFileMerger::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_129_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFileMerger::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_129_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFileMerger::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFileMerger", 1204, G__G__ProofPlayer_129_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVirtualPacketizer(void) {
   /* TVirtualPacketizer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizer));
   G__memfunc_setup("TVirtualPacketizer",1869,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizer), -1, 0, 1, 1, 4, 0, "u 'TVirtualPacketizer' - 11 - -", "no implementation, will generate", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TVirtualPacketizer' - 11 - -", "error on accidental usage", (void*) NULL, 0);
   G__memfunc_setup("HandleTimer",1101,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'TTimer' - 0 - timer", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateNewPacket",1494,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TDSetElement), -1, 0, 3, 1, 4, 0, 
"U 'TDSetElement' - 0 - base n - 'Long64_t' 0 - first "
"n - 'Long64_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TVirtualPacketizer",1869,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizer), -1, 0, 2, 1, 2, 0, 
"U 'TList' - 0 - input U 'TProofProgressStatus' - 0 '0' st", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,(G__InterfaceMethod) NULL, 110, -1, G__defined_typename("Long64_t"), 0, 2, 1, 2, 0, 
"g - 'Bool_t' 0 - tree U 'TDSetElement' - 0 - e", "Num of entries or objects", (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__G__ProofPlayer_143_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntriesProcessed",1954,G__G__ProofPlayer_143_0_8, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEntriesProcessed",2254,G__G__ProofPlayer_143_0_9, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - - n - 'Long64_t' 1 - ent "
"n - 'Long64_t' 1 - bytes n - 'Long64_t' 1 - calls", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCurrentRate",1423,G__G__ProofPlayer_143_0_10, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 1 - all", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTotalEntries",1534,G__G__ProofPlayer_143_0_11, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextPacket",1303,G__G__ProofPlayer_143_0_12, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TDSetElement), -1, 0, 2, 1, 1, 0, 
"U 'TSlave' - 0 - sl U 'TMessage' - 0 - r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInitTime",1103,G__G__ProofPlayer_143_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StopProcess",1157,G__G__ProofPlayer_143_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - abort", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFailedPackets",1584,G__G__ProofPlayer_143_0_15, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFailedPackets",1596,G__G__ProofPlayer_143_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBytesRead",1187,G__G__ProofPlayer_143_0_17, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReadCalls",1163,G__G__ProofPlayer_143_0_18, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCumProcTime",1384,G__G__ProofPlayer_143_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInitTime",1091,G__G__ProofPlayer_143_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProcTime",1091,G__G__ProofPlayer_143_0_21, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarkBad",658,G__G__ProofPlayer_143_0_22, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TSlave' - 0 - - U 'TProofProgressStatus' - 0 - - "
"U 'TList' - 2 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddProcessed",1201,G__G__ProofPlayer_143_0_23, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"U 'TSlave' - 0 - - U 'TProofProgressStatus' - 0 - - "
"d - 'Double_t' 0 - - U 'TList' - 2 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStatus",932,G__G__ProofPlayer_143_0_24, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofProgressStatus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProgressStatus",1797,G__G__ProofPlayer_143_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TProofProgressStatus' - 0 - st", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActiveWorkers",1641,G__G__ProofPlayer_143_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_143_0_27, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TVirtualPacketizer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_143_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVirtualPacketizer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_143_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TVirtualPacketizer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_143_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TVirtualPacketizer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_143_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_143_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVirtualPacketizer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_143_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVirtualPacketizer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_143_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVirtualPacketizer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_143_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVirtualPacketizer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TVirtualPacketizer", 1995, G__G__ProofPlayer_143_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPacketizer(void) {
   /* TPacketizer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizer));
   G__memfunc_setup("TPacketizer",1126,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizer), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPacketizer",1126,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizer), -1, 0, 1, 1, 4, 0, "u 'TPacketizer' - 11 - -", "no implementation, will generate", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TPacketizer' - 11 - -", "error on accidental usage", (void*) NULL, 0);
   G__memfunc_setup("NextUnAllocNode",1491,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizercLcLTFileNode), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveUnAllocNode",1698,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TPacketizer::TFileNode' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NextActiveNode",1409,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizercLcLTFileNode), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveActiveNode",1616,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TPacketizer::TFileNode' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextUnAlloc",1389,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizercLcLTFileStat), -1, 0, 1, 1, 4, 0, "U 'TPacketizer::TFileNode' - 0 '0' node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextActive",1307,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizercLcLTFileStat), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveActive",1226,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TPacketizer::TFileStat' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValidateFiles",1309,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TDSet' - 0 - dset U 'TList' - 0 - slaves", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPacketizer",1126,G__G__ProofPlayer_144_0_13, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizer), -1, 0, 6, 1, 1, 0, 
"U 'TDSet' - 0 - dset U 'TList' - 0 - slaves "
"n - 'Long64_t' 0 - first n - 'Long64_t' 0 - num "
"U 'TList' - 0 - input U 'TProofProgressStatus' - 0 - st", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextPacket",1303,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TDSetElement), -1, 0, 2, 1, 1, 0, 
"U 'TSlave' - 0 - sl U 'TMessage' - 0 - r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntriesProcessed",1954,G__G__ProofPlayer_144_0_15, 110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 8, "U 'TSlave' - 0 - sl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentRate",1423,(G__InterfaceMethod) NULL,102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 1 - all", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetActiveWorkers",1641,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_144_0_18, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPacketizer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_144_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPacketizer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_144_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPacketizer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_144_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPacketizer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_144_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_144_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPacketizer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_144_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPacketizer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_144_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPacketizer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_144_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPacketizer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TPacketizer", 1252, G__G__ProofPlayer_144_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPacketizerAdaptive(void) {
   /* TPacketizerAdaptive */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerAdaptive));
   G__memfunc_setup("TPacketizerAdaptive",1940,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerAdaptive), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPacketizerAdaptive",1940,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerAdaptive), -1, 0, 1, 1, 4, 0, "u 'TPacketizerAdaptive' - 11 - -", "no implementation, will generate", (void*) NULL, 0);
   G__memfunc_setup("InitStats",931,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "initialise the stats", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TPacketizerAdaptive' - 11 - -", "error on accidental usage", (void*) NULL, 0);
   G__memfunc_setup("NextNode",805,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerAdaptivecLcLTFileNode), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveUnAllocNode",1698,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TPacketizerAdaptive::TFileNode' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NextActiveNode",1409,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerAdaptivecLcLTFileNode), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveActiveNode",1616,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TPacketizerAdaptive::TFileNode' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextUnAlloc",1389,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerAdaptivecLcLTFileStat), -1, 0, 1, 1, 4, 0, "U 'TPacketizerAdaptive::TFileNode' - 0 '0' node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextActive",1307,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerAdaptivecLcLTFileStat), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveActive",1226,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TPacketizerAdaptive::TFileStat' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValidateFiles",1309,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TDSet' - 0 - dset U 'TList' - 0 - slaves", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReassignPacket",1428,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'TDSetElement' - 0 - e U 'TList' - 2 - listOfMissingFiles", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SplitPerHost",1233,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TList' - 0 - elements U 'TList' - 2 - listOfMissingFiles", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddProcessed",1201,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 4, 0, 
"U 'TSlave' - 0 - sl U 'TProofProgressStatus' - 0 - st "
"d - 'Double_t' 0 - latency U 'TList' - 2 '0' listOfMissingFiles", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TPacketizerAdaptive",1940,G__G__ProofPlayer_145_0_17, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerAdaptive), -1, 0, 6, 1, 1, 0, 
"U 'TDSet' - 0 - dset U 'TList' - 0 - slaves "
"n - 'Long64_t' 0 - first n - 'Long64_t' 0 - num "
"U 'TList' - 0 - input U 'TProofProgressStatus' - 0 - st", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstEntriesProcessed",2254,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - - n - 'Long64_t' 1 - ent "
"n - 'Long64_t' 1 - bytes n - 'Long64_t' 1 - calls", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCurrentRate",1423,(G__InterfaceMethod) NULL,102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 1 - all", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalculatePacketSize",1921,G__G__ProofPlayer_145_0_20, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'TObject' - 0 - slstat n - 'Long64_t' 0 - cachesz "
"i - 'Int_t' 0 - learnent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextPacket",1303,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TDSetElement), -1, 0, 2, 1, 1, 0, 
"U 'TSlave' - 0 - sl U 'TMessage' - 0 - r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MarkBad",658,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TSlave' - 0 - s U 'TProofProgressStatus' - 0 - status "
"U 'TList' - 2 - missingFiles", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetActiveWorkers",1641,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_145_0_24, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPacketizerAdaptive::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_145_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPacketizerAdaptive::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_145_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPacketizerAdaptive::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_145_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPacketizerAdaptive::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_145_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_145_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPacketizerAdaptive::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_145_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPacketizerAdaptive::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_145_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPacketizerAdaptive::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_145_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPacketizerAdaptive::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TPacketizerAdaptive", 2066, G__G__ProofPlayer_145_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPacketizerUnit(void) {
   /* TPacketizerUnit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerUnit));
   G__memfunc_setup("TPacketizerUnit",1542,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerUnit), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPacketizerUnit",1542,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerUnit), -1, 0, 1, 1, 4, 0, "u 'TPacketizerUnit' - 11 - -", "no implementation, will generate", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TPacketizerUnit' - 11 - -", "error on accidental usage", (void*) NULL, 0);
   G__memfunc_setup("TPacketizerUnit",1542,G__G__ProofPlayer_147_0_4, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerUnit), -1, 0, 4, 1, 1, 0, 
"U 'TList' - 0 - slaves n - 'Long64_t' 0 - num "
"U 'TList' - 0 - input U 'TProofProgressStatus' - 0 '0' st", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextPacket",1303,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TDSetElement), -1, 0, 2, 1, 1, 0, 
"U 'TSlave' - 0 - sl U 'TMessage' - 0 - r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCurrentTime",1426,G__G__ProofPlayer_147_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentRate",1423,(G__InterfaceMethod) NULL,102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 1 - all", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetActiveWorkers",1641,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_147_0_9, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPacketizerUnit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_147_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPacketizerUnit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_147_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPacketizerUnit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_147_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPacketizerUnit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_147_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_147_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPacketizerUnit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_147_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPacketizerUnit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_147_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPacketizerUnit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_147_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPacketizerUnit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TPacketizerUnit", 1668, G__G__ProofPlayer_147_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPerfEvent(void) {
   /* TPerfEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfEvent));
   G__memfunc_setup("TPerfEvent",995,G__G__ProofPlayer_183_0_1, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfEvent), -1, 0, 1, 1, 1, 0, "U 'TTimeStamp' - 0 '0' offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_183_0_5, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPerfEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_183_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPerfEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_183_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPerfEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_183_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPerfEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_183_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_183_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPerfEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_183_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPerfEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_183_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPerfEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_183_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPerfEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TPerfEvent", 995, G__G__ProofPlayer_183_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfEvent), -1, 0, 1, 1, 1, 0, "u 'TPerfEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPerfEvent", 1121, G__G__ProofPlayer_183_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ProofPlayer_183_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfEvent), -1, 1, 1, 1, 1, 0, "u 'TPerfEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPerfStats(void) {
   /* TPerfStats */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfStats));
   G__memfunc_setup("TPerfStats",1008,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfStats), -1, 0, 2, 1, 4, 0, 
"U 'TList' - 0 - input U 'TList' - 0 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteQueryLog",1347,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimpleEvent",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i 'TVirtualPerfStats::EEventType' - 0 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PacketEvent",1114,(G__InterfaceMethod) NULL,121, -1, -1, 0, 8, 1, 1, 0, 
"C - - 10 - slave C - - 10 - slavename "
"C - - 10 - filename n - 'Long64_t' 0 - eventsprocessed "
"d - 'Double_t' 0 - latency d - 'Double_t' 0 - proctime "
"d - 'Double_t' 0 - cputime n - 'Long64_t' 0 - bytesRead", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FileEvent",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - slave C - - 10 - slavename "
"C - - 10 - nodename C - - 10 - filename "
"g - 'Bool_t' 0 - isStart", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FileOpenEvent",1300,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TFile' - 0 - file C - - 10 - filename "
"d - 'Double_t' 0 - start", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FileReadEvent",1278,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TFile' - 0 - file i - 'Int_t' 0 - len "
"d - 'Double_t' 0 - start", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RateEvent",910,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - proctime d - 'Double_t' 0 - deltatime "
"n - 'Long64_t' 0 - eventsprocessed n - 'Long64_t' 0 - bytesRead", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBytesRead",1199,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - num", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBytesRead",1187,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumEvents",1233,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - num", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumEvents",1221,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Start",526,G__G__ProofPlayer_184_0_13, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TList' - 0 - input U 'TList' - 0 - output", (char*)NULL, (void*) G__func2void( (void (*)(TList*, TList*))(&TPerfStats::Start) ), 0);
   G__memfunc_setup("Stop",422,G__G__ProofPlayer_184_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPerfStats::Stop) ), 0);
   G__memfunc_setup("Setup",529,G__G__ProofPlayer_184_0_15, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TList' - 0 - input", (char*)NULL, (void*) G__func2void( (void (*)(TList*))(&TPerfStats::Setup) ), 0);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_184_0_16, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPerfStats::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_184_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPerfStats::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_184_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPerfStats::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_184_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPerfStats::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_184_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_184_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPerfStats::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_184_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPerfStats::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_184_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPerfStats::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_184_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPerfStats::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TPerfStats", 1008, G__G__ProofPlayer_184_0_28, (int) ('i'), G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfStats), -1, 0, 1, 1, 1, 0, "u 'TPerfStats' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPerfStats", 1134, G__G__ProofPlayer_184_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ProofPlayer_184_0_30, (int) ('u'), G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfStats), -1, 1, 1, 1, 1, 0, "u 'TPerfStats' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofLimitsFinder(void) {
   /* TProofLimitsFinder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofLimitsFinder));
   G__memfunc_setup("TProofLimitsFinder",1828,G__G__ProofPlayer_187_0_1, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofLimitsFinder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindGoodLimits",1404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'TH1' - 0 - h d - 'Axis_t' 0 - xmin "
"d - 'Axis_t' 0 - xmax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindGoodLimits",1404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"U 'TH1' - 0 - h d - 'Axis_t' 0 - xmin "
"d - 'Axis_t' 0 - xmax d - 'Axis_t' 0 - ymin "
"d - 'Axis_t' 0 - ymax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindGoodLimits",1404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 7, 1, 1, 0, 
"U 'TH1' - 0 - h d - 'Axis_t' 0 - xmin "
"d - 'Axis_t' 0 - xmax d - 'Axis_t' 0 - ymin "
"d - 'Axis_t' 0 - ymax d - 'Axis_t' 0 - zmin "
"d - 'Axis_t' 0 - zmax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AutoBinFunc",1086,G__G__ProofPlayer_187_0_5, 121, -1, -1, 0, 7, 3, 1, 0, 
"u 'TString' - 1 - key d - 'Double_t' 1 - xmin "
"d - 'Double_t' 1 - xmax d - 'Double_t' 1 - ymin "
"d - 'Double_t' 1 - ymax d - 'Double_t' 1 - zmin "
"d - 'Double_t' 1 - zmax", (char*)NULL, (void*) G__func2void( (void (*)(TString&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&))(&TProofLimitsFinder::AutoBinFunc) ), 0);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_187_0_6, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofLimitsFinder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_187_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofLimitsFinder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_187_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofLimitsFinder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_187_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofLimitsFinder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_187_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_187_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofLimitsFinder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_187_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofLimitsFinder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_187_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofLimitsFinder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_187_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofLimitsFinder::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TProofLimitsFinder", 1828, G__G__ProofPlayer_187_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofLimitsFinder), -1, 0, 1, 1, 1, 0, "u 'TProofLimitsFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TProofLimitsFinder", 1954, G__G__ProofPlayer_187_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ProofPlayer_187_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofLimitsFinder), -1, 1, 1, 1, 1, 0, "u 'TProofLimitsFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofOutputFile(void) {
   /* TProofOutputFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFile));
   G__memfunc_setup("TProofOutputFile",1643,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFile), -1, 0, 1, 1, 4, 0, "u 'TProofOutputFile' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFile), -1, 1, 1, 1, 4, 0, "u 'TProofOutputFile' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"C - - 10 - path C - - 10 - dsname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFileName",1069,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDir",587,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWorkerOrdinal",1647,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - ordinal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFile",649,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TFileMerger' - 0 - merger C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NotifyError",1155,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - errmsg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unlink",625,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofOutputFile",1643,G__G__ProofPlayer_188_0_10, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofOutputFile",1643,G__G__ProofPlayer_188_0_11, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFile), -1, 0, 3, 1, 1, 0, 
"C - - 10 - path C - - 10 '\"M\"' option "
"C - - 10 '0' dsname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofOutputFile",1643,G__G__ProofPlayer_188_0_12, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFile), -1, 0, 4, 1, 1, 0, 
"C - - 10 - path i 'TProofOutputFile::ERunType' - 0 - type "
"h - 'UInt_t' 0 'kRemote' opt C - - 10 '0' dsname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDir",575,G__G__ProofPlayer_188_0_13, 67, -1, -1, 0, 1, 1, 1, 9, "g - 'Bool_t' 0 'kFALSE' raw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileCollection",1708,G__G__ProofPlayer_188_0_14, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TFileCollection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileMerger",1282,G__G__ProofPlayer_188_0_15, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TFileMerger), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' local", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileName",1057,G__G__ProofPlayer_188_0_16, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLocalHost",1193,G__G__ProofPlayer_188_0_17, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOptionsAnchor",1639,G__G__ProofPlayer_188_0_18, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutputFileName",1714,G__G__ProofPlayer_188_0_19, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWorkerOrdinal",1635,G__G__ProofPlayer_188_0_20, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunType",1015,G__G__ProofPlayer_188_0_21, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFilecLcLERunType), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTypeOpt",1013,G__G__ProofPlayer_188_0_22, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMerge",684,G__G__ProofPlayer_188_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMerged",784,G__G__ProofPlayer_188_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRegister",1025,G__G__ProofPlayer_188_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AdoptFile",888,G__G__ProofPlayer_188_0_26, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TFile' - 0 - f", "Adopt a TFile already open", (void*) NULL, 0);
   G__memfunc_setup("OpenFile",786,G__G__ProofPlayer_188_0_27, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TFile), -1, 0, 1, 1, 1, 0, "C - - 10 - opt", "Open a file with the specified name in fFileName1", (void*) NULL, 0);
   G__memfunc_setup("Merge",496,G__G__ProofPlayer_188_0_28, 110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "U 'TCollection' - 0 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetOutputFileName",1726,G__G__ProofPlayer_188_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetFileCollection",1935,G__G__ProofPlayer_188_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_188_0_32, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofOutputFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_188_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofOutputFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_188_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofOutputFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_188_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofOutputFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_188_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_188_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofOutputFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_188_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofOutputFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_188_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofOutputFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_188_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofOutputFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofOutputFile", 1769, G__G__ProofPlayer_188_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofPlayer(void) {
   /* TProofPlayer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayer));
   G__memfunc_setup("GetSender",897,(G__InterfaceMethod) NULL, 89, -1, -1, 0, 0, 1, 2, 0, "", "used to set gTQSender", (void*) NULL, 1);
   G__memfunc_setup("DrawCanvas",1002,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "U 'TObject' - 0 - obj", "Canvas drawing via libProofDraw", (void*) NULL, 1);
   G__memfunc_setup("SetupFeedback",1302,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "specialized setup", (void*) NULL, 1);
   G__memfunc_setup("MergeOutput",1153,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StopFeedback",1195,G__G__ProofPlayer_190_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", "specialized teardown", (void*) NULL, 1);
   G__memfunc_setup("TProofPlayer",1223,G__G__ProofPlayer_190_0_6, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayer), -1, 0, 1, 1, 1, 0, "U 'TProof' - 0 '0' proof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"U 'TDSet' - 0 - set C - - 10 - selector "
"C - 'Option_t' 10 '\"\"' option n - 'Long64_t' 0 '-1' nentries "
"n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPacketizer",1330,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizer), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' force g - 'Bool_t' 0 'kFALSE' sync", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "U 'TQueryResult' - 0 - qr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawSelect",1006,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 6, 1, 1, 0, 
"U 'TDSet' - 0 - set C - - 10 - varexp "
"C - - 10 - selection C - 'Option_t' 10 '\"\"' option "
"n - 'Long64_t' 0 '-1' nentries n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDrawArgs",1083,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"C - - 10 - var C - - 10 - sel "
"C - 'Option_t' 10 - opt u 'TString' - 1 - selector "
"u 'TString' - 1 - objname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleGetTreeHeader",1861,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TMessage' - 0 - mess", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleRecvHisto",1507,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TMessage' - 0 - mess", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FeedBackCanvas",1345,G__G__ProofPlayer_190_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name g - 'Bool_t' 0 - create", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StopProcess",1157,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 - abort i - 'Int_t' 0 '-1' timeout", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddInput",793,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - inp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearInput",1015,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOutput",945,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOutputList",1357,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetInputList",1228,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetListOfResults",1635,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddQueryResult",1438,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TQueryResult' - 0 - q", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCurrentQuery",1561,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TQueryResult), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQueryResult",1461,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TQueryResult), -1, 0, 1, 1, 1, 0, "C - - 10 - ref", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveQueryResult",1795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - ref", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCurrentQuery",1573,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TQueryResult' - 0 - q", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMaxDrawQueries",1726,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - max", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RestorePreviousQuery",2135,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddOutputObject",1521,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddOutput",922,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - out", "Incorporate a list", (void*) NULL, 1);
   G__memfunc_setup("StoreOutput",1182,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - out", "Adopts the list", (void*) NULL, 1);
   G__memfunc_setup("StoreFeedback",1298,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - slave U 'TList' - 0 - out", "Adopts the list", (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TSlave' - 0 - - n - 'Long64_t' 0 - total "
"n - 'Long64_t' 0 - processed", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 7, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed "
"n - 'Long64_t' 0 - bytesread f - 'Float_t' 0 - initTime "
"f - 'Float_t' 0 - procTime f - 'Float_t' 0 - evtrti "
"f - 'Float_t' 0 - mbrti", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 8, 1, 1, 0, 
"U 'TSlave' - 0 - - n - 'Long64_t' 0 - total "
"n - 'Long64_t' 0 - processed n - 'Long64_t' 0 - bytesread "
"f - 'Float_t' 0 - initTime f - 'Float_t' 0 - procTime "
"f - 'Float_t' 0 - evtrti f - 'Float_t' 0 - mbrti", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TProofProgressInfo' - 0 - pi", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TSlave' - 0 - - U 'TProofProgressInfo' - 0 - pi", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("Feedback",773,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - objs", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("CreateDrawFeedback",1767,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TDrawFeedback), -1, 0, 1, 1, 1, 0, "U 'TProof' - 0 - p", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDrawFeedbackOption",2104,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TDrawFeedback' - 0 - f C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeleteDrawFeedback",1766,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TDrawFeedback' - 0 - f", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNextPacket",1303,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TDSetElement), -1, 0, 2, 1, 1, 0, 
"U 'TSlave' - 0 - slave U 'TMessage' - 0 - r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReinitSelector",1452,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TQueryResult' - 0 - qr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateAutoBin",1301,(G__InterfaceMethod) NULL,121, -1, -1, 0, 7, 1, 1, 0, 
"C - - 10 - name d - 'Double_t' 1 - xmin "
"d - 'Double_t' 1 - xmax d - 'Double_t' 1 - ymin "
"d - 'Double_t' 1 - ymax d - 'Double_t' 1 - zmin "
"d - 'Double_t' 1 - zmax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsClient",795,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetExitStatus",1342,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualProofPlayercLcLEExitStatus), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventsProcessed",1853,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddEventsProcessed",1830,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - ev", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDispatchTimer",1629,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetStopTimer",1235,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"g - 'Bool_t' 0 'kTRUE' on g - 'Bool_t' 0 'kFALSE' abort "
"i - 'Int_t' 0 '0' timeout", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInitTime",1103,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCacheSize",1167,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLearnEntries",1516,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetProcessing",1353,G__G__ProofPlayer_190_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProgressStatus",1785,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofProgressStatus), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_190_0_58, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofPlayer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_190_0_59, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_190_0_60, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofPlayer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_190_0_61, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofPlayer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_190_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_190_0_66, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_190_0_67, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofPlayer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_190_0_68, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_190_0_69, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofPlayer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofPlayer", 1349, G__G__ProofPlayer_190_0_70, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofPlayerLite(void) {
   /* TProofPlayerLite */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLite));
   G__memfunc_setup("HandleTimer",1101,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "U 'TTimer' - 0 - timer", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeSelector",1215,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "C - - 10 - selfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupFeedback",1302,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TProofPlayerLite",1621,G__G__ProofPlayer_246_0_4, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLite), -1, 0, 1, 1, 1, 0, "U 'TProof' - 0 '0' proof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"U 'TDSet' - 0 - set C - - 10 - selector "
"C - 'Option_t' 10 '\"\"' option n - 'Long64_t' 0 '-1' nentries "
"n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' force g - 'Bool_t' 0 'kFALSE' sync", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "U 'TQueryResult' - 0 - qr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StoreFeedback",1298,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - slave U 'TList' - 0 - out", "Adopts the list", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_246_0_9, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofPlayerLite::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_246_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayerLite::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_246_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofPlayerLite::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_246_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofPlayerLite::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_246_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_246_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayerLite::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_246_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofPlayerLite::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_246_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayerLite::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_246_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofPlayerLite::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofPlayerLite", 1747, G__G__ProofPlayer_246_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofPlayerRemote(void) {
   /* TProofPlayerRemote */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerRemote));
   G__memfunc_setup("HandleTimer",1101,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "U 'TTimer' - 0 - timer", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitPacketizer",1446,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 2, 0, 
"U 'TDSet' - 0 - dset n - 'Long64_t' 0 - nentries "
"n - 'Long64_t' 0 - first C - - 10 - defpackunit "
"C - - 10 - defpackdata", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MergeFeedback",1269,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TList), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MergeOutputFiles",1652,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SendSelector",1227,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "C - - 10 - selector_file", "send selector to slaves", (void*) NULL, 1);
   G__memfunc_setup("GetProof",806,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TProof), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupFeedback",1302,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "specialized setup", (void*) NULL, 1);
   G__memfunc_setup("StopFeedback",1195,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "specialized teardown", (void*) NULL, 1);
   G__memfunc_setup("TProofPlayerRemote",1843,G__G__ProofPlayer_247_0_9, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerRemote), -1, 0, 1, 1, 1, 0, "U 'TProof' - 0 '0' proof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"U 'TDSet' - 0 - set C - - 10 - selector "
"C - 'Option_t' 10 '\"\"' option n - 'Long64_t' 0 '-1' nentries "
"n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' force g - 'Bool_t' 0 'kFALSE' sync", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "U 'TQueryResult' - 0 - qr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawSelect",1006,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 6, 1, 1, 0, 
"U 'TDSet' - 0 - set C - - 10 - varexp "
"C - - 10 - selection C - 'Option_t' 10 '\"\"' option "
"n - 'Long64_t' 0 '-1' nentries n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RedirectOutput",1475,G__G__ProofPlayer_247_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StopProcess",1157,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 - abort i - 'Int_t' 0 '-1' timeout", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StoreOutput",1182,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - out", "Adopts the list", (void*) NULL, 1);
   G__memfunc_setup("StoreFeedback",1298,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - slave U 'TList' - 0 - out", "Adopts the list", (void*) NULL, 1);
   G__memfunc_setup("Incorporate",1158,G__G__ProofPlayer_247_0_18, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'TObject' - 0 - obj U 'TList' - 0 - out "
"g - 'Bool_t' 1 - merged", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleHistogram",1530,G__G__ProofPlayer_247_0_19, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TObject), -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddOutputObject",1521,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddOutput",922,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - out", "Incorporate a list", (void*) NULL, 1);
   G__memfunc_setup("MergeOutput",1153,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TSlave' - 0 - - n - 'Long64_t' 0 - total "
"n - 'Long64_t' 0 - processed", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 7, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed "
"n - 'Long64_t' 0 - bytesread f - 'Float_t' 0 - initTime "
"f - 'Float_t' 0 - procTime f - 'Float_t' 0 - evtrti "
"f - 'Float_t' 0 - mbrti", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 8, 1, 1, 0, 
"U 'TSlave' - 0 - - n - 'Long64_t' 0 - total "
"n - 'Long64_t' 0 - processed n - 'Long64_t' 0 - bytesread "
"f - 'Float_t' 0 - initTime f - 'Float_t' 0 - procTime "
"f - 'Float_t' 0 - evtrti f - 'Float_t' 0 - mbrti", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TProofProgressInfo' - 0 - pi", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TSlave' - 0 - - U 'TProofProgressInfo' - 0 - pi", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("Feedback",773,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - objs", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("GetNextPacket",1303,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TDSetElement), -1, 0, 2, 1, 1, 0, 
"U 'TSlave' - 0 - slave U 'TMessage' - 0 - r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPacketizer",1330,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizer), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsClient",795,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInitTime",1103,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_247_0_34, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofPlayerRemote::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_247_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayerRemote::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_247_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofPlayerRemote::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_247_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofPlayerRemote::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_247_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_247_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayerRemote::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_247_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofPlayerRemote::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_247_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayerRemote::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_247_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofPlayerRemote::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofPlayerRemote", 1969, G__G__ProofPlayer_247_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTStatus(void) {
   /* TStatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TStatus));
   G__memfunc_setup("TStatus",728,G__G__ProofPlayer_252_0_1, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TStatus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOk",374,G__G__ProofPlayer_252_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__ProofPlayer_252_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - mesg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Merge",496,G__G__ProofPlayer_252_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TCollection' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__G__ProofPlayer_252_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NextMesg",811,G__G__ProofPlayer_252_0_7, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_252_0_8, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TStatus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_252_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStatus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_252_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TStatus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_252_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TStatus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_252_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_252_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStatus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_252_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TStatus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_252_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStatus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_252_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TStatus::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TStatus", 728, G__G__ProofPlayer_252_0_20, (int) ('i'), G__get_linked_tagnum(&G__G__ProofPlayerLN_TStatus), -1, 0, 1, 1, 1, 0, "u 'TStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TStatus", 854, G__G__ProofPlayer_252_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ProofPlayer_252_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__ProofPlayerLN_TStatus), -1, 1, 1, 1, 1, 0, "u 'TStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofPlayerLocal(void) {
   /* TProofPlayerLocal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLocal));
   G__memfunc_setup("SetupFeedback",1302,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StopFeedback",1195,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TProofPlayerLocal",1714,G__G__ProofPlayer_255_0_3, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLocal), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' client", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsClient",795,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_255_0_5, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofPlayerLocal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_255_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayerLocal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_255_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofPlayerLocal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_255_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofPlayerLocal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_255_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_255_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayerLocal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_255_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofPlayerLocal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_255_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayerLocal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_255_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofPlayerLocal::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofPlayerLocal", 1840, G__G__ProofPlayer_255_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofPlayerSlave(void) {
   /* TProofPlayerSlave */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSlave));
   G__memfunc_setup("HandleTimer",1101,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'TTimer' - 0 - timer", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupFeedback",1302,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StopFeedback",1195,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TProofPlayerSlave",1730,G__G__ProofPlayer_256_0_4, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSlave), -1, 0, 1, 1, 1, 0, "U 'TSocket' - 0 '0' socket", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleGetTreeHeader",1861,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TMessage' - 0 - mess", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_256_0_6, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofPlayerSlave::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_256_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayerSlave::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_256_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofPlayerSlave::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_256_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofPlayerSlave::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_256_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_256_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayerSlave::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_256_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofPlayerSlave::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_256_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayerSlave::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_256_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofPlayerSlave::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofPlayerSlave", 1856, G__G__ProofPlayer_256_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofPlayerSuperMaster(void) {
   /* TProofPlayerSuperMaster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSuperMaster));
   G__memfunc_setup("HandleTimer",1101,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "U 'TTimer' - 0 - timer", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupFeedback",1302,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TProofPlayerSuperMaster",2370,G__G__ProofPlayer_257_0_3, 105, G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSuperMaster), -1, 0, 1, 1, 1, 0, "U 'TProof' - 0 '0' proof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 5, 1, 1, 0, 
"U 'TDSet' - 0 - set C - - 10 - selector "
"C - 'Option_t' 10 '\"\"' option n - 'Long64_t' 0 '-1' nentries "
"n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 7, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed "
"n - 'Long64_t' 0 - bytesread f - 'Float_t' 0 - initTime "
"f - 'Float_t' 0 - procTime f - 'Float_t' 0 - evtrti "
"f - 'Float_t' 0 - mbrti", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TProofProgressInfo' - 0 - pi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TSlave' - 0 - sl n - 'Long64_t' 0 - total "
"n - 'Long64_t' 0 - processed", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 8, 1, 1, 0, 
"U 'TSlave' - 0 - sl n - 'Long64_t' 0 - total "
"n - 'Long64_t' 0 - processed n - 'Long64_t' 0 - bytesread "
"f - 'Float_t' 0 - initTime f - 'Float_t' 0 - procTime "
"f - 'Float_t' 0 - evtrti f - 'Float_t' 0 - mbrti", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Progress",853,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TSlave' - 0 - sl U 'TProofProgressInfo' - 0 - pi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ProofPlayer_257_0_11, 85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofPlayerSuperMaster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ProofPlayer_257_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayerSuperMaster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ProofPlayer_257_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofPlayerSuperMaster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ProofPlayer_257_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofPlayerSuperMaster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ProofPlayerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ProofPlayer_257_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ProofPlayer_257_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayerSuperMaster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ProofPlayer_257_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofPlayerSuperMaster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ProofPlayer_257_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofPlayerSuperMaster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ProofPlayer_257_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofPlayerSuperMaster::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofPlayerSuperMaster", 2496, G__G__ProofPlayer_257_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__ProofPlayer() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__ProofPlayer() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__ProofPlayer() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__ProofPlayerLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TTimer = { "TTimer" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TProof = { "TProof" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_THashList = { "THashList" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TDrawFeedback = { "TDrawFeedback" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TDSet = { "TDSet" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TDSetElement = { "TDSetElement" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TSelector = { "TSelector" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TIter = { "TIter" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TTreeCache = { "TTreeCache" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TEventList = { "TEventList" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TEntryList = { "TEntryList" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TEventIter = { "TEventIter" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TEventIterUnit = { "TEventIterUnit" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TEventIterObj = { "TEventIterObj" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TEventIterTree = { "TEventIterTree" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TStopwatch = { "TStopwatch" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TFileMerger = { "TFileMerger" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TSlave = { "TSlave" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TSocket = { "TSocket" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TProofProgressStatus = { "TProofProgressStatus" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TMessage = { "TMessage" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TNtupleD = { "TNtupleD" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TProofProgressInfo = { "TProofProgressInfo" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TVirtualPacketizer = { "TVirtualPacketizer" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TPacketizer = { "TPacketizer" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TPacketizerAdaptive = { "TPacketizerAdaptive" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TPacketizerUnit = { "TPacketizerUnit" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TVirtualPacketizercLcLEUseEstOpt = { "TVirtualPacketizer::EUseEstOpt" , 101 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TVirtualPacketizercLcLEStatusBits = { "TVirtualPacketizer::EStatusBits" , 101 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TMap = { "TMap" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TPacketizerAdaptivecLcLTFileNode = { "TPacketizerAdaptive::TFileNode" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TPacketizerAdaptivecLcLTFileStat = { "TPacketizerAdaptive::TFileStat" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TPacketizercLcLTFileNode = { "TPacketizer::TFileNode" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TPacketizercLcLTFileStat = { "TPacketizer::TFileStat" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TTimeStamp = { "TTimeStamp" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TVirtualPerfStats = { "TVirtualPerfStats" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TVirtualPerfStatscLcLEEventType = { "TVirtualPerfStats::EEventType" , 101 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TVirtualMonitoringWriter = { "TVirtualMonitoringWriter" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TPerfEvent = { "TPerfEvent" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TPerfStats = { "TPerfStats" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_THLimitsFinder = { "THLimitsFinder" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TProofLimitsFinder = { "TProofLimitsFinder" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TProofOutputFile = { "TProofOutputFile" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TFileCollection = { "TFileCollection" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TProofPlayer = { "TProofPlayer" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TProofOutputFilecLcLERunType = { "TProofOutputFile::ERunType" , 101 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TProofOutputFilecLcLETypeOpt = { "TProofOutputFile::ETypeOpt" , 101 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TQueryResult = { "TQueryResult" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TVirtualProofPlayer = { "TVirtualProofPlayer" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TVirtualProofPlayercLcLEExitStatus = { "TVirtualProofPlayer::EExitStatus" , 101 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TArrayL64 = { "TArrayL64" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TArrayF = { "TArrayF" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TProofPlayerLite = { "TProofPlayerLite" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TProofPlayerRemote = { "TProofPlayerRemote" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TMutex = { "TMutex" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TStatus = { "TStatus" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TProofPlayercLcLEStatusBits = { "TProofPlayer::EStatusBits" , 101 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TProofPlayerLocal = { "TProofPlayerLocal" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TProofPlayerSlave = { "TProofPlayerSlave" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_TProofPlayerSuperMaster = { "TProofPlayerSuperMaster" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR = { "set<string,less<string>,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__G__ProofPlayerLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgRcLcLiterator = { "set<string,less<string>,allocator<string> >::iterator" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__ProofPlayer() {
  G__G__ProofPlayerLN_TClass.tagnum = -1 ;
  G__G__ProofPlayerLN_TBuffer.tagnum = -1 ;
  G__G__ProofPlayerLN_TDirectory.tagnum = -1 ;
  G__G__ProofPlayerLN_TMemberInspector.tagnum = -1 ;
  G__G__ProofPlayerLN_TObject.tagnum = -1 ;
  G__G__ProofPlayerLN_TNamed.tagnum = -1 ;
  G__G__ProofPlayerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__ProofPlayerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ProofPlayerLN_TList.tagnum = -1 ;
  G__G__ProofPlayerLN_TTimer.tagnum = -1 ;
  G__G__ProofPlayerLN_TString.tagnum = -1 ;
  G__G__ProofPlayerLN_TQObject.tagnum = -1 ;
  G__G__ProofPlayerLN_TProof.tagnum = -1 ;
  G__G__ProofPlayerLN_THashList.tagnum = -1 ;
  G__G__ProofPlayerLN_TSeqCollection.tagnum = -1 ;
  G__G__ProofPlayerLN_TDrawFeedback.tagnum = -1 ;
  G__G__ProofPlayerLN_TDSet.tagnum = -1 ;
  G__G__ProofPlayerLN_TDSetElement.tagnum = -1 ;
  G__G__ProofPlayerLN_TFile.tagnum = -1 ;
  G__G__ProofPlayerLN_TSelector.tagnum = -1 ;
  G__G__ProofPlayerLN_TIter.tagnum = -1 ;
  G__G__ProofPlayerLN_TTree.tagnum = -1 ;
  G__G__ProofPlayerLN_TTreeCache.tagnum = -1 ;
  G__G__ProofPlayerLN_TEventList.tagnum = -1 ;
  G__G__ProofPlayerLN_TEntryList.tagnum = -1 ;
  G__G__ProofPlayerLN_TEventIter.tagnum = -1 ;
  G__G__ProofPlayerLN_TEventIterUnit.tagnum = -1 ;
  G__G__ProofPlayerLN_TEventIterObj.tagnum = -1 ;
  G__G__ProofPlayerLN_TEventIterTree.tagnum = -1 ;
  G__G__ProofPlayerLN_TStopwatch.tagnum = -1 ;
  G__G__ProofPlayerLN_TFileMerger.tagnum = -1 ;
  G__G__ProofPlayerLN_TSlave.tagnum = -1 ;
  G__G__ProofPlayerLN_TSocket.tagnum = -1 ;
  G__G__ProofPlayerLN_TProofProgressStatus.tagnum = -1 ;
  G__G__ProofPlayerLN_TMessage.tagnum = -1 ;
  G__G__ProofPlayerLN_TNtupleD.tagnum = -1 ;
  G__G__ProofPlayerLN_TProofProgressInfo.tagnum = -1 ;
  G__G__ProofPlayerLN_TVirtualPacketizer.tagnum = -1 ;
  G__G__ProofPlayerLN_TPacketizer.tagnum = -1 ;
  G__G__ProofPlayerLN_TPacketizerAdaptive.tagnum = -1 ;
  G__G__ProofPlayerLN_TPacketizerUnit.tagnum = -1 ;
  G__G__ProofPlayerLN_TVirtualPacketizercLcLEUseEstOpt.tagnum = -1 ;
  G__G__ProofPlayerLN_TVirtualPacketizercLcLEStatusBits.tagnum = -1 ;
  G__G__ProofPlayerLN_TMap.tagnum = -1 ;
  G__G__ProofPlayerLN_TPacketizerAdaptivecLcLTFileNode.tagnum = -1 ;
  G__G__ProofPlayerLN_TPacketizerAdaptivecLcLTFileStat.tagnum = -1 ;
  G__G__ProofPlayerLN_TPacketizercLcLTFileNode.tagnum = -1 ;
  G__G__ProofPlayerLN_TPacketizercLcLTFileStat.tagnum = -1 ;
  G__G__ProofPlayerLN_TCollection.tagnum = -1 ;
  G__G__ProofPlayerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__ProofPlayerLN_TTimeStamp.tagnum = -1 ;
  G__G__ProofPlayerLN_TVirtualPerfStats.tagnum = -1 ;
  G__G__ProofPlayerLN_TVirtualPerfStatscLcLEEventType.tagnum = -1 ;
  G__G__ProofPlayerLN_TH1D.tagnum = -1 ;
  G__G__ProofPlayerLN_TH2D.tagnum = -1 ;
  G__G__ProofPlayerLN_TVirtualMonitoringWriter.tagnum = -1 ;
  G__G__ProofPlayerLN_TPerfEvent.tagnum = -1 ;
  G__G__ProofPlayerLN_TPerfStats.tagnum = -1 ;
  G__G__ProofPlayerLN_TH1.tagnum = -1 ;
  G__G__ProofPlayerLN_THLimitsFinder.tagnum = -1 ;
  G__G__ProofPlayerLN_TProofLimitsFinder.tagnum = -1 ;
  G__G__ProofPlayerLN_TProofOutputFile.tagnum = -1 ;
  G__G__ProofPlayerLN_TFileCollection.tagnum = -1 ;
  G__G__ProofPlayerLN_TProofPlayer.tagnum = -1 ;
  G__G__ProofPlayerLN_TProofOutputFilecLcLERunType.tagnum = -1 ;
  G__G__ProofPlayerLN_TProofOutputFilecLcLETypeOpt.tagnum = -1 ;
  G__G__ProofPlayerLN_TQueryResult.tagnum = -1 ;
  G__G__ProofPlayerLN_TVirtualProofPlayer.tagnum = -1 ;
  G__G__ProofPlayerLN_TVirtualProofPlayercLcLEExitStatus.tagnum = -1 ;
  G__G__ProofPlayerLN_TArrayL64.tagnum = -1 ;
  G__G__ProofPlayerLN_TArrayF.tagnum = -1 ;
  G__G__ProofPlayerLN_TArrayI.tagnum = -1 ;
  G__G__ProofPlayerLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__ProofPlayerLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ProofPlayerLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__ProofPlayerLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ProofPlayerLN_TProofPlayerLite.tagnum = -1 ;
  G__G__ProofPlayerLN_TProofPlayerRemote.tagnum = -1 ;
  G__G__ProofPlayerLN_TMutex.tagnum = -1 ;
  G__G__ProofPlayerLN_TStatus.tagnum = -1 ;
  G__G__ProofPlayerLN_TProofPlayercLcLEStatusBits.tagnum = -1 ;
  G__G__ProofPlayerLN_TProofPlayerLocal.tagnum = -1 ;
  G__G__ProofPlayerLN_TProofPlayerSlave.tagnum = -1 ;
  G__G__ProofPlayerLN_TProofPlayerSuperMaster.tagnum = -1 ;
  G__G__ProofPlayerLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__G__ProofPlayerLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgRcLcLiterator.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__ProofPlayer() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TDirectory);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TList);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TTimer);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TString);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TQObject);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TProof);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_THashList);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TSeqCollection);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TDrawFeedback),sizeof(TDrawFeedback),-1,292096,"Present PROOF query feedback",G__setup_memvarTDrawFeedback,G__setup_memfuncTDrawFeedback);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TDSet);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TDSetElement);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TSelector);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TIter);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TTree);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TTreeCache);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TEventList);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TEntryList);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIter),sizeof(TEventIter),-1,324867,"Event iterator used by TProofPlayer's",G__setup_memvarTEventIter,G__setup_memfuncTEventIter);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterUnit),sizeof(TEventIterUnit),-1,324864,"Event iterator for objects",G__setup_memvarTEventIterUnit,G__setup_memfuncTEventIterUnit);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterObj),sizeof(TEventIterObj),-1,324864,"Event iterator for objects",G__setup_memvarTEventIterObj,G__setup_memfuncTEventIterObj);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TEventIterTree),sizeof(TEventIterTree),-1,324864,"Event iterator for Trees",G__setup_memvarTEventIterTree,G__setup_memfuncTEventIterTree);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TStopwatch);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TFileMerger),sizeof(TFileMerger),-1,294656,"File copying and merging services",G__setup_memvarTFileMerger,G__setup_memfuncTFileMerger);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TSlave);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TSocket);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TProofProgressStatus);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TMessage);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TNtupleD);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TProofProgressInfo);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TVirtualPacketizer),sizeof(TVirtualPacketizer),-1,327168,"Generate work packets for parallel processing",G__setup_memvarTVirtualPacketizer,G__setup_memfuncTVirtualPacketizer);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizer),sizeof(TPacketizer),-1,327424,"Generate work packets for parallel processing",G__setup_memvarTPacketizer,G__setup_memfuncTPacketizer);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerAdaptive),sizeof(TPacketizerAdaptive),-1,327424,"Generate work packets for parallel processing",G__setup_memvarTPacketizerAdaptive,G__setup_memfuncTPacketizerAdaptive);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPacketizerUnit),sizeof(TPacketizerUnit),-1,327424,"Generate work packets for parallel processing",G__setup_memvarTPacketizerUnit,G__setup_memfuncTPacketizerUnit);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TVirtualPacketizercLcLEUseEstOpt);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TVirtualPacketizercLcLEStatusBits);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TMap);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TPacketizerAdaptivecLcLTFileNode);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TPacketizerAdaptivecLcLTFileStat);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TPacketizercLcLTFileNode);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TPacketizercLcLTFileStat);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TCollection);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TTimeStamp);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TVirtualPerfStats);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TVirtualPerfStatscLcLEEventType);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TH1D);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TH2D);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TVirtualMonitoringWriter);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfEvent),sizeof(TPerfEvent),-1,292096,"Class holding TProof Event Info",G__setup_memvarTPerfEvent,G__setup_memfuncTPerfEvent);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TPerfStats),sizeof(TPerfStats),-1,62464,"Class for collecting PROOF statistics",G__setup_memvarTPerfStats,G__setup_memfuncTPerfStats);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TH1);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_THLimitsFinder);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofLimitsFinder),sizeof(TProofLimitsFinder),-1,29952,"Find and communicate best axis limits",G__setup_memvarTProofLimitsFinder,G__setup_memfuncTProofLimitsFinder);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofOutputFile),sizeof(TProofOutputFile),-1,327424,"Wrapper class to steer the merging of files produced on workers",G__setup_memvarTProofOutputFile,G__setup_memfuncTProofOutputFile);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TFileCollection);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayer),sizeof(TProofPlayer),-1,292096,"Basic PROOF player",G__setup_memvarTProofPlayer,G__setup_memfuncTProofPlayer);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TProofOutputFilecLcLERunType);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TProofOutputFilecLcLETypeOpt);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TQueryResult);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TVirtualProofPlayer);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TVirtualProofPlayercLcLEExitStatus);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TArrayL64);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TArrayF);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLite),sizeof(TProofPlayerLite),-1,292096,"PROOF player running in PROOF-Lite",G__setup_memvarTProofPlayerLite,G__setup_memfuncTProofPlayerLite);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerRemote),sizeof(TProofPlayerRemote),-1,292096,"PROOF player running on master server",G__setup_memvarTProofPlayerRemote,G__setup_memfuncTProofPlayerRemote);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TMutex);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TStatus),sizeof(TStatus),-1,324864,"Status class",G__setup_memvarTStatus,G__setup_memfuncTStatus);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_TProofPlayercLcLEStatusBits);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerLocal),sizeof(TProofPlayerLocal),-1,292096,"PROOF player running on client",G__setup_memvarTProofPlayerLocal,G__setup_memfuncTProofPlayerLocal);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSlave),sizeof(TProofPlayerSlave),-1,291072,"PROOF player running on slave server",G__setup_memvarTProofPlayerSlave,G__setup_memfuncTProofPlayerSlave);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofPlayerLN_TProofPlayerSuperMaster),sizeof(TProofPlayerSuperMaster),-1,292096,"PROOF player running on super master",G__setup_memvarTProofPlayerSuperMaster,G__setup_memfuncTProofPlayerSuperMaster);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ProofPlayerLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgRcLcLiterator);
}
extern "C" void G__cpp_setupG__ProofPlayer(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__ProofPlayer()");
  G__set_cpp_environmentG__ProofPlayer();
  G__cpp_setup_tagtableG__ProofPlayer();

  G__cpp_setup_inheritanceG__ProofPlayer();

  G__cpp_setup_typetableG__ProofPlayer();

  G__cpp_setup_memvarG__ProofPlayer();

  G__cpp_setup_memfuncG__ProofPlayer();
  G__cpp_setup_globalG__ProofPlayer();
  G__cpp_setup_funcG__ProofPlayer();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__ProofPlayer();
  return;
}
class G__cpp_setup_initG__ProofPlayer {
  public:
    G__cpp_setup_initG__ProofPlayer() { G__add_setup_func("G__ProofPlayer",(G__incsetup)(&G__cpp_setupG__ProofPlayer)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__ProofPlayer() { G__remove_setup_func("G__ProofPlayer"); }
};
G__cpp_setup_initG__ProofPlayer G__cpp_setup_initializerG__ProofPlayer;

