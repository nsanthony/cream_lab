//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:47:32 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__SessionViewer.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TProofProgressLog_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TProofProgressLog(void *p = 0);
   static void *newArray_TProofProgressLog(Long_t size, void *p);
   static void delete_TProofProgressLog(void *p);
   static void deleteArray_TProofProgressLog(void *p);
   static void destruct_TProofProgressLog(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofProgressLog*)
   {
      ::TProofProgressLog *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofProgressLog >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofProgressLog", ::TProofProgressLog::Class_Version(), "include/TProofProgressLog.h", 44,
                  typeid(::TProofProgressLog), DefineBehavior(ptr, ptr),
                  &::TProofProgressLog::Dictionary, isa_proxy, 4,
                  sizeof(::TProofProgressLog) );
      instance.SetNew(&new_TProofProgressLog);
      instance.SetNewArray(&newArray_TProofProgressLog);
      instance.SetDelete(&delete_TProofProgressLog);
      instance.SetDeleteArray(&deleteArray_TProofProgressLog);
      instance.SetDestructor(&destruct_TProofProgressLog);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofProgressLog*)
   {
      return GenerateInitInstanceLocal((::TProofProgressLog*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofProgressLog*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofProgressMemoryPlot_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TProofProgressMemoryPlot(void *p);
   static void deleteArray_TProofProgressMemoryPlot(void *p);
   static void destruct_TProofProgressMemoryPlot(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofProgressMemoryPlot*)
   {
      ::TProofProgressMemoryPlot *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofProgressMemoryPlot >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofProgressMemoryPlot", ::TProofProgressMemoryPlot::Class_Version(), "include/TProofProgressMemoryPlot.h", 40,
                  typeid(::TProofProgressMemoryPlot), DefineBehavior(ptr, ptr),
                  &::TProofProgressMemoryPlot::Dictionary, isa_proxy, 4,
                  sizeof(::TProofProgressMemoryPlot) );
      instance.SetDelete(&delete_TProofProgressMemoryPlot);
      instance.SetDeleteArray(&deleteArray_TProofProgressMemoryPlot);
      instance.SetDestructor(&destruct_TProofProgressMemoryPlot);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofProgressMemoryPlot*)
   {
      return GenerateInitInstanceLocal((::TProofProgressMemoryPlot*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofProgressMemoryPlot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TProofProgressDialog_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TProofProgressDialog(void *p);
   static void deleteArray_TProofProgressDialog(void *p);
   static void destruct_TProofProgressDialog(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TProofProgressDialog*)
   {
      ::TProofProgressDialog *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TProofProgressDialog >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TProofProgressDialog", ::TProofProgressDialog::Class_Version(), "include/TProofProgressDialog.h", 45,
                  typeid(::TProofProgressDialog), DefineBehavior(ptr, ptr),
                  &::TProofProgressDialog::Dictionary, isa_proxy, 4,
                  sizeof(::TProofProgressDialog) );
      instance.SetDelete(&delete_TProofProgressDialog);
      instance.SetDeleteArray(&deleteArray_TProofProgressDialog);
      instance.SetDestructor(&destruct_TProofProgressDialog);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TProofProgressDialog*)
   {
      return GenerateInitInstanceLocal((::TProofProgressDialog*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TProofProgressDialog*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSessionViewer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TSessionViewer(void *p = 0);
   static void *newArray_TSessionViewer(Long_t size, void *p);
   static void delete_TSessionViewer(void *p);
   static void deleteArray_TSessionViewer(void *p);
   static void destruct_TSessionViewer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSessionViewer*)
   {
      ::TSessionViewer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSessionViewer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSessionViewer", ::TSessionViewer::Class_Version(), "include/TSessionViewer.h", 533,
                  typeid(::TSessionViewer), DefineBehavior(ptr, ptr),
                  &::TSessionViewer::Dictionary, isa_proxy, 4,
                  sizeof(::TSessionViewer) );
      instance.SetNew(&new_TSessionViewer);
      instance.SetNewArray(&newArray_TSessionViewer);
      instance.SetDelete(&delete_TSessionViewer);
      instance.SetDeleteArray(&deleteArray_TSessionViewer);
      instance.SetDestructor(&destruct_TSessionViewer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSessionViewer*)
   {
      return GenerateInitInstanceLocal((::TSessionViewer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSessionViewer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSessionLogView_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TSessionLogView(void *p);
   static void deleteArray_TSessionLogView(void *p);
   static void destruct_TSessionLogView(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSessionLogView*)
   {
      ::TSessionLogView *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSessionLogView >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSessionLogView", ::TSessionLogView::Class_Version(), "include/TSessionLogView.h", 29,
                  typeid(::TSessionLogView), DefineBehavior(ptr, ptr),
                  &::TSessionLogView::Dictionary, isa_proxy, 4,
                  sizeof(::TSessionLogView) );
      instance.SetDelete(&delete_TSessionLogView);
      instance.SetDeleteArray(&deleteArray_TSessionLogView);
      instance.SetDestructor(&destruct_TSessionLogView);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSessionLogView*)
   {
      return GenerateInitInstanceLocal((::TSessionLogView*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSessionLogView*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TQueryDescription_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TQueryDescription(void *p = 0);
   static void *newArray_TQueryDescription(Long_t size, void *p);
   static void delete_TQueryDescription(void *p);
   static void deleteArray_TQueryDescription(void *p);
   static void destruct_TQueryDescription(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TQueryDescription*)
   {
      ::TQueryDescription *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TQueryDescription >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TQueryDescription", ::TQueryDescription::Class_Version(), "include/TSessionViewer.h", 104,
                  typeid(::TQueryDescription), DefineBehavior(ptr, ptr),
                  &::TQueryDescription::Dictionary, isa_proxy, 4,
                  sizeof(::TQueryDescription) );
      instance.SetNew(&new_TQueryDescription);
      instance.SetNewArray(&newArray_TQueryDescription);
      instance.SetDelete(&delete_TQueryDescription);
      instance.SetDeleteArray(&deleteArray_TQueryDescription);
      instance.SetDestructor(&destruct_TQueryDescription);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TQueryDescription*)
   {
      return GenerateInitInstanceLocal((::TQueryDescription*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TQueryDescription*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSessionDescription_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TSessionDescription(void *p = 0);
   static void *newArray_TSessionDescription(Long_t size, void *p);
   static void delete_TSessionDescription(void *p);
   static void deleteArray_TSessionDescription(void *p);
   static void destruct_TSessionDescription(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSessionDescription*)
   {
      ::TSessionDescription *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSessionDescription >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSessionDescription", ::TSessionDescription::Class_Version(), "include/TSessionViewer.h", 149,
                  typeid(::TSessionDescription), DefineBehavior(ptr, ptr),
                  &::TSessionDescription::Dictionary, isa_proxy, 4,
                  sizeof(::TSessionDescription) );
      instance.SetNew(&new_TSessionDescription);
      instance.SetNewArray(&newArray_TSessionDescription);
      instance.SetDelete(&delete_TSessionDescription);
      instance.SetDeleteArray(&deleteArray_TSessionDescription);
      instance.SetDestructor(&destruct_TSessionDescription);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSessionDescription*)
   {
      return GenerateInitInstanceLocal((::TSessionDescription*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSessionDescription*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPackageDescription_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TPackageDescription(void *p = 0);
   static void *newArray_TPackageDescription(Long_t size, void *p);
   static void delete_TPackageDescription(void *p);
   static void deleteArray_TPackageDescription(void *p);
   static void destruct_TPackageDescription(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPackageDescription*)
   {
      ::TPackageDescription *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPackageDescription >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPackageDescription", ::TPackageDescription::Class_Version(), "include/TSessionViewer.h", 180,
                  typeid(::TPackageDescription), DefineBehavior(ptr, ptr),
                  &::TPackageDescription::Dictionary, isa_proxy, 4,
                  sizeof(::TPackageDescription) );
      instance.SetNew(&new_TPackageDescription);
      instance.SetNewArray(&newArray_TPackageDescription);
      instance.SetDelete(&delete_TPackageDescription);
      instance.SetDeleteArray(&deleteArray_TPackageDescription);
      instance.SetDestructor(&destruct_TPackageDescription);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPackageDescription*)
   {
      return GenerateInitInstanceLocal((::TPackageDescription*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPackageDescription*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSessionServerFrame_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TSessionServerFrame(void *p);
   static void deleteArray_TSessionServerFrame(void *p);
   static void destruct_TSessionServerFrame(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSessionServerFrame*)
   {
      ::TSessionServerFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSessionServerFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSessionServerFrame", ::TSessionServerFrame::Class_Version(), "include/TSessionViewer.h", 202,
                  typeid(::TSessionServerFrame), DefineBehavior(ptr, ptr),
                  &::TSessionServerFrame::Dictionary, isa_proxy, 4,
                  sizeof(::TSessionServerFrame) );
      instance.SetDelete(&delete_TSessionServerFrame);
      instance.SetDeleteArray(&deleteArray_TSessionServerFrame);
      instance.SetDestructor(&destruct_TSessionServerFrame);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSessionServerFrame*)
   {
      return GenerateInitInstanceLocal((::TSessionServerFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSessionServerFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSessionFrame_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TSessionFrame(void *p);
   static void deleteArray_TSessionFrame(void *p);
   static void destruct_TSessionFrame(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSessionFrame*)
   {
      ::TSessionFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSessionFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSessionFrame", ::TSessionFrame::Class_Version(), "include/TSessionViewer.h", 268,
                  typeid(::TSessionFrame), DefineBehavior(ptr, ptr),
                  &::TSessionFrame::Dictionary, isa_proxy, 4,
                  sizeof(::TSessionFrame) );
      instance.SetDelete(&delete_TSessionFrame);
      instance.SetDeleteArray(&deleteArray_TSessionFrame);
      instance.SetDestructor(&destruct_TSessionFrame);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSessionFrame*)
   {
      return GenerateInitInstanceLocal((::TSessionFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSessionFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEditQueryFrame_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TEditQueryFrame(void *p);
   static void deleteArray_TEditQueryFrame(void *p);
   static void destruct_TEditQueryFrame(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEditQueryFrame*)
   {
      ::TEditQueryFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEditQueryFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEditQueryFrame", ::TEditQueryFrame::Class_Version(), "include/TSessionViewer.h", 357,
                  typeid(::TEditQueryFrame), DefineBehavior(ptr, ptr),
                  &::TEditQueryFrame::Dictionary, isa_proxy, 4,
                  sizeof(::TEditQueryFrame) );
      instance.SetDelete(&delete_TEditQueryFrame);
      instance.SetDeleteArray(&deleteArray_TEditQueryFrame);
      instance.SetDestructor(&destruct_TEditQueryFrame);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEditQueryFrame*)
   {
      return GenerateInitInstanceLocal((::TEditQueryFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEditQueryFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSessionQueryFrame_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TSessionQueryFrame(void *p);
   static void deleteArray_TSessionQueryFrame(void *p);
   static void destruct_TSessionQueryFrame(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSessionQueryFrame*)
   {
      ::TSessionQueryFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSessionQueryFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSessionQueryFrame", ::TSessionQueryFrame::Class_Version(), "include/TSessionViewer.h", 399,
                  typeid(::TSessionQueryFrame), DefineBehavior(ptr, ptr),
                  &::TSessionQueryFrame::Dictionary, isa_proxy, 4,
                  sizeof(::TSessionQueryFrame) );
      instance.SetDelete(&delete_TSessionQueryFrame);
      instance.SetDeleteArray(&deleteArray_TSessionQueryFrame);
      instance.SetDestructor(&destruct_TSessionQueryFrame);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSessionQueryFrame*)
   {
      return GenerateInitInstanceLocal((::TSessionQueryFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSessionQueryFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSessionOutputFrame_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TSessionOutputFrame(void *p);
   static void deleteArray_TSessionOutputFrame(void *p);
   static void destruct_TSessionOutputFrame(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSessionOutputFrame*)
   {
      ::TSessionOutputFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSessionOutputFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSessionOutputFrame", ::TSessionOutputFrame::Class_Version(), "include/TSessionViewer.h", 477,
                  typeid(::TSessionOutputFrame), DefineBehavior(ptr, ptr),
                  &::TSessionOutputFrame::Dictionary, isa_proxy, 4,
                  sizeof(::TSessionOutputFrame) );
      instance.SetDelete(&delete_TSessionOutputFrame);
      instance.SetDeleteArray(&deleteArray_TSessionOutputFrame);
      instance.SetDestructor(&destruct_TSessionOutputFrame);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSessionOutputFrame*)
   {
      return GenerateInitInstanceLocal((::TSessionOutputFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSessionOutputFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSessionInputFrame_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TSessionInputFrame(void *p);
   static void deleteArray_TSessionInputFrame(void *p);
   static void destruct_TSessionInputFrame(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSessionInputFrame*)
   {
      ::TSessionInputFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSessionInputFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSessionInputFrame", ::TSessionInputFrame::Class_Version(), "include/TSessionViewer.h", 506,
                  typeid(::TSessionInputFrame), DefineBehavior(ptr, ptr),
                  &::TSessionInputFrame::Dictionary, isa_proxy, 4,
                  sizeof(::TSessionInputFrame) );
      instance.SetDelete(&delete_TSessionInputFrame);
      instance.SetDeleteArray(&deleteArray_TSessionInputFrame);
      instance.SetDestructor(&destruct_TSessionInputFrame);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSessionInputFrame*)
   {
      return GenerateInitInstanceLocal((::TSessionInputFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSessionInputFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TNewChainDlg_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TNewChainDlg(void *p = 0);
   static void *newArray_TNewChainDlg(Long_t size, void *p);
   static void delete_TNewChainDlg(void *p);
   static void deleteArray_TNewChainDlg(void *p);
   static void destruct_TNewChainDlg(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TNewChainDlg*)
   {
      ::TNewChainDlg *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TNewChainDlg >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TNewChainDlg", ::TNewChainDlg::Class_Version(), "include/TSessionDialogs.h", 46,
                  typeid(::TNewChainDlg), DefineBehavior(ptr, ptr),
                  &::TNewChainDlg::Dictionary, isa_proxy, 4,
                  sizeof(::TNewChainDlg) );
      instance.SetNew(&new_TNewChainDlg);
      instance.SetNewArray(&newArray_TNewChainDlg);
      instance.SetDelete(&delete_TNewChainDlg);
      instance.SetDeleteArray(&deleteArray_TNewChainDlg);
      instance.SetDestructor(&destruct_TNewChainDlg);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TNewChainDlg*)
   {
      return GenerateInitInstanceLocal((::TNewChainDlg*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TNewChainDlg*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TNewQueryDlg_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TNewQueryDlg(void *p);
   static void deleteArray_TNewQueryDlg(void *p);
   static void destruct_TNewQueryDlg(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TNewQueryDlg*)
   {
      ::TNewQueryDlg *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TNewQueryDlg >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TNewQueryDlg", ::TNewQueryDlg::Class_Version(), "include/TSessionDialogs.h", 79,
                  typeid(::TNewQueryDlg), DefineBehavior(ptr, ptr),
                  &::TNewQueryDlg::Dictionary, isa_proxy, 4,
                  sizeof(::TNewQueryDlg) );
      instance.SetDelete(&delete_TNewQueryDlg);
      instance.SetDeleteArray(&deleteArray_TNewQueryDlg);
      instance.SetDestructor(&destruct_TNewQueryDlg);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TNewQueryDlg*)
   {
      return GenerateInitInstanceLocal((::TNewQueryDlg*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TNewQueryDlg*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TUploadDataSetDlg_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TUploadDataSetDlg(void *p);
   static void deleteArray_TUploadDataSetDlg(void *p);
   static void destruct_TUploadDataSetDlg(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TUploadDataSetDlg*)
   {
      ::TUploadDataSetDlg *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TUploadDataSetDlg >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TUploadDataSetDlg", ::TUploadDataSetDlg::Class_Version(), "include/TSessionDialogs.h", 128,
                  typeid(::TUploadDataSetDlg), DefineBehavior(ptr, ptr),
                  &::TUploadDataSetDlg::Dictionary, isa_proxy, 4,
                  sizeof(::TUploadDataSetDlg) );
      instance.SetDelete(&delete_TUploadDataSetDlg);
      instance.SetDeleteArray(&deleteArray_TUploadDataSetDlg);
      instance.SetDestructor(&destruct_TUploadDataSetDlg);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TUploadDataSetDlg*)
   {
      return GenerateInitInstanceLocal((::TUploadDataSetDlg*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TUploadDataSetDlg*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TProofProgressLog::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofProgressLog::Class_Name()
{
   return "TProofProgressLog";
}

//______________________________________________________________________________
const char *TProofProgressLog::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressLog*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofProgressLog::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressLog*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofProgressLog::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressLog*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofProgressLog::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressLog*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofProgressMemoryPlot::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofProgressMemoryPlot::Class_Name()
{
   return "TProofProgressMemoryPlot";
}

//______________________________________________________________________________
const char *TProofProgressMemoryPlot::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressMemoryPlot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofProgressMemoryPlot::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressMemoryPlot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofProgressMemoryPlot::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressMemoryPlot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofProgressMemoryPlot::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressMemoryPlot*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofProgressDialog::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofProgressDialog::Class_Name()
{
   return "TProofProgressDialog";
}

//______________________________________________________________________________
const char *TProofProgressDialog::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressDialog*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofProgressDialog::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressDialog*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofProgressDialog::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressDialog*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofProgressDialog::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TProofProgressDialog*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSessionViewer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSessionViewer::Class_Name()
{
   return "TSessionViewer";
}

//______________________________________________________________________________
const char *TSessionViewer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSessionViewer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSessionViewer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSessionViewer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSessionViewer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSessionViewer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSessionViewer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSessionViewer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSessionLogView::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSessionLogView::Class_Name()
{
   return "TSessionLogView";
}

//______________________________________________________________________________
const char *TSessionLogView::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSessionLogView*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSessionLogView::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSessionLogView*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSessionLogView::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSessionLogView*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSessionLogView::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSessionLogView*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TQueryDescription::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TQueryDescription::Class_Name()
{
   return "TQueryDescription";
}

//______________________________________________________________________________
const char *TQueryDescription::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQueryDescription*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TQueryDescription::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQueryDescription*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TQueryDescription::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQueryDescription*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TQueryDescription::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQueryDescription*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSessionDescription::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSessionDescription::Class_Name()
{
   return "TSessionDescription";
}

//______________________________________________________________________________
const char *TSessionDescription::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSessionDescription*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSessionDescription::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSessionDescription*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSessionDescription::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSessionDescription*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSessionDescription::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSessionDescription*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPackageDescription::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPackageDescription::Class_Name()
{
   return "TPackageDescription";
}

//______________________________________________________________________________
const char *TPackageDescription::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPackageDescription*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPackageDescription::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPackageDescription*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPackageDescription::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPackageDescription*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPackageDescription::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPackageDescription*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSessionServerFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSessionServerFrame::Class_Name()
{
   return "TSessionServerFrame";
}

//______________________________________________________________________________
const char *TSessionServerFrame::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSessionServerFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSessionServerFrame::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSessionServerFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSessionServerFrame::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSessionServerFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSessionServerFrame::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSessionServerFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSessionFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSessionFrame::Class_Name()
{
   return "TSessionFrame";
}

//______________________________________________________________________________
const char *TSessionFrame::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSessionFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSessionFrame::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSessionFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSessionFrame::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSessionFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSessionFrame::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSessionFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEditQueryFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEditQueryFrame::Class_Name()
{
   return "TEditQueryFrame";
}

//______________________________________________________________________________
const char *TEditQueryFrame::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEditQueryFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEditQueryFrame::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEditQueryFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEditQueryFrame::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEditQueryFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEditQueryFrame::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEditQueryFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSessionQueryFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSessionQueryFrame::Class_Name()
{
   return "TSessionQueryFrame";
}

//______________________________________________________________________________
const char *TSessionQueryFrame::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSessionQueryFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSessionQueryFrame::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSessionQueryFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSessionQueryFrame::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSessionQueryFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSessionQueryFrame::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSessionQueryFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSessionOutputFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSessionOutputFrame::Class_Name()
{
   return "TSessionOutputFrame";
}

//______________________________________________________________________________
const char *TSessionOutputFrame::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSessionOutputFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSessionOutputFrame::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSessionOutputFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSessionOutputFrame::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSessionOutputFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSessionOutputFrame::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSessionOutputFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSessionInputFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSessionInputFrame::Class_Name()
{
   return "TSessionInputFrame";
}

//______________________________________________________________________________
const char *TSessionInputFrame::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSessionInputFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSessionInputFrame::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSessionInputFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSessionInputFrame::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSessionInputFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSessionInputFrame::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSessionInputFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TNewChainDlg::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TNewChainDlg::Class_Name()
{
   return "TNewChainDlg";
}

//______________________________________________________________________________
const char *TNewChainDlg::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TNewChainDlg*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TNewChainDlg::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TNewChainDlg*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TNewChainDlg::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TNewChainDlg*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TNewChainDlg::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TNewChainDlg*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TNewQueryDlg::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TNewQueryDlg::Class_Name()
{
   return "TNewQueryDlg";
}

//______________________________________________________________________________
const char *TNewQueryDlg::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TNewQueryDlg*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TNewQueryDlg::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TNewQueryDlg*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TNewQueryDlg::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TNewQueryDlg*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TNewQueryDlg::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TNewQueryDlg*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TUploadDataSetDlg::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TUploadDataSetDlg::Class_Name()
{
   return "TUploadDataSetDlg";
}

//______________________________________________________________________________
const char *TUploadDataSetDlg::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TUploadDataSetDlg*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TUploadDataSetDlg::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TUploadDataSetDlg*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TUploadDataSetDlg::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TUploadDataSetDlg*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TUploadDataSetDlg::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TUploadDataSetDlg*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TProofProgressDialog::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofProgressDialog.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TProofProgressDialog::Class(),this);
   } else {
      R__b.WriteClassBuffer(TProofProgressDialog::Class(),this);
   }
}

//______________________________________________________________________________
void TProofProgressDialog::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofProgressDialog.
      TClass *R__cl = ::TProofProgressDialog::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fDialog", &fDialog);
      R__insp.Inspect(R__cl, R__parent, "*fBar", &fBar);
      R__insp.Inspect(R__cl, R__parent, "*fClose", &fClose);
      R__insp.Inspect(R__cl, R__parent, "*fStop", &fStop);
      R__insp.Inspect(R__cl, R__parent, "*fAbort", &fAbort);
      R__insp.Inspect(R__cl, R__parent, "*fAsyn", &fAsyn);
      R__insp.Inspect(R__cl, R__parent, "*fLog", &fLog);
      R__insp.Inspect(R__cl, R__parent, "*fRatePlot", &fRatePlot);
      R__insp.Inspect(R__cl, R__parent, "*fMemPlot", &fMemPlot);
      R__insp.Inspect(R__cl, R__parent, "*fKeepToggle", &fKeepToggle);
      R__insp.Inspect(R__cl, R__parent, "*fLogQueryToggle", &fLogQueryToggle);
      R__insp.Inspect(R__cl, R__parent, "*fTextQuery", &fTextQuery);
      R__insp.Inspect(R__cl, R__parent, "*fEntry", &fEntry);
      R__insp.Inspect(R__cl, R__parent, "*fTitleLab", &fTitleLab);
      R__insp.Inspect(R__cl, R__parent, "*fFilesEvents", &fFilesEvents);
      R__insp.Inspect(R__cl, R__parent, "*fTimeLab", &fTimeLab);
      R__insp.Inspect(R__cl, R__parent, "*fProcessed", &fProcessed);
      R__insp.Inspect(R__cl, R__parent, "*fEstim", &fEstim);
      R__insp.Inspect(R__cl, R__parent, "*fTotal", &fTotal);
      R__insp.Inspect(R__cl, R__parent, "*fRate", &fRate);
      R__insp.Inspect(R__cl, R__parent, "*fInit", &fInit);
      R__insp.Inspect(R__cl, R__parent, "*fSelector", &fSelector);
      R__insp.Inspect(R__cl, R__parent, "*fSpeedo", &fSpeedo);
      R__insp.Inspect(R__cl, R__parent, "*fSmoothSpeedo", &fSmoothSpeedo);
      R__insp.Inspect(R__cl, R__parent, "*fLogWindow", &fLogWindow);
      R__insp.Inspect(R__cl, R__parent, "*fMemWindow", &fMemWindow);
      R__insp.Inspect(R__cl, R__parent, "*fProof", &fProof);
      R__insp.Inspect(R__cl, R__parent, "fStartTime", &fStartTime);
      fStartTime.ShowMembers(R__insp, strcat(R__parent,"fStartTime.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fEndTime", &fEndTime);
      fEndTime.ShowMembers(R__insp, strcat(R__parent,"fEndTime.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPrevProcessed", &fPrevProcessed);
      R__insp.Inspect(R__cl, R__parent, "fPrevTotal", &fPrevTotal);
      R__insp.Inspect(R__cl, R__parent, "fFirst", &fFirst);
      R__insp.Inspect(R__cl, R__parent, "fEntries", &fEntries);
      R__insp.Inspect(R__cl, R__parent, "fFiles", &fFiles);
      R__insp.Inspect(R__cl, R__parent, "fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__parent, "fKeep", &fKeep);
      R__insp.Inspect(R__cl, R__parent, "fLogQuery", &fLogQuery);
      R__insp.Inspect(R__cl, R__parent, "*fRatePoints", &fRatePoints);
      R__insp.Inspect(R__cl, R__parent, "*fRateGraph", &fRateGraph);
      R__insp.Inspect(R__cl, R__parent, "*fMBRtGraph", &fMBRtGraph);
      R__insp.Inspect(R__cl, R__parent, "*fActWGraph", &fActWGraph);
      R__insp.Inspect(R__cl, R__parent, "*fTotSGraph", &fTotSGraph);
      R__insp.Inspect(R__cl, R__parent, "*fEffSGraph", &fEffSGraph);
      R__insp.Inspect(R__cl, R__parent, "fInitTime", &fInitTime);
      R__insp.Inspect(R__cl, R__parent, "fProcTime", &fProcTime);
      R__insp.Inspect(R__cl, R__parent, "fAvgRate", &fAvgRate);
      R__insp.Inspect(R__cl, R__parent, "fAvgMBRate", &fAvgMBRate);
      R__insp.Inspect(R__cl, R__parent, "fSVNRev", &fSVNRev);
      R__insp.Inspect(R__cl, R__parent, "fRightInfo", &fRightInfo);
      R__insp.Inspect(R__cl, R__parent, "fSessionUrl", &fSessionUrl);
      fSessionUrl.ShowMembers(R__insp, strcat(R__parent,"fSessionUrl.")); R__parent[R__ncp] = 0;
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TProofProgressDialog(void *p) {
      delete ((::TProofProgressDialog*)p);
   }
   static void deleteArray_TProofProgressDialog(void *p) {
      delete [] ((::TProofProgressDialog*)p);
   }
   static void destruct_TProofProgressDialog(void *p) {
      typedef ::TProofProgressDialog current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofProgressDialog

//______________________________________________________________________________
void TProofProgressLog::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofProgressLog.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TProofProgressLog::Class(),this);
   } else {
      R__b.WriteClassBuffer(TProofProgressLog::Class(),this);
   }
}

//______________________________________________________________________________
void TProofProgressLog::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofProgressLog.
      TClass *R__cl = ::TProofProgressLog::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fSessionUrl", &fSessionUrl);
      fSessionUrl.ShowMembers(R__insp, strcat(R__parent,"fSessionUrl.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSessionIdx", &fSessionIdx);
      R__insp.Inspect(R__cl, R__parent, "*fText", &fText);
      R__insp.Inspect(R__cl, R__parent, "*fClose", &fClose);
      R__insp.Inspect(R__cl, R__parent, "*fLogList", &fLogList);
      R__insp.Inspect(R__cl, R__parent, "*fLogNew", &fLogNew);
      R__insp.Inspect(R__cl, R__parent, "*fDialog", &fDialog);
      R__insp.Inspect(R__cl, R__parent, "*fProofLog", &fProofLog);
      R__insp.Inspect(R__cl, R__parent, "*fLinesFrom", &fLinesFrom);
      R__insp.Inspect(R__cl, R__parent, "*fLinesTo", &fLinesTo);
      R__insp.Inspect(R__cl, R__parent, "*fGrepText", &fGrepText);
      R__insp.Inspect(R__cl, R__parent, "*fUrlText", &fUrlText);
      R__insp.Inspect(R__cl, R__parent, "*fSessNum", &fSessNum);
      R__insp.Inspect(R__cl, R__parent, "*fFileName", &fFileName);
      R__insp.Inspect(R__cl, R__parent, "*fSave", &fSave);
      R__insp.Inspect(R__cl, R__parent, "*fGrepButton", &fGrepButton);
      R__insp.Inspect(R__cl, R__parent, "*fUrlButton", &fUrlButton);
      R__insp.Inspect(R__cl, R__parent, "*fAllLines", &fAllLines);
      R__insp.Inspect(R__cl, R__parent, "*fRawLines", &fRawLines);
      R__insp.Inspect(R__cl, R__parent, "*fAllWorkers", &fAllWorkers);
      R__insp.Inspect(R__cl, R__parent, "*fVworkers", &fVworkers);
      R__insp.Inspect(R__cl, R__parent, "fFullText", &fFullText);
      R__insp.Inspect(R__cl, R__parent, "fTextType", &fTextType);
      TGTransientFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TProofProgressLog(void *p) {
      return  p ? new(p) ::TProofProgressLog : new ::TProofProgressLog;
   }
   static void *newArray_TProofProgressLog(Long_t nElements, void *p) {
      return p ? new(p) ::TProofProgressLog[nElements] : new ::TProofProgressLog[nElements];
   }
   // Wrapper around operator delete
   static void delete_TProofProgressLog(void *p) {
      delete ((::TProofProgressLog*)p);
   }
   static void deleteArray_TProofProgressLog(void *p) {
      delete [] ((::TProofProgressLog*)p);
   }
   static void destruct_TProofProgressLog(void *p) {
      typedef ::TProofProgressLog current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofProgressLog

//______________________________________________________________________________
void TProofProgressMemoryPlot::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofProgressMemoryPlot.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TProofProgressMemoryPlot::Class(),this);
   } else {
      R__b.WriteClassBuffer(TProofProgressMemoryPlot::Class(),this);
   }
}

//______________________________________________________________________________
void TProofProgressMemoryPlot::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofProgressMemoryPlot.
      TClass *R__cl = ::TProofProgressMemoryPlot::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fDialog", &fDialog);
      R__insp.Inspect(R__cl, R__parent, "*fWorkers", &fWorkers);
      R__insp.Inspect(R__cl, R__parent, "*fPlot", &fPlot);
      R__insp.Inspect(R__cl, R__parent, "*fAllWorkers", &fAllWorkers);
      R__insp.Inspect(R__cl, R__parent, "*fWorkersPlot", &fWorkersPlot);
      R__insp.Inspect(R__cl, R__parent, "*fMasterPlot", &fMasterPlot);
      R__insp.Inspect(R__cl, R__parent, "*fProofLog", &fProofLog);
      R__insp.Inspect(R__cl, R__parent, "*fWPlot", &fWPlot);
      R__insp.Inspect(R__cl, R__parent, "*fMPlot", &fMPlot);
      R__insp.Inspect(R__cl, R__parent, "*fAPlot", &fAPlot);
      R__insp.Inspect(R__cl, R__parent, "fFullLogs", &fFullLogs);
      TGTransientFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TProofProgressMemoryPlot(void *p) {
      delete ((::TProofProgressMemoryPlot*)p);
   }
   static void deleteArray_TProofProgressMemoryPlot(void *p) {
      delete [] ((::TProofProgressMemoryPlot*)p);
   }
   static void destruct_TProofProgressMemoryPlot(void *p) {
      typedef ::TProofProgressMemoryPlot current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofProgressMemoryPlot

//______________________________________________________________________________
void TSessionLogView::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSessionLogView.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSessionLogView::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSessionLogView::Class(),this);
   }
}

//______________________________________________________________________________
void TSessionLogView::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSessionLogView.
      TClass *R__cl = ::TSessionLogView::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fViewer", &fViewer);
      R__insp.Inspect(R__cl, R__parent, "*fTextView", &fTextView);
      R__insp.Inspect(R__cl, R__parent, "*fClose", &fClose);
      R__insp.Inspect(R__cl, R__parent, "*fL1", &fL1);
      R__insp.Inspect(R__cl, R__parent, "*fL2", &fL2);
      TGTransientFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSessionLogView(void *p) {
      delete ((::TSessionLogView*)p);
   }
   static void deleteArray_TSessionLogView(void *p) {
      delete [] ((::TSessionLogView*)p);
   }
   static void destruct_TSessionLogView(void *p) {
      typedef ::TSessionLogView current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSessionLogView

//______________________________________________________________________________
void TSessionServerFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSessionServerFrame.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSessionServerFrame::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSessionServerFrame::Class(),this);
   }
}

//______________________________________________________________________________
void TSessionServerFrame::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSessionServerFrame.
      TClass *R__cl = ::TSessionServerFrame::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fFrmNewServer", &fFrmNewServer);
      R__insp.Inspect(R__cl, R__parent, "*fTxtName", &fTxtName);
      R__insp.Inspect(R__cl, R__parent, "*fTxtAddress", &fTxtAddress);
      R__insp.Inspect(R__cl, R__parent, "*fNumPort", &fNumPort);
      R__insp.Inspect(R__cl, R__parent, "*fLogLevel", &fLogLevel);
      R__insp.Inspect(R__cl, R__parent, "*fTxtConfig", &fTxtConfig);
      R__insp.Inspect(R__cl, R__parent, "*fTxtUsrName", &fTxtUsrName);
      R__insp.Inspect(R__cl, R__parent, "*fSync", &fSync);
      R__insp.Inspect(R__cl, R__parent, "*fViewer", &fViewer);
      R__insp.Inspect(R__cl, R__parent, "*fBtnAdd", &fBtnAdd);
      R__insp.Inspect(R__cl, R__parent, "*fBtnConnect", &fBtnConnect);
      TGCompositeFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSessionServerFrame(void *p) {
      delete ((::TSessionServerFrame*)p);
   }
   static void deleteArray_TSessionServerFrame(void *p) {
      delete [] ((::TSessionServerFrame*)p);
   }
   static void destruct_TSessionServerFrame(void *p) {
      typedef ::TSessionServerFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSessionServerFrame

//______________________________________________________________________________
void TSessionFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSessionFrame.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSessionFrame::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSessionFrame::Class(),this);
   }
}

//______________________________________________________________________________
void TSessionFrame::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSessionFrame.
      TClass *R__cl = ::TSessionFrame::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTab", &fTab);
      R__insp.Inspect(R__cl, R__parent, "*fFA", &fFA);
      R__insp.Inspect(R__cl, R__parent, "*fFB", &fFB);
      R__insp.Inspect(R__cl, R__parent, "*fFC", &fFC);
      R__insp.Inspect(R__cl, R__parent, "*fFD", &fFD);
      R__insp.Inspect(R__cl, R__parent, "*fFE", &fFE);
      R__insp.Inspect(R__cl, R__parent, "*fCommandTxt", &fCommandTxt);
      R__insp.Inspect(R__cl, R__parent, "*fCommandBuf", &fCommandBuf);
      R__insp.Inspect(R__cl, R__parent, "*fInfoTextView", &fInfoTextView);
      R__insp.Inspect(R__cl, R__parent, "*fClearCheck", &fClearCheck);
      R__insp.Inspect(R__cl, R__parent, "*fBtnShowLog", &fBtnShowLog);
      R__insp.Inspect(R__cl, R__parent, "*fBtnNewQuery", &fBtnNewQuery);
      R__insp.Inspect(R__cl, R__parent, "*fBtnGetQueries", &fBtnGetQueries);
      R__insp.Inspect(R__cl, R__parent, "*fLBPackages", &fLBPackages);
      R__insp.Inspect(R__cl, R__parent, "*fBtnAdd", &fBtnAdd);
      R__insp.Inspect(R__cl, R__parent, "*fBtnRemove", &fBtnRemove);
      R__insp.Inspect(R__cl, R__parent, "*fBtnUp", &fBtnUp);
      R__insp.Inspect(R__cl, R__parent, "*fBtnDown", &fBtnDown);
      R__insp.Inspect(R__cl, R__parent, "*fBtnShow", &fBtnShow);
      R__insp.Inspect(R__cl, R__parent, "*fBtnShowEnabled", &fBtnShowEnabled);
      R__insp.Inspect(R__cl, R__parent, "*fChkMulti", &fChkMulti);
      R__insp.Inspect(R__cl, R__parent, "*fChkEnable", &fChkEnable);
      R__insp.Inspect(R__cl, R__parent, "*fBtnUpload", &fBtnUpload);
      R__insp.Inspect(R__cl, R__parent, "*fBtnEnable", &fBtnEnable);
      R__insp.Inspect(R__cl, R__parent, "*fBtnClear", &fBtnClear);
      R__insp.Inspect(R__cl, R__parent, "*fBtnDisable", &fBtnDisable);
      R__insp.Inspect(R__cl, R__parent, "*fDSetView", &fDSetView);
      R__insp.Inspect(R__cl, R__parent, "*fDataSetTree", &fDataSetTree);
      R__insp.Inspect(R__cl, R__parent, "*fBtnUploadDSet", &fBtnUploadDSet);
      R__insp.Inspect(R__cl, R__parent, "*fBtnRemoveDSet", &fBtnRemoveDSet);
      R__insp.Inspect(R__cl, R__parent, "*fBtnVerifyDSet", &fBtnVerifyDSet);
      R__insp.Inspect(R__cl, R__parent, "*fBtnRefresh", &fBtnRefresh);
      R__insp.Inspect(R__cl, R__parent, "*fTxtParallel", &fTxtParallel);
      R__insp.Inspect(R__cl, R__parent, "*fLogLevel", &fLogLevel);
      R__insp.Inspect(R__cl, R__parent, "*fApplyLogLevel", &fApplyLogLevel);
      R__insp.Inspect(R__cl, R__parent, "*fApplyParallel", &fApplyParallel);
      R__insp.Inspect(R__cl, R__parent, "*fViewer", &fViewer);
      R__insp.Inspect(R__cl, R__parent, "*fInfoLine[19]", &fInfoLine);
      TGCompositeFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSessionFrame(void *p) {
      delete ((::TSessionFrame*)p);
   }
   static void deleteArray_TSessionFrame(void *p) {
      delete [] ((::TSessionFrame*)p);
   }
   static void destruct_TSessionFrame(void *p) {
      typedef ::TSessionFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSessionFrame

//______________________________________________________________________________
void TEditQueryFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEditQueryFrame.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEditQueryFrame::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEditQueryFrame::Class(),this);
   }
}

//______________________________________________________________________________
void TEditQueryFrame::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TEditQueryFrame.
      TClass *R__cl = ::TEditQueryFrame::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fFrmMore", &fFrmMore);
      R__insp.Inspect(R__cl, R__parent, "*fBtnMore", &fBtnMore);
      R__insp.Inspect(R__cl, R__parent, "*fTxtQueryName", &fTxtQueryName);
      R__insp.Inspect(R__cl, R__parent, "*fTxtChain", &fTxtChain);
      R__insp.Inspect(R__cl, R__parent, "*fTxtSelector", &fTxtSelector);
      R__insp.Inspect(R__cl, R__parent, "*fTxtOptions", &fTxtOptions);
      R__insp.Inspect(R__cl, R__parent, "*fNumEntries", &fNumEntries);
      R__insp.Inspect(R__cl, R__parent, "*fNumFirstEntry", &fNumFirstEntry);
      R__insp.Inspect(R__cl, R__parent, "*fTxtParFile", &fTxtParFile);
      R__insp.Inspect(R__cl, R__parent, "*fTxtEventList", &fTxtEventList);
      R__insp.Inspect(R__cl, R__parent, "*fViewer", &fViewer);
      R__insp.Inspect(R__cl, R__parent, "*fQuery", &fQuery);
      R__insp.Inspect(R__cl, R__parent, "*fChain", &fChain);
      TGCompositeFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TEditQueryFrame(void *p) {
      delete ((::TEditQueryFrame*)p);
   }
   static void deleteArray_TEditQueryFrame(void *p) {
      delete [] ((::TEditQueryFrame*)p);
   }
   static void destruct_TEditQueryFrame(void *p) {
      typedef ::TEditQueryFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEditQueryFrame

//______________________________________________________________________________
void TSessionQueryFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSessionQueryFrame.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSessionQueryFrame::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSessionQueryFrame::Class(),this);
   }
}

//______________________________________________________________________________
void TSessionQueryFrame::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSessionQueryFrame.
      TClass *R__cl = ::TSessionQueryFrame::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fBtnSubmit", &fBtnSubmit);
      R__insp.Inspect(R__cl, R__parent, "*fBtnFinalize", &fBtnFinalize);
      R__insp.Inspect(R__cl, R__parent, "*fBtnStop", &fBtnStop);
      R__insp.Inspect(R__cl, R__parent, "*fBtnAbort", &fBtnAbort);
      R__insp.Inspect(R__cl, R__parent, "*fBtnShowLog", &fBtnShowLog);
      R__insp.Inspect(R__cl, R__parent, "*fBtnRetrieve", &fBtnRetrieve);
      R__insp.Inspect(R__cl, R__parent, "*fBtnSave", &fBtnSave);
      R__insp.Inspect(R__cl, R__parent, "*fInfoTextView", &fInfoTextView);
      R__insp.Inspect(R__cl, R__parent, "fModified", &fModified);
      R__insp.Inspect(R__cl, R__parent, "fFiles", &fFiles);
      R__insp.Inspect(R__cl, R__parent, "fFirst", &fFirst);
      R__insp.Inspect(R__cl, R__parent, "fEntries", &fEntries);
      R__insp.Inspect(R__cl, R__parent, "fPrevTotal", &fPrevTotal);
      R__insp.Inspect(R__cl, R__parent, "fPrevProcessed", &fPrevProcessed);
      R__insp.Inspect(R__cl, R__parent, "*fLabInfos", &fLabInfos);
      R__insp.Inspect(R__cl, R__parent, "*fLabStatus", &fLabStatus);
      R__insp.Inspect(R__cl, R__parent, "*fTotal", &fTotal);
      R__insp.Inspect(R__cl, R__parent, "*fRate", &fRate);
      R__insp.Inspect(R__cl, R__parent, "fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__parent, "*fTab", &fTab);
      R__insp.Inspect(R__cl, R__parent, "*fFA", &fFA);
      R__insp.Inspect(R__cl, R__parent, "*fFB", &fFB);
      R__insp.Inspect(R__cl, R__parent, "*fFC", &fFC);
      R__insp.Inspect(R__cl, R__parent, "*fFD", &fFD);
      R__insp.Inspect(R__cl, R__parent, "*frmProg", &frmProg);
      R__insp.Inspect(R__cl, R__parent, "*fECanvas", &fECanvas);
      R__insp.Inspect(R__cl, R__parent, "*fStatsCanvas", &fStatsCanvas);
      R__insp.Inspect(R__cl, R__parent, "*fViewer", &fViewer);
      R__insp.Inspect(R__cl, R__parent, "*fDesc", &fDesc);
      TGCompositeFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSessionQueryFrame(void *p) {
      delete ((::TSessionQueryFrame*)p);
   }
   static void deleteArray_TSessionQueryFrame(void *p) {
      delete [] ((::TSessionQueryFrame*)p);
   }
   static void destruct_TSessionQueryFrame(void *p) {
      typedef ::TSessionQueryFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSessionQueryFrame

//______________________________________________________________________________
void TSessionOutputFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSessionOutputFrame.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSessionOutputFrame::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSessionOutputFrame::Class(),this);
   }
}

//______________________________________________________________________________
void TSessionOutputFrame::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSessionOutputFrame.
      TClass *R__cl = ::TSessionOutputFrame::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fEntryTmp", &fEntryTmp);
      R__insp.Inspect(R__cl, R__parent, "*fLVContainer", &fLVContainer);
      R__insp.Inspect(R__cl, R__parent, "*fViewer", &fViewer);
      TGCompositeFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSessionOutputFrame(void *p) {
      delete ((::TSessionOutputFrame*)p);
   }
   static void deleteArray_TSessionOutputFrame(void *p) {
      delete [] ((::TSessionOutputFrame*)p);
   }
   static void destruct_TSessionOutputFrame(void *p) {
      typedef ::TSessionOutputFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSessionOutputFrame

//______________________________________________________________________________
void TSessionInputFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSessionInputFrame.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSessionInputFrame::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSessionInputFrame::Class(),this);
   }
}

//______________________________________________________________________________
void TSessionInputFrame::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSessionInputFrame.
      TClass *R__cl = ::TSessionInputFrame::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fViewer", &fViewer);
      R__insp.Inspect(R__cl, R__parent, "*fLVContainer", &fLVContainer);
      TGCompositeFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSessionInputFrame(void *p) {
      delete ((::TSessionInputFrame*)p);
   }
   static void deleteArray_TSessionInputFrame(void *p) {
      delete [] ((::TSessionInputFrame*)p);
   }
   static void destruct_TSessionInputFrame(void *p) {
      typedef ::TSessionInputFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSessionInputFrame

//______________________________________________________________________________
void TSessionViewer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSessionViewer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSessionViewer::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSessionViewer::Class(),this);
   }
}

//______________________________________________________________________________
void TSessionViewer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSessionViewer.
      TClass *R__cl = ::TSessionViewer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fStart", &fStart);
      R__insp.Inspect(R__cl, R__parent, "fElapsed", &fElapsed);
      R__insp.Inspect(R__cl, R__parent, "fChangePic", &fChangePic);
      R__insp.Inspect(R__cl, R__parent, "fBusy", &fBusy);
      R__insp.Inspect(R__cl, R__parent, "*fHf", &fHf);
      R__insp.Inspect(R__cl, R__parent, "*fV1", &fV1);
      R__insp.Inspect(R__cl, R__parent, "*fV2", &fV2);
      R__insp.Inspect(R__cl, R__parent, "*fServerFrame", &fServerFrame);
      R__insp.Inspect(R__cl, R__parent, "*fSessionFrame", &fSessionFrame);
      R__insp.Inspect(R__cl, R__parent, "*fQueryFrame", &fQueryFrame);
      R__insp.Inspect(R__cl, R__parent, "*fOutputFrame", &fOutputFrame);
      R__insp.Inspect(R__cl, R__parent, "*fInputFrame", &fInputFrame);
      R__insp.Inspect(R__cl, R__parent, "*fLogWindow", &fLogWindow);
      R__insp.Inspect(R__cl, R__parent, "*fActDesc", &fActDesc);
      R__insp.Inspect(R__cl, R__parent, "*fSessions", &fSessions);
      R__insp.Inspect(R__cl, R__parent, "*fLocal", &fLocal);
      R__insp.Inspect(R__cl, R__parent, "*fProofCon", &fProofCon);
      R__insp.Inspect(R__cl, R__parent, "*fProofDiscon", &fProofDiscon);
      R__insp.Inspect(R__cl, R__parent, "*fQueryCon", &fQueryCon);
      R__insp.Inspect(R__cl, R__parent, "*fQueryDiscon", &fQueryDiscon);
      R__insp.Inspect(R__cl, R__parent, "*fBaseIcon", &fBaseIcon);
      R__insp.Inspect(R__cl, R__parent, "*fActFrame", &fActFrame);
      R__insp.Inspect(R__cl, R__parent, "*fToolBar", &fToolBar);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBar", &fMenuBar);
      R__insp.Inspect(R__cl, R__parent, "*fFileMenu", &fFileMenu);
      R__insp.Inspect(R__cl, R__parent, "*fSessionMenu", &fSessionMenu);
      R__insp.Inspect(R__cl, R__parent, "*fQueryMenu", &fQueryMenu);
      R__insp.Inspect(R__cl, R__parent, "*fOptionsMenu", &fOptionsMenu);
      R__insp.Inspect(R__cl, R__parent, "*fCascadeMenu", &fCascadeMenu);
      R__insp.Inspect(R__cl, R__parent, "*fHelpMenu", &fHelpMenu);
      R__insp.Inspect(R__cl, R__parent, "*fPopupSrv", &fPopupSrv);
      R__insp.Inspect(R__cl, R__parent, "*fPopupQry", &fPopupQry);
      R__insp.Inspect(R__cl, R__parent, "*fContextMenu", &fContextMenu);
      R__insp.Inspect(R__cl, R__parent, "*fConnectProg", &fConnectProg);
      R__insp.Inspect(R__cl, R__parent, "*fTreeView", &fTreeView);
      R__insp.Inspect(R__cl, R__parent, "*fSessionHierarchy", &fSessionHierarchy);
      R__insp.Inspect(R__cl, R__parent, "*fSessionItem", &fSessionItem);
      R__insp.Inspect(R__cl, R__parent, "*fStatusBar", &fStatusBar);
      R__insp.Inspect(R__cl, R__parent, "*fRightIconPicture", &fRightIconPicture);
      R__insp.Inspect(R__cl, R__parent, "*fRightIcon", &fRightIcon);
      R__insp.Inspect(R__cl, R__parent, "*fTimer", &fTimer);
      R__insp.Inspect(R__cl, R__parent, "*fUserGroup", &fUserGroup);
      R__insp.Inspect(R__cl, R__parent, "fAutoSave", &fAutoSave);
      R__insp.Inspect(R__cl, R__parent, "fConfigFile", &fConfigFile);
      fConfigFile.ShowMembers(R__insp, strcat(R__parent,"fConfigFile.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fViewerEnv", &fViewerEnv);
      TGMainFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSessionViewer(void *p) {
      return  p ? new(p) ::TSessionViewer : new ::TSessionViewer;
   }
   static void *newArray_TSessionViewer(Long_t nElements, void *p) {
      return p ? new(p) ::TSessionViewer[nElements] : new ::TSessionViewer[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSessionViewer(void *p) {
      delete ((::TSessionViewer*)p);
   }
   static void deleteArray_TSessionViewer(void *p) {
      delete [] ((::TSessionViewer*)p);
   }
   static void destruct_TSessionViewer(void *p) {
      typedef ::TSessionViewer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSessionViewer

//______________________________________________________________________________
void TQueryDescription::Streamer(TBuffer &R__b)
{
   // Stream an object of class TQueryDescription.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TQueryDescription::Class(),this);
   } else {
      R__b.WriteClassBuffer(TQueryDescription::Class(),this);
   }
}

//______________________________________________________________________________
void TQueryDescription::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TQueryDescription.
      TClass *R__cl = ::TQueryDescription::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__parent, "fReference", &fReference);
      fReference.ShowMembers(R__insp, strcat(R__parent,"fReference.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fQueryName", &fQueryName);
      fQueryName.ShowMembers(R__insp, strcat(R__parent,"fQueryName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSelectorString", &fSelectorString);
      fSelectorString.ShowMembers(R__insp, strcat(R__parent,"fSelectorString.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTDSetString", &fTDSetString);
      fTDSetString.ShowMembers(R__insp, strcat(R__parent,"fTDSetString.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fOptions", &fOptions);
      fOptions.ShowMembers(R__insp, strcat(R__parent,"fOptions.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fEventList", &fEventList);
      fEventList.ShowMembers(R__insp, strcat(R__parent,"fEventList.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fNbFiles", &fNbFiles);
      R__insp.Inspect(R__cl, R__parent, "fNoEntries", &fNoEntries);
      R__insp.Inspect(R__cl, R__parent, "fFirstEntry", &fFirstEntry);
      R__insp.Inspect(R__cl, R__parent, "fStartTime", &fStartTime);
      fStartTime.ShowMembers(R__insp, strcat(R__parent,"fStartTime.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fEndTime", &fEndTime);
      fEndTime.ShowMembers(R__insp, strcat(R__parent,"fEndTime.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__parent, "*fResult", &fResult);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TQueryDescription(void *p) {
      return  p ? new(p) ::TQueryDescription : new ::TQueryDescription;
   }
   static void *newArray_TQueryDescription(Long_t nElements, void *p) {
      return p ? new(p) ::TQueryDescription[nElements] : new ::TQueryDescription[nElements];
   }
   // Wrapper around operator delete
   static void delete_TQueryDescription(void *p) {
      delete ((::TQueryDescription*)p);
   }
   static void deleteArray_TQueryDescription(void *p) {
      delete [] ((::TQueryDescription*)p);
   }
   static void destruct_TQueryDescription(void *p) {
      typedef ::TQueryDescription current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TQueryDescription

//______________________________________________________________________________
void TSessionDescription::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSessionDescription.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSessionDescription::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSessionDescription::Class(),this);
   }
}

//______________________________________________________________________________
void TSessionDescription::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSessionDescription.
      TClass *R__cl = ::TSessionDescription::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fTag", &fTag);
      fTag.ShowMembers(R__insp, strcat(R__parent,"fTag.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fName", &fName);
      fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fAddress", &fAddress);
      fAddress.ShowMembers(R__insp, strcat(R__parent,"fAddress.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPort", &fPort);
      R__insp.Inspect(R__cl, R__parent, "fConfigFile", &fConfigFile);
      fConfigFile.ShowMembers(R__insp, strcat(R__parent,"fConfigFile.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLogLevel", &fLogLevel);
      R__insp.Inspect(R__cl, R__parent, "fUserName", &fUserName);
      fUserName.ShowMembers(R__insp, strcat(R__parent,"fUserName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fConnected", &fConnected);
      R__insp.Inspect(R__cl, R__parent, "fAttached", &fAttached);
      R__insp.Inspect(R__cl, R__parent, "fLocal", &fLocal);
      R__insp.Inspect(R__cl, R__parent, "fSync", &fSync);
      R__insp.Inspect(R__cl, R__parent, "fAutoEnable", &fAutoEnable);
      R__insp.Inspect(R__cl, R__parent, "*fQueries", &fQueries);
      R__insp.Inspect(R__cl, R__parent, "*fPackages", &fPackages);
      R__insp.Inspect(R__cl, R__parent, "*fActQuery", &fActQuery);
      R__insp.Inspect(R__cl, R__parent, "*fProof", &fProof);
      R__insp.Inspect(R__cl, R__parent, "*fProofMgr", &fProofMgr);
      R__insp.Inspect(R__cl, R__parent, "fNbHistos", &fNbHistos);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSessionDescription(void *p) {
      return  p ? new(p) ::TSessionDescription : new ::TSessionDescription;
   }
   static void *newArray_TSessionDescription(Long_t nElements, void *p) {
      return p ? new(p) ::TSessionDescription[nElements] : new ::TSessionDescription[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSessionDescription(void *p) {
      delete ((::TSessionDescription*)p);
   }
   static void deleteArray_TSessionDescription(void *p) {
      delete [] ((::TSessionDescription*)p);
   }
   static void destruct_TSessionDescription(void *p) {
      typedef ::TSessionDescription current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSessionDescription

//______________________________________________________________________________
void TPackageDescription::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPackageDescription.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPackageDescription::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPackageDescription::Class(),this);
   }
}

//______________________________________________________________________________
void TPackageDescription::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPackageDescription.
      TClass *R__cl = ::TPackageDescription::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fName", &fName);
      fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPathName", &fPathName);
      fPathName.ShowMembers(R__insp, strcat(R__parent,"fPathName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fId", &fId);
      R__insp.Inspect(R__cl, R__parent, "fUploaded", &fUploaded);
      R__insp.Inspect(R__cl, R__parent, "fEnabled", &fEnabled);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPackageDescription(void *p) {
      return  p ? new(p) ::TPackageDescription : new ::TPackageDescription;
   }
   static void *newArray_TPackageDescription(Long_t nElements, void *p) {
      return p ? new(p) ::TPackageDescription[nElements] : new ::TPackageDescription[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPackageDescription(void *p) {
      delete ((::TPackageDescription*)p);
   }
   static void deleteArray_TPackageDescription(void *p) {
      delete [] ((::TPackageDescription*)p);
   }
   static void destruct_TPackageDescription(void *p) {
      typedef ::TPackageDescription current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPackageDescription

//______________________________________________________________________________
void TNewQueryDlg::Streamer(TBuffer &R__b)
{
   // Stream an object of class TNewQueryDlg.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TNewQueryDlg::Class(),this);
   } else {
      R__b.WriteClassBuffer(TNewQueryDlg::Class(),this);
   }
}

//______________________________________________________________________________
void TNewQueryDlg::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TNewQueryDlg.
      TClass *R__cl = ::TNewQueryDlg::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fEditMode", &fEditMode);
      R__insp.Inspect(R__cl, R__parent, "fModified", &fModified);
      R__insp.Inspect(R__cl, R__parent, "*fFrmNewQuery", &fFrmNewQuery);
      R__insp.Inspect(R__cl, R__parent, "*fFrmMore", &fFrmMore);
      R__insp.Inspect(R__cl, R__parent, "*fBtnMore", &fBtnMore);
      R__insp.Inspect(R__cl, R__parent, "*fBtnClose", &fBtnClose);
      R__insp.Inspect(R__cl, R__parent, "*fBtnSave", &fBtnSave);
      R__insp.Inspect(R__cl, R__parent, "*fBtnSubmit", &fBtnSubmit);
      R__insp.Inspect(R__cl, R__parent, "*fTxtQueryName", &fTxtQueryName);
      R__insp.Inspect(R__cl, R__parent, "*fTxtChain", &fTxtChain);
      R__insp.Inspect(R__cl, R__parent, "*fTxtSelector", &fTxtSelector);
      R__insp.Inspect(R__cl, R__parent, "*fTxtOptions", &fTxtOptions);
      R__insp.Inspect(R__cl, R__parent, "*fNumEntries", &fNumEntries);
      R__insp.Inspect(R__cl, R__parent, "*fNumFirstEntry", &fNumFirstEntry);
      R__insp.Inspect(R__cl, R__parent, "*fTxtEventList", &fTxtEventList);
      R__insp.Inspect(R__cl, R__parent, "*fViewer", &fViewer);
      R__insp.Inspect(R__cl, R__parent, "*fQuery", &fQuery);
      R__insp.Inspect(R__cl, R__parent, "*fChain", &fChain);
      TGTransientFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TNewQueryDlg(void *p) {
      delete ((::TNewQueryDlg*)p);
   }
   static void deleteArray_TNewQueryDlg(void *p) {
      delete [] ((::TNewQueryDlg*)p);
   }
   static void destruct_TNewQueryDlg(void *p) {
      typedef ::TNewQueryDlg current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TNewQueryDlg

//______________________________________________________________________________
void TNewChainDlg::Streamer(TBuffer &R__b)
{
   // Stream an object of class TNewChainDlg.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TNewChainDlg::Class(),this);
   } else {
      R__b.WriteClassBuffer(TNewChainDlg::Class(),this);
   }
}

//______________________________________________________________________________
void TNewChainDlg::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TNewChainDlg.
      TClass *R__cl = ::TNewChainDlg::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fContents", &fContents);
      R__insp.Inspect(R__cl, R__parent, "*fListView", &fListView);
      R__insp.Inspect(R__cl, R__parent, "*fLVContainer", &fLVContainer);
      R__insp.Inspect(R__cl, R__parent, "*fNameBuf", &fNameBuf);
      R__insp.Inspect(R__cl, R__parent, "*fName", &fName);
      R__insp.Inspect(R__cl, R__parent, "*fOkButton", &fOkButton);
      R__insp.Inspect(R__cl, R__parent, "*fCancelButton", &fCancelButton);
      R__insp.Inspect(R__cl, R__parent, "*fChains", &fChains);
      R__insp.Inspect(R__cl, R__parent, "*fChain", &fChain);
      TGTransientFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TNewChainDlg(void *p) {
      return  p ? new(p) ::TNewChainDlg : new ::TNewChainDlg;
   }
   static void *newArray_TNewChainDlg(Long_t nElements, void *p) {
      return p ? new(p) ::TNewChainDlg[nElements] : new ::TNewChainDlg[nElements];
   }
   // Wrapper around operator delete
   static void delete_TNewChainDlg(void *p) {
      delete ((::TNewChainDlg*)p);
   }
   static void deleteArray_TNewChainDlg(void *p) {
      delete [] ((::TNewChainDlg*)p);
   }
   static void destruct_TNewChainDlg(void *p) {
      typedef ::TNewChainDlg current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TNewChainDlg

//______________________________________________________________________________
void TUploadDataSetDlg::Streamer(TBuffer &R__b)
{
   // Stream an object of class TUploadDataSetDlg.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TUploadDataSetDlg::Class(),this);
   } else {
      R__b.WriteClassBuffer(TUploadDataSetDlg::Class(),this);
   }
}

//______________________________________________________________________________
void TUploadDataSetDlg::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TUploadDataSetDlg.
      TClass *R__cl = ::TUploadDataSetDlg::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fUploading", &fUploading);
      R__insp.Inspect(R__cl, R__parent, "*fSkippedFiles", &fSkippedFiles);
      R__insp.Inspect(R__cl, R__parent, "*fDSetName", &fDSetName);
      R__insp.Inspect(R__cl, R__parent, "*fDestinationURL", &fDestinationURL);
      R__insp.Inspect(R__cl, R__parent, "*fLocationURL", &fLocationURL);
      R__insp.Inspect(R__cl, R__parent, "*fListView", &fListView);
      R__insp.Inspect(R__cl, R__parent, "*fLVContainer", &fLVContainer);
      R__insp.Inspect(R__cl, R__parent, "*fAddButton", &fAddButton);
      R__insp.Inspect(R__cl, R__parent, "*fBrowseButton", &fBrowseButton);
      R__insp.Inspect(R__cl, R__parent, "*fRemoveButton", &fRemoveButton);
      R__insp.Inspect(R__cl, R__parent, "*fClearButton", &fClearButton);
      R__insp.Inspect(R__cl, R__parent, "*fOverwriteDSet", &fOverwriteDSet);
      R__insp.Inspect(R__cl, R__parent, "*fOverwriteFiles", &fOverwriteFiles);
      R__insp.Inspect(R__cl, R__parent, "*fAppendFiles", &fAppendFiles);
      R__insp.Inspect(R__cl, R__parent, "*fUploadButton", &fUploadButton);
      R__insp.Inspect(R__cl, R__parent, "*fCloseDlgButton", &fCloseDlgButton);
      R__insp.Inspect(R__cl, R__parent, "*fViewer", &fViewer);
      TGTransientFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TUploadDataSetDlg(void *p) {
      delete ((::TUploadDataSetDlg*)p);
   }
   static void deleteArray_TUploadDataSetDlg(void *p) {
      delete [] ((::TUploadDataSetDlg*)p);
   }
   static void destruct_TUploadDataSetDlg(void *p) {
      typedef ::TUploadDataSetDlg current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TUploadDataSetDlg

/********************************************************
* gui/sessionviewer/src/G__SessionViewer.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__SessionViewer();

extern "C" void G__set_cpp_environmentG__SessionViewer() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TProofProgressDialog.h");
  G__add_compiledheader("TProofProgressLog.h");
  G__add_compiledheader("TProofProgressMemoryPlot.h");
  G__add_compiledheader("TSessionDialogs.h");
  G__add_compiledheader("TSessionLogView.h");
  G__add_compiledheader("TSessionViewer.h");
  G__cpp_reset_tagtableG__SessionViewer();
}
#include <new>
extern "C" int G__cpp_dllrevG__SessionViewer() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TProofProgressLog */
static int G__G__SessionViewer_115_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofProgressLog* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressLog(
(TProofProgressDialog*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TProofProgressLog(
(TProofProgressDialog*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressLog((TProofProgressDialog*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TProofProgressLog((TProofProgressDialog*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressLog((TProofProgressDialog*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofProgressLog((TProofProgressDialog*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofProgressLog* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressLog(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TProofProgressLog(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressLog(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TProofProgressLog(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressLog((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TProofProgressLog((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressLog((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofProgressLog((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofProgressLog[n];
       } else {
         p = new((void*) gvp) TProofProgressLog[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TProofProgressLog;
       } else {
         p = new((void*) gvp) TProofProgressLog;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProofProgressLog*) G__getstructoffset())->BuildLogList((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProofProgressLog*) G__getstructoffset())->BuildLogList();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TProofProgressLog*) G__getstructoffset())->DoLog((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TProofProgressLog*) G__getstructoffset())->DoLog();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressLog*) G__getstructoffset())->LogMessage((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressLog*) G__getstructoffset())->Rebuild();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressLog*) G__getstructoffset())->LoadBuffer((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressLog*) G__getstructoffset())->AddBuffer((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressLog*) G__getstructoffset())->LoadFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressLog*) G__getstructoffset())->Popup();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressLog*) G__getstructoffset())->SaveToFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressLog*) G__getstructoffset())->NoLineEntry();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TProofProgressLog*) G__getstructoffset())->Select((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TProofProgressLog*) G__getstructoffset())->Select((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressLog*) G__getstructoffset())->SetUrl((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofProgressLog::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofProgressLog::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofProgressLog::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofProgressLog::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressLog*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofProgressLog::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofProgressLog::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofProgressLog::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_115_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofProgressLog::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofProgressLog G__TTProofProgressLog;
static int G__G__SessionViewer_115_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofProgressLog*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofProgressLog*) (soff+(sizeof(TProofProgressLog)*i)))->~G__TTProofProgressLog();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofProgressLog*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofProgressLog*) (soff))->~G__TTProofProgressLog();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofProgressMemoryPlot */
static int G__G__SessionViewer_116_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofProgressMemoryPlot* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressMemoryPlot(
(TProofProgressDialog*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TProofProgressMemoryPlot(
(TProofProgressDialog*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressMemoryPlot((TProofProgressDialog*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TProofProgressMemoryPlot((TProofProgressDialog*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TProofProgressMemoryPlot((TProofProgressDialog*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TProofProgressMemoryPlot((TProofProgressDialog*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressMemoryPlot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_116_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressMemoryPlot*) G__getstructoffset())->DoPlot();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_116_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressMemoryPlot*) G__getstructoffset())->Select((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_116_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofProgressMemoryPlot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_116_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofProgressMemoryPlot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_116_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofProgressMemoryPlot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_116_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofProgressMemoryPlot::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_116_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressMemoryPlot*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_116_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofProgressMemoryPlot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_116_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofProgressMemoryPlot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_116_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofProgressMemoryPlot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_116_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofProgressMemoryPlot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofProgressMemoryPlot G__TTProofProgressMemoryPlot;
static int G__G__SessionViewer_116_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofProgressMemoryPlot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofProgressMemoryPlot*) (soff+(sizeof(TProofProgressMemoryPlot)*i)))->~G__TTProofProgressMemoryPlot();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofProgressMemoryPlot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofProgressMemoryPlot*) (soff))->~G__TTProofProgressMemoryPlot();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofProgressDialog */
static int G__G__SessionViewer_120_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofProgressDialog* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TProofProgressDialog(
(TProof*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]));
   } else {
     p = new((void*) gvp) TProofProgressDialog(
(TProof*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Long64_t) G__Longlong(libp->para[3])
, (Long64_t) G__Longlong(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressDialog));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->ResetProgressDialog((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->Progress((Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->Progress(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->Progress(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Float_t) G__double(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->DisableAsyn();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->IndicateStop((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->LogMessage((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->CloseWindow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->DoClose();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->DoLog();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->DoKeep((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->DoSetLogQuery((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->DoStop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->DoAbort();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->DoAsyn();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->DoPlotRateGraph();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->DoMemoryPlot();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->ToggleOdometerInfos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->ToggleThreshold();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TProofProgressDialog::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofProgressDialog::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TProofProgressDialog::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TProofProgressDialog::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TProofProgressDialog*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TProofProgressDialog*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofProgressDialog::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofProgressDialog::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TProofProgressDialog::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_120_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TProofProgressDialog::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SessionViewer_120_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TProofProgressDialog* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TProofProgressDialog(*(TProofProgressDialog*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressDialog));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofProgressDialog G__TTProofProgressDialog;
static int G__G__SessionViewer_120_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TProofProgressDialog*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TProofProgressDialog*) (soff+(sizeof(TProofProgressDialog)*i)))->~G__TTProofProgressDialog();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TProofProgressDialog*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TProofProgressDialog*) (soff))->~G__TTProofProgressDialog();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SessionViewer_120_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TProofProgressDialog* dest = (TProofProgressDialog*) G__getstructoffset();
   *dest = *(TProofProgressDialog*) libp->para[0].ref;
   const TProofProgressDialog& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSessionViewer */
static int G__G__SessionViewer_299_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSessionViewer* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSessionViewer(
(const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TSessionViewer(
(const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSessionViewer((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TSessionViewer((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSessionViewer((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TSessionViewer((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSessionViewer[n];
       } else {
         p = new((void*) gvp) TSessionViewer[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSessionViewer;
       } else {
         p = new((void*) gvp) TSessionViewer;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSessionViewer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSessionViewer(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) TSessionViewer(
(const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->Build();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetServerFrame());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetSessionFrame());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetQueryFrame());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetOutputFrame());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetInputFrame());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetActDesc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetSessions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetSessionHierarchy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetSessionItem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetLocalPict());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetProofConPict());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetProofDisconPict());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetQueryConPict());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetQueryDisconPict());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetBasePict());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetPopupSrv());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetPopupQry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetContextMenu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetStatusBar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetConnectProg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetCascadeMenu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionViewer*) G__getstructoffset())->GetOptionsMenu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->ChangeRightLogo((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->CleanupSession();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->DisableTimer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->EditQuery();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->EnableTimer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSessionViewer*) G__getstructoffset())->IsBusy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSessionViewer*) G__getstructoffset())->IsAutoSave());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->LogMessage((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->MyHandleMenu((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->OnCascadeMenu();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->OnListTreeClicked((TGListTreeItem*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->OnListTreeDoubleClicked((TGListTreeItem*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->QueryResultReady((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->DeleteQuery();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSessionViewer*) G__getstructoffset())->ReadConfiguration((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSessionViewer*) G__getstructoffset())->ReadConfiguration();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->ResetSession();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->UpdateListOfProofs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->UpdateListOfSessions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->UpdateListOfPackages();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSessionViewer*) G__getstructoffset())->WriteConfiguration((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSessionViewer*) G__getstructoffset())->WriteConfiguration();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSessionViewer*) G__getstructoffset())->SetBusy((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSessionViewer*) G__getstructoffset())->SetBusy();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->SetChangePic((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->SetLogWindow((TSessionLogView*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->ShowEnabledPackages();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->ShowPackages();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->ShowInfo((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->ShowLog((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->ShowStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->StartupMessage((char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->StartViewer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->Terminate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSessionViewer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionViewer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSessionViewer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSessionViewer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionViewer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionViewer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSessionViewer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionViewer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_299_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSessionViewer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSessionViewer G__TTSessionViewer;
static int G__G__SessionViewer_299_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSessionViewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSessionViewer*) (soff+(sizeof(TSessionViewer)*i)))->~G__TTSessionViewer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSessionViewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSessionViewer*) (soff))->~G__TTSessionViewer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSessionLogView */
static int G__G__SessionViewer_300_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSessionLogView* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSessionLogView(
(TSessionViewer*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TSessionLogView(
(TSessionViewer*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionLogView));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_300_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionLogView*) G__getstructoffset())->AddBuffer((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_300_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionLogView*) G__getstructoffset())->LoadBuffer((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_300_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionLogView*) G__getstructoffset())->LoadFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_300_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionLogView*) G__getstructoffset())->ClearLogView();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_300_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionLogView*) G__getstructoffset())->Popup();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_300_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionLogView*) G__getstructoffset())->SetTitle();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_300_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSessionLogView::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_300_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionLogView::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_300_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSessionLogView::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_300_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSessionLogView::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_300_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionLogView*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_300_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionLogView::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_300_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSessionLogView::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_300_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionLogView::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_300_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSessionLogView::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSessionLogView G__TTSessionLogView;
static int G__G__SessionViewer_300_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSessionLogView*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSessionLogView*) (soff+(sizeof(TSessionLogView)*i)))->~G__TTSessionLogView();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSessionLogView*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSessionLogView*) (soff))->~G__TTSessionLogView();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TQueryDescription */
static int G__G__SessionViewer_303_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TQueryDescription::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_303_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQueryDescription::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_303_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TQueryDescription::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_303_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TQueryDescription::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_303_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQueryDescription*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_303_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQueryDescription::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_303_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQueryDescription::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_303_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQueryDescription::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_303_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQueryDescription::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__SessionViewer_303_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQueryDescription *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQueryDescription[n];
     } else {
       p = new((void*) gvp) TQueryDescription[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQueryDescription;
     } else {
       p = new((void*) gvp) TQueryDescription;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescription));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SessionViewer_303_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TQueryDescription* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TQueryDescription(*(TQueryDescription*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescription));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TQueryDescription G__TTQueryDescription;
static int G__G__SessionViewer_303_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TQueryDescription*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TQueryDescription*) (soff+(sizeof(TQueryDescription)*i)))->~G__TTQueryDescription();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TQueryDescription*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TQueryDescription*) (soff))->~G__TTQueryDescription();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SessionViewer_303_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQueryDescription* dest = (TQueryDescription*) G__getstructoffset();
   *dest = *(TQueryDescription*) libp->para[0].ref;
   const TQueryDescription& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSessionDescription */
static int G__G__SessionViewer_306_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSessionDescription::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_306_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionDescription::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_306_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSessionDescription::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_306_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSessionDescription::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_306_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionDescription*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_306_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionDescription::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_306_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSessionDescription::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_306_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionDescription::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_306_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSessionDescription::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__SessionViewer_306_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSessionDescription *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSessionDescription[n];
     } else {
       p = new((void*) gvp) TSessionDescription[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSessionDescription;
     } else {
       p = new((void*) gvp) TSessionDescription;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionDescription));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SessionViewer_306_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSessionDescription* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSessionDescription(*(TSessionDescription*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionDescription));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSessionDescription G__TTSessionDescription;
static int G__G__SessionViewer_306_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSessionDescription*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSessionDescription*) (soff+(sizeof(TSessionDescription)*i)))->~G__TTSessionDescription();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSessionDescription*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSessionDescription*) (soff))->~G__TTSessionDescription();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SessionViewer_306_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSessionDescription* dest = (TSessionDescription*) G__getstructoffset();
   *dest = *(TSessionDescription*) libp->para[0].ref;
   const TSessionDescription& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPackageDescription */
static int G__G__SessionViewer_307_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPackageDescription::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_307_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPackageDescription::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_307_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPackageDescription::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_307_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPackageDescription::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_307_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPackageDescription*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_307_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPackageDescription::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_307_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPackageDescription::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_307_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPackageDescription::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_307_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPackageDescription::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__SessionViewer_307_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPackageDescription *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPackageDescription[n];
     } else {
       p = new((void*) gvp) TPackageDescription[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPackageDescription;
     } else {
       p = new((void*) gvp) TPackageDescription;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TPackageDescription));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SessionViewer_307_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TPackageDescription* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TPackageDescription(*(TPackageDescription*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TPackageDescription));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPackageDescription G__TTPackageDescription;
static int G__G__SessionViewer_307_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPackageDescription*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPackageDescription*) (soff+(sizeof(TPackageDescription)*i)))->~G__TTPackageDescription();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPackageDescription*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPackageDescription*) (soff))->~G__TTPackageDescription();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SessionViewer_307_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPackageDescription* dest = (TPackageDescription*) G__getstructoffset();
   *dest = *(TPackageDescription*) libp->para[0].ref;
   const TPackageDescription& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSessionServerFrame */
static int G__G__SessionViewer_308_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSessionServerFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSessionServerFrame(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TSessionServerFrame(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionServerFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionServerFrame*) G__getstructoffset())->Build((TSessionViewer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSessionServerFrame*) G__getstructoffset())->GetAddress());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSessionServerFrame*) G__getstructoffset())->GetPortNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSessionServerFrame*) G__getstructoffset())->GetLogLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSessionServerFrame*) G__getstructoffset())->GetConfigText());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSessionServerFrame*) G__getstructoffset())->GetUserName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSessionServerFrame*) G__getstructoffset())->IsSync());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSessionServerFrame*) G__getstructoffset())->SetAddEnabled((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSessionServerFrame*) G__getstructoffset())->SetAddEnabled();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSessionServerFrame*) G__getstructoffset())->SetConnectEnabled((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSessionServerFrame*) G__getstructoffset())->SetConnectEnabled();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionServerFrame*) G__getstructoffset())->SetAddress((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionServerFrame*) G__getstructoffset())->SetPortNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionServerFrame*) G__getstructoffset())->SetLogLevel((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionServerFrame*) G__getstructoffset())->SetConfigText((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionServerFrame*) G__getstructoffset())->SetUserName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionServerFrame*) G__getstructoffset())->SetSync((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionServerFrame*) G__getstructoffset())->SettingsChanged();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionServerFrame*) G__getstructoffset())->OnBtnConnectClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionServerFrame*) G__getstructoffset())->OnBtnNewServerClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionServerFrame*) G__getstructoffset())->OnBtnDeleteClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionServerFrame*) G__getstructoffset())->OnBtnAddClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionServerFrame*) G__getstructoffset())->OnConfigFileClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionServerFrame*) G__getstructoffset())->Update((TSessionDescription*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSessionServerFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionServerFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSessionServerFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSessionServerFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionServerFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionServerFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSessionServerFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionServerFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_308_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSessionServerFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSessionServerFrame G__TTSessionServerFrame;
static int G__G__SessionViewer_308_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSessionServerFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSessionServerFrame*) (soff+(sizeof(TSessionServerFrame)*i)))->~G__TTSessionServerFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSessionServerFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSessionServerFrame*) (soff))->~G__TTSessionServerFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSessionFrame */
static int G__G__SessionViewer_309_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSessionFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSessionFrame(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TSessionFrame(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->Build((TSessionViewer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSessionFrame*) G__getstructoffset())->CheckAutoEnPack((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSessionFrame*) G__getstructoffset())->CheckAutoEnPack();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSessionFrame*) G__getstructoffset())->GetLogLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->SetLogLevel((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionFrame*) G__getstructoffset())->GetTab());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnApplyLogLevel();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnApplyParallel();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnBtnAddClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnBtnRemoveClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnBtnUpClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnBtnDownClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnBtnShowLogClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnBtnNewQueryClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnBtnGetQueriesClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnBtnDisconnectClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnCommandLine();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnUploadPackages();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnEnablePackages();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnDisablePackages();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnClearPackages();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnMultipleSelection((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnStartupEnable((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->ProofInfos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSessionFrame*) G__getstructoffset())->SetLocal((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSessionFrame*) G__getstructoffset())->SetLocal();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->ShutdownSession();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->UpdatePackages();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnBtnUploadDSet();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnBtnRemoveDSet();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->OnBtnVerifyDSet();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->UpdateListOfDataSets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSessionFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSessionFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSessionFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSessionFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_309_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSessionFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSessionFrame G__TTSessionFrame;
static int G__G__SessionViewer_309_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSessionFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSessionFrame*) (soff+(sizeof(TSessionFrame)*i)))->~G__TTSessionFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSessionFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSessionFrame*) (soff))->~G__TTSessionFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEditQueryFrame */
static int G__G__SessionViewer_310_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEditQueryFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TEditQueryFrame(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TEditQueryFrame(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TEditQueryFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEditQueryFrame*) G__getstructoffset())->Build((TSessionViewer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEditQueryFrame*) G__getstructoffset())->OnNewQueryMore();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEditQueryFrame*) G__getstructoffset())->OnBrowseChain();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEditQueryFrame*) G__getstructoffset())->OnBrowseSelector();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEditQueryFrame*) G__getstructoffset())->OnBrowseEventList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEditQueryFrame*) G__getstructoffset())->OnBtnSave();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEditQueryFrame*) G__getstructoffset())->OnElementSelected((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEditQueryFrame*) G__getstructoffset())->SettingsChanged();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEditQueryFrame*) G__getstructoffset())->UpdateFields((TQueryDescription*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEditQueryFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEditQueryFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEditQueryFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEditQueryFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEditQueryFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEditQueryFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEditQueryFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEditQueryFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_310_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEditQueryFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEditQueryFrame G__TTEditQueryFrame;
static int G__G__SessionViewer_310_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEditQueryFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEditQueryFrame*) (soff+(sizeof(TEditQueryFrame)*i)))->~G__TTEditQueryFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEditQueryFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEditQueryFrame*) (soff))->~G__TTEditQueryFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSessionQueryFrame */
static int G__G__SessionViewer_311_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSessionQueryFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSessionQueryFrame(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TSessionQueryFrame(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->Build((TSessionViewer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionQueryFrame*) G__getstructoffset())->GetStatsCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionQueryFrame*) G__getstructoffset())->GetQueryEditFrame());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSessionQueryFrame*) G__getstructoffset())->GetTab());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->Feedback((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSessionQueryFrame*) G__getstructoffset())->Modified((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSessionQueryFrame*) G__getstructoffset())->Modified();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->Progress((Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->Progress(
(Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->ProgressLocal((Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->IndicateStop((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->ResetProgressDialog((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]), (Long64_t) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->OnBtnSubmit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->OnBtnFinalize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->OnBtnStop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->OnBtnAbort();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->OnBtnShowLog();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->OnBtnRetrieve();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->UpdateInfos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->UpdateButtons((TQueryDescription*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->UpdateHistos((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSessionQueryFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionQueryFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSessionQueryFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSessionQueryFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionQueryFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionQueryFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSessionQueryFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionQueryFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_311_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSessionQueryFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSessionQueryFrame G__TTSessionQueryFrame;
static int G__G__SessionViewer_311_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSessionQueryFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSessionQueryFrame*) (soff+(sizeof(TSessionQueryFrame)*i)))->~G__TTSessionQueryFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSessionQueryFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSessionQueryFrame*) (soff))->~G__TTSessionQueryFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSessionOutputFrame */
static int G__G__SessionViewer_313_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSessionOutputFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSessionOutputFrame(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TSessionOutputFrame(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionOutputFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_313_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionOutputFrame*) G__getstructoffset())->AddObject((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_313_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionOutputFrame*) G__getstructoffset())->Build((TSessionViewer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_313_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSessionOutputFrame*) G__getstructoffset())->GetLVContainer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_313_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionOutputFrame*) G__getstructoffset())->OnElementClicked((TGLVEntry*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_313_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionOutputFrame*) G__getstructoffset())->OnElementDblClicked((TGLVEntry*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_313_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSessionOutputFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_313_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionOutputFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_313_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSessionOutputFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_313_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSessionOutputFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_313_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionOutputFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_313_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionOutputFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_313_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSessionOutputFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_313_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionOutputFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_313_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSessionOutputFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSessionOutputFrame G__TTSessionOutputFrame;
static int G__G__SessionViewer_313_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSessionOutputFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSessionOutputFrame*) (soff+(sizeof(TSessionOutputFrame)*i)))->~G__TTSessionOutputFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSessionOutputFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSessionOutputFrame*) (soff))->~G__TTSessionOutputFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSessionInputFrame */
static int G__G__SessionViewer_314_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSessionInputFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSessionInputFrame(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TSessionInputFrame(
(TGWindow*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionInputFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_314_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionInputFrame*) G__getstructoffset())->AddObject((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_314_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionInputFrame*) G__getstructoffset())->Build((TSessionViewer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_314_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSessionInputFrame*) G__getstructoffset())->GetLVContainer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_314_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSessionInputFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_314_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionInputFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_314_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSessionInputFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_314_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSessionInputFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_314_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSessionInputFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_314_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionInputFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_314_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSessionInputFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_314_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSessionInputFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_314_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSessionInputFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSessionInputFrame G__TTSessionInputFrame;
static int G__G__SessionViewer_314_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSessionInputFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSessionInputFrame*) (soff+(sizeof(TSessionInputFrame)*i)))->~G__TTSessionInputFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSessionInputFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSessionInputFrame*) (soff))->~G__TTSessionInputFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TNewChainDlg */
static int G__G__SessionViewer_316_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TNewChainDlg* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TNewChainDlg((const TGWindow*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TNewChainDlg((const TGWindow*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TNewChainDlg((const TGWindow*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TNewChainDlg((const TGWindow*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TNewChainDlg[n];
       } else {
         p = new((void*) gvp) TNewChainDlg[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TNewChainDlg;
       } else {
         p = new((void*) gvp) TNewChainDlg;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TNewChainDlg));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_316_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewChainDlg*) G__getstructoffset())->UpdateList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_316_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewChainDlg*) G__getstructoffset())->OnDoubleClick((TGLVEntry*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_316_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewChainDlg*) G__getstructoffset())->DisplayDirectory(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_316_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewChainDlg*) G__getstructoffset())->OnElementClicked((TGLVEntry*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_316_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewChainDlg*) G__getstructoffset())->OnElementSelected((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_316_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TNewChainDlg::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_316_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TNewChainDlg::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_316_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TNewChainDlg::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_316_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TNewChainDlg::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_316_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewChainDlg*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_316_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TNewChainDlg::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_316_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TNewChainDlg::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_316_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TNewChainDlg::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_316_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TNewChainDlg::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TNewChainDlg G__TTNewChainDlg;
static int G__G__SessionViewer_316_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TNewChainDlg*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TNewChainDlg*) (soff+(sizeof(TNewChainDlg)*i)))->~G__TTNewChainDlg();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TNewChainDlg*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TNewChainDlg*) (soff))->~G__TTNewChainDlg();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TNewQueryDlg */
static int G__G__SessionViewer_317_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TNewQueryDlg* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TNewQueryDlg(
(TSessionViewer*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TQueryDescription*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TNewQueryDlg(
(TSessionViewer*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TQueryDescription*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TNewQueryDlg(
(TSessionViewer*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TQueryDescription*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TNewQueryDlg(
(TSessionViewer*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TQueryDescription*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TNewQueryDlg(
(TSessionViewer*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TNewQueryDlg(
(TSessionViewer*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TNewQueryDlg));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewQueryDlg*) G__getstructoffset())->Build((TSessionViewer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewQueryDlg*) G__getstructoffset())->OnNewQueryMore();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewQueryDlg*) G__getstructoffset())->OnBrowseChain();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewQueryDlg*) G__getstructoffset())->OnBrowseSelector();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewQueryDlg*) G__getstructoffset())->OnBrowseEventList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewQueryDlg*) G__getstructoffset())->OnBtnSaveClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewQueryDlg*) G__getstructoffset())->OnBtnCloseClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewQueryDlg*) G__getstructoffset())->OnBtnSubmitClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewQueryDlg*) G__getstructoffset())->OnElementSelected((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewQueryDlg*) G__getstructoffset())->Popup();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewQueryDlg*) G__getstructoffset())->SettingsChanged();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewQueryDlg*) G__getstructoffset())->UpdateFields((TQueryDescription*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TNewQueryDlg::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TNewQueryDlg::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TNewQueryDlg::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TNewQueryDlg::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TNewQueryDlg*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TNewQueryDlg::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TNewQueryDlg::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TNewQueryDlg::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_317_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TNewQueryDlg::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TNewQueryDlg G__TTNewQueryDlg;
static int G__G__SessionViewer_317_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TNewQueryDlg*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TNewQueryDlg*) (soff+(sizeof(TNewQueryDlg)*i)))->~G__TTNewQueryDlg();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TNewQueryDlg*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TNewQueryDlg*) (soff))->~G__TTNewQueryDlg();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TUploadDataSetDlg */
static int G__G__SessionViewer_318_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TUploadDataSetDlg* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TUploadDataSetDlg(
(TSessionViewer*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TUploadDataSetDlg(
(TSessionViewer*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SessionViewerLN_TUploadDataSetDlg));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TUploadDataSetDlg*) G__getstructoffset())->AddFiles((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TUploadDataSetDlg*) G__getstructoffset())->AddFiles((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TUploadDataSetDlg*) G__getstructoffset())->BrowseFiles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TUploadDataSetDlg*) G__getstructoffset())->ClearFiles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TUploadDataSetDlg*) G__getstructoffset())->RemoveFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TUploadDataSetDlg*) G__getstructoffset())->UploadDataSet();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TUploadDataSetDlg*) G__getstructoffset())->OnOverwriteDataset((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TUploadDataSetDlg*) G__getstructoffset())->OnOverwriteFiles((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TUploadDataSetDlg*) G__getstructoffset())->OnAppendFiles((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TUploadDataSetDlg::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TUploadDataSetDlg::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TUploadDataSetDlg::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TUploadDataSetDlg::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TUploadDataSetDlg*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TUploadDataSetDlg::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TUploadDataSetDlg::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TUploadDataSetDlg::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SessionViewer_318_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TUploadDataSetDlg::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TUploadDataSetDlg G__TTUploadDataSetDlg;
static int G__G__SessionViewer_318_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TUploadDataSetDlg*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TUploadDataSetDlg*) (soff+(sizeof(TUploadDataSetDlg)*i)))->~G__TTUploadDataSetDlg();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TUploadDataSetDlg*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TUploadDataSetDlg*) (soff))->~G__TTUploadDataSetDlg();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TProofProgressLog */

/* TProofProgressMemoryPlot */

/* TProofProgressDialog */

/* TSessionViewer */

/* TSessionLogView */

/* TQueryDescription */

/* TSessionDescription */

/* TPackageDescription */

/* TSessionServerFrame */

/* TSessionFrame */

/* TEditQueryFrame */

/* TSessionQueryFrame */

/* TSessionOutputFrame */

/* TSessionInputFrame */

/* TNewChainDlg */

/* TNewQueryDlg */

/* TUploadDataSetDlg */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__SessionViewer {
 public:
  G__Sizep2memfuncG__SessionViewer(): p(&G__Sizep2memfuncG__SessionViewer::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__SessionViewer::*p)();
};

size_t G__get_sizep2memfuncG__SessionViewer()
{
  G__Sizep2memfuncG__SessionViewer a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__SessionViewer() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog))) {
     TProofProgressLog *G__Lderived;
     G__Lderived=(TProofProgressLog*)0x1000;
     {
       TGTransientFrame *G__Lpbase=(TGTransientFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog),G__get_linked_tagnum(&G__G__SessionViewerLN_TGTransientFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog),G__get_linked_tagnum(&G__G__SessionViewerLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog),G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog),G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog),G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog),G__get_linked_tagnum(&G__G__SessionViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressMemoryPlot))) {
     TProofProgressMemoryPlot *G__Lderived;
     G__Lderived=(TProofProgressMemoryPlot*)0x1000;
     {
       TGTransientFrame *G__Lpbase=(TGTransientFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressMemoryPlot),G__get_linked_tagnum(&G__G__SessionViewerLN_TGTransientFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressMemoryPlot),G__get_linked_tagnum(&G__G__SessionViewerLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressMemoryPlot),G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressMemoryPlot),G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressMemoryPlot),G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressMemoryPlot),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressMemoryPlot),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressMemoryPlot),G__get_linked_tagnum(&G__G__SessionViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject))) {
     TGObject *G__Lderived;
     G__Lderived=(TGObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow))) {
     TGWindow *G__Lderived;
     G__Lderived=(TGWindow*)0x1000;
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame))) {
     TGFrame *G__Lderived;
     G__Lderived=(TGFrame*)0x1000;
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame))) {
     TGCompositeFrame *G__Lderived;
     G__Lderived=(TGCompositeFrame*)0x1000;
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TGMainFrame))) {
     TGMainFrame *G__Lderived;
     G__Lderived=(TGMainFrame*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGMainFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGMainFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGMainFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGMainFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGMainFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TGMainFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer))) {
     TSessionViewer *G__Lderived;
     G__Lderived=(TSessionViewer*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),G__get_linked_tagnum(&G__G__SessionViewerLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),G__get_linked_tagnum(&G__G__SessionViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionLogView))) {
     TSessionLogView *G__Lderived;
     G__Lderived=(TSessionLogView*)0x1000;
     {
       TGTransientFrame *G__Lpbase=(TGTransientFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionLogView),G__get_linked_tagnum(&G__G__SessionViewerLN_TGTransientFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionLogView),G__get_linked_tagnum(&G__G__SessionViewerLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionLogView),G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionLogView),G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionLogView),G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionLogView),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionLogView),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionLogView),G__get_linked_tagnum(&G__G__SessionViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescription))) {
     TQueryDescription *G__Lderived;
     G__Lderived=(TQueryDescription*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescription),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionDescription))) {
     TSessionDescription *G__Lderived;
     G__Lderived=(TSessionDescription*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionDescription),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TPackageDescription))) {
     TPackageDescription *G__Lderived;
     G__Lderived=(TPackageDescription*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TPackageDescription),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionServerFrame))) {
     TSessionServerFrame *G__Lderived;
     G__Lderived=(TSessionServerFrame*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionServerFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionServerFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionServerFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionServerFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionServerFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionServerFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionFrame))) {
     TSessionFrame *G__Lderived;
     G__Lderived=(TSessionFrame*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TEditQueryFrame))) {
     TEditQueryFrame *G__Lderived;
     G__Lderived=(TEditQueryFrame*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TEditQueryFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TEditQueryFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TEditQueryFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TEditQueryFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TEditQueryFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TEditQueryFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFrame))) {
     TSessionQueryFrame *G__Lderived;
     G__Lderived=(TSessionQueryFrame*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionOutputFrame))) {
     TSessionOutputFrame *G__Lderived;
     G__Lderived=(TSessionOutputFrame*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionOutputFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionOutputFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionOutputFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionOutputFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionOutputFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionOutputFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionInputFrame))) {
     TSessionInputFrame *G__Lderived;
     G__Lderived=(TSessionInputFrame*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionInputFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionInputFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionInputFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionInputFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionInputFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionInputFrame),G__get_linked_tagnum(&G__G__SessionViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewChainDlg))) {
     TNewChainDlg *G__Lderived;
     G__Lderived=(TNewChainDlg*)0x1000;
     {
       TGTransientFrame *G__Lpbase=(TGTransientFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewChainDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGTransientFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewChainDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewChainDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewChainDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewChainDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewChainDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewChainDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewChainDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewQueryDlg))) {
     TNewQueryDlg *G__Lderived;
     G__Lderived=(TNewQueryDlg*)0x1000;
     {
       TGTransientFrame *G__Lpbase=(TGTransientFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewQueryDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGTransientFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewQueryDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewQueryDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewQueryDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewQueryDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewQueryDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewQueryDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewQueryDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SessionViewerLN_TUploadDataSetDlg))) {
     TUploadDataSetDlg *G__Lderived;
     G__Lderived=(TUploadDataSetDlg*)0x1000;
     {
       TGTransientFrame *G__Lpbase=(TGTransientFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TUploadDataSetDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGTransientFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TUploadDataSetDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TUploadDataSetDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TUploadDataSetDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TUploadDataSetDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TUploadDataSetDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TUploadDataSetDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TUploadDataSetDlg),G__get_linked_tagnum(&G__G__SessionViewerLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__SessionViewer() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__SessionViewerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__SessionViewerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SessionViewerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__SessionViewerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SessionViewerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__SessionViewerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__SessionViewerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__SessionViewerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__SessionViewerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__SessionViewerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TProofProgressLog */
static void G__setup_memvarTProofProgressLog(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog));
   { TProofProgressLog *p; p=(TProofProgressLog*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLogcLcLETextType),-1,-2,1,"kRaw=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLogcLcLETextType),-1,-2,1,"kStd=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLogcLcLETextType),-1,-2,1,"kGrep=2",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-1,4,"fSessionUrl=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSessionIdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextView),-1,-1,4,"fText=",0,"text widget");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fClose=",0,"close button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGListBox),-1,-1,4,"fLogList=",0,"list of workers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fLogNew=",0,"display logs button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressDialog),-1,-1,4,"fDialog=",0,"owner dialog");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofLog),-1,-1,4,"fProofLog=",0,"the log");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGNumberEntry),-1,-1,4,"fLinesFrom=",0,"starting line");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGNumberEntry),-1,-1,4,"fLinesTo=",0,"ending line");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fGrepText=",0,"text to grep for in the logs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fUrlText=",0,"url to connect to");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGNumberEntry),-1,-1,4,"fSessNum=",0,"relative index of the session to get");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fFileName=",0,"file to save to");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fSave=",0,"save button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fGrepButton=",0,"grep button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fUrlButton=",0,"rebuild button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCheckButton),-1,-1,4,"fAllLines=",0,"display all lines button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCheckButton),-1,-1,4,"fRawLines=",0,"display raw lines button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGSplitButton),-1,-1,4,"fAllWorkers=",0,"display all workers button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGVerticalFrame),-1,-1,4,"fVworkers=",0,"Vertical frame");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFullText=",0,"0 - when grep was called");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTextType=",0,"Type of retrieval");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofProgressMemoryPlot */
static void G__setup_memvarTProofProgressMemoryPlot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressMemoryPlot));
   { TProofProgressMemoryPlot *p; p=(TProofProgressMemoryPlot*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressDialog),-1,-1,2,"fDialog=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGListBox),-1,-1,2,"fWorkers=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,2,"fPlot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGSplitButton),-1,-1,2,"fAllWorkers=",0,"display all workers button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TRootEmbeddedCanvas),-1,-1,2,"fWorkersPlot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TRootEmbeddedCanvas),-1,-1,2,"fMasterPlot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofLog),-1,-1,2,"fProofLog=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TMultiGraph),-1,-1,2,"fWPlot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TMultiGraph),-1,-1,2,"fMPlot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TMultiGraph),-1,-1,2,"fAPlot=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fFullLogs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofProgressDialog */
static void G__setup_memvarTProofProgressDialog(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressDialog));
   { TProofProgressDialog *p; p=(TProofProgressDialog*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressDialogcLcLEQueryStatus),-1,-2,1,"kRunning=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressDialogcLcLEQueryStatus),-1,-2,1,"kDone=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressDialogcLcLEQueryStatus),-1,-2,1,"kStopped=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressDialogcLcLEQueryStatus),-1,-2,1,"kAborted=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressDialogcLcLEQueryStatus),-1,-2,1,"kIncomplete=4",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTransientFrame),-1,-1,4,"fDialog=",0,"transient frame, main dialog window");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGProgressBar),-1,-1,4,"fBar=",0,"progress bar");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fClose=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fStop=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fAbort=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fAsyn=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fLog=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fRatePlot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fMemPlot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCheckButton),-1,-1,4,"fKeepToggle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCheckButton),-1,-1,4,"fLogQueryToggle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextBuffer),-1,-1,4,"fTextQuery=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLabel),-1,-1,4,"fTitleLab=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLabel),-1,-1,4,"fFilesEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLabel),-1,-1,4,"fTimeLab=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLabel),-1,-1,4,"fProcessed=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLabel),-1,-1,4,"fEstim=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLabel),-1,-1,4,"fTotal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLabel),-1,-1,4,"fRate=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLabel),-1,-1,4,"fInit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLabel),-1,-1,4,"fSelector=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGSpeedo),-1,-1,4,"fSpeedo=",0,"speedometer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCheckButton),-1,-1,4,"fSmoothSpeedo=",0,"use smooth speedometer update");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog),-1,-1,4,"fLogWindow=",0,"transient frame for logs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressMemoryPlot),-1,-1,4,"fMemWindow=",0,"transient frame for memory plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TProof),-1,-1,4,"fProof=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TTime),-1,-1,4,"fStartTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TTime),-1,-1,4,"fEndTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fPrevProcessed=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fPrevTotal=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fFirst=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fEntries=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFiles=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressDialogcLcLEQueryStatus),-1,-1,4,"fStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fKeep=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fLogQuery=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TNtuple),-1,-1,4,"fRatePoints=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGraph),-1,-1,4,"fRateGraph=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGraph),-1,-1,4,"fMBRtGraph=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGraph),-1,-1,4,"fActWGraph=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGraph),-1,-1,4,"fTotSGraph=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGraph),-1,-1,4,"fEffSGraph=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fInitTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fProcTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAvgRate=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAvgMBRate=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSVNRev=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRightInfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-1,4,"fSessionUrl=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"fgKeepDefault=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"fgLogQueryDefault=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-2,4,"fgTextQueryDefault=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSessionViewer */
static void G__setup_memvarTSessionViewer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer));
   { TSessionViewer *p; p=(TSessionViewer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("time_t"),-1,4,"fStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("time_t"),-1,4,"fElapsed=",0,"time of connection");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fChangePic=",0,"KTRUE if animation active");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fBusy=",0,"KTRUE if busy i.e : connecting");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGHorizontalFrame),-1,-1,4,"fHf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGVerticalFrame),-1,-1,4,"fV1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGVerticalFrame),-1,-1,4,"fV2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionServerFrame),-1,-1,4,"fServerFrame=",0,"right side server frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionFrame),-1,-1,4,"fSessionFrame=",0,"right side session frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFrame),-1,-1,4,"fQueryFrame=",0,"right side query frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionOutputFrame),-1,-1,4,"fOutputFrame=",0,"output frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionInputFrame),-1,-1,4,"fInputFrame=",0,"input frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionLogView),-1,-1,4,"fLogWindow=",0,"external log window");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionDescription),-1,-1,4,"fActDesc=",0,"actual session description");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TList),-1,-1,4,"fSessions=",0,"list of sessions");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TGPicture),-1,-1,4,"fLocal=",0,"local session icon picture");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TGPicture),-1,-1,4,"fProofCon=",0,"connected server icon picture");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TGPicture),-1,-1,4,"fProofDiscon=",0,"disconnected server icon picture");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TGPicture),-1,-1,4,"fQueryCon=",0,"connected(?) query icon picture");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TGPicture),-1,-1,4,"fQueryDiscon=",0,"disconnected(?) query icon picture");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TGPicture),-1,-1,4,"fBaseIcon=",0,"base list tree icon picture");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGFrame),-1,-1,4,"fActFrame=",0,"actual (displayed) frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGToolBar),-1,-1,4,"fToolBar=",0,"application tool bar");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGMenuBar),-1,-1,4,"fMenuBar=",0,"application main menu bar");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGPopupMenu),-1,-1,4,"fFileMenu=",0,"file menu entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGPopupMenu),-1,-1,4,"fSessionMenu=",0,"session menu entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGPopupMenu),-1,-1,4,"fQueryMenu=",0,"query menu entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGPopupMenu),-1,-1,4,"fOptionsMenu=",0,"options menu entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGPopupMenu),-1,-1,4,"fCascadeMenu=",0,"options menu entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGPopupMenu),-1,-1,4,"fHelpMenu=",0,"help menu entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGPopupMenu),-1,-1,4,"fPopupSrv=",0,"server related popup menu");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGPopupMenu),-1,-1,4,"fPopupQry=",0,"query related popup menu");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TContextMenu),-1,-1,4,"fContextMenu=",0,"input/output objects context menu");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGHProgressBar),-1,-1,4,"fConnectProg=",0,"connection progress bar");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCanvas),-1,-1,4,"fTreeView=",0,"main right sessions/queries tree view");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGListTree),-1,-1,4,"fSessionHierarchy=",0,"main sessions/queries hierarchy list tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGListTreeItem),-1,-1,4,"fSessionItem=",0,"base (main) session list tree item");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGStatusBar),-1,-1,4,"fStatusBar=",0,"bottom status bar");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGPicture),-1,-1,4,"fRightIconPicture=",0,"lower bottom left icon used to show connection status");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGIcon),-1,-1,4,"fRightIcon=",0,"associated picture");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TTimer),-1,-1,4,"fTimer=",0,"timer used to change icon picture");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_UserGroup_t),-1,-1,4,"fUserGroup=",0,"user connected to session");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fAutoSave=",0,"kTRUE if config is to be saved on exit");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-1,4,"fConfigFile=",0,"configuration file name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TEnv),-1,-1,4,"fViewerEnv=",0,"viewer's configuration");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSessionLogView */
static void G__setup_memvarTSessionLogView(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionLogView));
   { TSessionLogView *p; p=(TSessionLogView*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),-1,-1,4,"fViewer=",0,"pointer on main viewer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextView),-1,-1,4,"fTextView=",0,"Text view widget");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fClose=",0,"OK button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLayoutHints),-1,-1,4,"fL1=",0,"layout of TGTextEdit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLayoutHints),-1,-1,4,"fL2=",0,"layout of OK button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TQueryDescription */
static void G__setup_memvarTQueryDescription(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescription));
   { TQueryDescription *p; p=(TQueryDescription*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescriptioncLcLESessionQueryStatus),-1,-2,1,"kSessionQueryAborted=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescriptioncLcLESessionQueryStatus),-1,-2,1,"kSessionQuerySubmitted=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescriptioncLcLESessionQueryStatus),-1,-2,1,"kSessionQueryRunning=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescriptioncLcLESessionQueryStatus),-1,-2,1,"kSessionQueryStopped=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescriptioncLcLESessionQueryStatus),-1,-2,1,"kSessionQueryCompleted=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescriptioncLcLESessionQueryStatus),-1,-2,1,"kSessionQueryFinalized=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescriptioncLcLESessionQueryStatus),-1,-2,1,"kSessionQueryCreated=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescriptioncLcLESessionQueryStatus),-1,-2,1,"kSessionQueryFromProof=7",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fStatus)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescriptioncLcLESessionQueryStatus),-1,-1,1,"fStatus=",0,"query status");
   G__memvar_setup((void*)((long)(&p->fReference)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-1,1,"fReference=",0,"query reference string (unique identifier)");
   G__memvar_setup((void*)((long)(&p->fQueryName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-1,1,"fQueryName=",0,"query name");
   G__memvar_setup((void*)((long)(&p->fSelectorString)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-1,1,"fSelectorString=",0,"selector name");
   G__memvar_setup((void*)((long)(&p->fTDSetString)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-1,1,"fTDSetString=",0,"dataset name");
   G__memvar_setup((void*)((long)(&p->fOptions)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-1,1,"fOptions=",0,"query processing options");
   G__memvar_setup((void*)((long)(&p->fEventList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-1,1,"fEventList=",0,"event list");
   G__memvar_setup((void*)((long)(&p->fNbFiles)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNbFiles=",0,"number of files to process");
   G__memvar_setup((void*)((long)(&p->fNoEntries)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"fNoEntries=",0,"number of events/entries to process");
   G__memvar_setup((void*)((long)(&p->fFirstEntry)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"fFirstEntry=",0,"first event/entry to process");
   G__memvar_setup((void*)((long)(&p->fStartTime)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TTime),-1,-1,1,"fStartTime=",0,"start time of the query");
   G__memvar_setup((void*)((long)(&p->fEndTime)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TTime),-1,-1,1,"fEndTime=",0,"end time of the query");
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),-1,-1,1,"fChain=",0,"dataset on which to process selector");
   G__memvar_setup((void*)((long)(&p->fResult)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryResult),-1,-1,1,"fResult=",0,"query result received back");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSessionDescription */
static void G__setup_memvarTSessionDescription(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionDescription));
   { TSessionDescription *p; p=(TSessionDescription*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fTag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-1,1,"fTag=",0,"session unique identifier");
   G__memvar_setup((void*)((long)(&p->fName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-1,1,"fName=",0,"session name");
   G__memvar_setup((void*)((long)(&p->fAddress)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-1,1,"fAddress=",0,"server address");
   G__memvar_setup((void*)((long)(&p->fPort)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fPort=",0,"communication port");
   G__memvar_setup((void*)((long)(&p->fConfigFile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-1,1,"fConfigFile=",0,"configuration file name");
   G__memvar_setup((void*)((long)(&p->fLogLevel)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fLogLevel=",0,"log (debug) level");
   G__memvar_setup((void*)((long)(&p->fUserName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-1,1,"fUserName=",0,"user name (on server)");
   G__memvar_setup((void*)((long)(&p->fConnected)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fConnected=",0,"kTRUE if connected");
   G__memvar_setup((void*)((long)(&p->fAttached)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fAttached=",0,"kTRUE if attached");
   G__memvar_setup((void*)((long)(&p->fLocal)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fLocal=",0,"kTRUE if session is local");
   G__memvar_setup((void*)((long)(&p->fSync)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fSync=",0,"kTRUE if in sync mode");
   G__memvar_setup((void*)((long)(&p->fAutoEnable)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fAutoEnable=",0,"enable packages at session startup time");
   G__memvar_setup((void*)((long)(&p->fQueries)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TList),-1,-1,1,"fQueries=",0,"list of queries in this session");
   G__memvar_setup((void*)((long)(&p->fPackages)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TList),-1,-1,1,"fPackages=",0,"list of packages");
   G__memvar_setup((void*)((long)(&p->fActQuery)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescription),-1,-1,1,"fActQuery=",0,"current (actual) query");
   G__memvar_setup((void*)((long)(&p->fProof)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TProof),-1,-1,1,"fProof=",0,"pointer on TProof used by this session");
   G__memvar_setup((void*)((long)(&p->fProofMgr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TProofMgr),-1,-1,1,"fProofMgr=",0,"Proof sessions manager");
   G__memvar_setup((void*)((long)(&p->fNbHistos)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNbHistos=",0,"number of feedback histos");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPackageDescription */
static void G__setup_memvarTPackageDescription(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TPackageDescription));
   { TPackageDescription *p; p=(TPackageDescription*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-1,1,"fName=",0,"package name");
   G__memvar_setup((void*)((long)(&p->fPathName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TString),-1,-1,1,"fPathName=",0,"full path name of package");
   G__memvar_setup((void*)((long)(&p->fId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fId=",0,"package id");
   G__memvar_setup((void*)((long)(&p->fUploaded)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fUploaded=",0,"package has been uploaded");
   G__memvar_setup((void*)((long)(&p->fEnabled)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fEnabled=",0,"package has been enabled");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSessionServerFrame */
static void G__setup_memvarTSessionServerFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionServerFrame));
   { TSessionServerFrame *p; p=(TSessionServerFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),-1,-1,4,"fFrmNewServer=",0,"main group frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fTxtName=",0,"connection name text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fTxtAddress=",0,"server address text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGNumberEntry),-1,-1,4,"fNumPort=",0,"port number selector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGNumberEntry),-1,-1,4,"fLogLevel=",0,"log (debug) level selector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fTxtConfig=",0,"configuration file text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fTxtUsrName=",0,"user name text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCheckButton),-1,-1,4,"fSync=",0,"sync / async flag selector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),-1,-1,4,"fViewer=",0,"pointer on the main viewer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnAdd=",0,"\"Add\" button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnConnect=",0,"\"Connect\" button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSessionFrame */
static void G__setup_memvarTSessionFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionFrame));
   { TSessionFrame *p; p=(TSessionFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTab),-1,-1,4,"fTab=",0,"main tab frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),-1,-1,4,"fFA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),-1,-1,4,"fFB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),-1,-1,4,"fFC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),-1,-1,4,"fFD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),-1,-1,4,"fFE=",0,"five tabs element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fCommandTxt=",0,"Command line text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextBuffer),-1,-1,4,"fCommandBuf=",0,"Command line text buffer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextView),-1,-1,4,"fInfoTextView=",0,"summary on current query");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCheckButton),-1,-1,4,"fClearCheck=",0,"clear text view after each command");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnShowLog=",0,"show log button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnNewQuery=",0,"new query button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnGetQueries=",0,"get entries button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGListBox),-1,-1,4,"fLBPackages=",0,"packages listbox");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnAdd=",0,"add package button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnRemove=",0,"remove package button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnUp=",0,"move package up button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnDown=",0,"move package down button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnShow=",0,"show packages button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnShowEnabled=",0,"show enabled packages button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCheckButton),-1,-1,4,"fChkMulti=",0,"multiple selection check");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCheckButton),-1,-1,4,"fChkEnable=",0,"enable at session startup check");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnUpload=",0,"upload packages button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnEnable=",0,"enable packages button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnClear=",0,"clear all packages button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnDisable=",0,"disable packages button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCanvas),-1,-1,4,"fDSetView=",0,"dataset tree view");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGListTree),-1,-1,4,"fDataSetTree=",0,"dataset list tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnUploadDSet=",0,"upload dataset button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnRemoveDSet=",0,"remove dataset button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnVerifyDSet=",0,"verify dataset button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnRefresh=",0,"refresh list button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fTxtParallel=",0,"parallel nodes text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGNumberEntry),-1,-1,4,"fLogLevel=",0,"log level number entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fApplyLogLevel=",0,"apply log level button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fApplyParallel=",0,"apply parallel nodes button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),-1,-1,4,"fViewer=",0,"pointer on main viewer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLabel),-1,-1,4,"fInfoLine[19]=",0,"infos on session");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEditQueryFrame */
static void G__setup_memvarTEditQueryFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TEditQueryFrame));
   { TEditQueryFrame *p; p=(TEditQueryFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),-1,-1,4,"fFrmMore=",0,"options frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnMore=",0,"\"more >>\" / \"less <<\" button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fTxtQueryName=",0,"query name text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fTxtChain=",0,"chain name text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fTxtSelector=",0,"selector name text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fTxtOptions=",0,"options text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGNumberEntry),-1,-1,4,"fNumEntries=",0,"number of entries selector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGNumberEntry),-1,-1,4,"fNumFirstEntry=",0,"first entry selector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fTxtParFile=",0,"parameter file name text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fTxtEventList=",0,"event list text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),-1,-1,4,"fViewer=",0,"pointer on main viewer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescription),-1,-1,4,"fQuery=",0,"query description class");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),-1,-1,4,"fChain=",0,"actual TChain");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSessionQueryFrame */
static void G__setup_memvarTSessionQueryFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFrame));
   { TSessionQueryFrame *p; p=(TSessionQueryFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFramecLcLEQueryStatus),-1,-2,1,"kRunning=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFramecLcLEQueryStatus),-1,-2,1,"kDone=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFramecLcLEQueryStatus),-1,-2,1,"kStopped=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFramecLcLEQueryStatus),-1,-2,1,"kAborted=3",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnSubmit=",0,"submit query button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnFinalize=",0,"finalize query button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnStop=",0,"stop process button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnAbort=",0,"abort process button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnShowLog=",0,"show log button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnRetrieve=",0,"retrieve query button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnSave=",0,"save query button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextView),-1,-1,4,"fInfoTextView=",0,"summary on current query");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fModified=",0,"kTRUE if settings have changed");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFiles=",0,"number of files processed");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fFirst=",0,"first event/entry to process");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fEntries=",0,"number of events/entries to process");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fPrevTotal=",0,"used for progress bar");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fPrevProcessed=",0,"used for progress bar");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLabel),-1,-1,4,"fLabInfos=",0,"infos on current process");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLabel),-1,-1,4,"fLabStatus=",0,"actual process status");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLabel),-1,-1,4,"fTotal=",0,"total progress info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLabel),-1,-1,4,"fRate=",0,"rate of process in events/sec");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFramecLcLEQueryStatus),-1,-1,4,"fStatus=",0,"status of actual query");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTab),-1,-1,4,"fTab=",0,"main tab frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),-1,-1,4,"fFA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),-1,-1,4,"fFB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),-1,-1,4,"fFC=",0,"three tabs element");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TEditQueryFrame),-1,-1,4,"fFD=",0,"fourth tab element (edit query frame)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGHProgressBar),-1,-1,4,"frmProg=",0,"current process progress bar");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TRootEmbeddedCanvas),-1,-1,4,"fECanvas=",0,"node statistics embeded canvas");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TCanvas),-1,-1,4,"fStatsCanvas=",0,"node statistics canvas");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),-1,-1,4,"fViewer=",0,"pointer on main viewer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescription),-1,-1,4,"fDesc=",0,"query description");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSessionOutputFrame */
static void G__setup_memvarTSessionOutputFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionOutputFrame));
   { TSessionOutputFrame *p; p=(TSessionOutputFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLVEntry),-1,-1,4,"fEntryTmp=",0,"used to transfer to feedback");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLVContainer),-1,-1,4,"fLVContainer=",0,"output list view");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),-1,-1,4,"fViewer=",0,"pointer on the main viewer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSessionInputFrame */
static void G__setup_memvarTSessionInputFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionInputFrame));
   { TSessionInputFrame *p; p=(TSessionInputFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),-1,-1,4,"fViewer=",0,"pointer on the main viewer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLVContainer),-1,-1,4,"fLVContainer=",0,"container for the input list view");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TNewChainDlg */
static void G__setup_memvarTNewChainDlg(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewChainDlg));
   { TNewChainDlg *p; p=(TNewChainDlg*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGFileContainer),-1,-1,4,"fContents=",0,"macro files container");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGListView),-1,-1,4,"fListView=",0,"memory objects list view");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLVContainer),-1,-1,4,"fLVContainer=",0,"and its container");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextBuffer),-1,-1,4,"fNameBuf=",0,"buffer for dataset name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fName=",0,"dataset name text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fOkButton=",0,"ok button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fCancelButton=",0,"cancel button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSeqCollection),-1,-1,4,"fChains=",0,"collection of datasets");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),-1,-1,4,"fChain=",0,"actual TDSet or TChain");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TNewQueryDlg */
static void G__setup_memvarTNewQueryDlg(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewQueryDlg));
   { TNewQueryDlg *p; p=(TNewQueryDlg*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fEditMode=",0,"kTRUE if used to edit existing query");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fModified=",0,"kTRUE if settings have changed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),-1,-1,4,"fFrmNewQuery=",0,"top (main) frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCompositeFrame),-1,-1,4,"fFrmMore=",0,"options frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnMore=",0,"\"more >>\" / \"less <<\" button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnClose=",0,"close button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnSave=",0,"save button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBtnSubmit=",0,"save & submit button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fTxtQueryName=",0,"query name text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fTxtChain=",0,"chain name text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fTxtSelector=",0,"selector name text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fTxtOptions=",0,"options text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGNumberEntry),-1,-1,4,"fNumEntries=",0,"number of entries selector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGNumberEntry),-1,-1,4,"fNumFirstEntry=",0,"first entry selector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fTxtEventList=",0,"event list text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),-1,-1,4,"fViewer=",0,"pointer on main viewer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescription),-1,-1,4,"fQuery=",0,"query description class");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TObject),-1,-1,4,"fChain=",0,"actual TChain");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TUploadDataSetDlg */
static void G__setup_memvarTUploadDataSetDlg(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TUploadDataSetDlg));
   { TUploadDataSetDlg *p; p=(TUploadDataSetDlg*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUploading=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TList),-1,-1,4,"fSkippedFiles=",0,"List of skipped files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fDSetName=",0,"dataset name text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fDestinationURL=",0,"destination URL text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextEntry),-1,-1,4,"fLocationURL=",0,"location URL text entry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGListView),-1,-1,4,"fListView=",0,"dataset files list view");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGLVContainer),-1,-1,4,"fLVContainer=",0,"and its container");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fAddButton=",0,"Add >> button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fBrowseButton=",0,"Browse... button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fRemoveButton=",0,"Remove button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fClearButton=",0,"Clear button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCheckButton),-1,-1,4,"fOverwriteDSet=",0,"overwrite DataSet");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCheckButton),-1,-1,4,"fOverwriteFiles=",0,"overwrite All Files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGCheckButton),-1,-1,4,"fAppendFiles=",0,"append files");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fUploadButton=",0,"Upload button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TGTextButton),-1,-1,4,"fCloseDlgButton=",0,"Close Dialog button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),-1,-1,4,"fViewer=",0,"pointer on main viewer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__SessionViewer() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTProofProgressLog(void) {
   /* TProofProgressLog */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog));
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 '700' w i - 'Int_t' 0 '300' h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofProgressLog",1745,G__G__SessionViewer_115_0_2, 105, G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog), -1, 0, 3, 1, 1, 0, 
"U 'TProofProgressDialog' - 0 - d i - 'Int_t' 0 '700' w "
"i - 'Int_t' 0 '300' h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofProgressLog",1745,G__G__SessionViewer_115_0_3, 105, G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog), -1, 0, 4, 1, 1, 0, 
"C - - 10 '0' url i - 'Int_t' 0 '0' sessionidx "
"i - 'Int_t' 0 '700' w i - 'Int_t' 0 '300' h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildLogList",1198,G__G__SessionViewer_115_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' create", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoLog",469,G__G__SessionViewer_115_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' grep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LogMessage",999,G__G__SessionViewer_115_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - msg g - 'Bool_t' 0 - all", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rebuild",711,G__G__SessionViewer_115_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadBuffer",986,G__G__SessionViewer_115_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - buffer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBuffer",867,G__G__SessionViewer_115_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - buffer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadFile",768,G__G__SessionViewer_115_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Popup",532,G__G__SessionViewer_115_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveToFile",978,G__G__SessionViewer_115_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NoLineEntry",1111,G__G__SessionViewer_115_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Select",608,G__G__SessionViewer_115_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - id g - 'Bool_t' 0 'kTRUE' all", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUrl",607,G__G__SessionViewer_115_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - url", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SessionViewer_115_0_18, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofProgressLog::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_115_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofProgressLog::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_115_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofProgressLog::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_115_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofProgressLog::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_115_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_115_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofProgressLog::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_115_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofProgressLog::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_115_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofProgressLog::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_115_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofProgressLog::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofProgressLog", 1871, G__G__SessionViewer_115_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofProgressMemoryPlot(void) {
   /* TProofProgressMemoryPlot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressMemoryPlot));
   G__memfunc_setup("BuildLogList",1198,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGListBox), -1, 0, 1, 1, 2, 0, "U 'TGFrame' - 0 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoWorkerPlot",1228,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGraph), -1, 0, 1, 1, 2, 0, "U 'TProofLogElem' - 0 - ple", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoMasterPlot",1214,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGraph), -1, 0, 1, 1, 2, 0, "U 'TProofLogElem' - 0 - ple", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoAveragePlot",1293,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGraph), -1, 0, 2, 1, 2, 0, 
"i - 'Int_t' 1 - max_el i - 'Int_t' 1 - min_el", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoAveragePlotOld",1580,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGraph), -1, 0, 2, 1, 2, 0, 
"i - 'Int_t' 1 - max_el i - 'Int_t' 1 - min_el", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseLine",899,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 2, 0, 
"u 'TString' - 0 - l n - 'Long64_t' 1 - v "
"n - 'Long64_t' 1 - r n - 'Long64_t' 1 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofProgressMemoryPlot",2503,G__G__SessionViewer_116_0_7, 105, G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressMemoryPlot), -1, 0, 3, 1, 1, 0, 
"U 'TProofProgressDialog' - 0 - d i - 'Int_t' 0 '700' w "
"i - 'Int_t' 0 '300' h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoPlot",594,G__G__SessionViewer_116_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Select",608,G__G__SessionViewer_116_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__SessionViewer_116_0_11, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofProgressMemoryPlot::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_116_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofProgressMemoryPlot::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_116_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofProgressMemoryPlot::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_116_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofProgressMemoryPlot::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_116_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_116_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofProgressMemoryPlot::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_116_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofProgressMemoryPlot::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_116_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofProgressMemoryPlot::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_116_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofProgressMemoryPlot::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TProofProgressMemoryPlot", 2629, G__G__SessionViewer_116_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofProgressDialog(void) {
   /* TProofProgressDialog */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressDialog));
   G__memfunc_setup("AdjustBytes",1138,(G__InterfaceMethod) NULL, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 4, 0, 
"f - 'Float_t' 0 - mbs u 'TString' - 1 - sf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TProofProgressDialog",2047,G__G__SessionViewer_120_0_2, 105, G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressDialog), -1, 0, 5, 1, 1, 0, 
"U 'TProof' - 0 - proof C - - 10 - selector "
"i - 'Int_t' 0 - files n - 'Long64_t' 0 - first "
"n - 'Long64_t' 0 - entries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetProgressDialog",1960,G__G__SessionViewer_120_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - sel i - 'Int_t' 0 - sz "
"n - 'Long64_t' 0 - fst n - 'Long64_t' 0 - ent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Progress",853,G__G__SessionViewer_120_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Progress",853,G__G__SessionViewer_120_0_5, 121, -1, -1, 0, 7, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed "
"n - 'Long64_t' 0 - bytesread f - 'Float_t' 0 - initTime "
"f - 'Float_t' 0 - procTime f - 'Float_t' 0 - evtrti "
"f - 'Float_t' 0 - mbrti", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Progress",853,G__G__SessionViewer_120_0_6, 121, -1, -1, 0, 10, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed "
"n - 'Long64_t' 0 - bytesread f - 'Float_t' 0 - initTime "
"f - 'Float_t' 0 - procTime f - 'Float_t' 0 - evtrti "
"f - 'Float_t' 0 - mbrti i - 'Int_t' 0 - actw "
"i - 'Int_t' 0 - tses f - 'Float_t' 0 - eses", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisableAsyn",1103,G__G__SessionViewer_120_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IndicateStop",1223,G__G__SessionViewer_120_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - aborted", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LogMessage",999,G__G__SessionViewer_120_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - msg g - 'Bool_t' 0 - all", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,G__G__SessionViewer_120_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoClose",681,G__G__SessionViewer_120_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoLog",469,G__G__SessionViewer_120_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoKeep",568,G__G__SessionViewer_120_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoSetLogQuery",1303,G__G__SessionViewer_120_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoStop",601,G__G__SessionViewer_120_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoAbort",683,G__G__SessionViewer_120_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoAsyn",590,G__G__SessionViewer_120_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoPlotRateGraph",1488,G__G__SessionViewer_120_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoMemoryPlot",1227,G__G__SessionViewer_120_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToggleOdometerInfos",1952,G__G__SessionViewer_120_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToggleThreshold",1551,G__G__SessionViewer_120_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__SessionViewer_120_0_22, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TProofProgressDialog::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_120_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofProgressDialog::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_120_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TProofProgressDialog::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_120_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TProofProgressDialog::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__SessionViewer_120_0_26, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__SessionViewer_120_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__SessionViewer_120_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_120_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_120_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofProgressDialog::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_120_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofProgressDialog::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_120_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TProofProgressDialog::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_120_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TProofProgressDialog::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TProofProgressDialog", 2047, G__G__SessionViewer_120_0_34, (int) ('i'), G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressDialog), -1, 0, 1, 1, 1, 0, "u 'TProofProgressDialog' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TProofProgressDialog", 2173, G__G__SessionViewer_120_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SessionViewer_120_0_36, (int) ('u'), G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressDialog), -1, 1, 1, 1, 1, 0, "u 'TProofProgressDialog' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSessionViewer(void) {
   /* TSessionViewer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer));
   G__memfunc_setup("TSessionViewer",1450,G__G__SessionViewer_299_0_1, 105, G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer), -1, 0, 3, 1, 1, 0, 
"C - - 10 '\"ROOT Session Viewer\"' title h - 'UInt_t' 0 '550' w "
"h - 'UInt_t' 0 '320' h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSessionViewer",1450,G__G__SessionViewer_299_0_2, 105, G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer), -1, 0, 5, 1, 1, 0, 
"C - - 10 - title i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,G__G__SessionViewer_299_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessMessage",1444,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetServerFrame",1410,G__G__SessionViewer_299_0_5, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionServerFrame), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSessionFrame",1519,G__G__SessionViewer_299_0_6, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionFrame), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQueryFrame",1313,G__G__SessionViewer_299_0_7, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFrame), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutputFrame",1436,G__G__SessionViewer_299_0_8, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionOutputFrame), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInputFrame",1307,G__G__SessionViewer_299_0_9, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionInputFrame), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActDesc",951,G__G__SessionViewer_299_0_10, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionDescription), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSessions",1143,G__G__SessionViewer_299_0_11, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSessionHierarchy",1955,G__G__SessionViewer_299_0_12, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGListTree), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSessionItem",1427,G__G__SessionViewer_299_0_13, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGListTreeItem), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLocalPict",1179,G__G__SessionViewer_299_0_14, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGPicture), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProofConPict",1494,G__G__SessionViewer_299_0_15, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGPicture), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProofDisconPict",1814,G__G__SessionViewer_299_0_16, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGPicture), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQueryConPict",1510,G__G__SessionViewer_299_0_17, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGPicture), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQueryDisconPict",1830,G__G__SessionViewer_299_0_18, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGPicture), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBasePict",1067,G__G__SessionViewer_299_0_19, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGPicture), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPopupSrv",1135,G__G__SessionViewer_299_0_20, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGPopupMenu), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPopupQry",1136,G__G__SessionViewer_299_0_21, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGPopupMenu), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetContextMenu",1434,G__G__SessionViewer_299_0_22, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TContextMenu), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatusBar",1209,G__G__SessionViewer_299_0_23, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGStatusBar), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConnectProg",1410,G__G__SessionViewer_299_0_24, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGHProgressBar), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCascadeMenu",1369,G__G__SessionViewer_299_0_25, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGPopupMenu), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOptionsMenu",1441,G__G__SessionViewer_299_0_26, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGPopupMenu), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangeRightLogo",1493,G__G__SessionViewer_299_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanupSession",1452,G__G__SessionViewer_299_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DisableTimer",1205,G__G__SessionViewer_299_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EditQuery",924,G__G__SessionViewer_299_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnableTimer",1096,G__G__SessionViewer_299_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleTimer",1101,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TTimer' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsBusy",607,G__G__SessionViewer_299_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAutoSave",996,G__G__SessionViewer_299_0_35, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LogMessage",999,G__G__SessionViewer_299_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - msg g - 'Bool_t' 0 - all", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyHandleMenu",1191,G__G__SessionViewer_299_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnCascadeMenu",1270,G__G__SessionViewer_299_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnListTreeClicked",1688,G__G__SessionViewer_299_0_39, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TGListTreeItem' - 0 - entry i - 'Int_t' 0 - btn "
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnListTreeDoubleClicked",2291,G__G__SessionViewer_299_0_40, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGListTreeItem' - 0 - entry i - 'Int_t' 0 - btn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QueryResultReady",1674,G__G__SessionViewer_299_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - query", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteQuery",1129,G__G__SessionViewer_299_0_42, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadConfiguration",1748,G__G__SessionViewer_299_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetSession",1255,G__G__SessionViewer_299_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateListOfProofs",1837,G__G__SessionViewer_299_0_45, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateListOfSessions",2059,G__G__SessionViewer_299_0_46, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateListOfPackages",2003,G__G__SessionViewer_299_0_47, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteConfiguration",1891,G__G__SessionViewer_299_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBusy",719,G__G__SessionViewer_299_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' busy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChangePic",1166,G__G__SessionViewer_299_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - change", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogWindow",1222,G__G__SessionViewer_299_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSessionLogView' - 0 - log", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowEnabledPackages",1899,G__G__SessionViewer_299_0_52, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowPackages",1216,G__G__SessionViewer_299_0_53, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowInfo",813,G__G__SessionViewer_299_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - txt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowLog",707,G__G__SessionViewer_299_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - queryref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowStatus",1061,G__G__SessionViewer_299_0_56, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StartupMessage",1464,G__G__SessionViewer_299_0_57, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 0 - msg g - 'Bool_t' 0 - stat "
"i - 'Int_t' 0 - curr i - 'Int_t' 0 - total", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StartViewer",1152,G__G__SessionViewer_299_0_58, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Terminate",937,G__G__SessionViewer_299_0_59, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__SessionViewer_299_0_60, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSessionViewer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_299_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionViewer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_299_0_62, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSessionViewer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_299_0_63, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSessionViewer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_299_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_299_0_68, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionViewer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_299_0_69, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSessionViewer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_299_0_70, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionViewer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_299_0_71, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSessionViewer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSessionViewer", 1576, G__G__SessionViewer_299_0_72, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSessionLogView(void) {
   /* TSessionLogView */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionLogView));
   G__memfunc_setup("TSessionLogView",1525,G__G__SessionViewer_300_0_1, 105, G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionLogView), -1, 0, 3, 1, 1, 0, 
"U 'TSessionViewer' - 0 - viewer h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBuffer",867,G__G__SessionViewer_300_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - buffer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadBuffer",986,G__G__SessionViewer_300_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - buffer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadFile",768,G__G__SessionViewer_300_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessMessage",1444,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearLogView",1188,G__G__SessionViewer_300_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Popup",532,G__G__SessionViewer_300_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTitle",814,G__G__SessionViewer_300_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__SessionViewer_300_0_10, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSessionLogView::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_300_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionLogView::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_300_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSessionLogView::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_300_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSessionLogView::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_300_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_300_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionLogView::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_300_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSessionLogView::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_300_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionLogView::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_300_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSessionLogView::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSessionLogView", 1651, G__G__SessionViewer_300_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTQueryDescription(void) {
   /* TQueryDescription */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescription));
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SessionViewer_303_0_2, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TQueryDescription::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_303_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQueryDescription::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_303_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TQueryDescription::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_303_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TQueryDescription::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_303_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_303_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQueryDescription::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_303_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQueryDescription::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_303_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQueryDescription::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_303_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQueryDescription::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TQueryDescription", 1774, G__G__SessionViewer_303_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescription), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TQueryDescription", 1774, G__G__SessionViewer_303_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescription), -1, 0, 1, 1, 1, 0, "u 'TQueryDescription' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TQueryDescription", 1900, G__G__SessionViewer_303_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SessionViewer_303_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescription), -1, 1, 1, 1, 1, 0, "u 'TQueryDescription' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSessionDescription(void) {
   /* TSessionDescription */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionDescription));
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SessionViewer_306_0_2, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSessionDescription::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_306_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionDescription::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_306_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSessionDescription::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_306_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSessionDescription::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_306_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_306_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionDescription::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_306_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSessionDescription::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_306_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionDescription::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_306_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSessionDescription::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TSessionDescription", 1980, G__G__SessionViewer_306_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionDescription), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TSessionDescription", 1980, G__G__SessionViewer_306_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionDescription), -1, 0, 1, 1, 1, 0, "u 'TSessionDescription' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSessionDescription", 2106, G__G__SessionViewer_306_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SessionViewer_306_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionDescription), -1, 1, 1, 1, 1, 0, "u 'TSessionDescription' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPackageDescription(void) {
   /* TPackageDescription */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TPackageDescription));
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SessionViewer_307_0_2, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPackageDescription::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_307_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPackageDescription::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_307_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPackageDescription::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_307_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPackageDescription::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_307_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_307_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPackageDescription::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_307_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPackageDescription::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_307_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPackageDescription::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_307_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPackageDescription::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TPackageDescription", 1924, G__G__SessionViewer_307_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__SessionViewerLN_TPackageDescription), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TPackageDescription", 1924, G__G__SessionViewer_307_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__SessionViewerLN_TPackageDescription), -1, 0, 1, 1, 1, 0, "u 'TPackageDescription' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPackageDescription", 2050, G__G__SessionViewer_307_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SessionViewer_307_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__SessionViewerLN_TPackageDescription), -1, 1, 1, 1, 1, 0, "u 'TPackageDescription' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSessionServerFrame(void) {
   /* TSessionServerFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionServerFrame));
   G__memfunc_setup("TSessionServerFrame",1946,G__G__SessionViewer_308_0_1, 105, G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionServerFrame), -1, 0, 3, 1, 1, 0, 
"U 'TGWindow' - 0 - parent i - 'Int_t' 0 - w "
"i - 'Int_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,G__G__SessionViewer_308_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSessionViewer' - 0 - gui", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAddress",998,G__G__SessionViewer_308_0_4, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPortNumber",1326,G__G__SessionViewer_308_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLogLevel",1082,G__G__SessionViewer_308_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConfigText",1307,G__G__SessionViewer_308_0_7, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUserName",1088,G__G__SessionViewer_308_0_8, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSync",601,G__G__SessionViewer_308_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAddEnabled",1248,G__G__SessionViewer_308_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConnectEnabled",1697,G__G__SessionViewer_308_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - str", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAddress",1010,G__G__SessionViewer_308_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPortNumber",1338,G__G__SessionViewer_308_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - port", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogLevel",1094,G__G__SessionViewer_308_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - log", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfigText",1319,G__G__SessionViewer_308_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUserName",1100,G__G__SessionViewer_308_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSync",713,G__G__SessionViewer_308_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - sync", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SettingsChanged",1531,G__G__SessionViewer_308_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnConnectClicked",1882,G__G__SessionViewer_308_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnNewServerClicked",2097,G__G__SessionViewer_308_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnDeleteClicked",1763,G__G__SessionViewer_308_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnAddClicked",1433,G__G__SessionViewer_308_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnConfigFileClicked",1858,G__G__SessionViewer_308_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__G__SessionViewer_308_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSessionDescription' - 0 - desc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleExpose",1216,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'Event_t' - 0 - event", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessMessage",1444,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SessionViewer_308_0_28, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSessionServerFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_308_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionServerFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_308_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSessionServerFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_308_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSessionServerFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_308_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_308_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionServerFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_308_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSessionServerFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_308_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionServerFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_308_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSessionServerFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSessionServerFrame", 2072, G__G__SessionViewer_308_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSessionFrame(void) {
   /* TSessionFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionFrame));
   G__memfunc_setup("TSessionFrame",1315,G__G__SessionViewer_309_0_1, 105, G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionFrame), -1, 0, 3, 1, 1, 0, 
"U 'TGWindow' - 0 - parent i - 'Int_t' 0 - w "
"i - 'Int_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,G__G__SessionViewer_309_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSessionViewer' - 0 - gui", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckAutoEnPack",1449,G__G__SessionViewer_309_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' checked", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLogLevel",1082,G__G__SessionViewer_309_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogLevel",1094,G__G__SessionViewer_309_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - log", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTab",567,G__G__SessionViewer_309_0_6, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGTab), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnApplyLogLevel",1501,G__G__SessionViewer_309_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnApplyParallel",1520,G__G__SessionViewer_309_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnAddClicked",1433,G__G__SessionViewer_309_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnRemoveClicked",1790,G__G__SessionViewer_309_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnUpClicked",1365,G__G__SessionViewer_309_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnDownClicked",1576,G__G__SessionViewer_309_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnShowLogClicked",1875,G__G__SessionViewer_309_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnNewQueryClicked",2000,G__G__SessionViewer_309_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnGetQueriesClicked",2190,G__G__SessionViewer_309_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnDisconnectClicked",2202,G__G__SessionViewer_309_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnCommandLine",1284,G__G__SessionViewer_309_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnUploadPackages",1601,G__G__SessionViewer_309_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnEnablePackages",1571,G__G__SessionViewer_309_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnDisablePackages",1680,G__G__SessionViewer_309_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnClearPackages",1475,G__G__SessionViewer_309_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnMultipleSelection",1967,G__G__SessionViewer_309_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnStartupEnable",1527,G__G__SessionViewer_309_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProofInfos",1029,G__G__SessionViewer_309_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLocal",791,G__G__SessionViewer_309_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' local", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShutdownSession",1600,G__G__SessionViewer_309_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdatePackages",1410,G__G__SessionViewer_309_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnUploadDSet",1462,G__G__SessionViewer_309_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnRemoveDSet",1471,G__G__SessionViewer_309_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnVerifyDSet",1478,G__G__SessionViewer_309_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateListOfDataSets",1997,G__G__SessionViewer_309_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__SessionViewer_309_0_32, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSessionFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_309_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_309_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSessionFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_309_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSessionFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_309_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_309_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_309_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSessionFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_309_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_309_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSessionFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSessionFrame", 1441, G__G__SessionViewer_309_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEditQueryFrame(void) {
   /* TEditQueryFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TEditQueryFrame));
   G__memfunc_setup("TEditQueryFrame",1499,G__G__SessionViewer_310_0_1, 105, G__get_linked_tagnum(&G__G__SessionViewerLN_TEditQueryFrame), -1, 0, 3, 1, 1, 0, 
"U 'TGWindow' - 0 - p i - 'Int_t' 0 - w "
"i - 'Int_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,G__G__SessionViewer_310_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSessionViewer' - 0 - gui", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnNewQueryMore",1424,G__G__SessionViewer_310_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBrowseChain",1298,G__G__SessionViewer_310_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBrowseSelector",1648,G__G__SessionViewer_310_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBrowseEventList",1741,G__G__SessionViewer_310_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnSave",880,G__G__SessionViewer_310_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnElementSelected",1712,G__G__SessionViewer_310_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SettingsChanged",1531,G__G__SessionViewer_310_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateFields",1210,G__G__SessionViewer_310_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TQueryDescription' - 0 - desc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__SessionViewer_310_0_11, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEditQueryFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_310_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEditQueryFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_310_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEditQueryFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_310_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEditQueryFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_310_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_310_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEditQueryFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_310_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEditQueryFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_310_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEditQueryFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_310_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEditQueryFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TEditQueryFrame", 1625, G__G__SessionViewer_310_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSessionQueryFrame(void) {
   /* TSessionQueryFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFrame));
   G__memfunc_setup("TSessionQueryFrame",1849,G__G__SessionViewer_311_0_1, 105, G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFrame), -1, 0, 3, 1, 1, 0, 
"U 'TGWindow' - 0 - parent i - 'Int_t' 0 - w "
"i - 'Int_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,G__G__SessionViewer_311_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSessionViewer' - 0 - gui", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatsCanvas",1419,G__G__SessionViewer_311_0_3, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TCanvas), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQueryEditFrame",1703,G__G__SessionViewer_311_0_4, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TEditQueryFrame), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTab",567,G__G__SessionViewer_311_0_5, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGTab), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Feedback",773,G__G__SessionViewer_311_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - objs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Modified",801,G__G__SessionViewer_311_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' mod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Progress",853,G__G__SessionViewer_311_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Progress",853,G__G__SessionViewer_311_0_9, 121, -1, -1, 0, 7, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed "
"n - 'Long64_t' 0 - bytesread f - 'Float_t' 0 - initTime "
"f - 'Float_t' 0 - procTime f - 'Float_t' 0 - evtrti "
"f - 'Float_t' 0 - mbrti", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProgressLocal",1344,G__G__SessionViewer_311_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IndicateStop",1223,G__G__SessionViewer_311_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - aborted", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetProgressDialog",1960,G__G__SessionViewer_311_0_12, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - selec i - 'Int_t' 0 - files "
"n - 'Long64_t' 0 - first n - 'Long64_t' 0 - entries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnSubmit",1109,G__G__SessionViewer_311_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnFinalize",1299,G__G__SessionViewer_311_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnStop",903,G__G__SessionViewer_311_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnAbort",985,G__G__SessionViewer_311_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnShowLog",1188,G__G__SessionViewer_311_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnRetrieve",1319,G__G__SessionViewer_311_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateInfos",1122,G__G__SessionViewer_311_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateButtons",1362,G__G__SessionViewer_311_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TQueryDescription' - 0 - desc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateHistos",1245,G__G__SessionViewer_311_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - objs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__SessionViewer_311_0_22, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSessionQueryFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_311_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionQueryFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_311_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSessionQueryFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_311_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSessionQueryFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_311_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_311_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionQueryFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_311_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSessionQueryFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_311_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionQueryFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_311_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSessionQueryFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSessionQueryFrame", 1975, G__G__SessionViewer_311_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSessionOutputFrame(void) {
   /* TSessionOutputFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionOutputFrame));
   G__memfunc_setup("TSessionOutputFrame",1972,G__G__SessionViewer_313_0_1, 105, G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionOutputFrame), -1, 0, 3, 1, 1, 0, 
"U 'TGWindow' - 0 - parent i - 'Int_t' 0 - w "
"i - 'Int_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddObject",864,G__G__SessionViewer_313_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,G__G__SessionViewer_313_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSessionViewer' - 0 - gui", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLVContainer",1381,G__G__SessionViewer_313_0_4, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGLVContainer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnElementClicked",1590,G__G__SessionViewer_313_0_5, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TGLVEntry' - 0 - entry i - 'Int_t' 0 - btn "
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnElementDblClicked",1864,G__G__SessionViewer_313_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TGLVEntry' - 0 - entry i - 'Int_t' 0 - btn "
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveAll",903,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SessionViewer_313_0_8, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSessionOutputFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_313_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionOutputFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_313_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSessionOutputFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_313_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSessionOutputFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_313_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_313_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionOutputFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_313_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSessionOutputFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_313_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionOutputFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_313_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSessionOutputFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSessionOutputFrame", 2098, G__G__SessionViewer_313_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSessionInputFrame(void) {
   /* TSessionInputFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionInputFrame));
   G__memfunc_setup("TSessionInputFrame",1843,G__G__SessionViewer_314_0_1, 105, G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionInputFrame), -1, 0, 3, 1, 1, 0, 
"U 'TGWindow' - 0 - parent i - 'Int_t' 0 - w "
"i - 'Int_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddObject",864,G__G__SessionViewer_314_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,G__G__SessionViewer_314_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSessionViewer' - 0 - gui", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveAll",903,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLVContainer",1381,G__G__SessionViewer_314_0_5, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TGLVContainer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__SessionViewer_314_0_6, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSessionInputFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_314_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionInputFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_314_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSessionInputFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_314_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSessionInputFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_314_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_314_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionInputFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_314_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSessionInputFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_314_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSessionInputFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_314_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSessionInputFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSessionInputFrame", 1969, G__G__SessionViewer_314_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTNewChainDlg(void) {
   /* TNewChainDlg */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewChainDlg));
   G__memfunc_setup("TNewChainDlg",1144,G__G__SessionViewer_316_0_1, 105, G__get_linked_tagnum(&G__G__SessionViewerLN_TNewChainDlg), -1, 0, 2, 1, 1, 0, 
"U 'TGWindow' - 10 '0' p U 'TGWindow' - 10 '0' main", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateList",1023,G__G__SessionViewer_316_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnDoubleClick",1278,G__G__SessionViewer_316_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGLVEntry' - 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DisplayDirectory",1675,G__G__SessionViewer_316_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - fname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OnElementClicked",1590,G__G__SessionViewer_316_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGLVEntry' - 0 - entry i - 'Int_t' 0 - btn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnElementSelected",1712,G__G__SessionViewer_316_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", "*SIGNAL*", (void*) NULL, 0);
   G__memfunc_setup("ProcessMessage",1444,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SessionViewer_316_0_9, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TNewChainDlg::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_316_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TNewChainDlg::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_316_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TNewChainDlg::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_316_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TNewChainDlg::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_316_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_316_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TNewChainDlg::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_316_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TNewChainDlg::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_316_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TNewChainDlg::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_316_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TNewChainDlg::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TNewChainDlg", 1270, G__G__SessionViewer_316_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTNewQueryDlg(void) {
   /* TNewQueryDlg */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewQueryDlg));
   G__memfunc_setup("TNewQueryDlg",1195,G__G__SessionViewer_317_0_1, 105, G__get_linked_tagnum(&G__G__SessionViewerLN_TNewQueryDlg), -1, 0, 5, 1, 1, 0, 
"U 'TSessionViewer' - 0 - gui i - 'Int_t' 0 - Width "
"i - 'Int_t' 0 - Height U 'TQueryDescription' - 0 '0' query "
"g - 'Bool_t' 0 'kFALSE' editmode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,G__G__SessionViewer_317_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSessionViewer' - 0 - gui", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnNewQueryMore",1424,G__G__SessionViewer_317_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBrowseChain",1298,G__G__SessionViewer_317_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBrowseSelector",1648,G__G__SessionViewer_317_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBrowseEventList",1741,G__G__SessionViewer_317_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnSaveClicked",1567,G__G__SessionViewer_317_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnCloseClicked",1670,G__G__SessionViewer_317_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBtnSubmitClicked",1796,G__G__SessionViewer_317_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnElementSelected",1712,G__G__SessionViewer_317_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Popup",532,G__G__SessionViewer_317_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SettingsChanged",1531,G__G__SessionViewer_317_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateFields",1210,G__G__SessionViewer_317_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TQueryDescription' - 0 - desc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessMessage",1444,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SessionViewer_317_0_16, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TNewQueryDlg::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_317_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TNewQueryDlg::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_317_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TNewQueryDlg::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_317_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TNewQueryDlg::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_317_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_317_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TNewQueryDlg::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_317_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TNewQueryDlg::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_317_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TNewQueryDlg::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_317_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TNewQueryDlg::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TNewQueryDlg", 1321, G__G__SessionViewer_317_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTUploadDataSetDlg(void) {
   /* TUploadDataSetDlg */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TUploadDataSetDlg));
   G__memfunc_setup("TUploadDataSetDlg",1654,G__G__SessionViewer_318_0_1, 105, G__get_linked_tagnum(&G__G__SessionViewerLN_TUploadDataSetDlg), -1, 0, 3, 1, 1, 0, 
"U 'TSessionViewer' - 0 - gui i - 'Int_t' 0 - w "
"i - 'Int_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessMessage",1444,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddFiles",764,G__G__SessionViewer_318_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFiles",764,G__G__SessionViewer_318_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - fileList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BrowseFiles",1125,G__G__SessionViewer_318_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearFiles",986,G__G__SessionViewer_318_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveFile",1006,G__G__SessionViewer_318_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UploadDataSet",1291,G__G__SessionViewer_318_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnOverwriteDataset",1866,G__G__SessionViewer_318_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnOverwriteFiles",1655,G__G__SessionViewer_318_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnAppendFiles",1288,G__G__SessionViewer_318_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__SessionViewer_318_0_13, 85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TUploadDataSetDlg::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SessionViewer_318_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TUploadDataSetDlg::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SessionViewer_318_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TUploadDataSetDlg::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SessionViewer_318_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TUploadDataSetDlg::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SessionViewerLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SessionViewer_318_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SessionViewer_318_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TUploadDataSetDlg::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SessionViewer_318_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TUploadDataSetDlg::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SessionViewer_318_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TUploadDataSetDlg::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SessionViewer_318_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TUploadDataSetDlg::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TUploadDataSetDlg", 1780, G__G__SessionViewer_318_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__SessionViewer() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
   G__memvar_setup((void*)(&gSessionViewer),85,0,0,G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),-1,-1,1,"gSessionViewer=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__SessionViewer() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__SessionViewer() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__SessionViewerLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TTimer = { "TTimer" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TTime = { "TTime" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGTransientFrame = { "TGTransientFrame" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGProgressBar = { "TGProgressBar" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGTextButton = { "TGTextButton" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGCheckButton = { "TGCheckButton" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGLabel = { "TGLabel" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGTextBuffer = { "TGTextBuffer" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGTextEntry = { "TGTextEntry" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TProof = { "TProof" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TProofProgressLog = { "TProofProgressLog" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TProofProgressMemoryPlot = { "TProofProgressMemoryPlot" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TNtuple = { "TNtuple" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGSpeedo = { "TGSpeedo" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TProofProgressDialog = { "TProofProgressDialog" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TProofProgressDialogcLcLEQueryStatus = { "TProofProgressDialog::EQueryStatus" , 101 , -1 };
G__linked_taginfo G__G__SessionViewerLN_Event_t = { "Event_t" , 115 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGPicture = { "TGPicture" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGLayoutHints = { "TGLayoutHints" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGVerticalFrame = { "TGVerticalFrame" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGHorizontalFrame = { "TGHorizontalFrame" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGTextView = { "TGTextView" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TProofLog = { "TProofLog" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGNumberEntry = { "TGNumberEntry" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGListBox = { "TGListBox" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGSplitButton = { "TGSplitButton" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TProofProgressLogcLcLETextType = { "TProofProgressLog::ETextType" , 101 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TRootEmbeddedCanvas = { "TRootEmbeddedCanvas" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TMultiGraph = { "TMultiGraph" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TProofLogElem = { "TProofLogElem" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGPopupMenu = { "TGPopupMenu" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGTab = { "TGTab" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGCanvas = { "TGCanvas" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGListView = { "TGListView" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGLVContainer = { "TGLVContainer" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGLVEntry = { "TGLVEntry" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGIcon = { "TGIcon" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGHProgressBar = { "TGHProgressBar" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGListTree = { "TGListTree" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGListTreeItem = { "TGListTreeItem" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGStatusBar = { "TGStatusBar" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGMenuBar = { "TGMenuBar" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGToolBar = { "TGToolBar" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TEnv = { "TEnv" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_UserGroup_t = { "UserGroup_t" , 115 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TProofMgr = { "TProofMgr" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TSessionViewer = { "TSessionViewer" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TSessionLogView = { "TSessionLogView" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TQueryResult = { "TQueryResult" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TContextMenu = { "TContextMenu" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TQueryDescription = { "TQueryDescription" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TQueryDescriptioncLcLESessionQueryStatus = { "TQueryDescription::ESessionQueryStatus" , 101 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TSessionDescription = { "TSessionDescription" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TPackageDescription = { "TPackageDescription" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TSessionServerFrame = { "TSessionServerFrame" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TSessionFrame = { "TSessionFrame" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TEditQueryFrame = { "TEditQueryFrame" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TSessionQueryFrame = { "TSessionQueryFrame" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TSessionQueryFramecLcLEQueryStatus = { "TSessionQueryFrame::EQueryStatus" , 101 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TSessionOutputFrame = { "TSessionOutputFrame" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TSessionInputFrame = { "TSessionInputFrame" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TGFileContainer = { "TGFileContainer" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TNewChainDlg = { "TNewChainDlg" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TNewQueryDlg = { "TNewQueryDlg" , 99 , -1 };
G__linked_taginfo G__G__SessionViewerLN_TUploadDataSetDlg = { "TUploadDataSetDlg" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__SessionViewer() {
  G__G__SessionViewerLN_TClass.tagnum = -1 ;
  G__G__SessionViewerLN_TBuffer.tagnum = -1 ;
  G__G__SessionViewerLN_TMemberInspector.tagnum = -1 ;
  G__G__SessionViewerLN_TObject.tagnum = -1 ;
  G__G__SessionViewerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__SessionViewerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__SessionViewerLN_TList.tagnum = -1 ;
  G__G__SessionViewerLN_TTimer.tagnum = -1 ;
  G__G__SessionViewerLN_TString.tagnum = -1 ;
  G__G__SessionViewerLN_TTime.tagnum = -1 ;
  G__G__SessionViewerLN_TGTransientFrame.tagnum = -1 ;
  G__G__SessionViewerLN_TGProgressBar.tagnum = -1 ;
  G__G__SessionViewerLN_TGTextButton.tagnum = -1 ;
  G__G__SessionViewerLN_TGCheckButton.tagnum = -1 ;
  G__G__SessionViewerLN_TGLabel.tagnum = -1 ;
  G__G__SessionViewerLN_TGTextBuffer.tagnum = -1 ;
  G__G__SessionViewerLN_TGTextEntry.tagnum = -1 ;
  G__G__SessionViewerLN_TProof.tagnum = -1 ;
  G__G__SessionViewerLN_TProofProgressLog.tagnum = -1 ;
  G__G__SessionViewerLN_TProofProgressMemoryPlot.tagnum = -1 ;
  G__G__SessionViewerLN_TNtuple.tagnum = -1 ;
  G__G__SessionViewerLN_TGraph.tagnum = -1 ;
  G__G__SessionViewerLN_TGSpeedo.tagnum = -1 ;
  G__G__SessionViewerLN_TProofProgressDialog.tagnum = -1 ;
  G__G__SessionViewerLN_TProofProgressDialogcLcLEQueryStatus.tagnum = -1 ;
  G__G__SessionViewerLN_Event_t.tagnum = -1 ;
  G__G__SessionViewerLN_TGObject.tagnum = -1 ;
  G__G__SessionViewerLN_TQObject.tagnum = -1 ;
  G__G__SessionViewerLN_TGWindow.tagnum = -1 ;
  G__G__SessionViewerLN_TGPicture.tagnum = -1 ;
  G__G__SessionViewerLN_TGFrame.tagnum = -1 ;
  G__G__SessionViewerLN_TGCompositeFrame.tagnum = -1 ;
  G__G__SessionViewerLN_TGLayoutHints.tagnum = -1 ;
  G__G__SessionViewerLN_TSeqCollection.tagnum = -1 ;
  G__G__SessionViewerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__SessionViewerLN_TGVerticalFrame.tagnum = -1 ;
  G__G__SessionViewerLN_TGHorizontalFrame.tagnum = -1 ;
  G__G__SessionViewerLN_TGMainFrame.tagnum = -1 ;
  G__G__SessionViewerLN_TGTextView.tagnum = -1 ;
  G__G__SessionViewerLN_TProofLog.tagnum = -1 ;
  G__G__SessionViewerLN_TGNumberEntry.tagnum = -1 ;
  G__G__SessionViewerLN_TGListBox.tagnum = -1 ;
  G__G__SessionViewerLN_TGSplitButton.tagnum = -1 ;
  G__G__SessionViewerLN_TProofProgressLogcLcLETextType.tagnum = -1 ;
  G__G__SessionViewerLN_TRootEmbeddedCanvas.tagnum = -1 ;
  G__G__SessionViewerLN_TMultiGraph.tagnum = -1 ;
  G__G__SessionViewerLN_TProofLogElem.tagnum = -1 ;
  G__G__SessionViewerLN_TGPopupMenu.tagnum = -1 ;
  G__G__SessionViewerLN_TGTab.tagnum = -1 ;
  G__G__SessionViewerLN_TGCanvas.tagnum = -1 ;
  G__G__SessionViewerLN_TGListView.tagnum = -1 ;
  G__G__SessionViewerLN_TGLVContainer.tagnum = -1 ;
  G__G__SessionViewerLN_TGLVEntry.tagnum = -1 ;
  G__G__SessionViewerLN_TGIcon.tagnum = -1 ;
  G__G__SessionViewerLN_TGHProgressBar.tagnum = -1 ;
  G__G__SessionViewerLN_TGListTree.tagnum = -1 ;
  G__G__SessionViewerLN_TGListTreeItem.tagnum = -1 ;
  G__G__SessionViewerLN_TGStatusBar.tagnum = -1 ;
  G__G__SessionViewerLN_TGMenuBar.tagnum = -1 ;
  G__G__SessionViewerLN_TGToolBar.tagnum = -1 ;
  G__G__SessionViewerLN_TCanvas.tagnum = -1 ;
  G__G__SessionViewerLN_TEnv.tagnum = -1 ;
  G__G__SessionViewerLN_UserGroup_t.tagnum = -1 ;
  G__G__SessionViewerLN_TProofMgr.tagnum = -1 ;
  G__G__SessionViewerLN_TSessionViewer.tagnum = -1 ;
  G__G__SessionViewerLN_TSessionLogView.tagnum = -1 ;
  G__G__SessionViewerLN_TQueryResult.tagnum = -1 ;
  G__G__SessionViewerLN_TContextMenu.tagnum = -1 ;
  G__G__SessionViewerLN_TQueryDescription.tagnum = -1 ;
  G__G__SessionViewerLN_TQueryDescriptioncLcLESessionQueryStatus.tagnum = -1 ;
  G__G__SessionViewerLN_TSessionDescription.tagnum = -1 ;
  G__G__SessionViewerLN_TPackageDescription.tagnum = -1 ;
  G__G__SessionViewerLN_TSessionServerFrame.tagnum = -1 ;
  G__G__SessionViewerLN_TSessionFrame.tagnum = -1 ;
  G__G__SessionViewerLN_TEditQueryFrame.tagnum = -1 ;
  G__G__SessionViewerLN_TSessionQueryFrame.tagnum = -1 ;
  G__G__SessionViewerLN_TSessionQueryFramecLcLEQueryStatus.tagnum = -1 ;
  G__G__SessionViewerLN_TSessionOutputFrame.tagnum = -1 ;
  G__G__SessionViewerLN_TSessionInputFrame.tagnum = -1 ;
  G__G__SessionViewerLN_TGFileContainer.tagnum = -1 ;
  G__G__SessionViewerLN_TNewChainDlg.tagnum = -1 ;
  G__G__SessionViewerLN_TNewQueryDlg.tagnum = -1 ;
  G__G__SessionViewerLN_TUploadDataSetDlg.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__SessionViewer() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TList);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TTimer);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TString);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TTime);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGTransientFrame);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGProgressBar);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGTextButton);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGCheckButton);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGLabel);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGTextBuffer);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGTextEntry);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TProof);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressLog),sizeof(TProofProgressLog),-1,324864,"Class implementing a log graphic box",G__setup_memvarTProofProgressLog,G__setup_memfuncTProofProgressLog);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressMemoryPlot),sizeof(TProofProgressMemoryPlot),-1,324608,"PROOF progress memory plots",G__setup_memvarTProofProgressMemoryPlot,G__setup_memfuncTProofProgressMemoryPlot);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TNtuple);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGraph);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGSpeedo);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TProofProgressDialog),sizeof(TProofProgressDialog),-1,295936,"PROOF progress dialog",G__setup_memvarTProofProgressDialog,G__setup_memfuncTProofProgressDialog);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TProofProgressDialogcLcLEQueryStatus);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_Event_t);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGObject);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TQObject);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGPicture);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGLayoutHints);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TSeqCollection);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGVerticalFrame);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGHorizontalFrame);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGTextView);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TProofLog);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGNumberEntry);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGListBox);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGSplitButton);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TProofProgressLogcLcLETextType);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TRootEmbeddedCanvas);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TMultiGraph);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TProofLogElem);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGPopupMenu);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGTab);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGCanvas);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGListView);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGLVContainer);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGLVEntry);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGIcon);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGHProgressBar);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGListTree);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGListTreeItem);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGStatusBar);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGMenuBar);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGToolBar);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TEnv);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_UserGroup_t);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TProofMgr);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionViewer),sizeof(TSessionViewer),-1,324864,"Session Viewer",G__setup_memvarTSessionViewer,G__setup_memfuncTSessionViewer);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionLogView),sizeof(TSessionLogView),-1,324608,"PROOF progress dialog",G__setup_memvarTSessionLogView,G__setup_memfuncTSessionLogView);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TQueryResult);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TContextMenu);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TQueryDescription),sizeof(TQueryDescription),-1,290816,"Query description",G__setup_memvarTQueryDescription,G__setup_memfuncTQueryDescription);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TQueryDescriptioncLcLESessionQueryStatus);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionDescription),sizeof(TSessionDescription),-1,290816,"Session description",G__setup_memvarTSessionDescription,G__setup_memfuncTSessionDescription);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TPackageDescription),sizeof(TPackageDescription),-1,290816,"Package description",G__setup_memvarTPackageDescription,G__setup_memfuncTPackageDescription);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionServerFrame),sizeof(TSessionServerFrame),-1,324608,"Server frame",G__setup_memvarTSessionServerFrame,G__setup_memfuncTSessionServerFrame);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionFrame),sizeof(TSessionFrame),-1,324608,"Session frame",G__setup_memvarTSessionFrame,G__setup_memfuncTSessionFrame);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TEditQueryFrame),sizeof(TEditQueryFrame),-1,324608,"Edit query frame",G__setup_memvarTEditQueryFrame,G__setup_memfuncTEditQueryFrame);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionQueryFrame),sizeof(TSessionQueryFrame),-1,324608,"Query frame",G__setup_memvarTSessionQueryFrame,G__setup_memfuncTSessionQueryFrame);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TSessionQueryFramecLcLEQueryStatus);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionOutputFrame),sizeof(TSessionOutputFrame),-1,324608,"Output frame",G__setup_memvarTSessionOutputFrame,G__setup_memfuncTSessionOutputFrame);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TSessionInputFrame),sizeof(TSessionInputFrame),-1,324608,"Input frame",G__setup_memvarTSessionInputFrame,G__setup_memfuncTSessionInputFrame);
   G__get_linked_tagnum_fwd(&G__G__SessionViewerLN_TGFileContainer);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewChainDlg),sizeof(TNewChainDlg),-1,324864,"New chain dialog",G__setup_memvarTNewChainDlg,G__setup_memfuncTNewChainDlg);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TNewQueryDlg),sizeof(TNewQueryDlg),-1,324608,"New query dialog",G__setup_memvarTNewQueryDlg,G__setup_memfuncTNewQueryDlg);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SessionViewerLN_TUploadDataSetDlg),sizeof(TUploadDataSetDlg),-1,324608,"New query dialog",G__setup_memvarTUploadDataSetDlg,G__setup_memfuncTUploadDataSetDlg);
}
extern "C" void G__cpp_setupG__SessionViewer(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__SessionViewer()");
  G__set_cpp_environmentG__SessionViewer();
  G__cpp_setup_tagtableG__SessionViewer();

  G__cpp_setup_inheritanceG__SessionViewer();

  G__cpp_setup_typetableG__SessionViewer();

  G__cpp_setup_memvarG__SessionViewer();

  G__cpp_setup_memfuncG__SessionViewer();
  G__cpp_setup_globalG__SessionViewer();
  G__cpp_setup_funcG__SessionViewer();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__SessionViewer();
  return;
}
class G__cpp_setup_initG__SessionViewer {
  public:
    G__cpp_setup_initG__SessionViewer() { G__add_setup_func("G__SessionViewer",(G__incsetup)(&G__cpp_setupG__SessionViewer)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__SessionViewer() { G__remove_setup_func("G__SessionViewer"); }
};
G__cpp_setup_initG__SessionViewer G__cpp_setup_initializerG__SessionViewer;

