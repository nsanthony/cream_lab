//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:49:28 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__MySQL.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TMySQLResult_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TMySQLResult(void *p);
   static void deleteArray_TMySQLResult(void *p);
   static void destruct_TMySQLResult(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMySQLResult*)
   {
      ::TMySQLResult *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMySQLResult >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMySQLResult", ::TMySQLResult::Class_Version(), "include/TMySQLResult.h", 32,
                  typeid(::TMySQLResult), DefineBehavior(ptr, ptr),
                  &::TMySQLResult::Dictionary, isa_proxy, 0,
                  sizeof(::TMySQLResult) );
      instance.SetDelete(&delete_TMySQLResult);
      instance.SetDeleteArray(&deleteArray_TMySQLResult);
      instance.SetDestructor(&destruct_TMySQLResult);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMySQLResult*)
   {
      return GenerateInitInstanceLocal((::TMySQLResult*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMySQLResult*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMySQLRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TMySQLRow(void *p);
   static void deleteArray_TMySQLRow(void *p);
   static void destruct_TMySQLRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMySQLRow*)
   {
      ::TMySQLRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMySQLRow >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMySQLRow", ::TMySQLRow::Class_Version(), "include/TMySQLRow.h", 32,
                  typeid(::TMySQLRow), DefineBehavior(ptr, ptr),
                  &::TMySQLRow::Dictionary, isa_proxy, 0,
                  sizeof(::TMySQLRow) );
      instance.SetDelete(&delete_TMySQLRow);
      instance.SetDeleteArray(&deleteArray_TMySQLRow);
      instance.SetDestructor(&destruct_TMySQLRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMySQLRow*)
   {
      return GenerateInitInstanceLocal((::TMySQLRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMySQLRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMySQLServer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TMySQLServer(void *p);
   static void deleteArray_TMySQLServer(void *p);
   static void destruct_TMySQLServer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMySQLServer*)
   {
      ::TMySQLServer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMySQLServer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMySQLServer", ::TMySQLServer::Class_Version(), "include/TMySQLServer.h", 64,
                  typeid(::TMySQLServer), DefineBehavior(ptr, ptr),
                  &::TMySQLServer::Dictionary, isa_proxy, 0,
                  sizeof(::TMySQLServer) );
      instance.SetDelete(&delete_TMySQLServer);
      instance.SetDeleteArray(&deleteArray_TMySQLServer);
      instance.SetDestructor(&destruct_TMySQLServer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMySQLServer*)
   {
      return GenerateInitInstanceLocal((::TMySQLServer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMySQLServer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMySQLStatement_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TMySQLStatement(void *p);
   static void deleteArray_TMySQLStatement(void *p);
   static void destruct_TMySQLStatement(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMySQLStatement*)
   {
      ::TMySQLStatement *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMySQLStatement >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMySQLStatement", ::TMySQLStatement::Class_Version(), "include/TMySQLStatement.h", 38,
                  typeid(::TMySQLStatement), DefineBehavior(ptr, ptr),
                  &::TMySQLStatement::Dictionary, isa_proxy, 0,
                  sizeof(::TMySQLStatement) );
      instance.SetDelete(&delete_TMySQLStatement);
      instance.SetDeleteArray(&deleteArray_TMySQLStatement);
      instance.SetDestructor(&destruct_TMySQLStatement);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMySQLStatement*)
   {
      return GenerateInitInstanceLocal((::TMySQLStatement*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMySQLStatement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TMySQLResult::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMySQLResult::Class_Name()
{
   return "TMySQLResult";
}

//______________________________________________________________________________
const char *TMySQLResult::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMySQLResult*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMySQLResult::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMySQLResult*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMySQLResult::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMySQLResult*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMySQLResult::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMySQLResult*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMySQLRow::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMySQLRow::Class_Name()
{
   return "TMySQLRow";
}

//______________________________________________________________________________
const char *TMySQLRow::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMySQLRow*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMySQLRow::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMySQLRow*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMySQLRow::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMySQLRow*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMySQLRow::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMySQLRow*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMySQLServer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMySQLServer::Class_Name()
{
   return "TMySQLServer";
}

//______________________________________________________________________________
const char *TMySQLServer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMySQLServer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMySQLServer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMySQLServer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMySQLServer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMySQLServer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMySQLServer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMySQLServer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMySQLStatement::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMySQLStatement::Class_Name()
{
   return "TMySQLStatement";
}

//______________________________________________________________________________
const char *TMySQLStatement::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMySQLStatement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMySQLStatement::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMySQLStatement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMySQLStatement::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMySQLStatement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMySQLStatement::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMySQLStatement*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TMySQLServer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMySQLServer.

   TSQLServer::Streamer(R__b);
}

//______________________________________________________________________________
void TMySQLServer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMySQLServer.
      TClass *R__cl = ::TMySQLServer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMySQL", &fMySQL);
      R__insp.Inspect(R__cl, R__parent, "fInfo", &fInfo);
      fInfo.ShowMembers(R__insp, strcat(R__parent,"fInfo.")); R__parent[R__ncp] = 0;
      TSQLServer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TMySQLServer(void *p) {
      delete ((::TMySQLServer*)p);
   }
   static void deleteArray_TMySQLServer(void *p) {
      delete [] ((::TMySQLServer*)p);
   }
   static void destruct_TMySQLServer(void *p) {
      typedef ::TMySQLServer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMySQLServer

//______________________________________________________________________________
void TMySQLResult::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMySQLResult.

   TSQLResult::Streamer(R__b);
}

//______________________________________________________________________________
void TMySQLResult::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMySQLResult.
      TClass *R__cl = ::TMySQLResult::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fResult", &fResult);
      R__insp.Inspect(R__cl, R__parent, "*fFieldInfo", &fFieldInfo);
      TSQLResult::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TMySQLResult(void *p) {
      delete ((::TMySQLResult*)p);
   }
   static void deleteArray_TMySQLResult(void *p) {
      delete [] ((::TMySQLResult*)p);
   }
   static void destruct_TMySQLResult(void *p) {
      typedef ::TMySQLResult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMySQLResult

//______________________________________________________________________________
void TMySQLRow::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMySQLRow.

   TSQLRow::Streamer(R__b);
}

//______________________________________________________________________________
void TMySQLRow::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMySQLRow.
      TClass *R__cl = ::TMySQLRow::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fResult", &fResult);
      R__insp.Inspect(R__cl, R__parent, "*fFields", &fFields);
      R__insp.Inspect(R__cl, R__parent, "*fFieldLength", &fFieldLength);
      TSQLRow::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TMySQLRow(void *p) {
      delete ((::TMySQLRow*)p);
   }
   static void deleteArray_TMySQLRow(void *p) {
      delete [] ((::TMySQLRow*)p);
   }
   static void destruct_TMySQLRow(void *p) {
      typedef ::TMySQLRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMySQLRow

//______________________________________________________________________________
void TMySQLStatement::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMySQLStatement.

   TSQLStatement::Streamer(R__b);
}

//______________________________________________________________________________
void TMySQLStatement::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMySQLStatement.
      TClass *R__cl = ::TMySQLStatement::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fStmt", &fStmt);
      R__insp.Inspect(R__cl, R__parent, "fNumBuffers", &fNumBuffers);
      R__insp.Inspect(R__cl, R__parent, "*fBind", &fBind);
      R__insp.Inspect(R__cl, R__parent, "*fBuffer", &fBuffer);
      R__insp.Inspect(R__cl, R__parent, "fWorkingMode", &fWorkingMode);
      R__insp.Inspect(R__cl, R__parent, "fIterationCount", &fIterationCount);
      R__insp.Inspect(R__cl, R__parent, "fNeedParBind", &fNeedParBind);
      TSQLStatement::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TMySQLStatement(void *p) {
      delete ((::TMySQLStatement*)p);
   }
   static void deleteArray_TMySQLStatement(void *p) {
      delete [] ((::TMySQLStatement*)p);
   }
   static void destruct_TMySQLStatement(void *p) {
      typedef ::TMySQLStatement current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMySQLStatement

/********************************************************
* sql/mysql/src/G__MySQL.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__MySQL();

extern "C" void G__set_cpp_environmentG__MySQL() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TMySQLResult.h");
  G__add_compiledheader("TMySQLRow.h");
  G__add_compiledheader("TMySQLServer.h");
  G__add_compiledheader("TMySQLStatement.h");
  G__cpp_reset_tagtableG__MySQL();
}
#include <new>
extern "C" int G__cpp_dllrevG__MySQL() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TMySQLResult */
static int G__G__MySQL_99_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMySQLResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMySQLResult((void*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TMySQLResult((void*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_99_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMySQLResult::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_99_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMySQLResult::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_99_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMySQLResult::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_99_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMySQLResult::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_99_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMySQLResult*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_99_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMySQLResult::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_99_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMySQLResult::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_99_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMySQLResult::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_99_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMySQLResult::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MySQL_99_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMySQLResult* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMySQLResult(*(TMySQLResult*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMySQLResult G__TTMySQLResult;
static int G__G__MySQL_99_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMySQLResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMySQLResult*) (soff+(sizeof(TMySQLResult)*i)))->~G__TTMySQLResult();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMySQLResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMySQLResult*) (soff))->~G__TTMySQLResult();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MySQL_99_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMySQLResult* dest = (TMySQLResult*) G__getstructoffset();
   *dest = *(TMySQLResult*) libp->para[0].ref;
   const TMySQLResult& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMySQLRow */
static int G__G__MySQL_100_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMySQLRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMySQLRow((void*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TMySQLRow((void*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_100_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMySQLRow::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_100_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMySQLRow::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_100_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMySQLRow::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_100_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMySQLRow::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_100_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMySQLRow*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_100_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMySQLRow::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_100_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMySQLRow::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_100_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMySQLRow::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_100_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMySQLRow::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MySQL_100_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMySQLRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMySQLRow(*(TMySQLRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMySQLRow G__TTMySQLRow;
static int G__G__MySQL_100_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMySQLRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMySQLRow*) (soff+(sizeof(TMySQLRow)*i)))->~G__TTMySQLRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMySQLRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMySQLRow*) (soff))->~G__TTMySQLRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MySQL_100_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMySQLRow* dest = (TMySQLRow*) G__getstructoffset();
   *dest = *(TMySQLRow*) libp->para[0].ref;
   const TMySQLRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMySQLServer */
static int G__G__MySQL_117_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMySQLServer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMySQLServer(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TMySQLServer(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_117_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMySQLServer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_117_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMySQLServer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_117_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMySQLServer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_117_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMySQLServer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_117_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMySQLServer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_117_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMySQLServer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_117_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMySQLServer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_117_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMySQLServer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_117_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMySQLServer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MySQL_117_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMySQLServer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMySQLServer(*(TMySQLServer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMySQLServer G__TTMySQLServer;
static int G__G__MySQL_117_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMySQLServer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMySQLServer*) (soff+(sizeof(TMySQLServer)*i)))->~G__TTMySQLServer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMySQLServer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMySQLServer*) (soff))->~G__TTMySQLServer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MySQL_117_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMySQLServer* dest = (TMySQLServer*) G__getstructoffset();
   *dest = *(TMySQLServer*) libp->para[0].ref;
   const TMySQLServer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMySQLStatement */
static int G__G__MySQL_121_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMySQLStatement* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMySQLStatement((MYSQL_STMT*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TMySQLStatement((MYSQL_STMT*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMySQLStatement((MYSQL_STMT*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TMySQLStatement((MYSQL_STMT*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MySQLLN_TMySQLStatement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_121_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) TMySQLStatement::GetAllocSizeLimit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_121_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMySQLStatement::SetAllocSizeLimit((unsigned long) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_121_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TMySQLStatement*) G__getstructoffset())->Close((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TMySQLStatement*) G__getstructoffset())->Close();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_121_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMySQLStatement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_121_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMySQLStatement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_121_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMySQLStatement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_121_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMySQLStatement::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_121_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMySQLStatement*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_121_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMySQLStatement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_121_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMySQLStatement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_121_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMySQLStatement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_121_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMySQLStatement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MySQL_121_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMySQLStatement* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMySQLStatement(*(TMySQLStatement*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MySQLLN_TMySQLStatement));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMySQLStatement G__TTMySQLStatement;
static int G__G__MySQL_121_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMySQLStatement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMySQLStatement*) (soff+(sizeof(TMySQLStatement)*i)))->~G__TTMySQLStatement();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMySQLStatement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMySQLStatement*) (soff))->~G__TTMySQLStatement();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MySQL_121_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMySQLStatement* dest = (TMySQLStatement*) G__getstructoffset();
   *dest = *(TMySQLStatement*) libp->para[0].ref;
   const TMySQLStatement& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TMySQLResult */

/* TMySQLRow */

/* TMySQLServer */

/* TMySQLStatement */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__MySQL {
 public:
  G__Sizep2memfuncG__MySQL(): p(&G__Sizep2memfuncG__MySQL::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__MySQL::*p)();
};

size_t G__get_sizep2memfuncG__MySQL()
{
  G__Sizep2memfuncG__MySQL a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__MySQL() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult))) {
     TMySQLResult *G__Lderived;
     G__Lderived=(TMySQLResult*)0x1000;
     {
       TSQLResult *G__Lpbase=(TSQLResult*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult),G__get_linked_tagnum(&G__G__MySQLLN_TSQLResult),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult),G__get_linked_tagnum(&G__G__MySQLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow))) {
     TMySQLRow *G__Lderived;
     G__Lderived=(TMySQLRow*)0x1000;
     {
       TSQLRow *G__Lpbase=(TSQLRow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow),G__get_linked_tagnum(&G__G__MySQLLN_TSQLRow),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow),G__get_linked_tagnum(&G__G__MySQLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer))) {
     TMySQLServer *G__Lderived;
     G__Lderived=(TMySQLServer*)0x1000;
     {
       TSQLServer *G__Lpbase=(TSQLServer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer),G__get_linked_tagnum(&G__G__MySQLLN_TSQLServer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer),G__get_linked_tagnum(&G__G__MySQLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLStatement))) {
     TMySQLStatement *G__Lderived;
     G__Lderived=(TMySQLStatement*)0x1000;
     {
       TSQLStatement *G__Lpbase=(TSQLStatement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLStatement),G__get_linked_tagnum(&G__G__MySQLLN_TSQLStatement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLStatement),G__get_linked_tagnum(&G__G__MySQLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__MySQL() {

   /* Setting up typedef entry */
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 4 bytes (unsigned long)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__MySQLLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MySQLLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MySQLLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MySQLLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MySQLLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__MySQLLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TMySQLResult */
static void G__setup_memvarTMySQLResult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult));
   { TMySQLResult *p; p=(TMySQLResult*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_MYSQL_RES),-1,-1,4,"fResult=",0,"query result (rows)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_MYSQL_FIELD),-1,-1,4,"fFieldInfo=",0,"info for each field in the row");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMySQLRow */
static void G__setup_memvarTMySQLRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow));
   { TMySQLRow *p; p=(TMySQLRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_MYSQL_RES),-1,-1,4,"fResult=",0,"current result set");
   G__memvar_setup((void*)0,67,2,0,-1,G__defined_typename("MYSQL_ROW"),-1,4,"fFields=",0,"current row");
   G__memvar_setup((void*)0,75,0,0,-1,G__defined_typename("ULong_t"),-1,4,"fFieldLength=",0,"length of each field in the row");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMySQLServer */
static void G__setup_memvarTMySQLServer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer));
   { TMySQLServer *p; p=(TMySQLServer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_MYSQL),-1,-1,2,"fMySQL=",0,"connection to MySQL server");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MySQLLN_TString),-1,-1,2,"fInfo=",0,"server info string");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMySQLStatement */
static void G__setup_memvarTMySQLStatement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLStatement));
   { TMySQLStatement *p; p=(TMySQLStatement*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_MYSQL_STMT),-1,-1,2,"fStmt=",0,"! executed statement");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumBuffers=",0,"! number of statement parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_MYSQL_BIND),-1,-1,2,"fBind=",0,"! array of bind data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_TMySQLStatementcLcLTParamData),-1,-1,2,"fBuffer=",0,"! parameter definition structures");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fWorkingMode=",0,"! 1 - setting parameters, 2 - retrieving results");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIterationCount=",0,"! number of iteration");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fNeedParBind=",0,"! indicates when parameters bind should be called");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-2,2,"fgAllocSizeLimit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__MySQL() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTMySQLResult(void) {
   /* TMySQLResult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult));
   G__memfunc_setup("IsValid",684,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "i - 'Int_t' 0 - field", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMySQLResult",1161,G__G__MySQL_99_0_2, 105, G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult), -1, 0, 1, 1, 1, 0, "Y - - 0 - result", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFieldCount",1293,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFieldName",1157,(G__InterfaceMethod) NULL,67, -1, -1, 0, 1, 1, 1, 1, "i - 'Int_t' 0 - field", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Next",415,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MySQLLN_TSQLRow), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__MySQL_99_0_7, 85, G__get_linked_tagnum(&G__G__MySQLLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMySQLResult::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MySQL_99_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMySQLResult::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MySQL_99_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMySQLResult::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MySQL_99_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMySQLResult::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MySQLLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MySQL_99_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MySQL_99_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMySQLResult::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MySQL_99_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMySQLResult::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MySQL_99_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMySQLResult::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MySQL_99_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMySQLResult::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMySQLResult", 1161, G__G__MySQL_99_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult), -1, 0, 1, 1, 1, 0, "u 'TMySQLResult' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMySQLResult", 1287, G__G__MySQL_99_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MySQL_99_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult), -1, 1, 1, 1, 1, 0, "u 'TMySQLResult' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMySQLRow(void) {
   /* TMySQLRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow));
   G__memfunc_setup("IsValid",684,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "i - 'Int_t' 0 - field", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMySQLRow",834,G__G__MySQL_100_0_2, 105, G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow), -1, 0, 2, 1, 1, 0, 
"Y - - 0 - result k - 'ULong_t' 0 - rowHandle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFieldLength",1382,(G__InterfaceMethod) NULL,107, -1, G__defined_typename("ULong_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - field", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetField",772,(G__InterfaceMethod) NULL,67, -1, -1, 0, 1, 1, 1, 1, "i - 'Int_t' 0 - field", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__MySQL_100_0_6, 85, G__get_linked_tagnum(&G__G__MySQLLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMySQLRow::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MySQL_100_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMySQLRow::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MySQL_100_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMySQLRow::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MySQL_100_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMySQLRow::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MySQLLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MySQL_100_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MySQL_100_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMySQLRow::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MySQL_100_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMySQLRow::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MySQL_100_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMySQLRow::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MySQL_100_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMySQLRow::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMySQLRow", 834, G__G__MySQL_100_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow), -1, 0, 1, 1, 1, 0, "u 'TMySQLRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMySQLRow", 960, G__G__MySQL_100_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MySQL_100_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow), -1, 1, 1, 1, 1, 0, "u 'TMySQLRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMySQLServer(void) {
   /* TMySQLServer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer));
   G__memfunc_setup("TMySQLServer",1153,G__G__MySQL_117_0_1, 105, G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer), -1, 0, 3, 1, 1, 0, 
"C - - 10 - db C - - 10 - uid "
"C - - 10 - pw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Query",534,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MySQLLN_TSQLResult), -1, 0, 1, 1, 1, 0, "C - - 10 - sql", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - sql", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Statement",949,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MySQLLN_TSQLStatement), -1, 0, 2, 1, 1, 0, 
"C - - 10 - sql i - 'Int_t' 0 '100' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HasStatement",1233,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SelectDataBase",1365,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - dbname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataBases",1160,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MySQLLN_TSQLResult), -1, 0, 1, 1, 1, 0, "C - - 10 '0' wild", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTables",891,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MySQLLN_TSQLResult), -1, 0, 2, 1, 1, 0, 
"C - - 10 - dbname C - - 10 '0' wild", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTablesList",1303,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MySQLLN_TList), -1, 0, 1, 1, 1, 0, "C - - 10 '0' wild", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTableInfo",1172,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MySQLLN_TSQLTableInfo), -1, 0, 1, 1, 1, 0, "C - - 10 - tablename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetColumns",1025,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MySQLLN_TSQLResult), -1, 0, 3, 1, 1, 0, 
"C - - 10 - dbname C - - 10 - table "
"C - - 10 '0' wild", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxIdentifierLength",2219,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateDataBase",1353,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - dbname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DropDataBase",1162,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - dbname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reload",599,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Shutdown",860,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ServerInfo",1027,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StartTransaction",1684,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Commit",617,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Rollback",810,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PingVerify",1027,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Ping",398,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__MySQL_117_0_24, 85, G__get_linked_tagnum(&G__G__MySQLLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMySQLServer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MySQL_117_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMySQLServer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MySQL_117_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMySQLServer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MySQL_117_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMySQLServer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MySQLLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MySQL_117_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MySQL_117_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMySQLServer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MySQL_117_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMySQLServer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MySQL_117_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMySQLServer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MySQL_117_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMySQLServer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMySQLServer", 1153, G__G__MySQL_117_0_36, (int) ('i'), G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer), -1, 0, 1, 1, 1, 0, "u 'TMySQLServer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMySQLServer", 1279, G__G__MySQL_117_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MySQL_117_0_38, (int) ('u'), G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer), -1, 1, 1, 1, 1, 0, "u 'TMySQLServer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMySQLStatement(void) {
   /* TMySQLStatement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLStatement));
   G__memfunc_setup("IsSetParsMode",1283,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsResultSetMode",1516,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSQLParamType",1455,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 2, 0, 
"i - 'Int_t' 0 - npar i - - 0 - sqltype "
"g - - 0 - sig k - - 0 '0' sqlsize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertToNumeric",1655,(G__InterfaceMethod) NULL, 113, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - npar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertToString",1563,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 1, 1, 2, 1, "i - 'Int_t' 0 - npar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FreeBuffers",1103,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBuffersNumber",1634,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BeforeSet",895,(G__InterfaceMethod) NULL, 89, -1, -1, 0, 5, 1, 2, 0, 
"C - - 10 - method i - 'Int_t' 0 - npar "
"i - 'Int_t' 0 - sqltype g - 'Bool_t' 0 'kTRUE' sig "
"k - - 0 '0' size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMySQLStatement",1471,G__G__MySQL_121_0_9, 105, G__get_linked_tagnum(&G__G__MySQLLN_TMySQLStatement), -1, 0, 2, 1, 1, 0, 
"U 'MYSQL_STMT' - 0 - stmt g - 'Bool_t' 0 'kTRUE' errout", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAllocSizeLimit",1701,G__G__MySQL_121_0_10, 107, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned long (*)())(&TMySQLStatement::GetAllocSizeLimit) ), 0);
   G__memfunc_setup("SetAllocSizeLimit",1713,G__G__MySQL_121_0_11, 121, -1, -1, 0, 1, 3, 1, 0, "k - - 0 - sz", (char*)NULL, (void*) G__func2void( (void (*)(unsigned long))(&TMySQLStatement::SetAllocSizeLimit) ), 0);
   G__memfunc_setup("Close",502,G__G__MySQL_121_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBufferLength",1500,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumParameters",1636,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNull",711,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - npar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInt",599,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - npar i - 'Int_t' 0 - value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUInt",684,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - npar h - 'UInt_t' 0 - value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLong",700,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - npar l - 'Long_t' 0 - value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLong64",806,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - npar n - 'Long64_t' 0 - value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetULong64",891,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - npar m - 'ULong64_t' 0 - value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDouble",903,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - npar d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetString",931,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - npar C - - 10 - value "
"i - 'Int_t' 0 '256' maxsize", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBinary",913,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - npar Y - - 0 - mem "
"l - 'Long_t' 0 - size l - 'Long_t' 0 '0x1000' maxsize", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDate",682,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - npar i - 'Int_t' 0 - year "
"i - 'Int_t' 0 - month i - 'Int_t' 0 - day", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime",699,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - npar i - 'Int_t' 0 - hour "
"i - 'Int_t' 0 - min i - 'Int_t' 0 - sec", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDatime",896,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - npar i - 'Int_t' 0 - year "
"i - 'Int_t' 0 - month i - 'Int_t' 0 - day "
"i - 'Int_t' 0 - hour i - 'Int_t' 0 - min "
"i - 'Int_t' 0 - sec", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTimestamp",1248,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - npar i - 'Int_t' 0 - year "
"i - 'Int_t' 0 - month i - 'Int_t' 0 - day "
"i - 'Int_t' 0 - hour i - 'Int_t' 0 - min "
"i - 'Int_t' 0 - sec i - 'Int_t' 0 '0' frac", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NextIteration",1358,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumAffectedRows",1805,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StoreResult",1164,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumFields",1191,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFieldName",1157,(G__InterfaceMethod) NULL,67, -1, -1, 0, 1, 1, 1, 1, "i - 'Int_t' 0 - nfield", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NextResultRow",1366,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsNull",599,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - npar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetInt",587,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - npar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUInt",672,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - npar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLong",688,(G__InterfaceMethod) NULL,108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - npar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLong64",794,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - npar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetULong64",879,(G__InterfaceMethod) NULL,109, -1, G__defined_typename("ULong64_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - npar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDouble",891,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - npar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetString",919,(G__InterfaceMethod) NULL,67, -1, -1, 0, 1, 1, 1, 1, "i - 'Int_t' 0 - npar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBinary",901,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - npar Y - - 1 - mem "
"l - 'Long_t' 1 - size", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDate",670,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - npar i - 'Int_t' 1 - year "
"i - 'Int_t' 1 - month i - 'Int_t' 1 - day", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTime",687,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - npar i - 'Int_t' 1 - hour "
"i - 'Int_t' 1 - min i - 'Int_t' 1 - sec", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDatime",884,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - npar i - 'Int_t' 1 - year "
"i - 'Int_t' 1 - month i - 'Int_t' 1 - day "
"i - 'Int_t' 1 - hour i - 'Int_t' 1 - min "
"i - 'Int_t' 1 - sec", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTimestamp",1236,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - npar i - 'Int_t' 1 - year "
"i - 'Int_t' 1 - month i - 'Int_t' 1 - day "
"i - 'Int_t' 1 - hour i - 'Int_t' 1 - min "
"i - 'Int_t' 1 - sec i - 'Int_t' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__MySQL_121_0_48, 85, G__get_linked_tagnum(&G__G__MySQLLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMySQLStatement::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MySQL_121_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMySQLStatement::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MySQL_121_0_50, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMySQLStatement::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MySQL_121_0_51, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMySQLStatement::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MySQLLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MySQL_121_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MySQL_121_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMySQLStatement::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MySQL_121_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMySQLStatement::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MySQL_121_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMySQLStatement::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MySQL_121_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMySQLStatement::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMySQLStatement", 1471, G__G__MySQL_121_0_60, (int) ('i'), G__get_linked_tagnum(&G__G__MySQLLN_TMySQLStatement), -1, 0, 1, 1, 1, 0, "u 'TMySQLStatement' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMySQLStatement", 1597, G__G__MySQL_121_0_61, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MySQL_121_0_62, (int) ('u'), G__get_linked_tagnum(&G__G__MySQLLN_TMySQLStatement), -1, 1, 1, 1, 1, 0, "u 'TMySQLStatement' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__MySQL() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__MySQL() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__MySQL() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__MySQLLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TSQLRow = { "TSQLRow" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TSQLResult = { "TSQLResult" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_MYSQL_RES = { "MYSQL_RES" , 115 , -1 };
G__linked_taginfo G__G__MySQLLN_MYSQL_FIELD = { "MYSQL_FIELD" , 115 , -1 };
G__linked_taginfo G__G__MySQLLN_TMySQLResult = { "TMySQLResult" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TMySQLRow = { "TMySQLRow" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TSQLStatement = { "TSQLStatement" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TSQLTableInfo = { "TSQLTableInfo" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TSQLServer = { "TSQLServer" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_MYSQL = { "MYSQL" , 115 , -1 };
G__linked_taginfo G__G__MySQLLN_TMySQLServer = { "TMySQLServer" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_MYSQL_STMT = { "MYSQL_STMT" , 115 , -1 };
G__linked_taginfo G__G__MySQLLN_MYSQL_BIND = { "MYSQL_BIND" , 115 , -1 };
G__linked_taginfo G__G__MySQLLN_TMySQLStatement = { "TMySQLStatement" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TMySQLStatementcLcLTParamData = { "TMySQLStatement::TParamData" , 115 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__MySQL() {
  G__G__MySQLLN_TClass.tagnum = -1 ;
  G__G__MySQLLN_TBuffer.tagnum = -1 ;
  G__G__MySQLLN_TMemberInspector.tagnum = -1 ;
  G__G__MySQLLN_TObject.tagnum = -1 ;
  G__G__MySQLLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__MySQLLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MySQLLN_TList.tagnum = -1 ;
  G__G__MySQLLN_TString.tagnum = -1 ;
  G__G__MySQLLN_TSQLRow.tagnum = -1 ;
  G__G__MySQLLN_TSQLResult.tagnum = -1 ;
  G__G__MySQLLN_MYSQL_RES.tagnum = -1 ;
  G__G__MySQLLN_MYSQL_FIELD.tagnum = -1 ;
  G__G__MySQLLN_TMySQLResult.tagnum = -1 ;
  G__G__MySQLLN_TMySQLRow.tagnum = -1 ;
  G__G__MySQLLN_TSQLStatement.tagnum = -1 ;
  G__G__MySQLLN_TSQLTableInfo.tagnum = -1 ;
  G__G__MySQLLN_TSQLServer.tagnum = -1 ;
  G__G__MySQLLN_MYSQL.tagnum = -1 ;
  G__G__MySQLLN_TMySQLServer.tagnum = -1 ;
  G__G__MySQLLN_MYSQL_STMT.tagnum = -1 ;
  G__G__MySQLLN_MYSQL_BIND.tagnum = -1 ;
  G__G__MySQLLN_TMySQLStatement.tagnum = -1 ;
  G__G__MySQLLN_TMySQLStatementcLcLTParamData.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__MySQL() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_TList);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_TString);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_TSQLRow);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_TSQLResult);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_MYSQL_RES);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_MYSQL_FIELD);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult),sizeof(TMySQLResult),-1,62464,"MySQL query result",G__setup_memvarTMySQLResult,G__setup_memfuncTMySQLResult);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow),sizeof(TMySQLRow),-1,62464,"One row of MySQL query result",G__setup_memvarTMySQLRow,G__setup_memfuncTMySQLRow);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_TSQLStatement);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_TSQLTableInfo);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_TSQLServer);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_MYSQL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer),sizeof(TMySQLServer),-1,62464,"Connection to MySQL server",G__setup_memvarTMySQLServer,G__setup_memfuncTMySQLServer);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_MYSQL_STMT);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_MYSQL_BIND);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLStatement),sizeof(TMySQLStatement),-1,62464,"SQL statement class for MySQL DB",G__setup_memvarTMySQLStatement,G__setup_memfuncTMySQLStatement);
   G__get_linked_tagnum_fwd(&G__G__MySQLLN_TMySQLStatementcLcLTParamData);
}
extern "C" void G__cpp_setupG__MySQL(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__MySQL()");
  G__set_cpp_environmentG__MySQL();
  G__cpp_setup_tagtableG__MySQL();

  G__cpp_setup_inheritanceG__MySQL();

  G__cpp_setup_typetableG__MySQL();

  G__cpp_setup_memvarG__MySQL();

  G__cpp_setup_memfuncG__MySQL();
  G__cpp_setup_globalG__MySQL();
  G__cpp_setup_funcG__MySQL();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__MySQL();
  return;
}
class G__cpp_setup_initG__MySQL {
  public:
    G__cpp_setup_initG__MySQL() { G__add_setup_func("G__MySQL",(G__incsetup)(&G__cpp_setupG__MySQL)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__MySQL() { G__remove_setup_func("G__MySQL"); }
};
G__cpp_setup_initG__MySQL G__cpp_setup_initializerG__MySQL;

