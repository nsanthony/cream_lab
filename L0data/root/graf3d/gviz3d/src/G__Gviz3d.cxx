//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:49:26 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__Gviz3d.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TStructNode_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TStructNode(void *p);
   static void deleteArray_TStructNode(void *p);
   static void destruct_TStructNode(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TStructNode*)
   {
      ::TStructNode *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TStructNode >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TStructNode", ::TStructNode::Class_Version(), "include/TStructNode.h", 34,
                  typeid(::TStructNode), DefineBehavior(ptr, ptr),
                  &::TStructNode::Dictionary, isa_proxy, 0,
                  sizeof(::TStructNode) );
      instance.SetDelete(&delete_TStructNode);
      instance.SetDeleteArray(&deleteArray_TStructNode);
      instance.SetDestructor(&destruct_TStructNode);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TStructNode*)
   {
      return GenerateInitInstanceLocal((::TStructNode*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TStructNode*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TStructNodeProperty_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TStructNodeProperty(void *p);
   static void deleteArray_TStructNodeProperty(void *p);
   static void destruct_TStructNodeProperty(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TStructNodeProperty*)
   {
      ::TStructNodeProperty *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TStructNodeProperty >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TStructNodeProperty", ::TStructNodeProperty::Class_Version(), "include/TStructNodeProperty.h", 19,
                  typeid(::TStructNodeProperty), DefineBehavior(ptr, ptr),
                  &::TStructNodeProperty::Dictionary, isa_proxy, 0,
                  sizeof(::TStructNodeProperty) );
      instance.SetDelete(&delete_TStructNodeProperty);
      instance.SetDeleteArray(&deleteArray_TStructNodeProperty);
      instance.SetDestructor(&destruct_TStructNodeProperty);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TStructNodeProperty*)
   {
      return GenerateInitInstanceLocal((::TStructNodeProperty*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TStructNodeProperty*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TStructNodeEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TStructNodeEditor(void *p);
   static void deleteArray_TStructNodeEditor(void *p);
   static void destruct_TStructNodeEditor(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TStructNodeEditor*)
   {
      ::TStructNodeEditor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TStructNodeEditor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TStructNodeEditor", ::TStructNodeEditor::Class_Version(), "include/TStructNodeEditor.h", 26,
                  typeid(::TStructNodeEditor), DefineBehavior(ptr, ptr),
                  &::TStructNodeEditor::Dictionary, isa_proxy, 0,
                  sizeof(::TStructNodeEditor) );
      instance.SetDelete(&delete_TStructNodeEditor);
      instance.SetDeleteArray(&deleteArray_TStructNodeEditor);
      instance.SetDestructor(&destruct_TStructNodeEditor);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TStructNodeEditor*)
   {
      return GenerateInitInstanceLocal((::TStructNodeEditor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TStructNodeEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TStructViewer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TStructViewer(void *p = 0);
   static void *newArray_TStructViewer(Long_t size, void *p);
   static void delete_TStructViewer(void *p);
   static void deleteArray_TStructViewer(void *p);
   static void destruct_TStructViewer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TStructViewer*)
   {
      ::TStructViewer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TStructViewer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TStructViewer", ::TStructViewer::Class_Version(), "include/TStructViewer.h", 26,
                  typeid(::TStructViewer), DefineBehavior(ptr, ptr),
                  &::TStructViewer::Dictionary, isa_proxy, 0,
                  sizeof(::TStructViewer) );
      instance.SetNew(&new_TStructViewer);
      instance.SetNewArray(&newArray_TStructViewer);
      instance.SetDelete(&delete_TStructViewer);
      instance.SetDeleteArray(&deleteArray_TStructViewer);
      instance.SetDestructor(&destruct_TStructViewer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TStructViewer*)
   {
      return GenerateInitInstanceLocal((::TStructViewer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TStructViewer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TStructViewerGUI_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TStructViewerGUI(void *p);
   static void deleteArray_TStructViewerGUI(void *p);
   static void destruct_TStructViewerGUI(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TStructViewerGUI*)
   {
      ::TStructViewerGUI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TStructViewerGUI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TStructViewerGUI", ::TStructViewerGUI::Class_Version(), "include/TStructViewerGUI.h", 37,
                  typeid(::TStructViewerGUI), DefineBehavior(ptr, ptr),
                  &::TStructViewerGUI::Dictionary, isa_proxy, 0,
                  sizeof(::TStructViewerGUI) );
      instance.SetDelete(&delete_TStructViewerGUI);
      instance.SetDeleteArray(&deleteArray_TStructViewerGUI);
      instance.SetDestructor(&destruct_TStructViewerGUI);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TStructViewerGUI*)
   {
      return GenerateInitInstanceLocal((::TStructViewerGUI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TStructViewerGUI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TStructNode::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TStructNode::Class_Name()
{
   return "TStructNode";
}

//______________________________________________________________________________
const char *TStructNode::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TStructNode*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TStructNode::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TStructNode*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TStructNode::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TStructNode*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TStructNode::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TStructNode*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TStructNodeProperty::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TStructNodeProperty::Class_Name()
{
   return "TStructNodeProperty";
}

//______________________________________________________________________________
const char *TStructNodeProperty::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TStructNodeProperty*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TStructNodeProperty::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TStructNodeProperty*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TStructNodeProperty::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TStructNodeProperty*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TStructNodeProperty::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TStructNodeProperty*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TStructNodeEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TStructNodeEditor::Class_Name()
{
   return "TStructNodeEditor";
}

//______________________________________________________________________________
const char *TStructNodeEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TStructNodeEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TStructNodeEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TStructNodeEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TStructNodeEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TStructNodeEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TStructNodeEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TStructNodeEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TStructViewer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TStructViewer::Class_Name()
{
   return "TStructViewer";
}

//______________________________________________________________________________
const char *TStructViewer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TStructViewer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TStructViewer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TStructViewer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TStructViewer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TStructViewer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TStructViewer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TStructViewer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TStructViewerGUI::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TStructViewerGUI::Class_Name()
{
   return "TStructViewerGUI";
}

//______________________________________________________________________________
const char *TStructViewerGUI::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TStructViewerGUI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TStructViewerGUI::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TStructViewerGUI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TStructViewerGUI::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TStructViewerGUI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TStructViewerGUI::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TStructViewerGUI*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TStructViewerGUI::Streamer(TBuffer &R__b)
{
   // Stream an object of class TStructViewerGUI.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TGMainFrame::Streamer(R__b);
      R__b >> fParent;
      R__b >> fTopVolume;
      R__b >> fNodePtr;
      R__b >> fMaxSlices;
      R__b >> fMouseX;
      R__b >> fMouseY;
      R__b >> fSelectedObject;
      fUndoList.Streamer(R__b);
      fRedoList.Streamer(R__b);
      fVisibleObjects.Streamer(R__b);
      R__b >> fMaxRatio;
      R__b >> fColors;
      fVolumes.Streamer(R__b);
      R__b >> fCanvas;
      R__b >> fGLViewer;
      R__b >> fToolTip;
      R__b >> fShowLinksCheckButton;
      R__b >> fNodeNameLabel;
      R__b >> fNodeTypelabel;
      R__b >> fMembersCountLabel;
      R__b >> fAllMembersCountLabel;
      R__b >> fSizeLabel;
      R__b >> fTotalSizeLabel;
      R__b >> fLevelLabel;
      R__b >> fUndoButton;
      R__b >> fRedoButton;
      R__b >> fScaleBySizeButton;
      R__b >> fScaleByMembersButton;
      R__b >> fPointerTextEntry;
      R__b >> fPointerTypeTextEntry;
      R__b >> fEditor;
      R__b >> fBoxHeightEntry;
      R__b >> fAutoRefesh;
      R__b >> fLevelDistanceEntry;
      R__b.CheckByteCount(R__s, R__c, TStructViewerGUI::IsA());
   } else {
      R__c = R__b.WriteVersion(TStructViewerGUI::IsA(), kTRUE);
      TGMainFrame::Streamer(R__b);
      R__b << fParent;
      R__b << fTopVolume;
      R__b << fNodePtr;
      R__b << fMaxSlices;
      R__b << fMouseX;
      R__b << fMouseY;
      R__b << fSelectedObject;
      fUndoList.Streamer(R__b);
      fRedoList.Streamer(R__b);
      fVisibleObjects.Streamer(R__b);
      R__b << fMaxRatio;
      R__b << fColors;
      fVolumes.Streamer(R__b);
      R__b << fCanvas;
      R__b << fGLViewer;
      R__b << fToolTip;
      R__b << fShowLinksCheckButton;
      R__b << fNodeNameLabel;
      R__b << fNodeTypelabel;
      R__b << fMembersCountLabel;
      R__b << fAllMembersCountLabel;
      R__b << fSizeLabel;
      R__b << fTotalSizeLabel;
      R__b << fLevelLabel;
      R__b << fUndoButton;
      R__b << fRedoButton;
      R__b << fScaleBySizeButton;
      R__b << fScaleByMembersButton;
      R__b << fPointerTextEntry;
      R__b << fPointerTypeTextEntry;
      R__b << fEditor;
      R__b << fBoxHeightEntry;
      R__b << fAutoRefesh;
      R__b << fLevelDistanceEntry;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TStructViewerGUI::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TStructViewerGUI.
      TClass *R__cl = ::TStructViewerGUI::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fParent", &fParent);
      R__insp.Inspect(R__cl, R__parent, "*fTopVolume", &fTopVolume);
      R__insp.Inspect(R__cl, R__parent, "*fNodePtr", &fNodePtr);
      R__insp.Inspect(R__cl, R__parent, "fMaxSlices", &fMaxSlices);
      R__insp.Inspect(R__cl, R__parent, "fMouseX", &fMouseX);
      R__insp.Inspect(R__cl, R__parent, "fMouseY", &fMouseY);
      R__insp.Inspect(R__cl, R__parent, "*fSelectedObject", &fSelectedObject);
      R__insp.Inspect(R__cl, R__parent, "fUndoList", &fUndoList);
      fUndoList.ShowMembers(R__insp, strcat(R__parent,"fUndoList.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRedoList", &fRedoList);
      fRedoList.ShowMembers(R__insp, strcat(R__parent,"fRedoList.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fVisibleObjects", &fVisibleObjects);
      fVisibleObjects.ShowMembers(R__insp, strcat(R__parent,"fVisibleObjects.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMaxRatio", &fMaxRatio);
      R__insp.Inspect(R__cl, R__parent, "*fColors", &fColors);
      R__insp.Inspect(R__cl, R__parent, "fVolumes", &fVolumes);
      fVolumes.ShowMembers(R__insp, strcat(R__parent,"fVolumes.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fCanvas", &fCanvas);
      R__insp.Inspect(R__cl, R__parent, "*fGLViewer", &fGLViewer);
      R__insp.Inspect(R__cl, R__parent, "*fToolTip", &fToolTip);
      R__insp.Inspect(R__cl, R__parent, "*fShowLinksCheckButton", &fShowLinksCheckButton);
      R__insp.Inspect(R__cl, R__parent, "*fNodeNameLabel", &fNodeNameLabel);
      R__insp.Inspect(R__cl, R__parent, "*fNodeTypelabel", &fNodeTypelabel);
      R__insp.Inspect(R__cl, R__parent, "*fMembersCountLabel", &fMembersCountLabel);
      R__insp.Inspect(R__cl, R__parent, "*fAllMembersCountLabel", &fAllMembersCountLabel);
      R__insp.Inspect(R__cl, R__parent, "*fSizeLabel", &fSizeLabel);
      R__insp.Inspect(R__cl, R__parent, "*fTotalSizeLabel", &fTotalSizeLabel);
      R__insp.Inspect(R__cl, R__parent, "*fLevelLabel", &fLevelLabel);
      R__insp.Inspect(R__cl, R__parent, "*fUndoButton", &fUndoButton);
      R__insp.Inspect(R__cl, R__parent, "*fRedoButton", &fRedoButton);
      R__insp.Inspect(R__cl, R__parent, "*fScaleBySizeButton", &fScaleBySizeButton);
      R__insp.Inspect(R__cl, R__parent, "*fScaleByMembersButton", &fScaleByMembersButton);
      R__insp.Inspect(R__cl, R__parent, "*fPointerTextEntry", &fPointerTextEntry);
      R__insp.Inspect(R__cl, R__parent, "*fPointerTypeTextEntry", &fPointerTypeTextEntry);
      R__insp.Inspect(R__cl, R__parent, "*fEditor", &fEditor);
      R__insp.Inspect(R__cl, R__parent, "*fBoxHeightEntry", &fBoxHeightEntry);
      R__insp.Inspect(R__cl, R__parent, "*fAutoRefesh", &fAutoRefesh);
      R__insp.Inspect(R__cl, R__parent, "*fLevelDistanceEntry", &fLevelDistanceEntry);
      TGMainFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TStructViewerGUI(void *p) {
      delete ((::TStructViewerGUI*)p);
   }
   static void deleteArray_TStructViewerGUI(void *p) {
      delete [] ((::TStructViewerGUI*)p);
   }
   static void destruct_TStructViewerGUI(void *p) {
      typedef ::TStructViewerGUI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TStructViewerGUI

//______________________________________________________________________________
void TStructNode::Streamer(TBuffer &R__b)
{
   // Stream an object of class TStructNode.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TStructNode::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TStructNode.
      TClass *R__cl = ::TStructNode::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fName", &fName);
      fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTypeName", &fTypeName);
      fTypeName.ShowMembers(R__insp, strcat(R__parent,"fTypeName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSize", &fSize);
      R__insp.Inspect(R__cl, R__parent, "fTotalSize", &fTotalSize);
      R__insp.Inspect(R__cl, R__parent, "*fParent", &fParent);
      R__insp.Inspect(R__cl, R__parent, "fLevel", &fLevel);
      R__insp.Inspect(R__cl, R__parent, "fMembersCount", &fMembersCount);
      R__insp.Inspect(R__cl, R__parent, "fAllMembersCount", &fAllMembersCount);
      R__insp.Inspect(R__cl, R__parent, "*fPointer", &fPointer);
      R__insp.Inspect(R__cl, R__parent, "fCollapsed", &fCollapsed);
      R__insp.Inspect(R__cl, R__parent, "fVisible", &fVisible);
      R__insp.Inspect(R__cl, R__parent, "*fMembers", &fMembers);
      R__insp.Inspect(R__cl, R__parent, "fX", &fX);
      R__insp.Inspect(R__cl, R__parent, "fY", &fY);
      R__insp.Inspect(R__cl, R__parent, "fWidth", &fWidth);
      R__insp.Inspect(R__cl, R__parent, "fHeight", &fHeight);
      R__insp.Inspect(R__cl, R__parent, "fNodeType", &fNodeType);
      R__insp.Inspect(R__cl, R__parent, "fMaxLevel", &fMaxLevel);
      R__insp.Inspect(R__cl, R__parent, "fMaxObjects", &fMaxObjects);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TStructNode(void *p) {
      delete ((::TStructNode*)p);
   }
   static void deleteArray_TStructNode(void *p) {
      delete [] ((::TStructNode*)p);
   }
   static void destruct_TStructNode(void *p) {
      typedef ::TStructNode current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TStructNode

//______________________________________________________________________________
void TStructViewer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TStructViewer.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TStructViewer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TStructViewer.
      TClass *R__cl = ::TStructViewer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fPointer", &fPointer);
      R__insp.Inspect(R__cl, R__parent, "*fPointerClass", &fPointerClass);
      R__insp.Inspect(R__cl, R__parent, "*fGUI", &fGUI);
      R__insp.Inspect(R__cl, R__parent, "fLevelMembersCount", &fLevelMembersCount);
      fLevelMembersCount.ShowMembers(R__insp, strcat(R__parent,"fLevelMembersCount.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLevelSize", &fLevelSize);
      fLevelSize.ShowMembers(R__insp, strcat(R__parent,"fLevelSize.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPointers", &fPointers);
      fPointers.ShowMembers(R__insp, strcat(R__parent,"fPointers.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLevelArray", &fLevelArray);
      fLevelArray.ShowMembers(R__insp, strcat(R__parent,"fLevelArray.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fTopNode", &fTopNode);
      R__insp.Inspect(R__cl, R__parent, "fColors", &fColors);
      fColors.ShowMembers(R__insp, strcat(R__parent,"fColors.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TStructViewer(void *p) {
      return  p ? new(p) ::TStructViewer : new ::TStructViewer;
   }
   static void *newArray_TStructViewer(Long_t nElements, void *p) {
      return p ? new(p) ::TStructViewer[nElements] : new ::TStructViewer[nElements];
   }
   // Wrapper around operator delete
   static void delete_TStructViewer(void *p) {
      delete ((::TStructViewer*)p);
   }
   static void deleteArray_TStructViewer(void *p) {
      delete [] ((::TStructViewer*)p);
   }
   static void destruct_TStructViewer(void *p) {
      typedef ::TStructViewer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TStructViewer

//______________________________________________________________________________
void TStructNodeProperty::Streamer(TBuffer &R__b)
{
   // Stream an object of class TStructNodeProperty.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      fColor.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TStructNodeProperty::IsA());
   } else {
      R__c = R__b.WriteVersion(TStructNodeProperty::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      fColor.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TStructNodeProperty::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TStructNodeProperty.
      TClass *R__cl = ::TStructNodeProperty::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fColor", &fColor);
      fColor.ShowMembers(R__insp, strcat(R__parent,"fColor.")); R__parent[R__ncp] = 0;
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TStructNodeProperty(void *p) {
      delete ((::TStructNodeProperty*)p);
   }
   static void deleteArray_TStructNodeProperty(void *p) {
      delete [] ((::TStructNodeProperty*)p);
   }
   static void destruct_TStructNodeProperty(void *p) {
      typedef ::TStructNodeProperty current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TStructNodeProperty

//______________________________________________________________________________
void TStructNodeEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TStructNodeEditor.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TGedFrame::Streamer(R__b);
      R__b >> fColors;
      R__b >> fNode;
      R__b >> fMaxObjectsNumberEntry;
      R__b >> fMaxLevelsNumberEntry;
      R__b >> fTypeName;
      R__b >> fNodeNameLabel;
      R__b >> fNameEntry;
      R__b >> fColorSelect;
      R__b >> fSelectedPropert;
      R__b >> fDefaultButton;
      R__b >> fApplyButton;
      R__b >> fAutoRefesh;
      R__b.CheckByteCount(R__s, R__c, TStructNodeEditor::IsA());
   } else {
      R__c = R__b.WriteVersion(TStructNodeEditor::IsA(), kTRUE);
      TGedFrame::Streamer(R__b);
      R__b << fColors;
      R__b << fNode;
      R__b << fMaxObjectsNumberEntry;
      R__b << fMaxLevelsNumberEntry;
      R__b << fTypeName;
      R__b << fNodeNameLabel;
      R__b << fNameEntry;
      R__b << fColorSelect;
      R__b << fSelectedPropert;
      R__b << fDefaultButton;
      R__b << fApplyButton;
      R__b << fAutoRefesh;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TStructNodeEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TStructNodeEditor.
      TClass *R__cl = ::TStructNodeEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fColors", &fColors);
      R__insp.Inspect(R__cl, R__parent, "*fNode", &fNode);
      R__insp.Inspect(R__cl, R__parent, "*fMaxObjectsNumberEntry", &fMaxObjectsNumberEntry);
      R__insp.Inspect(R__cl, R__parent, "*fMaxLevelsNumberEntry", &fMaxLevelsNumberEntry);
      R__insp.Inspect(R__cl, R__parent, "*fTypeName", &fTypeName);
      R__insp.Inspect(R__cl, R__parent, "*fNodeNameLabel", &fNodeNameLabel);
      R__insp.Inspect(R__cl, R__parent, "*fNameEntry", &fNameEntry);
      R__insp.Inspect(R__cl, R__parent, "*fColorSelect", &fColorSelect);
      R__insp.Inspect(R__cl, R__parent, "*fSelectedPropert", &fSelectedPropert);
      R__insp.Inspect(R__cl, R__parent, "*fDefaultButton", &fDefaultButton);
      R__insp.Inspect(R__cl, R__parent, "*fApplyButton", &fApplyButton);
      R__insp.Inspect(R__cl, R__parent, "*fAutoRefesh", &fAutoRefesh);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TStructNodeEditor(void *p) {
      delete ((::TStructNodeEditor*)p);
   }
   static void deleteArray_TStructNodeEditor(void *p) {
      delete [] ((::TStructNodeEditor*)p);
   }
   static void destruct_TStructNodeEditor(void *p) {
      typedef ::TStructNodeEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TStructNodeEditor

/********************************************************
* graf3d/gviz3d/src/G__Gviz3d.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__Gviz3d();

extern "C" void G__set_cpp_environmentG__Gviz3d() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TStructNodeEditor.h");
  G__add_compiledheader("TStructNode.h");
  G__add_compiledheader("TStructNodeProperty.h");
  G__add_compiledheader("TStructViewerGUI.h");
  G__add_compiledheader("TStructViewer.h");
  G__cpp_reset_tagtableG__Gviz3d();
}
#include <new>
extern "C" int G__cpp_dllrevG__Gviz3d() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TStructNode */
static int G__G__Gviz3d_225_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TStructNode* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TStructNode(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (void*) G__int(libp->para[2]), (TStructNode*) G__int(libp->para[3])
, (ULong_t) G__int(libp->para[4]), (ENodeType) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) TStructNode(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (void*) G__int(libp->para[2]), (TStructNode*) G__int(libp->para[3])
, (ULong_t) G__int(libp->para[4]), (ENodeType) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const TStructNode*) G__getstructoffset())->GetAllMembersCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TStructNode*) G__getstructoffset())->GetCenter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TStructNode*) G__getstructoffset())->GetHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TStructNode*) G__getstructoffset())->GetLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TStructNode*) G__getstructoffset())->GetMaxLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TStructNode*) G__getstructoffset())->GetMaxObjects());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TStructNode*) G__getstructoffset())->GetMembers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const TStructNode*) G__getstructoffset())->GetMembersCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TStructNode*) G__getstructoffset())->GetMiddle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TStructNode*) G__getstructoffset())->GetNodeType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TStructNode*) G__getstructoffset())->GetParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((const TStructNode*) G__getstructoffset())->GetPointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const TStructNode*) G__getstructoffset())->GetRelativeMembersCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const TStructNode*) G__getstructoffset())->GetRelativeSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const TStructNode*) G__getstructoffset())->GetRelativeVolume());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TStructNode*) G__getstructoffset())->GetRelativeVolumeRatio());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const TStructNode*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const TStructNode*) G__getstructoffset())->GetTotalSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TStructNode*) G__getstructoffset())->GetTypeName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const TStructNode*) G__getstructoffset())->GetVolume());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TStructNode*) G__getstructoffset())->GetVolumeRatio());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TStructNode*) G__getstructoffset())->GetWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TStructNode*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TStructNode*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TStructNode*) G__getstructoffset())->IsCollapsed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TStructNode*) G__getstructoffset())->IsVisible());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNode*) G__getstructoffset())->SetAllMembersCount((ULong_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNode*) G__getstructoffset())->SetCollapsed((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNode*) G__getstructoffset())->SetHeight((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNode*) G__getstructoffset())->SetMaxLevel((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNode*) G__getstructoffset())->SetMaxObjects((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNode*) G__getstructoffset())->SetMembers((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNode*) G__getstructoffset())->SetMembersCount((ULong_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNode*) G__getstructoffset())->SetNodeType((ENodeType) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNode*) G__getstructoffset())->SetPointer((void*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TStructNode::SetScaleBy((EScalingType) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNode*) G__getstructoffset())->SetSize((ULong_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNode*) G__getstructoffset())->SetTotalSize((ULong_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNode*) G__getstructoffset())->SetVisible((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNode*) G__getstructoffset())->SetWidth((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNode*) G__getstructoffset())->SetX((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNode*) G__getstructoffset())->SetY((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TStructNode::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStructNode::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TStructNode::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TStructNode::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNode*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStructNode::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TStructNode::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStructNode::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_225_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TStructNode::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Gviz3d_225_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TStructNode* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TStructNode(*(TStructNode*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TStructNode G__TTStructNode;
static int G__G__Gviz3d_225_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TStructNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TStructNode*) (soff+(sizeof(TStructNode)*i)))->~G__TTStructNode();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TStructNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TStructNode*) (soff))->~G__TTStructNode();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Gviz3d_225_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TStructNode* dest = (TStructNode*) G__getstructoffset();
   *dest = *(TStructNode*) libp->para[0].ref;
   const TStructNode& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TStructNodeProperty */
static int G__G__Gviz3d_226_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TStructNodeProperty* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TStructNodeProperty((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TStructNodeProperty((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_226_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TStructNodeProperty* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TStructNodeProperty((const char*) G__int(libp->para[0]), (Pixel_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TStructNodeProperty((const char*) G__int(libp->para[0]), (Pixel_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_226_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TColor* pobj;
         const TColor xobj = ((const TStructNodeProperty*) G__getstructoffset())->GetColor();
         pobj = new TColor(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_226_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const TStructNodeProperty*) G__getstructoffset())->GetPixel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_226_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNodeProperty*) G__getstructoffset())->SetColor(*(TColor*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_226_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNodeProperty*) G__getstructoffset())->SetColor((Pixel_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_226_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNodeProperty*) G__getstructoffset())->SetColor((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_226_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TStructNodeProperty::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_226_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStructNodeProperty::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_226_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TStructNodeProperty::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_226_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TStructNodeProperty::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_226_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNodeProperty*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_226_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStructNodeProperty::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_226_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TStructNodeProperty::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_226_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStructNodeProperty::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_226_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TStructNodeProperty::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Gviz3d_226_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TStructNodeProperty* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TStructNodeProperty(*(TStructNodeProperty*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TStructNodeProperty G__TTStructNodeProperty;
static int G__G__Gviz3d_226_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TStructNodeProperty*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TStructNodeProperty*) (soff+(sizeof(TStructNodeProperty)*i)))->~G__TTStructNodeProperty();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TStructNodeProperty*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TStructNodeProperty*) (soff))->~G__TTStructNodeProperty();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Gviz3d_226_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TStructNodeProperty* dest = (TStructNodeProperty*) G__getstructoffset();
   *dest = *(TStructNodeProperty*) libp->para[0].ref;
   const TStructNodeProperty& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TStructNodeEditor */
static int G__G__Gviz3d_231_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TStructNodeEditor* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStructNodeEditor(
(TList*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (Pixel_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TStructNodeEditor(
(TList*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (Pixel_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStructNodeEditor(
(TList*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TStructNodeEditor(
(TList*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStructNodeEditor(
(TList*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TStructNodeEditor(
(TList*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStructNodeEditor(
(TList*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TStructNodeEditor(
(TList*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStructNodeEditor((TList*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TStructNodeEditor((TList*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStructNodeEditor((TList*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TStructNodeEditor((TList*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeEditor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_231_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNodeEditor*) G__getstructoffset())->ApplyButtonSlot();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_231_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNodeEditor*) G__getstructoffset())->AutoRefreshButtonSlot((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_231_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNodeEditor*) G__getstructoffset())->ColorSelectedSlot((Pixel_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_231_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNodeEditor*) G__getstructoffset())->DefaultButtonSlot();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_231_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNodeEditor*) G__getstructoffset())->MaxLevelsValueSetSlot((Long_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_231_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNodeEditor*) G__getstructoffset())->MaxObjectsValueSetSlot((Long_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_231_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNodeEditor*) G__getstructoffset())->Update((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_231_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TStructNodeEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_231_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStructNodeEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_231_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TStructNodeEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_231_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TStructNodeEditor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_231_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructNodeEditor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_231_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStructNodeEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_231_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TStructNodeEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_231_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStructNodeEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_231_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TStructNodeEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TStructNodeEditor G__TTStructNodeEditor;
static int G__G__Gviz3d_231_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TStructNodeEditor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TStructNodeEditor*) (soff+(sizeof(TStructNodeEditor)*i)))->~G__TTStructNodeEditor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TStructNodeEditor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TStructNodeEditor*) (soff))->~G__TTStructNodeEditor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TStructViewer */
static int G__G__Gviz3d_456_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TStructViewer* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStructViewer((void*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TStructViewer((void*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStructViewer((void*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TStructViewer((void*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TStructViewer[n];
       } else {
         p = new((void*) gvp) TStructViewer[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TStructViewer;
       } else {
         p = new((void*) gvp) TStructViewer;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TStructViewer*) G__getstructoffset())->GetCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TStructViewer*) G__getstructoffset())->GetFrame());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TColor* pobj;
         TColor xobj = ((TStructViewer*) G__getstructoffset())->GetColor((const char*) G__int(libp->para[0]));
         pobj = new TColor(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TExMap* pobj;
         const TExMap xobj = ((const TStructViewer*) G__getstructoffset())->GetLevelMembersCount();
         pobj = new TExMap(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TExMap* pobj;
         const TExMap xobj = ((const TStructViewer*) G__getstructoffset())->GetLevelSize();
         pobj = new TExMap(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TStructViewer*) G__getstructoffset())->GetLinksVisibility());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((const TStructViewer*) G__getstructoffset())->GetPointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewer*) G__getstructoffset())->SetColor(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewer*) G__getstructoffset())->SetLinksVisibility((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TStructViewer*) G__getstructoffset())->SetPointer((void*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TStructViewer*) G__getstructoffset())->SetPointer((void*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TStructViewer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStructViewer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TStructViewer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TStructViewer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStructViewer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TStructViewer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStructViewer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_456_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TStructViewer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TStructViewer G__TTStructViewer;
static int G__G__Gviz3d_456_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TStructViewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TStructViewer*) (soff+(sizeof(TStructViewer)*i)))->~G__TTStructViewer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TStructViewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TStructViewer*) (soff))->~G__TTStructViewer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TStructViewerGUI */
static int G__G__Gviz3d_457_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TStructViewerGUI* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStructViewerGUI(
(TStructViewer*) G__int(libp->para[0]), (TStructNode*) G__int(libp->para[1])
, (TList*) G__int(libp->para[2]), (const TGWindow*) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TStructViewerGUI(
(TStructViewer*) G__int(libp->para[0]), (TStructNode*) G__int(libp->para[1])
, (TList*) G__int(libp->para[2]), (const TGWindow*) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStructViewerGUI(
(TStructViewer*) G__int(libp->para[0]), (TStructNode*) G__int(libp->para[1])
, (TList*) G__int(libp->para[2]), (const TGWindow*) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TStructViewerGUI(
(TStructViewer*) G__int(libp->para[0]), (TStructNode*) G__int(libp->para[1])
, (TList*) G__int(libp->para[2]), (const TGWindow*) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStructViewerGUI(
(TStructViewer*) G__int(libp->para[0]), (TStructNode*) G__int(libp->para[1])
, (TList*) G__int(libp->para[2]), (const TGWindow*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TStructViewerGUI(
(TStructViewer*) G__int(libp->para[0]), (TStructNode*) G__int(libp->para[1])
, (TList*) G__int(libp->para[2]), (const TGWindow*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStructViewerGUI(
(TStructViewer*) G__int(libp->para[0]), (TStructNode*) G__int(libp->para[1])
, (TList*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TStructViewerGUI(
(TStructViewer*) G__int(libp->para[0]), (TStructNode*) G__int(libp->para[1])
, (TList*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewerGUI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->AutoRefreshButtonSlot((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->BoxHeightValueSetSlot((Long_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->ColorSelectedSlot((Pixel_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->DoubleClickedSlot();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TStructViewerGUI*) G__getstructoffset())->GetCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TStructViewerGUI*) G__getstructoffset())->GetColor((TStructNode*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TStructViewerGUI*) G__getstructoffset())->GetDefaultColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TStructViewerGUI*) G__getstructoffset())->GetLinksVisibility());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TStructViewerGUI*) G__getstructoffset())->GetNodePtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->GLWidgetProcessedEventSlot((Event_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->LevelDistValueSetSlot((Long_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->MouseOverSlot((TGLPhysicalShape*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->RedoButtonSlot();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->ResetButtonSlot();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->ScaleByChangedSlot();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->SetLinksVisibility((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->SetNodePtr((TStructNode*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->SetPointerButtonSlot();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->ShowLinksToggled((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->UndoButtonSlot();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TStructViewerGUI*) G__getstructoffset())->Update((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TStructViewerGUI*) G__getstructoffset())->Update();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->UpdateButtonSlot();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TStructViewerGUI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStructViewerGUI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TStructViewerGUI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TStructViewerGUI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStructViewerGUI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStructViewerGUI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TStructViewerGUI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStructViewerGUI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Gviz3d_457_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TStructViewerGUI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TStructViewerGUI G__TTStructViewerGUI;
static int G__G__Gviz3d_457_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TStructViewerGUI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TStructViewerGUI*) (soff+(sizeof(TStructViewerGUI)*i)))->~G__TTStructViewerGUI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TStructViewerGUI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TStructViewerGUI*) (soff))->~G__TTStructViewerGUI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TStructNode */

/* TStructNodeProperty */

/* TStructNodeEditor */

/* TStructViewer */

/* TStructViewerGUI */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Gviz3d {
 public:
  G__Sizep2memfuncG__Gviz3d(): p(&G__Sizep2memfuncG__Gviz3d::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Gviz3d::*p)();
};

size_t G__get_sizep2memfuncG__Gviz3d()
{
  G__Sizep2memfuncG__Gviz3d a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Gviz3d() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode))) {
     TStructNode *G__Lderived;
     G__Lderived=(TStructNode*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode),G__get_linked_tagnum(&G__G__Gviz3dLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty))) {
     TStructNodeProperty *G__Lderived;
     G__Lderived=(TStructNodeProperty*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty),G__get_linked_tagnum(&G__G__Gviz3dLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty),G__get_linked_tagnum(&G__G__Gviz3dLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeEditor))) {
     TStructNodeEditor *G__Lderived;
     G__Lderived=(TStructNodeEditor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeEditor),G__get_linked_tagnum(&G__G__Gviz3dLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeEditor),G__get_linked_tagnum(&G__G__Gviz3dLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeEditor),G__get_linked_tagnum(&G__G__Gviz3dLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeEditor),G__get_linked_tagnum(&G__G__Gviz3dLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeEditor),G__get_linked_tagnum(&G__G__Gviz3dLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeEditor),G__get_linked_tagnum(&G__G__Gviz3dLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeEditor),G__get_linked_tagnum(&G__G__Gviz3dLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewer))) {
     TStructViewer *G__Lderived;
     G__Lderived=(TStructViewer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewer),G__get_linked_tagnum(&G__G__Gviz3dLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewerGUI))) {
     TStructViewerGUI *G__Lderived;
     G__Lderived=(TStructViewerGUI*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewerGUI),G__get_linked_tagnum(&G__G__Gviz3dLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewerGUI),G__get_linked_tagnum(&G__G__Gviz3dLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewerGUI),G__get_linked_tagnum(&G__G__Gviz3dLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewerGUI),G__get_linked_tagnum(&G__G__Gviz3dLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewerGUI),G__get_linked_tagnum(&G__G__Gviz3dLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewerGUI),G__get_linked_tagnum(&G__G__Gviz3dLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewerGUI),G__get_linked_tagnum(&G__G__Gviz3dLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Gviz3d() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 4 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 4 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Pixel_t",107,-1,0,-1);
   G__setnewtype(-1,"Pixel value",0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGLPlane>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlETGLPlanecOallocatorlETGLPlanegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLPlanecOallocatorlETGLPlanegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlETGLPlanecOallocatorlETGLPlanegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLPlanecOallocatorlETGLPlanegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlETGLPlanecOallocatorlETGLPlanegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Bool_t,TGLLine3>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_pairlEboolcOTGLLine3gR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Bool_t,TGLVertex3>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_pairlEboolcOTGLVertex3gR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UChar_t>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned char>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Int_t,Int_t>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_pairlEintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Double_t,Double_t>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_pairlEdoublecOdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<double>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGLVertex3>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlETGLVertex3cOallocatorlETGLVertex3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLVertex3cOallocatorlETGLVertex3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlETGLVertex3cOallocatorlETGLVertex3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLVertex3cOallocatorlETGLVertex3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlETGLVertex3cOallocatorlETGLVertex3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned int>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TGLOverlayElement*>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_listlETGLOverlayElementmUcOallocatorlETGLOverlayElementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TGLSceneInfo*>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_listlETGLSceneInfomUcOallocatorlETGLSceneInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGLSceneInfo*>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlETGLSceneInfomUcOallocatorlETGLSceneInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLSceneInfomUcOallocatorlETGLSceneInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlETGLSceneInfomUcOallocatorlETGLSceneInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLSceneInfomUcOallocatorlETGLSceneInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlETGLSceneInfomUcOallocatorlETGLSceneInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGLOverlayElement*>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlETGLOverlayElementmUcOallocatorlETGLOverlayElementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLOverlayElementmUcOallocatorlETGLOverlayElementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlETGLOverlayElementmUcOallocatorlETGLOverlayElementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLOverlayElementmUcOallocatorlETGLOverlayElementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Gviz3dLN_vectorlETGLOverlayElementmUcOallocatorlETGLOverlayElementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TGLColorSet*,std::allocator<TGLColorSet*> >",117,G__get_linked_tagnum(&G__G__Gviz3dLN_listlETGLColorSetmUcOallocatorlETGLColorSetmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TGLColorSet*>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_listlETGLColorSetmUcOallocatorlETGLColorSetmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__Gviz3dLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*,less<int> >",117,G__get_linked_tagnum(&G__G__Gviz3dLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TStructNode */
static void G__setup_memvarTStructNode(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode));
   { TStructNode *p; p=(TStructNode*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_EScalingType),-1,-2,4,"fgScalBy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TString),-1,-1,4,"fName=",0,"Name of node");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TString),-1,-1,4,"fTypeName=",0,"Name of type");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("ULong_t"),-1,4,"fSize=",0,"Memory allocated by class without pointers and list elements");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("ULong_t"),-1,4,"fTotalSize=",0,"Total allocated memory");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode),-1,-1,4,"fParent=",0,"Pointer to parent node, NULL if not exist");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fLevel=",0,"Level number");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("ULong_t"),-1,4,"fMembersCount=",0,"Number of members in class");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("ULong_t"),-1,4,"fAllMembersCount=",0,"Number of all members (class and its daughters)");
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,4,"fPointer=",0,"Pointer to data (address of variable)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCollapsed=",0,"Condition - true if node is collapsed (we don't see dauthers)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fVisible=",0,"Condition - true if node is visible");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TList),-1,-1,4,"fMembers=",0,"List of daughter nodes");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fX=",0,"X coordinate in 3D space");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fY=",0,"Y coordinate in 3D space");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fWidth=",0,"Width of outlining box");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fHeight=",0,"Height of outlining box");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_ENodeType),-1,-1,4,"fNodeType=",0,"Type of node");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMaxLevel=",0,"Number of levels displayed when the node is top node on scene");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMaxObjects=",0,"Number of objects displayed when the node is top node on scene");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TStructNodeProperty */
static void G__setup_memvarTStructNodeProperty(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty));
   { TStructNodeProperty *p; p=(TStructNodeProperty*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TColor),-1,-1,4,"fColor=",0,"Color of a class");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TStructNodeEditor */
static void G__setup_memvarTStructNodeEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeEditor));
   { TStructNodeEditor *p; p=(TStructNodeEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TList),-1,-1,2,"fColors=",0,"Pointer to list with class colors ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode),-1,-1,2,"fNode=",0,"Pointer to node which is edited");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGNumberEntry),-1,-1,2,"fMaxObjectsNumberEntry=",0,"Sets maximum number of nodes on scene");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGNumberEntry),-1,-1,2,"fMaxLevelsNumberEntry=",0,"Sets maximum number of visible levels on scene");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGLabel),-1,-1,2,"fTypeName=",0,"Label with name of type");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGLabel),-1,-1,2,"fNodeNameLabel=",0,"Label with name of node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGTextEntry),-1,-1,2,"fNameEntry=",0,"Text entry with name of property");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGColorSelect),-1,-1,2,"fColorSelect=",0,"Control to selec a color");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty),-1,-1,2,"fSelectedPropert=",0,"Pointer to property associated with node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGTextButton),-1,-1,2,"fDefaultButton=",0,"Resets color to default");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGTextButton),-1,-1,2,"fApplyButton=",0,"Apply changes button");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGCheckButton),-1,-1,2,"fAutoRefesh=",0,"Condition for auto update");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TStructViewer */
static void G__setup_memvarTStructViewer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewer));
   { TStructViewer *p; p=(TStructViewer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,4,"fPointer=",0,"Main pointer to represented object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TClass),-1,-1,4,"fPointerClass=",0,"TClass of a main pointer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewerGUI),-1,-1,4,"fGUI=",0,"Pointer to GUI class");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TExMap),-1,-1,4,"fLevelMembersCount=",0,"Contains number of objects on each level");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TExMap),-1,-1,4,"fLevelSize=",0,"Contains total size in bytes of a level");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TExMap),-1,-1,4,"fPointers=",0,"Map of pointer to avoid circulation");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TObjArray),-1,-1,4,"fLevelArray=",0,"Array with pointers to nodes on each level");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode),-1,-1,4,"fTopNode=",0,"Master node for fPointer");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TList),-1,-1,4,"fColors=",0,"List with properties used to color nodes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TStructViewerGUI */
static void G__setup_memvarTStructViewerGUI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewerGUI));
   { TStructViewerGUI *p; p=(TStructViewerGUI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewer),-1,-1,4,"fParent=",0,"Pointer to Viewer GUI");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGeoVolume),-1,-1,4,"fTopVolume=",0,"Main volume containing all others volumes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode),-1,-1,4,"fNodePtr=",0,"Root node which represents the main pointer");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMaxSlices=",0,"Maximum number of slices used to build a collection node");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMouseX=",0,"Position of ToolTip on x-axis");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMouseY=",0,"Position of ToolTip on y-axis");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode),-1,-1,4,"fSelectedObject=",0,"Pointer to actual selected object on scene");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TList),-1,-1,4,"fUndoList=",0,"List with nodes pointers which were top nodes");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TList),-1,-1,4,"fRedoList=",0,"List with nodes pointers which were top nodes");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TList),-1,-1,4,"fVisibleObjects=",0,"List with pointer to nodes which are visible");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMaxRatio=",0,"Maximum ratio used to scale objetcs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TList),-1,-1,4,"fColors=",0,"Pointer to the list with color properties");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGeoMedium),-1,-2,4,"fgMedium=",0,"Material and medium");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TExMap),-1,-1,4,"fVolumes=",0,"Map with pointers to Volumes associated with nodes");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-2,4,"fgCounter=",0,"Volume counter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TCanvas),-1,-1,4,"fCanvas=",0,"Canvas used to store and paint objects");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGLEmbeddedViewer),-1,-1,4,"fGLViewer=",0,"GLViewer in frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGToolTip),-1,-1,4,"fToolTip=",0,"ToolTip is showed when user mouse is over the object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGCheckButton),-1,-1,4,"fShowLinksCheckButton=",0,"Enable/Disable lines between nodes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGLabel),-1,-1,4,"fNodeNameLabel=",0,"Label with name of node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGLabel),-1,-1,4,"fNodeTypelabel=",0,"Label with classname");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGLabel),-1,-1,4,"fMembersCountLabel=",0,"Label with number of members in node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGLabel),-1,-1,4,"fAllMembersCountLabel=",0,"Label with daugthers members");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGLabel),-1,-1,4,"fSizeLabel=",0,"Label with size of node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGLabel),-1,-1,4,"fTotalSizeLabel=",0,"Label with size of node and daughters nodes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGLabel),-1,-1,4,"fLevelLabel=",0,"Label with level where the node is placed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGTextButton),-1,-1,4,"fUndoButton=",0,"Button which can restore last top node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGTextButton),-1,-1,4,"fRedoButton=",0,"Button which can repeat last node change");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGRadioButton),-1,-1,4,"fScaleBySizeButton=",0,"Sets sorting method to size");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGRadioButton),-1,-1,4,"fScaleByMembersButton=",0,"Sets sorting method to members");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGTextEntry),-1,-1,4,"fPointerTextEntry=",0,"Sets address of pointer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGTextEntry),-1,-1,4,"fPointerTypeTextEntry=",0,"Sets type of pointer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeEditor),-1,-1,4,"fEditor=",0,"Frame with a node editor");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGNumberEntry),-1,-1,4,"fBoxHeightEntry=",0,"Height of boxes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGCheckButton),-1,-1,4,"fAutoRefesh=",0,"Automatic redraw the scene");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TGNumberEntry),-1,-1,4,"fLevelDistanceEntry=",0,"Distance between levels");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__Gviz3dLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Gviz3d() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTStructNode(void) {
   /* TStructNode */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode));
   G__memfunc_setup("TStructNode",1119,G__G__Gviz3d_225_0_1, 105, G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode), -1, 0, 6, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - typeName "
"Y - - 0 - pointer U 'TStructNode' - 0 - parent "
"k - 'ULong_t' 0 - size i 'ENodeType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAllMembersCount",1805,G__G__Gviz3d_225_0_3, 107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCenter",897,G__G__Gviz3d_225_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHeight",889,G__G__Gviz3d_225_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLevel",792,G__G__Gviz3d_225_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxLevel",1086,G__G__Gviz3d_225_0_7, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxObjects",1296,G__G__Gviz3d_225_0_8, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMembers",1003,G__G__Gviz3d_225_0_9, 85, G__get_linked_tagnum(&G__G__Gviz3dLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMembersCount",1524,G__G__Gviz3d_225_0_10, 107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiddle",879,G__G__Gviz3d_225_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNodeType",1096,G__G__Gviz3d_225_0_13, 105, G__get_linked_tagnum(&G__G__Gviz3dLN_ENodeType), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParent",906,G__G__Gviz3d_225_0_14, 85, G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPointer",1025,G__G__Gviz3d_225_0_15, 89, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRelativeMembersCount",2352,G__G__Gviz3d_225_0_16, 107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRelativeSize",1527,G__G__Gviz3d_225_0_17, 107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRelativeVolume",1748,G__G__Gviz3d_225_0_18, 107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRelativeVolumeRatio",2259,G__G__Gviz3d_225_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__G__Gviz3d_225_0_20, 107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalSize",1215,G__G__Gviz3d_225_0_21, 107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTypeName",1091,G__G__Gviz3d_225_0_22, 117, G__get_linked_tagnum(&G__G__Gviz3dLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVolume",920,G__G__Gviz3d_225_0_23, 107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVolumeRatio",1431,G__G__Gviz3d_225_0_24, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWidth",800,G__G__Gviz3d_225_0_25, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__G__Gviz3d_225_0_26, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__G__Gviz3d_225_0_27, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCollapsed",1107,G__G__Gviz3d_225_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsVisible",906,G__G__Gviz3d_225_0_30, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAllMembersCount",1817,G__G__Gviz3d_225_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'ULong_t' 0 - count", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCollapsed",1219,G__G__Gviz3d_225_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - collapsed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHeight",901,G__G__Gviz3d_225_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxLevel",1098,G__G__Gviz3d_225_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxObjects",1308,G__G__Gviz3d_225_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMembers",1015,G__G__Gviz3d_225_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMembersCount",1536,G__G__Gviz3d_225_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'ULong_t' 0 - count", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNodeType",1108,G__G__Gviz3d_225_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "i 'ENodeType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPointer",1037,G__G__Gviz3d_225_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - pointer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetScaleBy",975,G__G__Gviz3d_225_0_40, 121, -1, -1, 0, 1, 3, 1, 0, "i 'EScalingType' - 0 - type", (char*)NULL, (void*) G__func2void( (void (*)(EScalingType))(&TStructNode::SetScaleBy) ), 0);
   G__memfunc_setup("SetSize",711,G__G__Gviz3d_225_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'ULong_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTotalSize",1227,G__G__Gviz3d_225_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'ULong_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVisible",1018,G__G__Gviz3d_225_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - visible", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWidth",812,G__G__Gviz3d_225_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,G__G__Gviz3d_225_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY",389,G__G__Gviz3d_225_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Gviz3d_225_0_47, 85, G__get_linked_tagnum(&G__G__Gviz3dLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TStructNode::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Gviz3d_225_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStructNode::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Gviz3d_225_0_49, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TStructNode::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Gviz3d_225_0_50, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TStructNode::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__Gviz3dLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Gviz3d_225_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Gviz3d_225_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStructNode::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Gviz3d_225_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TStructNode::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Gviz3d_225_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStructNode::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Gviz3d_225_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TStructNode::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TStructNode", 1119, G__G__Gviz3d_225_0_59, (int) ('i'), G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode), -1, 0, 1, 1, 1, 0, "u 'TStructNode' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TStructNode", 1245, G__G__Gviz3d_225_0_60, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Gviz3d_225_0_61, (int) ('u'), G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode), -1, 1, 1, 1, 1, 0, "u 'TStructNode' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTStructNodeProperty(void) {
   /* TStructNodeProperty */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty));
   G__memfunc_setup("TStructNodeProperty",1988,G__G__Gviz3d_226_0_1, 105, G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TStructNodeProperty",1988,G__G__Gviz3d_226_0_2, 105, G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name k - 'Pixel_t' 0 - pixel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetColor",799,G__G__Gviz3d_226_0_3, 117, G__get_linked_tagnum(&G__G__Gviz3dLN_TColor), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPixel",802,G__G__Gviz3d_226_0_4, 107, -1, G__defined_typename("Pixel_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColor",811,G__G__Gviz3d_226_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TColor' - 11 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColor",811,G__G__Gviz3d_226_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'Pixel_t' 0 - pixel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColor",811,G__G__Gviz3d_226_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Gviz3d_226_0_10, 85, G__get_linked_tagnum(&G__G__Gviz3dLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TStructNodeProperty::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Gviz3d_226_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStructNodeProperty::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Gviz3d_226_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TStructNodeProperty::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Gviz3d_226_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TStructNodeProperty::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__Gviz3dLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Gviz3d_226_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Gviz3d_226_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStructNodeProperty::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Gviz3d_226_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TStructNodeProperty::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Gviz3d_226_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStructNodeProperty::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Gviz3d_226_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TStructNodeProperty::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TStructNodeProperty", 1988, G__G__Gviz3d_226_0_22, (int) ('i'), G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty), -1, 0, 1, 1, 1, 0, "u 'TStructNodeProperty' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TStructNodeProperty", 2114, G__G__Gviz3d_226_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Gviz3d_226_0_24, (int) ('u'), G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty), -1, 1, 1, 1, 1, 0, "u 'TStructNodeProperty' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTStructNodeEditor(void) {
   /* TStructNodeEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeEditor));
   G__memfunc_setup("FindNodeProperty",1644,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty), -1, 0, 1, 1, 2, 0, "U 'TStructNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDefaultProperty",1866,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TStructNodeEditor",1734,G__G__Gviz3d_231_0_4, 105, G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeEditor), -1, 0, 6, 1, 1, 0, 
"U 'TList' - 0 - colors U 'TGWindow' - 10 '0' p "
"i - 'Int_t' 0 '140' width i - 'Int_t' 0 '30' height "
"h - 'UInt_t' 0 'kChildFrame' options k - 'Pixel_t' 0 'GetDefaultFrameBackground()' back", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyButtonSlot",1572,G__G__Gviz3d_231_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AutoRefreshButtonSlot",2182,G__G__Gviz3d_231_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ColorSelectedSlot",1738,G__G__Gviz3d_231_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'Pixel_t' 0 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefaultButtonSlot",1763,G__G__Gviz3d_231_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaxLevelsValueSetSlot",2140,G__G__Gviz3d_231_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'Long_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaxObjectsValueSetSlot",2235,G__G__Gviz3d_231_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'Long_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetModel",797,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Update",611,G__G__Gviz3d_231_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - resetCamera", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Gviz3d_231_0_14, 85, G__get_linked_tagnum(&G__G__Gviz3dLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TStructNodeEditor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Gviz3d_231_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStructNodeEditor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Gviz3d_231_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TStructNodeEditor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Gviz3d_231_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TStructNodeEditor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__Gviz3dLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Gviz3d_231_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Gviz3d_231_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStructNodeEditor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Gviz3d_231_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TStructNodeEditor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Gviz3d_231_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStructNodeEditor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Gviz3d_231_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TStructNodeEditor::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TStructNodeEditor", 1860, G__G__Gviz3d_231_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTStructViewer(void) {
   /* TStructViewer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewer));
   G__memfunc_setup("AddNode",655,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TStructNode' - 0 - node k - 'ULong_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CountMembers",1236,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"U 'TClass' - 0 - cl U 'TStructNode' - 0 - parent "
"Y - - 0 - pointer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Prepare",719,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TStructViewer",1355,G__G__Gviz3d_456_0_5, 105, G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewer), -1, 0, 2, 1, 1, 0, 
"Y - - 0 'NULL' ptr C - - 10 'NULL' clname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCanvas",892,G__G__Gviz3d_456_0_7, 85, G__get_linked_tagnum(&G__G__Gviz3dLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFrame",779,G__G__Gviz3d_456_0_8, 85, G__get_linked_tagnum(&G__G__Gviz3dLN_TGMainFrame), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetColor",799,G__G__Gviz3d_456_0_9, 117, G__get_linked_tagnum(&G__G__Gviz3dLN_TColor), -1, 0, 1, 1, 1, 0, "C - - 10 - typeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLevelMembersCount",2028,G__G__Gviz3d_456_0_10, 117, G__get_linked_tagnum(&G__G__Gviz3dLN_TExMap), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLevelSize",1203,G__G__Gviz3d_456_0_11, 117, G__get_linked_tagnum(&G__G__Gviz3dLN_TExMap), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLinksVisibility",1865,G__G__Gviz3d_456_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPointer",1025,G__G__Gviz3d_456_0_13, 89, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColor",811,G__G__Gviz3d_456_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - name i - 'Int_t' 0 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLinksVisibility",1877,G__G__Gviz3d_456_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPointer",1037,G__G__Gviz3d_456_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"Y - - 0 - ptr C - - 10 'NULL' clname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Gviz3d_456_0_17, 85, G__get_linked_tagnum(&G__G__Gviz3dLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TStructViewer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Gviz3d_456_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStructViewer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Gviz3d_456_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TStructViewer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Gviz3d_456_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TStructViewer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__Gviz3dLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Gviz3d_456_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Gviz3d_456_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStructViewer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Gviz3d_456_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TStructViewer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Gviz3d_456_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStructViewer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Gviz3d_456_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TStructViewer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TStructViewer", 1481, G__G__Gviz3d_456_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTStructViewerGUI(void) {
   /* TStructViewerGUI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewerGUI));
   G__memfunc_setup("CalculatePosistion",1878,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TStructNode' - 0 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckMaxObjects",1486,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TStructNode' - 0 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Divide",597,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 0, 
"U 'TList' - 0 - list f - 'Float_t' 0 - x1 "
"f - 'Float_t' 0 - x2 f - 'Float_t' 0 - y1 "
"f - 'Float_t' 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawNode",788,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TStructNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawLink",796,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TStructNode' - 0 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawVolumes",1145,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TStructNode' - 0 - visObj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNodeProperty",1644,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty), -1, 0, 1, 1, 4, 0, "U 'TStructNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Scale",488,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TStructNode' - 0 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnCheckMaxObjects",1681,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateLabels",1206,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TStructNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TStructViewerGUI",1584,G__G__Gviz3d_457_0_11, 105, G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewerGUI), -1, 0, 6, 1, 1, 0, 
"U 'TStructViewer' - 0 - parent U 'TStructNode' - 0 - nodePtr "
"U 'TList' - 0 - colors U 'TGWindow' - 10 'NULL' p "
"h - 'UInt_t' 0 '800' w h - 'UInt_t' 0 '600' h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AutoRefreshButtonSlot",2182,G__G__Gviz3d_457_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BoxHeightValueSetSlot",2125,G__G__Gviz3d_457_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'Long_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ColorSelectedSlot",1738,G__G__Gviz3d_457_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'Pixel_t' 0 - pixel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoubleClickedSlot",1708,G__G__Gviz3d_457_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCanvas",892,G__G__Gviz3d_457_0_18, 85, G__get_linked_tagnum(&G__G__Gviz3dLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetColor",799,G__G__Gviz3d_457_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TStructNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDefaultColor",1508,G__G__Gviz3d_457_0_20, 85, G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLinksVisibility",1865,G__G__Gviz3d_457_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNodePtr",988,G__G__Gviz3d_457_0_22, 85, G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GLWidgetProcessedEventSlot",2627,G__G__Gviz3d_457_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Event_t' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LevelDistValueSetSlot",2135,G__G__Gviz3d_457_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'Long_t' 0 - dist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MouseOverSlot",1351,G__G__Gviz3d_457_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGLPhysicalShape' - 0 - shape", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RedoButtonSlot",1448,G__G__Gviz3d_457_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetButtonSlot",1569,G__G__Gviz3d_457_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScaleByChangedSlot",1775,G__G__Gviz3d_457_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLinksVisibility",1877,G__G__Gviz3d_457_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNodePtr",1000,G__G__Gviz3d_457_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TStructNode' - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPointerButtonSlot",2091,G__G__Gviz3d_457_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowLinksToggled",1640,G__G__Gviz3d_457_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UndoButtonSlot",1460,G__G__Gviz3d_457_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__G__Gviz3d_457_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'false' resetCamera", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateButtonSlot",1665,G__G__Gviz3d_457_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Gviz3d_457_0_36, 85, G__get_linked_tagnum(&G__G__Gviz3dLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TStructViewerGUI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Gviz3d_457_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStructViewerGUI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Gviz3d_457_0_38, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TStructViewerGUI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Gviz3d_457_0_39, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TStructViewerGUI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__Gviz3dLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Gviz3d_457_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Gviz3d_457_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStructViewerGUI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Gviz3d_457_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TStructViewerGUI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Gviz3d_457_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStructViewerGUI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Gviz3d_457_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TStructViewerGUI::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TStructViewerGUI", 1710, G__G__Gviz3d_457_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Gviz3d() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Gviz3d() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Gviz3d() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__Gviz3dLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_Event_t = { "Event_t" , 115 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGTextButton = { "TGTextButton" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGLabel = { "TGLabel" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGToolTip = { "TGToolTip" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGedFrame = { "TGedFrame" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TStructNode = { "TStructNode" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TStructNodeProperty = { "TStructNodeProperty" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGNumberEntry = { "TGNumberEntry" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGTextEntry = { "TGTextEntry" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGColorSelect = { "TGColorSelect" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGCheckButton = { "TGCheckButton" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TStructNodeEditor = { "TStructNodeEditor" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_ENodeType = { "ENodeType" , 101 , -1 };
G__linked_taginfo G__G__Gviz3dLN_EScalingType = { "EScalingType" , 101 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TColor = { "TColor" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGRadioButton = { "TGRadioButton" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_vectorlETGLPlanecOallocatorlETGLPlanegRsPgR = { "vector<TGLPlane,allocator<TGLPlane> >" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLPlanecOallocatorlETGLPlanegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGLPlane,allocator<TGLPlane> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_pairlEboolcOTGLLine3gR = { "pair<bool,TGLLine3>" , 115 , -1 };
G__linked_taginfo G__G__Gviz3dLN_pairlEboolcOTGLVertex3gR = { "pair<bool,TGLVertex3>" , 115 , -1 };
G__linked_taginfo G__G__Gviz3dLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR = { "vector<unsigned char,allocator<unsigned char> >" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_pairlEintcOintgR = { "pair<int,int>" , 115 , -1 };
G__linked_taginfo G__G__Gviz3dLN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__G__Gviz3dLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<double,allocator<double> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_vectorlETGLVertex3cOallocatorlETGLVertex3gRsPgR = { "vector<TGLVertex3,allocator<TGLVertex3> >" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLVertex3cOallocatorlETGLVertex3gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGLVertex3,allocator<TGLVertex3> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_listlETGLOverlayElementmUcOallocatorlETGLOverlayElementmUgRsPgR = { "list<TGLOverlayElement*,allocator<TGLOverlayElement*> >" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_listlETGLSceneInfomUcOallocatorlETGLSceneInfomUgRsPgR = { "list<TGLSceneInfo*,allocator<TGLSceneInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_vectorlETGLSceneInfomUcOallocatorlETGLSceneInfomUgRsPgR = { "vector<TGLSceneInfo*,allocator<TGLSceneInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLSceneInfomUcOallocatorlETGLSceneInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGLSceneInfo*,allocator<TGLSceneInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_vectorlETGLOverlayElementmUcOallocatorlETGLOverlayElementmUgRsPgR = { "vector<TGLOverlayElement*,allocator<TGLOverlayElement*> >" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLOverlayElementmUcOallocatorlETGLOverlayElementmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGLOverlayElement*,allocator<TGLOverlayElement*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_listlETGLColorSetmUcOallocatorlETGLColorSetmUgRsPgR = { "list<TGLColorSet*,allocator<TGLColorSet*> >" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGLPhysicalShape = { "TGLPhysicalShape" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGLEmbeddedViewer = { "TGLEmbeddedViewer" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR = { "map<int,TGeoElementRN*,less<int>,allocator<pair<const int,TGeoElementRN*> > >" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGeoMedium = { "TGeoMedium" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TGeoVolume = { "TGeoVolume" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TExMap = { "TExMap" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TStructViewer = { "TStructViewer" , 99 , -1 };
G__linked_taginfo G__G__Gviz3dLN_TStructViewerGUI = { "TStructViewerGUI" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Gviz3d() {
  G__G__Gviz3dLN_TClass.tagnum = -1 ;
  G__G__Gviz3dLN_TBuffer.tagnum = -1 ;
  G__G__Gviz3dLN_TMemberInspector.tagnum = -1 ;
  G__G__Gviz3dLN_TObject.tagnum = -1 ;
  G__G__Gviz3dLN_TNamed.tagnum = -1 ;
  G__G__Gviz3dLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__Gviz3dLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__Gviz3dLN_TList.tagnum = -1 ;
  G__G__Gviz3dLN_TObjArray.tagnum = -1 ;
  G__G__Gviz3dLN_TString.tagnum = -1 ;
  G__G__Gviz3dLN_Event_t.tagnum = -1 ;
  G__G__Gviz3dLN_TGObject.tagnum = -1 ;
  G__G__Gviz3dLN_TQObject.tagnum = -1 ;
  G__G__Gviz3dLN_TGWindow.tagnum = -1 ;
  G__G__Gviz3dLN_TGFrame.tagnum = -1 ;
  G__G__Gviz3dLN_TGCompositeFrame.tagnum = -1 ;
  G__G__Gviz3dLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__Gviz3dLN_TGTextButton.tagnum = -1 ;
  G__G__Gviz3dLN_TGMainFrame.tagnum = -1 ;
  G__G__Gviz3dLN_TCanvas.tagnum = -1 ;
  G__G__Gviz3dLN_TGLabel.tagnum = -1 ;
  G__G__Gviz3dLN_TGToolTip.tagnum = -1 ;
  G__G__Gviz3dLN_TGedFrame.tagnum = -1 ;
  G__G__Gviz3dLN_TStructNode.tagnum = -1 ;
  G__G__Gviz3dLN_TStructNodeProperty.tagnum = -1 ;
  G__G__Gviz3dLN_TGNumberEntry.tagnum = -1 ;
  G__G__Gviz3dLN_TGTextEntry.tagnum = -1 ;
  G__G__Gviz3dLN_TGColorSelect.tagnum = -1 ;
  G__G__Gviz3dLN_TGCheckButton.tagnum = -1 ;
  G__G__Gviz3dLN_TStructNodeEditor.tagnum = -1 ;
  G__G__Gviz3dLN_ENodeType.tagnum = -1 ;
  G__G__Gviz3dLN_EScalingType.tagnum = -1 ;
  G__G__Gviz3dLN_TColor.tagnum = -1 ;
  G__G__Gviz3dLN_TGRadioButton.tagnum = -1 ;
  G__G__Gviz3dLN_vectorlETGLPlanecOallocatorlETGLPlanegRsPgR.tagnum = -1 ;
  G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLPlanecOallocatorlETGLPlanegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__Gviz3dLN_pairlEboolcOTGLLine3gR.tagnum = -1 ;
  G__G__Gviz3dLN_pairlEboolcOTGLVertex3gR.tagnum = -1 ;
  G__G__Gviz3dLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR.tagnum = -1 ;
  G__G__Gviz3dLN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__Gviz3dLN_pairlEintcOintgR.tagnum = -1 ;
  G__G__Gviz3dLN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__G__Gviz3dLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__G__Gviz3dLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__Gviz3dLN_vectorlETGLVertex3cOallocatorlETGLVertex3gRsPgR.tagnum = -1 ;
  G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLVertex3cOallocatorlETGLVertex3gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__Gviz3dLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__Gviz3dLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__Gviz3dLN_listlETGLOverlayElementmUcOallocatorlETGLOverlayElementmUgRsPgR.tagnum = -1 ;
  G__G__Gviz3dLN_listlETGLSceneInfomUcOallocatorlETGLSceneInfomUgRsPgR.tagnum = -1 ;
  G__G__Gviz3dLN_vectorlETGLSceneInfomUcOallocatorlETGLSceneInfomUgRsPgR.tagnum = -1 ;
  G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLSceneInfomUcOallocatorlETGLSceneInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__Gviz3dLN_vectorlETGLOverlayElementmUcOallocatorlETGLOverlayElementmUgRsPgR.tagnum = -1 ;
  G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLOverlayElementmUcOallocatorlETGLOverlayElementmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__Gviz3dLN_listlETGLColorSetmUcOallocatorlETGLColorSetmUgRsPgR.tagnum = -1 ;
  G__G__Gviz3dLN_TGLPhysicalShape.tagnum = -1 ;
  G__G__Gviz3dLN_TGLEmbeddedViewer.tagnum = -1 ;
  G__G__Gviz3dLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR.tagnum = -1 ;
  G__G__Gviz3dLN_TGeoMedium.tagnum = -1 ;
  G__G__Gviz3dLN_TGeoVolume.tagnum = -1 ;
  G__G__Gviz3dLN_TExMap.tagnum = -1 ;
  G__G__Gviz3dLN_TStructViewer.tagnum = -1 ;
  G__G__Gviz3dLN_TStructViewerGUI.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Gviz3d() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TList);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TString);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_Event_t);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGObject);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TQObject);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGTextButton);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGLabel);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGToolTip);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGedFrame);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNode),sizeof(TStructNode),-1,62464,"Node with information about class",G__setup_memvarTStructNode,G__setup_memfuncTStructNode);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeProperty),sizeof(TStructNodeProperty),-1,62464,"Class with nodes color property",G__setup_memvarTStructNodeProperty,G__setup_memfuncTStructNodeProperty);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGNumberEntry);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGTextEntry);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGColorSelect);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGCheckButton);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructNodeEditor),sizeof(TStructNodeEditor),-1,62464,"GUI fo editing TStructNode",G__setup_memvarTStructNodeEditor,G__setup_memfuncTStructNodeEditor);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_ENodeType);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_EScalingType);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TColor);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGRadioButton);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_vectorlETGLPlanecOallocatorlETGLPlanegRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLPlanecOallocatorlETGLPlanegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_pairlEboolcOTGLLine3gR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_pairlEboolcOTGLVertex3gR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_pairlEintcOintgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_pairlEdoublecOdoublegR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_vectorlETGLVertex3cOallocatorlETGLVertex3gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLVertex3cOallocatorlETGLVertex3gRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_listlETGLOverlayElementmUcOallocatorlETGLOverlayElementmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_listlETGLSceneInfomUcOallocatorlETGLSceneInfomUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_vectorlETGLSceneInfomUcOallocatorlETGLSceneInfomUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLSceneInfomUcOallocatorlETGLSceneInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_vectorlETGLOverlayElementmUcOallocatorlETGLOverlayElementmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_reverse_iteratorlEvectorlETGLOverlayElementmUcOallocatorlETGLOverlayElementmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_listlETGLColorSetmUcOallocatorlETGLColorSetmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGLPhysicalShape);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGLEmbeddedViewer);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGeoMedium);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TGeoVolume);
   G__get_linked_tagnum_fwd(&G__G__Gviz3dLN_TExMap);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewer),sizeof(TStructViewer),-1,29952,"A 3D struct viewer",G__setup_memvarTStructViewer,G__setup_memfuncTStructViewer);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Gviz3dLN_TStructViewerGUI),sizeof(TStructViewerGUI),-1,62464,"A GUI fo 3D struct viewer ",G__setup_memvarTStructViewerGUI,G__setup_memfuncTStructViewerGUI);
}
extern "C" void G__cpp_setupG__Gviz3d(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Gviz3d()");
  G__set_cpp_environmentG__Gviz3d();
  G__cpp_setup_tagtableG__Gviz3d();

  G__cpp_setup_inheritanceG__Gviz3d();

  G__cpp_setup_typetableG__Gviz3d();

  G__cpp_setup_memvarG__Gviz3d();

  G__cpp_setup_memfuncG__Gviz3d();
  G__cpp_setup_globalG__Gviz3d();
  G__cpp_setup_funcG__Gviz3d();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Gviz3d();
  return;
}
class G__cpp_setup_initG__Gviz3d {
  public:
    G__cpp_setup_initG__Gviz3d() { G__add_setup_func("G__Gviz3d",(G__incsetup)(&G__cpp_setupG__Gviz3d)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Gviz3d() { G__remove_setup_func("G__Gviz3d"); }
};
G__cpp_setup_initG__Gviz3d G__cpp_setup_initializerG__Gviz3d;

