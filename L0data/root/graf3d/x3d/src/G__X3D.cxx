//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:47:46 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__X3D.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TViewerX3D_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TViewerX3D(void *p);
   static void deleteArray_TViewerX3D(void *p);
   static void destruct_TViewerX3D(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TViewerX3D*)
   {
      ::TViewerX3D *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TViewerX3D >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TViewerX3D", ::TViewerX3D::Class_Version(), "include/TViewerX3D.h", 39,
                  typeid(::TViewerX3D), DefineBehavior(ptr, ptr),
                  &::TViewerX3D::Dictionary, isa_proxy, 0,
                  sizeof(::TViewerX3D) );
      instance.SetDelete(&delete_TViewerX3D);
      instance.SetDeleteArray(&deleteArray_TViewerX3D);
      instance.SetDestructor(&destruct_TViewerX3D);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TViewerX3D*)
   {
      return GenerateInitInstanceLocal((::TViewerX3D*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TViewerX3D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TViewerX3D::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TViewerX3D::Class_Name()
{
   return "TViewerX3D";
}

//______________________________________________________________________________
const char *TViewerX3D::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TViewerX3D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TViewerX3D::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TViewerX3D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TViewerX3D::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TViewerX3D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TViewerX3D::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TViewerX3D*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TViewerX3D::Streamer(TBuffer &R__b)
{
   // Stream an object of class TViewerX3D.

   TVirtualViewer3D::Streamer(R__b);
}

//______________________________________________________________________________
void TViewerX3D::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TViewerX3D.
      TClass *R__cl = ::TViewerX3D::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMainFrame", &fMainFrame);
      R__insp.Inspect(R__cl, R__parent, "fOption", &fOption);
      fOption.ShowMembers(R__insp, strcat(R__parent,"fOption.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTitle", &fTitle);
      fTitle.ShowMembers(R__insp, strcat(R__parent,"fTitle.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fX3DWin", &fX3DWin);
      R__insp.Inspect(R__cl, R__parent, "*fCanvas", &fCanvas);
      R__insp.Inspect(R__cl, R__parent, "*fContainer", &fContainer);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBar", &fMenuBar);
      R__insp.Inspect(R__cl, R__parent, "*fFileMenu", &fFileMenu);
      R__insp.Inspect(R__cl, R__parent, "*fHelpMenu", &fHelpMenu);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBarLayout", &fMenuBarLayout);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBarItemLayout", &fMenuBarItemLayout);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBarHelpLayout", &fMenuBarHelpLayout);
      R__insp.Inspect(R__cl, R__parent, "*fCanvasLayout", &fCanvasLayout);
      R__insp.Inspect(R__cl, R__parent, "fWidth", &fWidth);
      R__insp.Inspect(R__cl, R__parent, "fHeight", &fHeight);
      R__insp.Inspect(R__cl, R__parent, "fXPos", &fXPos);
      R__insp.Inspect(R__cl, R__parent, "fYPos", &fYPos);
      R__insp.Inspect(R__cl, R__parent, "*fPad", &fPad);
      R__insp.Inspect(R__cl, R__parent, "fBuildingScene", &fBuildingScene);
      R__insp.Inspect(R__cl, R__parent, "fPass", &fPass);
      TVirtualViewer3D::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TViewerX3D(void *p) {
      delete ((::TViewerX3D*)p);
   }
   static void deleteArray_TViewerX3D(void *p) {
      delete [] ((::TViewerX3D*)p);
   }
   static void destruct_TViewerX3D(void *p) {
      typedef ::TViewerX3D current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TViewerX3D

/********************************************************
* graf3d/x3d/src/G__X3D.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__X3D();

extern "C" void G__set_cpp_environmentG__X3D() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TViewerX3D.h");
  G__add_compiledheader("TX3DFrame.h");
  G__cpp_reset_tagtableG__X3D();
}
#include <new>
extern "C" int G__cpp_dllrevG__X3D() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TViewerX3D */
static int G__G__X3D_216_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TViewerX3D* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TViewerX3D((TVirtualPad*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TViewerX3D((TVirtualPad*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__X3DLN_TViewerX3D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TViewerX3D* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TViewerX3D(
(TVirtualPad*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TViewerX3D(
(TVirtualPad*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TViewerX3D(
(TVirtualPad*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TViewerX3D(
(TVirtualPad*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TViewerX3D(
(TVirtualPad*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TViewerX3D(
(TVirtualPad*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TViewerX3D((TVirtualPad*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TViewerX3D((TVirtualPad*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__X3DLN_TViewerX3D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TViewerX3D* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TViewerX3D(
(TVirtualPad*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, (UInt_t) G__int(libp->para[6]));
   } else {
     p = new((void*) gvp) TViewerX3D(
(TVirtualPad*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, (UInt_t) G__int(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__X3DLN_TViewerX3D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TViewerX3D*) G__getstructoffset())->ExecCommand((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (char) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TViewerX3D*) G__getstructoffset())->GetPosition(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TViewerX3D*) G__getstructoffset())->Iconify();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TViewerX3D*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TViewerX3D*) G__getstructoffset())->Close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TViewerX3D*) G__getstructoffset())->Update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TViewerX3D*) G__getstructoffset())->PaintPolyMarker(*(TBuffer3D*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TViewerX3D*) G__getstructoffset())->ProcessFrameMessage((Long_t) G__int(libp->para[0]), (Long_t) G__int(libp->para[1])
, (Long_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TViewerX3D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TViewerX3D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TViewerX3D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TViewerX3D::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TViewerX3D*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TViewerX3D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TViewerX3D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TViewerX3D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__X3D_216_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TViewerX3D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__X3D_216_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TViewerX3D* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TViewerX3D(*(TViewerX3D*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__X3DLN_TViewerX3D));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TViewerX3D G__TTViewerX3D;
static int G__G__X3D_216_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TViewerX3D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TViewerX3D*) (soff+(sizeof(TViewerX3D)*i)))->~G__TTViewerX3D();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TViewerX3D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TViewerX3D*) (soff))->~G__TTViewerX3D();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__X3D_216_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TViewerX3D* dest = (TViewerX3D*) G__getstructoffset();
   *dest = *(TViewerX3D*) libp->para[0].ref;
   const TViewerX3D& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TViewerX3D */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__X3D {
 public:
  G__Sizep2memfuncG__X3D(): p(&G__Sizep2memfuncG__X3D::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__X3D::*p)();
};

size_t G__get_sizep2memfuncG__X3D()
{
  G__Sizep2memfuncG__X3D a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__X3D() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__X3DLN_TViewerX3D))) {
     TViewerX3D *G__Lderived;
     G__Lderived=(TViewerX3D*)0x1000;
     {
       TVirtualViewer3D *G__Lpbase=(TVirtualViewer3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__X3DLN_TViewerX3D),G__get_linked_tagnum(&G__G__X3DLN_TVirtualViewer3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__X3DLN_TViewerX3D),G__get_linked_tagnum(&G__G__X3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__X3DLN_TVirtualViewer3D))) {
     TVirtualViewer3D *G__Lderived;
     G__Lderived=(TVirtualViewer3D*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__X3DLN_TVirtualViewer3D),G__get_linked_tagnum(&G__G__X3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__X3D() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 4 bytes (long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__X3DLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__X3DLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__X3DLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__X3DLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__X3DLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__X3DLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__X3DLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__X3DLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__X3DLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__X3DLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TViewerX3D */
static void G__setup_memvarTViewerX3D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__X3DLN_TViewerX3D));
   { TViewerX3D *p; p=(TViewerX3D*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__X3DLN_TX3DFrame),-1,-1,4,"fMainFrame=",0,"the main GUI frame");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__X3DLN_TString),-1,-1,4,"fOption=",0,"option string to be passed to X3D");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__X3DLN_TString),-1,-1,4,"fTitle=",0,"viewer title");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("Window_t"),-1,4,"fX3DWin=",0,"X3D window");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__X3DLN_TGCanvas),-1,-1,4,"fCanvas=",0,"canvas widget");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__X3DLN_TX3DContainer),-1,-1,4,"fContainer=",0,"container containing X3D window");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__X3DLN_TGMenuBar),-1,-1,4,"fMenuBar=",0,"menubar");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__X3DLN_TGPopupMenu),-1,-1,4,"fFileMenu=",0,"file menu");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__X3DLN_TGPopupMenu),-1,-1,4,"fHelpMenu=",0,"help menu");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__X3DLN_TGLayoutHints),-1,-1,4,"fMenuBarLayout=",0,"menubar layout hints");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__X3DLN_TGLayoutHints),-1,-1,4,"fMenuBarItemLayout=",0,"layout hints for menu in menubar");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__X3DLN_TGLayoutHints),-1,-1,4,"fMenuBarHelpLayout=",0,"layout hint for help menu in menubar");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__X3DLN_TGLayoutHints),-1,-1,4,"fCanvasLayout=",0,"layout for canvas widget");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fWidth=",0,"viewer width");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fHeight=",0,"viewer height");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fXPos=",0,"viewer X position");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fYPos=",0,"viewer Y position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__X3DLN_TVirtualPad),-1,-1,4,"fPad=",0,"pad we are attached to");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fBuildingScene=",0,"Rebuilding 3D scene");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__X3DLN_TViewerX3DcLcLEPass),-1,-2,1,"kSize=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__X3DLN_TViewerX3DcLcLEPass),-1,-2,1,"kDraw=1",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__X3DLN_TViewerX3DcLcLEPass),-1,-1,4,"fPass=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"fgCreated=",0,"TViewerX3D is a singleton");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__X3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__X3D() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTViewerX3D(void) {
   /* TViewerX3D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__X3DLN_TViewerX3D));
   G__memfunc_setup("CreateViewer",1222,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitX3DWindow",1243,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteX3DWindow",1434,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleContainerButton",2155,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'Event_t' - 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TViewerX3D",917,G__G__X3D_216_0_5, 105, G__get_linked_tagnum(&G__G__X3DLN_TViewerX3D), -1, 0, 1, 1, 1, 0, "U 'TVirtualPad' - 0 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TViewerX3D",917,G__G__X3D_216_0_6, 105, G__get_linked_tagnum(&G__G__X3DLN_TViewerX3D), -1, 0, 5, 1, 1, 0, 
"U 'TVirtualPad' - 0 - pad C - 'Option_t' 10 - option "
"C - - 10 '\"X3D Viewer\"' title h - 'UInt_t' 0 '800' width "
"h - 'UInt_t' 0 '600' height", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TViewerX3D",917,G__G__X3D_216_0_7, 105, G__get_linked_tagnum(&G__G__X3DLN_TViewerX3D), -1, 0, 7, 1, 1, 0, 
"U 'TVirtualPad' - 0 - pad C - 'Option_t' 10 - option "
"C - - 10 - title i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y h - 'UInt_t' 0 - width "
"h - 'UInt_t' 0 - height", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExecCommand",1092,G__G__X3D_216_0_8, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py "
"c - - 0 - command", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__G__X3D_216_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 1 - longitude f - 'Float_t' 1 - latitude "
"f - 'Float_t' 1 - psi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Iconify",721,G__G__X3D_216_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__G__X3D_216_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,G__G__X3D_216_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__G__X3D_216_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintPolyMarker",1538,G__G__X3D_216_0_14, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TBuffer3D' - 11 - buffer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreferLocalFrame",1594,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BeginScene",979,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildingScene",1308,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndScene",773,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddObject",864,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'TBuffer3D' - 11 - buffer G - 'Bool_t' 0 '0' addChildren", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddObject",864,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - placedID u 'TBuffer3D' - 11 - buffer "
"G - 'Bool_t' 0 '0' addChildren", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OpenComposite",1349,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TBuffer3D' - 11 - - G - 'Bool_t' 0 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseComposite",1449,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddCompositeOp",1403,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessFrameMessage",1935,G__G__X3D_216_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__X3D_216_0_25, 85, G__get_linked_tagnum(&G__G__X3DLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TViewerX3D::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__X3D_216_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TViewerX3D::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__X3D_216_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TViewerX3D::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__X3D_216_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TViewerX3D::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__X3DLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__X3D_216_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__X3D_216_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TViewerX3D::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__X3D_216_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TViewerX3D::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__X3D_216_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TViewerX3D::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__X3D_216_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TViewerX3D::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TViewerX3D", 917, G__G__X3D_216_0_37, (int) ('i'), G__get_linked_tagnum(&G__G__X3DLN_TViewerX3D), -1, 0, 1, 1, 1, 0, "u 'TViewerX3D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TViewerX3D", 1043, G__G__X3D_216_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__X3D_216_0_39, (int) ('u'), G__get_linked_tagnum(&G__G__X3DLN_TViewerX3D), -1, 1, 1, 1, 1, 0, "u 'TViewerX3D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__X3D() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__X3D() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__X3D() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__X3DLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_Event_t = { "Event_t" , 115 , -1 };
G__linked_taginfo G__G__X3DLN_TGLayoutHints = { "TGLayoutHints" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__X3DLN_TViewerX3D = { "TViewerX3D" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_TX3DFrame = { "TX3DFrame" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_TBuffer3D = { "TBuffer3D" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_TVirtualPad = { "TVirtualPad" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_TVirtualViewer3D = { "TVirtualViewer3D" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_TGCanvas = { "TGCanvas" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_TGMenuBar = { "TGMenuBar" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_TGPopupMenu = { "TGPopupMenu" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_TX3DContainer = { "TX3DContainer" , 99 , -1 };
G__linked_taginfo G__G__X3DLN_TViewerX3DcLcLEPass = { "TViewerX3D::EPass" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__X3D() {
  G__G__X3DLN_TClass.tagnum = -1 ;
  G__G__X3DLN_TBuffer.tagnum = -1 ;
  G__G__X3DLN_TMemberInspector.tagnum = -1 ;
  G__G__X3DLN_TObject.tagnum = -1 ;
  G__G__X3DLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__X3DLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__X3DLN_TString.tagnum = -1 ;
  G__G__X3DLN_Event_t.tagnum = -1 ;
  G__G__X3DLN_TGLayoutHints.tagnum = -1 ;
  G__G__X3DLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__X3DLN_TViewerX3D.tagnum = -1 ;
  G__G__X3DLN_TX3DFrame.tagnum = -1 ;
  G__G__X3DLN_TBuffer3D.tagnum = -1 ;
  G__G__X3DLN_TVirtualPad.tagnum = -1 ;
  G__G__X3DLN_TVirtualViewer3D.tagnum = -1 ;
  G__G__X3DLN_TGCanvas.tagnum = -1 ;
  G__G__X3DLN_TGMenuBar.tagnum = -1 ;
  G__G__X3DLN_TGPopupMenu.tagnum = -1 ;
  G__G__X3DLN_TX3DContainer.tagnum = -1 ;
  G__G__X3DLN_TViewerX3DcLcLEPass.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__X3D() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__X3DLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_TString);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_Event_t);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_TGLayoutHints);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__X3DLN_TViewerX3D),sizeof(TViewerX3D),-1,62464,"Interface to the X3D viewer",G__setup_memvarTViewerX3D,G__setup_memfuncTViewerX3D);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_TX3DFrame);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_TBuffer3D);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_TVirtualPad);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_TVirtualViewer3D);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_TGCanvas);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_TGMenuBar);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_TGPopupMenu);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_TX3DContainer);
   G__get_linked_tagnum_fwd(&G__G__X3DLN_TViewerX3DcLcLEPass);
}
extern "C" void G__cpp_setupG__X3D(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__X3D()");
  G__set_cpp_environmentG__X3D();
  G__cpp_setup_tagtableG__X3D();

  G__cpp_setup_inheritanceG__X3D();

  G__cpp_setup_typetableG__X3D();

  G__cpp_setup_memvarG__X3D();

  G__cpp_setup_memfuncG__X3D();
  G__cpp_setup_globalG__X3D();
  G__cpp_setup_funcG__X3D();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__X3D();
  return;
}
class G__cpp_setup_initG__X3D {
  public:
    G__cpp_setup_initG__X3D() { G__add_setup_func("G__X3D",(G__incsetup)(&G__cpp_setupG__X3D)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__X3D() { G__remove_setup_func("G__X3D"); }
};
G__cpp_setup_initG__X3D G__cpp_setup_initializerG__X3D;

