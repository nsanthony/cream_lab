//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:50:03 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__PyROOT.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TPyDispatcher_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TPyDispatcher(void *p);
   static void deleteArray_TPyDispatcher(void *p);
   static void destruct_TPyDispatcher(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPyDispatcher*)
   {
      ::TPyDispatcher *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPyDispatcher >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPyDispatcher", ::TPyDispatcher::Class_Version(), "include/TPyDispatcher.h", 25,
                  typeid(::TPyDispatcher), DefineBehavior(ptr, ptr),
                  &::TPyDispatcher::Dictionary, isa_proxy, 0,
                  sizeof(::TPyDispatcher) );
      instance.SetDelete(&delete_TPyDispatcher);
      instance.SetDeleteArray(&deleteArray_TPyDispatcher);
      instance.SetDestructor(&destruct_TPyDispatcher);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPyDispatcher*)
   {
      return GenerateInitInstanceLocal((::TPyDispatcher*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPyDispatcher*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace PyROOT {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void PyROOT_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("PyROOT", 0 /*version*/, "include/TPyROOTApplication.h", 21,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &PyROOT_Dictionary, 0);
         return &instance;
      }
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void PyROOT_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void PyROOTcLcLTPyException_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_PyROOTcLcLTPyException(void *p = 0);
   static void *newArray_PyROOTcLcLTPyException(Long_t size, void *p);
   static void delete_PyROOTcLcLTPyException(void *p);
   static void deleteArray_PyROOTcLcLTPyException(void *p);
   static void destruct_PyROOTcLcLTPyException(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PyROOT::TPyException*)
   {
      ::PyROOT::TPyException *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PyROOT::TPyException >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PyROOT::TPyException", ::PyROOT::TPyException::Class_Version(), "include/TPyException.h", 48,
                  typeid(::PyROOT::TPyException), DefineBehavior(ptr, ptr),
                  &::PyROOT::TPyException::Dictionary, isa_proxy, 0,
                  sizeof(::PyROOT::TPyException) );
      instance.SetNew(&new_PyROOTcLcLTPyException);
      instance.SetNewArray(&newArray_PyROOTcLcLTPyException);
      instance.SetDelete(&delete_PyROOTcLcLTPyException);
      instance.SetDeleteArray(&deleteArray_PyROOTcLcLTPyException);
      instance.SetDestructor(&destruct_PyROOTcLcLTPyException);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PyROOT::TPyException*)
   {
      return GenerateInitInstanceLocal((::PyROOT::TPyException*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PyROOT::TPyException*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPyReturn_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TPyReturn(void *p = 0);
   static void *newArray_TPyReturn(Long_t size, void *p);
   static void delete_TPyReturn(void *p);
   static void deleteArray_TPyReturn(void *p);
   static void destruct_TPyReturn(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPyReturn*)
   {
      ::TPyReturn *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPyReturn >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPyReturn", ::TPyReturn::Class_Version(), "include/TPyReturn.h", 26,
                  typeid(::TPyReturn), DefineBehavior(ptr, ptr),
                  &::TPyReturn::Dictionary, isa_proxy, 0,
                  sizeof(::TPyReturn) );
      instance.SetNew(&new_TPyReturn);
      instance.SetNewArray(&newArray_TPyReturn);
      instance.SetDelete(&delete_TPyReturn);
      instance.SetDeleteArray(&deleteArray_TPyReturn);
      instance.SetDestructor(&destruct_TPyReturn);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPyReturn*)
   {
      return GenerateInitInstanceLocal((::TPyReturn*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPyReturn*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void PyROOTcLcLTPyROOTApplication_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_PyROOTcLcLTPyROOTApplication(void *p);
   static void deleteArray_PyROOTcLcLTPyROOTApplication(void *p);
   static void destruct_PyROOTcLcLTPyROOTApplication(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PyROOT::TPyROOTApplication*)
   {
      ::PyROOT::TPyROOTApplication *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PyROOT::TPyROOTApplication >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PyROOT::TPyROOTApplication", ::PyROOT::TPyROOTApplication::Class_Version(), "include/TPyROOTApplication.h", 23,
                  typeid(::PyROOT::TPyROOTApplication), DefineBehavior(ptr, ptr),
                  &::PyROOT::TPyROOTApplication::Dictionary, isa_proxy, 0,
                  sizeof(::PyROOT::TPyROOTApplication) );
      instance.SetDelete(&delete_PyROOTcLcLTPyROOTApplication);
      instance.SetDeleteArray(&deleteArray_PyROOTcLcLTPyROOTApplication);
      instance.SetDestructor(&destruct_PyROOTcLcLTPyROOTApplication);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PyROOT::TPyROOTApplication*)
   {
      return GenerateInitInstanceLocal((::PyROOT::TPyROOTApplication*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PyROOT::TPyROOTApplication*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPySelector_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TPySelector(void *p = 0);
   static void *newArray_TPySelector(Long_t size, void *p);
   static void delete_TPySelector(void *p);
   static void deleteArray_TPySelector(void *p);
   static void destruct_TPySelector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPySelector*)
   {
      ::TPySelector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPySelector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPySelector", ::TPySelector::Class_Version(), "include/TPySelector.h", 29,
                  typeid(::TPySelector), DefineBehavior(ptr, ptr),
                  &::TPySelector::Dictionary, isa_proxy, 0,
                  sizeof(::TPySelector) );
      instance.SetNew(&new_TPySelector);
      instance.SetNewArray(&newArray_TPySelector);
      instance.SetDelete(&delete_TPySelector);
      instance.SetDeleteArray(&deleteArray_TPySelector);
      instance.SetDestructor(&destruct_TPySelector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPySelector*)
   {
      return GenerateInitInstanceLocal((::TPySelector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPySelector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPython_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TPython(void *p = 0);
   static void *newArray_TPython(Long_t size, void *p);
   static void delete_TPython(void *p);
   static void deleteArray_TPython(void *p);
   static void destruct_TPython(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPython*)
   {
      ::TPython *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPython >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPython", ::TPython::Class_Version(), "include/TPython.h", 25,
                  typeid(::TPython), DefineBehavior(ptr, ptr),
                  &::TPython::Dictionary, isa_proxy, 0,
                  sizeof(::TPython) );
      instance.SetNew(&new_TPython);
      instance.SetNewArray(&newArray_TPython);
      instance.SetDelete(&delete_TPython);
      instance.SetDeleteArray(&deleteArray_TPython);
      instance.SetDestructor(&destruct_TPython);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPython*)
   {
      return GenerateInitInstanceLocal((::TPython*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPython*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TPyDispatcher::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPyDispatcher::Class_Name()
{
   return "TPyDispatcher";
}

//______________________________________________________________________________
const char *TPyDispatcher::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPyDispatcher*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPyDispatcher::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPyDispatcher*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPyDispatcher::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPyDispatcher*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPyDispatcher::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPyDispatcher*)0x0)->GetClass();
   return fgIsA;
}

      namespace PyROOT {
//______________________________________________________________________________
TClass *TPyException::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPyException::Class_Name()
{
   return "PyROOT::TPyException";
}

//______________________________________________________________________________
const char *TPyException::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PyROOT::TPyException*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPyException::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PyROOT::TPyException*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPyException::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PyROOT::TPyException*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPyException::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PyROOT::TPyException*)0x0)->GetClass();
   return fgIsA;
}

} // namespace PyROOT
//______________________________________________________________________________
TClass *TPyReturn::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPyReturn::Class_Name()
{
   return "TPyReturn";
}

//______________________________________________________________________________
const char *TPyReturn::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPyReturn*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPyReturn::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPyReturn*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPyReturn::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPyReturn*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPyReturn::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPyReturn*)0x0)->GetClass();
   return fgIsA;
}

      namespace PyROOT {
//______________________________________________________________________________
TClass *TPyROOTApplication::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPyROOTApplication::Class_Name()
{
   return "PyROOT::TPyROOTApplication";
}

//______________________________________________________________________________
const char *TPyROOTApplication::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PyROOT::TPyROOTApplication*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPyROOTApplication::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PyROOT::TPyROOTApplication*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPyROOTApplication::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PyROOT::TPyROOTApplication*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPyROOTApplication::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PyROOT::TPyROOTApplication*)0x0)->GetClass();
   return fgIsA;
}

} // namespace PyROOT
//______________________________________________________________________________
TClass *TPySelector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPySelector::Class_Name()
{
   return "TPySelector";
}

//______________________________________________________________________________
const char *TPySelector::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPySelector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPySelector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPySelector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPySelector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPySelector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPySelector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPySelector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPython::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPython::Class_Name()
{
   return "TPython";
}

//______________________________________________________________________________
const char *TPython::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPython*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPython::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPython*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPython::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPython*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPython::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPython*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TPython::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPython.

   ::Error("TPython::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TPython::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPython.
      TClass *R__cl = ::TPython::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPython(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TPython : new ::TPython;
   }
   static void *newArray_TPython(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TPython[nElements] : new ::TPython[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPython(void *p) {
      delete ((::TPython*)p);
   }
   static void deleteArray_TPython(void *p) {
      delete [] ((::TPython*)p);
   }
   static void destruct_TPython(void *p) {
      typedef ::TPython current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPython

//______________________________________________________________________________
void TPyReturn::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPyReturn.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.CheckByteCount(R__s, R__c, TPyReturn::IsA());
   } else {
      R__c = R__b.WriteVersion(TPyReturn::IsA(), kTRUE);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TPyReturn::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPyReturn.
      TClass *R__cl = ::TPyReturn::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fPyObject", &fPyObject);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPyReturn(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TPyReturn : new ::TPyReturn;
   }
   static void *newArray_TPyReturn(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TPyReturn[nElements] : new ::TPyReturn[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPyReturn(void *p) {
      delete ((::TPyReturn*)p);
   }
   static void deleteArray_TPyReturn(void *p) {
      delete [] ((::TPyReturn*)p);
   }
   static void destruct_TPyReturn(void *p) {
      typedef ::TPyReturn current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPyReturn

//______________________________________________________________________________
void TPyDispatcher::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPyDispatcher.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TPyDispatcher::IsA());
   } else {
      R__c = R__b.WriteVersion(TPyDispatcher::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TPyDispatcher::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPyDispatcher.
      TClass *R__cl = ::TPyDispatcher::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fCallable", &fCallable);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TPyDispatcher(void *p) {
      delete ((::TPyDispatcher*)p);
   }
   static void deleteArray_TPyDispatcher(void *p) {
      delete [] ((::TPyDispatcher*)p);
   }
   static void destruct_TPyDispatcher(void *p) {
      typedef ::TPyDispatcher current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPyDispatcher

//______________________________________________________________________________
void TPySelector::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPySelector.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TSelector::Streamer(R__b);
      R__b >> fChain;
      R__b.CheckByteCount(R__s, R__c, TPySelector::IsA());
   } else {
      R__c = R__b.WriteVersion(TPySelector::IsA(), kTRUE);
      TSelector::Streamer(R__b);
      R__b << fChain;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TPySelector::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPySelector.
      TClass *R__cl = ::TPySelector::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__parent, "*fPySelf", &fPySelf);
      TSelector::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPySelector(void *p) {
      return  p ? new(p) ::TPySelector : new ::TPySelector;
   }
   static void *newArray_TPySelector(Long_t nElements, void *p) {
      return p ? new(p) ::TPySelector[nElements] : new ::TPySelector[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPySelector(void *p) {
      delete ((::TPySelector*)p);
   }
   static void deleteArray_TPySelector(void *p) {
      delete [] ((::TPySelector*)p);
   }
   static void destruct_TPySelector(void *p) {
      typedef ::TPySelector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPySelector

      namespace PyROOT {
//______________________________________________________________________________
void TPyException::Streamer(TBuffer &R__b)
{
   // Stream an object of class PyROOT::TPyException.

   ::Error("PyROOT::TPyException::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

} // namespace PyROOT
//______________________________________________________________________________
      namespace PyROOT {
void TPyException::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class PyROOT::TPyException.
      TClass *R__cl = ::PyROOT::TPyException::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("exception", ( ::exception *) (this ), R__insp, R__parent, false);
}

} // namespace PyROOT
namespace ROOT {
   // Wrappers around operator new
   static void *new_PyROOTcLcLTPyException(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PyROOT::TPyException : new ::PyROOT::TPyException;
   }
   static void *newArray_PyROOTcLcLTPyException(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PyROOT::TPyException[nElements] : new ::PyROOT::TPyException[nElements];
   }
   // Wrapper around operator delete
   static void delete_PyROOTcLcLTPyException(void *p) {
      delete ((::PyROOT::TPyException*)p);
   }
   static void deleteArray_PyROOTcLcLTPyException(void *p) {
      delete [] ((::PyROOT::TPyException*)p);
   }
   static void destruct_PyROOTcLcLTPyException(void *p) {
      typedef ::PyROOT::TPyException current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PyROOT::TPyException

      namespace PyROOT {
//______________________________________________________________________________
void TPyROOTApplication::Streamer(TBuffer &R__b)
{
   // Stream an object of class PyROOT::TPyROOTApplication.

   TApplication::Streamer(R__b);
}

} // namespace PyROOT
//______________________________________________________________________________
      namespace PyROOT {
void TPyROOTApplication::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class PyROOT::TPyROOTApplication.
      TClass *R__cl = ::PyROOT::TPyROOTApplication::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TApplication::ShowMembers(R__insp, R__parent);
}

} // namespace PyROOT
namespace ROOT {
   // Wrapper around operator delete
   static void delete_PyROOTcLcLTPyROOTApplication(void *p) {
      delete ((::PyROOT::TPyROOTApplication*)p);
   }
   static void deleteArray_PyROOTcLcLTPyROOTApplication(void *p) {
      delete [] ((::PyROOT::TPyROOTApplication*)p);
   }
   static void destruct_PyROOTcLcLTPyROOTApplication(void *p) {
      typedef ::PyROOT::TPyROOTApplication current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PyROOT::TPyROOTApplication

/********************************************************
* bindings/pyroot/src/G__PyROOT.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__PyROOT();

extern "C" void G__set_cpp_environmentG__PyROOT() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TPyDispatcher.h");
  G__add_compiledheader("TPyException.h");
  G__add_compiledheader("TPyReturn.h");
  G__add_compiledheader("TPyROOTApplication.h");
  G__add_compiledheader("TPySelector.h");
  G__add_compiledheader("TPython.h");
  G__cpp_reset_tagtableG__PyROOT();
}
#include <new>
extern "C" int G__cpp_dllrevG__PyROOT() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TPyDispatcher */
static int G__G__PyROOT_96_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPyDispatcher* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TPyDispatcher((PyObject*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TPyDispatcher((PyObject*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PyROOTLN_TPyDispatcher));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPyDispatcher* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TPyDispatcher(*(TPyDispatcher*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TPyDispatcher(*(TPyDispatcher*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PyROOTLN_TPyDispatcher));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TPyDispatcher& obj = ((TPyDispatcher*) G__getstructoffset())->operator=(*(TPyDispatcher*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__va_arg_buf G__va_arg_bufobj;
   G__va_arg_put(&G__va_arg_bufobj, libp, 1);
      G__letint(result7, 85, (long) ((TPyDispatcher*) G__getstructoffset())->DispatchVA((const char*) G__int(libp->para[0]), G__va_arg_bufobj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPyDispatcher*) G__getstructoffset())->Dispatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPyDispatcher*) G__getstructoffset())->Dispatch((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPyDispatcher*) G__getstructoffset())->Dispatch((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPyDispatcher*) G__getstructoffset())->Dispatch((Long_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPyDispatcher*) G__getstructoffset())->Dispatch((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPyDispatcher::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPyDispatcher::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPyDispatcher::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPyDispatcher::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPyDispatcher*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPyDispatcher::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPyDispatcher::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPyDispatcher::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_96_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPyDispatcher::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPyDispatcher G__TTPyDispatcher;
static int G__G__PyROOT_96_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPyDispatcher*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPyDispatcher*) (soff+(sizeof(TPyDispatcher)*i)))->~G__TTPyDispatcher();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPyDispatcher*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPyDispatcher*) (soff))->~G__TTPyDispatcher();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PyROOT */

/* PyROOT::TPyException */
static int G__G__PyROOT_101_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PyROOT::TPyException* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PyROOT::TPyException[n];
     } else {
       p = new((void*) gvp) PyROOT::TPyException[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PyROOT::TPyException;
     } else {
       p = new((void*) gvp) PyROOT::TPyException;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyException));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_101_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const PyROOT::TPyException*) G__getstructoffset())->what());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_101_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PyROOT::TPyException::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_101_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PyROOT::TPyException::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_101_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PyROOT::TPyException::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_101_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PyROOT::TPyException::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_101_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const PyROOT::TPyException*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_101_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PyROOT::TPyException*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_101_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PyROOT::TPyException*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_101_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PyROOT::TPyException*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_101_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PyROOT::TPyException::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_101_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PyROOT::TPyException::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_101_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PyROOT::TPyException::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_101_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PyROOT::TPyException::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__PyROOT_101_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PyROOT::TPyException* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PyROOT::TPyException(*(PyROOT::TPyException*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyException));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PyROOT::TPyException G__TPyROOTcLcLTPyException;
static int G__G__PyROOT_101_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PyROOT::TPyException*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PyROOT::TPyException*) (soff+(sizeof(PyROOT::TPyException)*i)))->~G__TPyROOTcLcLTPyException();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PyROOT::TPyException*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PyROOT::TPyException*) (soff))->~G__TPyROOTcLcLTPyException();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__PyROOT_101_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PyROOT::TPyException* dest = (PyROOT::TPyException*) G__getstructoffset();
   *dest = *(PyROOT::TPyException*) libp->para[0].ref;
   const PyROOT::TPyException& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPyReturn */
static int G__G__PyROOT_102_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPyReturn* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPyReturn[n];
     } else {
       p = new((void*) gvp) TPyReturn[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPyReturn;
     } else {
       p = new((void*) gvp) TPyReturn;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PyROOTLN_TPyReturn));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPyReturn* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TPyReturn((PyObject*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TPyReturn((PyObject*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PyROOTLN_TPyReturn));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPyReturn* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TPyReturn(*(TPyReturn*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TPyReturn(*(TPyReturn*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PyROOTLN_TPyReturn));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TPyReturn& obj = ((TPyReturn*) G__getstructoffset())->operator=(*(TPyReturn*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TPyReturn*) G__getstructoffset())->operator const char*());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((const TPyReturn*) G__getstructoffset())->operator Char_t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const TPyReturn*) G__getstructoffset())->operator Long_t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPyReturn*) G__getstructoffset())->operator Int_t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TPyReturn*) G__getstructoffset())->operator Short_t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const TPyReturn*) G__getstructoffset())->operator ULong_t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TPyReturn*) G__getstructoffset())->operator UInt_t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const TPyReturn*) G__getstructoffset())->operator UShort_t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TPyReturn*) G__getstructoffset())->operator Double_t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TPyReturn*) G__getstructoffset())->operator Float_t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((const TPyReturn*) G__getstructoffset())->operator void*());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TPyReturn*) G__getstructoffset())->operator ::_object*());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPyReturn::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPyReturn::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPyReturn::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPyReturn::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TPyReturn*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPyReturn*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPyReturn*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPyReturn*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPyReturn::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPyReturn::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPyReturn::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_102_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPyReturn::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPyReturn G__TTPyReturn;
static int G__G__PyROOT_102_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPyReturn*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPyReturn*) (soff+(sizeof(TPyReturn)*i)))->~G__TTPyReturn();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPyReturn*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPyReturn*) (soff))->~G__TTPyReturn();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PyROOT::TPyROOTApplication */
static int G__G__PyROOT_122_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) PyROOT::TPyROOTApplication::CreatePyROOTApplication((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) PyROOT::TPyROOTApplication::CreatePyROOTApplication());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_122_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) PyROOT::TPyROOTApplication::InitROOTGlobals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_122_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) PyROOT::TPyROOTApplication::InitCINTMessageCallback());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_122_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) PyROOT::TPyROOTApplication::InitROOTMessageCallback());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_122_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PyROOT::TPyROOTApplication* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PyROOT::TPyROOTApplication(
(const char*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) PyROOT::TPyROOTApplication(
(const char*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PyROOT::TPyROOTApplication(
(const char*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) PyROOT::TPyROOTApplication(
(const char*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (char**) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyROOTApplication));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_122_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PyROOT::TPyROOTApplication::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_122_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PyROOT::TPyROOTApplication::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_122_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PyROOT::TPyROOTApplication::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_122_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PyROOT::TPyROOTApplication::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_122_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PyROOT::TPyROOTApplication*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_122_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PyROOT::TPyROOTApplication::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_122_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PyROOT::TPyROOTApplication::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_122_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PyROOT::TPyROOTApplication::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_122_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PyROOT::TPyROOTApplication::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PyROOT::TPyROOTApplication G__TPyROOTcLcLTPyROOTApplication;
static int G__G__PyROOT_122_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PyROOT::TPyROOTApplication*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PyROOT::TPyROOTApplication*) (soff+(sizeof(PyROOT::TPyROOTApplication)*i)))->~G__TPyROOTcLcLTPyROOTApplication();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PyROOT::TPyROOTApplication*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PyROOT::TPyROOTApplication*) (soff))->~G__TPyROOTcLcLTPyROOTApplication();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPySelector */
static int G__G__PyROOT_197_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPySelector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPySelector((TTree*) G__int(libp->para[0]), (PyObject*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TPySelector((TTree*) G__int(libp->para[0]), (PyObject*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPySelector((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TPySelector((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TPySelector[n];
       } else {
         p = new((void*) gvp) TPySelector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TPySelector;
       } else {
         p = new((void*) gvp) TPySelector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PyROOTLN_TPySelector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_197_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TPySelector*) G__getstructoffset())->Begin((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TPySelector*) G__getstructoffset())->Begin();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_197_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPySelector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_197_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPySelector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_197_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPySelector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_197_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPySelector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_197_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPySelector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_197_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPySelector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_197_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPySelector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_197_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPySelector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_197_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPySelector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPySelector G__TTPySelector;
static int G__G__PyROOT_197_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPySelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPySelector*) (soff+(sizeof(TPySelector)*i)))->~G__TTPySelector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPySelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPySelector*) (soff))->~G__TTPySelector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPython */
static int G__G__PyROOT_198_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPython::LoadMacro((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      TPython::ExecScript((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (const char**) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TPython::ExecScript((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      TPython::ExecScript((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TPython::Exec((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TPyReturn* pobj;
         TPyReturn xobj = TPython::Eval((const char*) G__int(libp->para[0]));
         pobj = new TPyReturn(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TPython::Bind((TObject*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPython::Prompt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TPython::ObjectProxy_Check((PyObject*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TPython::ObjectProxy_CheckExact((PyObject*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) TPython::ObjectProxy_AsVoidPtr((PyObject*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPython::ObjectProxy_FromVoidPtr((void*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPython::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPython::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPython::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPython::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TPython*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPython*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPython*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPython*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPython::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPython::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPython::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PyROOT_198_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPython::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__PyROOT_198_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPython *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPython[n];
     } else {
       p = new((void*) gvp) TPython[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPython;
     } else {
       p = new((void*) gvp) TPython;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PyROOTLN_TPython));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__PyROOT_198_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TPython* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TPython(*(TPython*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PyROOTLN_TPython));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPython G__TTPython;
static int G__G__PyROOT_198_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPython*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPython*) (soff+(sizeof(TPython)*i)))->~G__TTPython();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPython*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPython*) (soff))->~G__TTPython();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__PyROOT_198_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPython* dest = (TPython*) G__getstructoffset();
   *dest = *(TPython*) libp->para[0].ref;
   const TPython& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TPyDispatcher */

/* PyROOT */

/* PyROOT::TPyException */

/* TPyReturn */

/* PyROOT::TPyROOTApplication */

/* TPySelector */

/* TPython */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__PyROOT {
 public:
  G__Sizep2memfuncG__PyROOT(): p(&G__Sizep2memfuncG__PyROOT::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__PyROOT::*p)();
};

size_t G__get_sizep2memfuncG__PyROOT()
{
  G__Sizep2memfuncG__PyROOT a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__PyROOT() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PyROOTLN_TPyDispatcher))) {
     TPyDispatcher *G__Lderived;
     G__Lderived=(TPyDispatcher*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PyROOTLN_TPyDispatcher),G__get_linked_tagnum(&G__G__PyROOTLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyException))) {
     PyROOT::TPyException *G__Lderived;
     G__Lderived=(PyROOT::TPyException*)0x1000;
     {
       exception *G__Lpbase=(exception*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyException),G__get_linked_tagnum(&G__G__PyROOTLN_exception),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyROOTApplication))) {
     PyROOT::TPyROOTApplication *G__Lderived;
     G__Lderived=(PyROOT::TPyROOTApplication*)0x1000;
     {
       TApplication *G__Lpbase=(TApplication*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyROOTApplication),G__get_linked_tagnum(&G__G__PyROOTLN_TApplication),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyROOTApplication),G__get_linked_tagnum(&G__G__PyROOTLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyROOTApplication),G__get_linked_tagnum(&G__G__PyROOTLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PyROOTLN_TPySelector))) {
     TPySelector *G__Lderived;
     G__Lderived=(TPySelector*)0x1000;
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PyROOTLN_TPySelector),G__get_linked_tagnum(&G__G__PyROOTLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PyROOTLN_TPySelector),G__get_linked_tagnum(&G__G__PyROOTLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__PyROOT() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 4 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 4 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__PyROOTLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__PyROOTLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__PyROOTLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__PyROOTLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__PyROOTLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__PyROOTLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("PyObject",117,G__get_linked_tagnum(&G__G__PyROOTLN__object),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__PyROOTLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__PyROOTLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__PyROOTLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__PyROOTLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__PyROOTLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__PyROOTLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__PyROOTLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TPyDispatcher */
static void G__setup_memvarTPyDispatcher(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PyROOTLN_TPyDispatcher));
   { TPyDispatcher *p; p=(TPyDispatcher*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PyROOTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PyROOTLN__object),G__defined_typename("PyObject"),-1,4,"fCallable=",0,"! callable object to be dispatched");
   }
   G__tag_memvar_reset();
}


   /* PyROOT */
static void G__setup_memvarPyROOT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PyROOTLN_PyROOT));
   {
   G__memvar_setup((void*)(&PyROOT::TPyExceptionMagic),89,0,0,-1,-1,-1,1,"TPyExceptionMagic=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PyROOT::TPyException */
static void G__setup_memvarPyROOTcLcLTPyException(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyException));
   { PyROOT::TPyException *p; p=(PyROOT::TPyException*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PyROOTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPyReturn */
static void G__setup_memvarTPyReturn(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PyROOTLN_TPyReturn));
   { TPyReturn *p; p=(TPyReturn*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PyROOTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PyROOTLN__object),G__defined_typename("PyObject"),-1,4,"fPyObject=",0,"! actual python object");
   }
   G__tag_memvar_reset();
}


   /* PyROOT::TPyROOTApplication */
static void G__setup_memvarPyROOTcLcLTPyROOTApplication(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyROOTApplication));
   { PyROOT::TPyROOTApplication *p; p=(PyROOT::TPyROOTApplication*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PyROOTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPySelector */
static void G__setup_memvarTPySelector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PyROOTLN_TPySelector));
   { TPySelector *p; p=(TPySelector*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__PyROOTLN_TTree),-1,-1,1,"fChain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PyROOTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PyROOTLN__object),G__defined_typename("PyObject"),-1,4,"fPySelf=",0,"! actual python object");
   }
   G__tag_memvar_reset();
}


   /* TPython */
static void G__setup_memvarTPython(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PyROOTLN_TPython));
   { TPython *p; p=(TPython*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PyROOTLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__PyROOT() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTPyDispatcher(void) {
   /* TPyDispatcher */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PyROOTLN_TPyDispatcher));
   G__memfunc_setup("TPyDispatcher",1316,G__G__PyROOT_96_0_1, 105, G__get_linked_tagnum(&G__G__PyROOTLN_TPyDispatcher), -1, 0, 1, 1, 1, 0, "U '_object' 'PyObject' 0 - callable", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPyDispatcher",1316,G__G__PyROOT_96_0_2, 105, G__get_linked_tagnum(&G__G__PyROOTLN_TPyDispatcher), -1, 0, 1, 1, 1, 0, "u 'TPyDispatcher' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__PyROOT_96_0_3, 117, G__get_linked_tagnum(&G__G__PyROOTLN_TPyDispatcher), -1, 1, 1, 1, 1, 0, "u 'TPyDispatcher' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DispatchVA",967,G__G__PyROOT_96_0_4, 85, G__get_linked_tagnum(&G__G__PyROOTLN__object), G__defined_typename("PyObject"), 0, 1, 8, 1, 0, "C - - 10 - format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dispatch",816,G__G__PyROOT_96_0_5, 85, G__get_linked_tagnum(&G__G__PyROOTLN__object), G__defined_typename("PyObject"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dispatch",816,G__G__PyROOT_96_0_6, 85, G__get_linked_tagnum(&G__G__PyROOTLN__object), G__defined_typename("PyObject"), 0, 1, 1, 1, 0, "C - - 10 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dispatch",816,G__G__PyROOT_96_0_7, 85, G__get_linked_tagnum(&G__G__PyROOTLN__object), G__defined_typename("PyObject"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dispatch",816,G__G__PyROOT_96_0_8, 85, G__get_linked_tagnum(&G__G__PyROOTLN__object), G__defined_typename("PyObject"), 0, 1, 1, 1, 0, "l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dispatch",816,G__G__PyROOT_96_0_9, 85, G__get_linked_tagnum(&G__G__PyROOTLN__object), G__defined_typename("PyObject"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__PyROOT_96_0_10, 85, G__get_linked_tagnum(&G__G__PyROOTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPyDispatcher::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__PyROOT_96_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPyDispatcher::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__PyROOT_96_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPyDispatcher::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__PyROOT_96_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPyDispatcher::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PyROOTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__PyROOT_96_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__PyROOT_96_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPyDispatcher::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__PyROOT_96_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPyDispatcher::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__PyROOT_96_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPyDispatcher::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__PyROOT_96_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPyDispatcher::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TPyDispatcher", 1442, G__G__PyROOT_96_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPyROOT(void) {
   /* PyROOT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PyROOTLN_PyROOT));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPyROOTcLcLTPyException(void) {
   /* PyROOT::TPyException */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyException));
   G__memfunc_setup("TPyException",1228,G__G__PyROOT_101_0_1, 105, G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyException), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("what",436,G__G__PyROOT_101_0_2, 67, -1, -1, 0, 0, 1, 1, 41, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__PyROOT_101_0_3, 85, G__get_linked_tagnum(&G__G__PyROOTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PyROOT::TPyException::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__PyROOT_101_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PyROOT::TPyException::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__PyROOT_101_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PyROOT::TPyException::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__PyROOT_101_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PyROOT::TPyException::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__PyROOT_101_0_7, 85, G__get_linked_tagnum(&G__G__PyROOTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__PyROOT_101_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__PyROOT_101_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__PyROOT_101_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__PyROOT_101_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PyROOT::TPyException::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__PyROOT_101_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PyROOT::TPyException::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__PyROOT_101_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PyROOT::TPyException::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__PyROOT_101_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PyROOT::TPyException::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TPyException", 1228, G__G__PyROOT_101_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyException), -1, 0, 1, 1, 1, 0, "u 'PyROOT::TPyException' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPyException", 1354, G__G__PyROOT_101_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__PyROOT_101_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyException), -1, 1, 1, 1, 1, 0, "u 'PyROOT::TPyException' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPyReturn(void) {
   /* TPyReturn */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PyROOTLN_TPyReturn));
   G__memfunc_setup("TPyReturn",925,G__G__PyROOT_102_0_1, 105, G__get_linked_tagnum(&G__G__PyROOTLN_TPyReturn), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPyReturn",925,G__G__PyROOT_102_0_2, 105, G__get_linked_tagnum(&G__G__PyROOTLN_TPyReturn), -1, 0, 1, 1, 1, 0, "U '_object' 'PyObject' 0 - pyobject", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPyReturn",925,G__G__PyROOT_102_0_3, 105, G__get_linked_tagnum(&G__G__PyROOTLN_TPyReturn), -1, 0, 1, 1, 1, 0, "u 'TPyReturn' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__PyROOT_102_0_4, 117, G__get_linked_tagnum(&G__G__PyROOTLN_TPyReturn), -1, 1, 1, 1, 1, 0, "u 'TPyReturn' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator const char*",1947,G__G__PyROOT_102_0_5, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator Char_t",1501,G__G__PyROOT_102_0_6, 99, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator Long_t",1519,G__G__PyROOT_102_0_7, 108, -1, G__defined_typename("Long_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator Int_t",1418,G__G__PyROOT_102_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator Short_t",1647,G__G__PyROOT_102_0_9, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator ULong_t",1604,G__G__PyROOT_102_0_10, 107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator UInt_t",1503,G__G__PyROOT_102_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator UShort_t",1732,G__G__PyROOT_102_0_12, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator Double_t",1722,G__G__PyROOT_102_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator Float_t",1621,G__G__PyROOT_102_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator void*",1384,G__G__PyROOT_102_0_15, 89, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator _object*",1676,G__G__PyROOT_102_0_16, 85, G__get_linked_tagnum(&G__G__PyROOTLN__object), G__defined_typename("PyObject"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__PyROOT_102_0_17, 85, G__get_linked_tagnum(&G__G__PyROOTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPyReturn::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__PyROOT_102_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPyReturn::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__PyROOT_102_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPyReturn::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__PyROOT_102_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPyReturn::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__PyROOT_102_0_21, 85, G__get_linked_tagnum(&G__G__PyROOTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__PyROOT_102_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__PyROOT_102_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__PyROOT_102_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__PyROOT_102_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPyReturn::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__PyROOT_102_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPyReturn::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__PyROOT_102_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPyReturn::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__PyROOT_102_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPyReturn::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TPyReturn", 1051, G__G__PyROOT_102_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPyROOTcLcLTPyROOTApplication(void) {
   /* PyROOT::TPyROOTApplication */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyROOTApplication));
   G__memfunc_setup("CreatePyROOTApplication",2261,G__G__PyROOT_122_0_1, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "g - 'Bool_t' 0 'kTRUE' bLoadLibs", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Bool_t))(&PyROOT::TPyROOTApplication::CreatePyROOTApplication) ), 0);
   G__memfunc_setup("InitROOTGlobals",1436,G__G__PyROOT_122_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Bool_t (*)())(&PyROOT::TPyROOTApplication::InitROOTGlobals) ), 0);
   G__memfunc_setup("InitCINTMessageCallback",2196,G__G__PyROOT_122_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Bool_t (*)())(&PyROOT::TPyROOTApplication::InitCINTMessageCallback) ), 0);
   G__memfunc_setup("InitROOTMessageCallback",2218,G__G__PyROOT_122_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Bool_t (*)())(&PyROOT::TPyROOTApplication::InitROOTMessageCallback) ), 0);
   G__memfunc_setup("TPyROOTApplication",1749,G__G__PyROOT_122_0_5, 105, G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyROOTApplication), -1, 0, 4, 1, 1, 0, 
"C - - 10 - acn I - 'Int_t' 0 - argc "
"C - - 2 - argv g - 'Bool_t' 0 'kTRUE' bLoadLibs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__PyROOT_122_0_6, 85, G__get_linked_tagnum(&G__G__PyROOTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PyROOT::TPyROOTApplication::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__PyROOT_122_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PyROOT::TPyROOTApplication::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__PyROOT_122_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PyROOT::TPyROOTApplication::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__PyROOT_122_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PyROOT::TPyROOTApplication::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PyROOTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__PyROOT_122_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__PyROOT_122_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PyROOT::TPyROOTApplication::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__PyROOT_122_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PyROOT::TPyROOTApplication::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__PyROOT_122_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PyROOT::TPyROOTApplication::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__PyROOT_122_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PyROOT::TPyROOTApplication::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TPyROOTApplication", 1875, G__G__PyROOT_122_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPySelector(void) {
   /* TPySelector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PyROOTLN_TPySelector));
   G__memfunc_setup("TPySelector",1118,G__G__PyROOT_197_0_1, 105, G__get_linked_tagnum(&G__G__PyROOTLN_TPySelector), -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 '0' - U '_object' 'PyObject' 0 '0' self", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Version",742,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntry",818,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - entry i - 'Int_t' 0 '0' getall", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Begin",485,G__G__PyROOT_197_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SlaveTerminate",1444,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Abort",504,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - why i 'TSelector::EAbort' - 0 'kAbortProcess' what", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__PyROOT_197_0_12, 85, G__get_linked_tagnum(&G__G__PyROOTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPySelector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__PyROOT_197_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPySelector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__PyROOT_197_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPySelector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__PyROOT_197_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPySelector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PyROOTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__PyROOT_197_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__PyROOT_197_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPySelector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__PyROOT_197_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPySelector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__PyROOT_197_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPySelector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__PyROOT_197_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPySelector::DeclFileLine) ), 0);
   G__memfunc_setup("SetupPySelf",1124,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CallSelf",774,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__PyROOTLN__object), G__defined_typename("PyObject"), 0, 2, 1, 4, 0, 
"C - - 10 - method U '_object' 'PyObject' 0 '0' pyobject", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPySelector", 1244, G__G__PyROOT_197_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPython(void) {
   /* TPython */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PyROOTLN_TPython));
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 3, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadMacro",882,G__G__PyROOT_198_0_2, 121, -1, -1, 0, 1, 3, 1, 0, "C - - 10 - name", (char*)NULL, (void*) G__func2void( (void (*)(const char*))(&TPython::LoadMacro) ), 0);
   G__memfunc_setup("ExecScript",1018,G__G__PyROOT_198_0_3, 121, -1, -1, 0, 3, 3, 1, 0, 
"C - - 10 - name i - - 0 '0' argc "
"C - - 12 '0' argv", (char*)NULL, (void*) G__func2void( (void (*)(const char*, int, const char**))(&TPython::ExecScript) ), 0);
   G__memfunc_setup("Exec",389,G__G__PyROOT_198_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "C - - 10 - cmd", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const char*))(&TPython::Exec) ), 0);
   G__memfunc_setup("Eval",392,G__G__PyROOT_198_0_5, 117, G__get_linked_tagnum(&G__G__PyROOTLN_TPyReturn), -1, 0, 1, 3, 1, 1, "C - - 10 - expr", (char*)NULL, (void*) G__func2void( (const TPyReturn (*)(const char*))(&TPython::Eval) ), 0);
   G__memfunc_setup("Bind",381,G__G__PyROOT_198_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"U 'TObject' - 0 - object C - - 10 - label", (char*)NULL, (void*) G__func2void( (Bool_t (*)(TObject*, const char*))(&TPython::Bind) ), 0);
   G__memfunc_setup("Prompt",642,G__G__PyROOT_198_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPython::Prompt) ), 0);
   G__memfunc_setup("ObjectProxy_Check",1718,G__G__PyROOT_198_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "U '_object' 'PyObject' 0 - pyobject", (char*)NULL, (void*) G__func2void( (Bool_t (*)(PyObject*))(&TPython::ObjectProxy_Check) ), 0);
   G__memfunc_setup("ObjectProxy_CheckExact",2219,G__G__PyROOT_198_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "U '_object' 'PyObject' 0 - pyobject", (char*)NULL, (void*) G__func2void( (Bool_t (*)(PyObject*))(&TPython::ObjectProxy_CheckExact) ), 0);
   G__memfunc_setup("ObjectProxy_AsVoidPtr",2132,G__G__PyROOT_198_0_10, 89, -1, -1, 0, 1, 3, 1, 0, "U '_object' 'PyObject' 0 - pyobject", (char*)NULL, (void*) G__func2void( (void* (*)(PyObject*))(&TPython::ObjectProxy_AsVoidPtr) ), 0);
   G__memfunc_setup("ObjectProxy_FromVoidPtr",2356,G__G__PyROOT_198_0_11, 85, G__get_linked_tagnum(&G__G__PyROOTLN__object), G__defined_typename("PyObject"), 0, 2, 3, 1, 0, 
"Y - - 0 - addr C - - 10 - classname", (char*)NULL, (void*) G__func2void( (PyObject* (*)(void*, const char*))(&TPython::ObjectProxy_FromVoidPtr) ), 0);
   G__memfunc_setup("Class",502,G__G__PyROOT_198_0_12, 85, G__get_linked_tagnum(&G__G__PyROOTLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPython::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__PyROOT_198_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPython::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__PyROOT_198_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPython::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__PyROOT_198_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPython::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__PyROOT_198_0_16, 85, G__get_linked_tagnum(&G__G__PyROOTLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__PyROOT_198_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__PyROOT_198_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__PyROOT_198_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__PyROOT_198_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPython::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__PyROOT_198_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPython::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__PyROOT_198_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPython::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__PyROOT_198_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPython::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TPython", 726, G__G__PyROOT_198_0_24, (int) ('i'), G__get_linked_tagnum(&G__G__PyROOTLN_TPython), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TPython", 726, G__G__PyROOT_198_0_25, (int) ('i'), G__get_linked_tagnum(&G__G__PyROOTLN_TPython), -1, 0, 1, 1, 1, 0, "u 'TPython' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPython", 852, G__G__PyROOT_198_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__PyROOT_198_0_27, (int) ('u'), G__get_linked_tagnum(&G__G__PyROOTLN_TPython), -1, 1, 1, 1, 1, 0, "u 'TPython' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__PyROOT() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__PyROOT() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__PyROOT() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__PyROOTLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN__object = { "_object" , 115 , -1 };
G__linked_taginfo G__G__PyROOTLN_TPyDispatcher = { "TPyDispatcher" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN_exception = { "exception" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN_PyROOT = { "PyROOT" , 110 , -1 };
G__linked_taginfo G__G__PyROOTLN_PyROOTcLcLTPyException = { "PyROOT::TPyException" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN_TPyReturn = { "TPyReturn" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN_TApplication = { "TApplication" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN_PyROOTcLcLTPyROOTApplication = { "PyROOT::TPyROOTApplication" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__PyROOTLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN_TSelector = { "TSelector" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN_TSelectorcLcLEAbort = { "TSelector::EAbort" , 101 , -1 };
G__linked_taginfo G__G__PyROOTLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN_TPySelector = { "TPySelector" , 99 , -1 };
G__linked_taginfo G__G__PyROOTLN_TPython = { "TPython" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__PyROOT() {
  G__G__PyROOTLN_TClass.tagnum = -1 ;
  G__G__PyROOTLN_TBuffer.tagnum = -1 ;
  G__G__PyROOTLN_TMemberInspector.tagnum = -1 ;
  G__G__PyROOTLN_TObject.tagnum = -1 ;
  G__G__PyROOTLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__PyROOTLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__PyROOTLN__object.tagnum = -1 ;
  G__G__PyROOTLN_TPyDispatcher.tagnum = -1 ;
  G__G__PyROOTLN_exception.tagnum = -1 ;
  G__G__PyROOTLN_PyROOT.tagnum = -1 ;
  G__G__PyROOTLN_PyROOTcLcLTPyException.tagnum = -1 ;
  G__G__PyROOTLN_TPyReturn.tagnum = -1 ;
  G__G__PyROOTLN_TQObject.tagnum = -1 ;
  G__G__PyROOTLN_TApplication.tagnum = -1 ;
  G__G__PyROOTLN_PyROOTcLcLTPyROOTApplication.tagnum = -1 ;
  G__G__PyROOTLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__PyROOTLN_TTree.tagnum = -1 ;
  G__G__PyROOTLN_TSelector.tagnum = -1 ;
  G__G__PyROOTLN_TSelectorcLcLEAbort.tagnum = -1 ;
  G__G__PyROOTLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__PyROOTLN_TPySelector.tagnum = -1 ;
  G__G__PyROOTLN_TPython.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__PyROOT() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__PyROOTLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__PyROOTLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__PyROOTLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__PyROOTLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__PyROOTLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__PyROOTLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__PyROOTLN__object);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PyROOTLN_TPyDispatcher),sizeof(TPyDispatcher),-1,65024,"Python dispatcher class",G__setup_memvarTPyDispatcher,G__setup_memfuncTPyDispatcher);
   G__get_linked_tagnum_fwd(&G__G__PyROOTLN_exception);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PyROOTLN_PyROOT),0,-1,0,(char*)NULL,G__setup_memvarPyROOT,G__setup_memfuncPyROOT);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyException),sizeof(PyROOT::TPyException),-1,1280,"C++ exception for throwing python exceptions",G__setup_memvarPyROOTcLcLTPyException,G__setup_memfuncPyROOTcLcLTPyException);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PyROOTLN_TPyReturn),sizeof(TPyReturn),-1,36608,"Python morphing return object",G__setup_memvarTPyReturn,G__setup_memfuncTPyReturn);
   G__get_linked_tagnum_fwd(&G__G__PyROOTLN_TQObject);
   G__get_linked_tagnum_fwd(&G__G__PyROOTLN_TApplication);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PyROOTLN_PyROOTcLcLTPyROOTApplication),sizeof(PyROOT::TPyROOTApplication),-1,62464,"Setup interactive application",G__setup_memvarPyROOTcLcLTPyROOTApplication,G__setup_memfuncPyROOTcLcLTPyROOTApplication);
   G__get_linked_tagnum_fwd(&G__G__PyROOTLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__PyROOTLN_TTree);
   G__get_linked_tagnum_fwd(&G__G__PyROOTLN_TSelector);
   G__get_linked_tagnum_fwd(&G__G__PyROOTLN_TSelectorcLcLEAbort);
   G__get_linked_tagnum_fwd(&G__G__PyROOTLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PyROOTLN_TPySelector),sizeof(TPySelector),-1,29952,"Python equivalent base class for PROOF",G__setup_memvarTPySelector,G__setup_memfuncTPySelector);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PyROOTLN_TPython),sizeof(TPython),-1,1024,"Access to the python interpreter",G__setup_memvarTPython,G__setup_memfuncTPython);
}
extern "C" void G__cpp_setupG__PyROOT(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__PyROOT()");
  G__set_cpp_environmentG__PyROOT();
  G__cpp_setup_tagtableG__PyROOT();

  G__cpp_setup_inheritanceG__PyROOT();

  G__cpp_setup_typetableG__PyROOT();

  G__cpp_setup_memvarG__PyROOT();

  G__cpp_setup_memfuncG__PyROOT();
  G__cpp_setup_globalG__PyROOT();
  G__cpp_setup_funcG__PyROOT();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__PyROOT();
  return;
}
class G__cpp_setup_initG__PyROOT {
  public:
    G__cpp_setup_initG__PyROOT() { G__add_setup_func("G__PyROOT",(G__incsetup)(&G__cpp_setupG__PyROOT)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__PyROOT() { G__remove_setup_func("G__PyROOT"); }
};
G__cpp_setup_initG__PyROOT G__cpp_setup_initializerG__PyROOT;

