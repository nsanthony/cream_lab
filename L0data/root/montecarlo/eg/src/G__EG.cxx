//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:45:08 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__EG.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TAttParticle_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TAttParticle(void *p = 0);
   static void *newArray_TAttParticle(Long_t size, void *p);
   static void delete_TAttParticle(void *p);
   static void deleteArray_TAttParticle(void *p);
   static void destruct_TAttParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TAttParticle*)
   {
      ::TAttParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TAttParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TAttParticle", ::TAttParticle::Class_Version(), "include/TAttParticle.h", 34,
                  typeid(::TAttParticle), DefineBehavior(ptr, ptr),
                  &::TAttParticle::Dictionary, isa_proxy, 4,
                  sizeof(::TAttParticle) );
      instance.SetNew(&new_TAttParticle);
      instance.SetNewArray(&newArray_TAttParticle);
      instance.SetDelete(&delete_TAttParticle);
      instance.SetDeleteArray(&deleteArray_TAttParticle);
      instance.SetDestructor(&destruct_TAttParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TAttParticle*)
   {
      return GenerateInitInstanceLocal((::TAttParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TAttParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDecayChannel_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TDecayChannel(void *p = 0);
   static void *newArray_TDecayChannel(Long_t size, void *p);
   static void delete_TDecayChannel(void *p);
   static void deleteArray_TDecayChannel(void *p);
   static void destruct_TDecayChannel(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDecayChannel*)
   {
      ::TDecayChannel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDecayChannel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDecayChannel", ::TDecayChannel::Class_Version(), "include/TDecayChannel.h", 28,
                  typeid(::TDecayChannel), DefineBehavior(ptr, ptr),
                  &::TDecayChannel::Dictionary, isa_proxy, 4,
                  sizeof(::TDecayChannel) );
      instance.SetNew(&new_TDecayChannel);
      instance.SetNewArray(&newArray_TDecayChannel);
      instance.SetDelete(&delete_TDecayChannel);
      instance.SetDeleteArray(&deleteArray_TDecayChannel);
      instance.SetDestructor(&destruct_TDecayChannel);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDecayChannel*)
   {
      return GenerateInitInstanceLocal((::TDecayChannel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDecayChannel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TParticlePDG_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TParticlePDG(void *p = 0);
   static void *newArray_TParticlePDG(Long_t size, void *p);
   static void delete_TParticlePDG(void *p);
   static void deleteArray_TParticlePDG(void *p);
   static void destruct_TParticlePDG(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TParticlePDG*)
   {
      ::TParticlePDG *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TParticlePDG >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TParticlePDG", ::TParticlePDG::Class_Version(), "include/TParticlePDG.h", 23,
                  typeid(::TParticlePDG), DefineBehavior(ptr, ptr),
                  &::TParticlePDG::Dictionary, isa_proxy, 4,
                  sizeof(::TParticlePDG) );
      instance.SetNew(&new_TParticlePDG);
      instance.SetNewArray(&newArray_TParticlePDG);
      instance.SetDelete(&delete_TParticlePDG);
      instance.SetDeleteArray(&deleteArray_TParticlePDG);
      instance.SetDestructor(&destruct_TParticlePDG);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TParticlePDG*)
   {
      return GenerateInitInstanceLocal((::TParticlePDG*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TParticlePDG*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TParticleClassPDG_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TParticleClassPDG(void *p = 0);
   static void *newArray_TParticleClassPDG(Long_t size, void *p);
   static void delete_TParticleClassPDG(void *p);
   static void deleteArray_TParticleClassPDG(void *p);
   static void destruct_TParticleClassPDG(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TParticleClassPDG*)
   {
      ::TParticleClassPDG *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TParticleClassPDG >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TParticleClassPDG", ::TParticleClassPDG::Class_Version(), "include/TParticleClassPDG.h", 19,
                  typeid(::TParticleClassPDG), DefineBehavior(ptr, ptr),
                  &::TParticleClassPDG::Dictionary, isa_proxy, 4,
                  sizeof(::TParticleClassPDG) );
      instance.SetNew(&new_TParticleClassPDG);
      instance.SetNewArray(&newArray_TParticleClassPDG);
      instance.SetDelete(&delete_TParticleClassPDG);
      instance.SetDeleteArray(&deleteArray_TParticleClassPDG);
      instance.SetDestructor(&destruct_TParticleClassPDG);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TParticleClassPDG*)
   {
      return GenerateInitInstanceLocal((::TParticleClassPDG*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TParticleClassPDG*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDatabasePDG_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TDatabasePDG(void *p = 0);
   static void *newArray_TDatabasePDG(Long_t size, void *p);
   static void delete_TDatabasePDG(void *p);
   static void deleteArray_TDatabasePDG(void *p);
   static void destruct_TDatabasePDG(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDatabasePDG*)
   {
      ::TDatabasePDG *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDatabasePDG >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDatabasePDG", ::TDatabasePDG::Class_Version(), "include/TDatabasePDG.h", 25,
                  typeid(::TDatabasePDG), DefineBehavior(ptr, ptr),
                  &::TDatabasePDG::Dictionary, isa_proxy, 4,
                  sizeof(::TDatabasePDG) );
      instance.SetNew(&new_TDatabasePDG);
      instance.SetNewArray(&newArray_TDatabasePDG);
      instance.SetDelete(&delete_TDatabasePDG);
      instance.SetDeleteArray(&deleteArray_TDatabasePDG);
      instance.SetDestructor(&destruct_TDatabasePDG);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDatabasePDG*)
   {
      return GenerateInitInstanceLocal((::TDatabasePDG*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDatabasePDG*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TParticle_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TParticle(void *p = 0);
   static void *newArray_TParticle(Long_t size, void *p);
   static void delete_TParticle(void *p);
   static void deleteArray_TParticle(void *p);
   static void destruct_TParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TParticle*)
   {
      ::TParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TParticle", ::TParticle::Class_Version(), "include/TParticle.h", 34,
                  typeid(::TParticle), DefineBehavior(ptr, ptr),
                  &::TParticle::Dictionary, isa_proxy, 1,
                  sizeof(::TParticle) );
      instance.SetNew(&new_TParticle);
      instance.SetNewArray(&newArray_TParticle);
      instance.SetDelete(&delete_TParticle);
      instance.SetDeleteArray(&deleteArray_TParticle);
      instance.SetDestructor(&destruct_TParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TParticle*)
   {
      return GenerateInitInstanceLocal((::TParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TGenerator_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TGenerator(void *p = 0);
   static void *newArray_TGenerator(Long_t size, void *p);
   static void delete_TGenerator(void *p);
   static void deleteArray_TGenerator(void *p);
   static void destruct_TGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGenerator*)
   {
      ::TGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGenerator", ::TGenerator::Class_Version(), "include/TGenerator.h", 146,
                  typeid(::TGenerator), DefineBehavior(ptr, ptr),
                  &::TGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::TGenerator) );
      instance.SetNew(&new_TGenerator);
      instance.SetNewArray(&newArray_TGenerator);
      instance.SetDelete(&delete_TGenerator);
      instance.SetDeleteArray(&deleteArray_TGenerator);
      instance.SetDestructor(&destruct_TGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGenerator*)
   {
      return GenerateInitInstanceLocal((::TGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPrimary_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TPrimary(void *p = 0);
   static void *newArray_TPrimary(Long_t size, void *p);
   static void delete_TPrimary(void *p);
   static void deleteArray_TPrimary(void *p);
   static void destruct_TPrimary(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPrimary*)
   {
      ::TPrimary *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPrimary >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPrimary", ::TPrimary::Class_Version(), "include/TPrimary.h", 39,
                  typeid(::TPrimary), DefineBehavior(ptr, ptr),
                  &::TPrimary::Dictionary, isa_proxy, 4,
                  sizeof(::TPrimary) );
      instance.SetNew(&new_TPrimary);
      instance.SetNewArray(&newArray_TPrimary);
      instance.SetDelete(&delete_TPrimary);
      instance.SetDeleteArray(&deleteArray_TPrimary);
      instance.SetDestructor(&destruct_TPrimary);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPrimary*)
   {
      return GenerateInitInstanceLocal((::TPrimary*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPrimary*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TVirtualMCDecayer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TVirtualMCDecayer(void *p);
   static void deleteArray_TVirtualMCDecayer(void *p);
   static void destruct_TVirtualMCDecayer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TVirtualMCDecayer*)
   {
      ::TVirtualMCDecayer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TVirtualMCDecayer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TVirtualMCDecayer", ::TVirtualMCDecayer::Class_Version(), "include/TVirtualMCDecayer.h", 23,
                  typeid(::TVirtualMCDecayer), DefineBehavior(ptr, ptr),
                  &::TVirtualMCDecayer::Dictionary, isa_proxy, 4,
                  sizeof(::TVirtualMCDecayer) );
      instance.SetDelete(&delete_TVirtualMCDecayer);
      instance.SetDeleteArray(&deleteArray_TVirtualMCDecayer);
      instance.SetDestructor(&destruct_TVirtualMCDecayer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TVirtualMCDecayer*)
   {
      return GenerateInitInstanceLocal((::TVirtualMCDecayer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TVirtualMCDecayer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TAttParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAttParticle::Class_Name()
{
   return "TAttParticle";
}

//______________________________________________________________________________
const char *TAttParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TAttParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAttParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TAttParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAttParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TAttParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAttParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TAttParticle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDecayChannel::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDecayChannel::Class_Name()
{
   return "TDecayChannel";
}

//______________________________________________________________________________
const char *TDecayChannel::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDecayChannel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDecayChannel::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDecayChannel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDecayChannel::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDecayChannel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDecayChannel::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDecayChannel*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TParticlePDG::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TParticlePDG::Class_Name()
{
   return "TParticlePDG";
}

//______________________________________________________________________________
const char *TParticlePDG::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParticlePDG*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TParticlePDG::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParticlePDG*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TParticlePDG::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParticlePDG*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TParticlePDG::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParticlePDG*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TParticleClassPDG::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TParticleClassPDG::Class_Name()
{
   return "TParticleClassPDG";
}

//______________________________________________________________________________
const char *TParticleClassPDG::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParticleClassPDG*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TParticleClassPDG::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParticleClassPDG*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TParticleClassPDG::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParticleClassPDG*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TParticleClassPDG::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParticleClassPDG*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDatabasePDG::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDatabasePDG::Class_Name()
{
   return "TDatabasePDG";
}

//______________________________________________________________________________
const char *TDatabasePDG::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDatabasePDG*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDatabasePDG::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDatabasePDG*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDatabasePDG::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDatabasePDG*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDatabasePDG::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDatabasePDG*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TParticle::Class_Name()
{
   return "TParticle";
}

//______________________________________________________________________________
const char *TParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParticle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGenerator::Class_Name()
{
   return "TGenerator";
}

//______________________________________________________________________________
const char *TGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPrimary::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPrimary::Class_Name()
{
   return "TPrimary";
}

//______________________________________________________________________________
const char *TPrimary::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPrimary*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPrimary::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPrimary*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPrimary::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPrimary*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPrimary::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPrimary*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVirtualMCDecayer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVirtualMCDecayer::Class_Name()
{
   return "TVirtualMCDecayer";
}

//______________________________________________________________________________
const char *TVirtualMCDecayer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVirtualMCDecayer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVirtualMCDecayer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVirtualMCDecayer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVirtualMCDecayer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVirtualMCDecayer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVirtualMCDecayer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVirtualMCDecayer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TParticle::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TParticle.
      TClass *R__cl = ::TParticle::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fPdgCode", &fPdgCode);
      R__insp.Inspect(R__cl, R__parent, "fStatusCode", &fStatusCode);
      R__insp.Inspect(R__cl, R__parent, "fMother[2]", fMother);
      R__insp.Inspect(R__cl, R__parent, "fDaughter[2]", fDaughter);
      R__insp.Inspect(R__cl, R__parent, "fWeight", &fWeight);
      R__insp.Inspect(R__cl, R__parent, "fCalcMass", &fCalcMass);
      R__insp.Inspect(R__cl, R__parent, "fPx", &fPx);
      R__insp.Inspect(R__cl, R__parent, "fPy", &fPy);
      R__insp.Inspect(R__cl, R__parent, "fPz", &fPz);
      R__insp.Inspect(R__cl, R__parent, "fE", &fE);
      R__insp.Inspect(R__cl, R__parent, "fVx", &fVx);
      R__insp.Inspect(R__cl, R__parent, "fVy", &fVy);
      R__insp.Inspect(R__cl, R__parent, "fVz", &fVz);
      R__insp.Inspect(R__cl, R__parent, "fVt", &fVt);
      R__insp.Inspect(R__cl, R__parent, "fPolarTheta", &fPolarTheta);
      R__insp.Inspect(R__cl, R__parent, "fPolarPhi", &fPolarPhi);
      R__insp.Inspect(R__cl, R__parent, "*fParticlePDG", &fParticlePDG);
      TObject::ShowMembers(R__insp, R__parent);
      TAttLine::ShowMembers(R__insp, R__parent);
      TAtt3D::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TParticle(void *p) {
      return  p ? new(p) ::TParticle : new ::TParticle;
   }
   static void *newArray_TParticle(Long_t nElements, void *p) {
      return p ? new(p) ::TParticle[nElements] : new ::TParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_TParticle(void *p) {
      delete ((::TParticle*)p);
   }
   static void deleteArray_TParticle(void *p) {
      delete [] ((::TParticle*)p);
   }
   static void destruct_TParticle(void *p) {
      typedef ::TParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TParticle

//______________________________________________________________________________
void TAttParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAttParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TAttParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(TAttParticle::Class(),this);
   }
}

//______________________________________________________________________________
void TAttParticle::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TAttParticle.
      TClass *R__cl = ::TAttParticle::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fPDGMass", &fPDGMass);
      R__insp.Inspect(R__cl, R__parent, "fPDGStable", &fPDGStable);
      R__insp.Inspect(R__cl, R__parent, "fPDGDecayWidth", &fPDGDecayWidth);
      R__insp.Inspect(R__cl, R__parent, "fPDGCharge", &fPDGCharge);
      R__insp.Inspect(R__cl, R__parent, "fParticleType", &fParticleType);
      fParticleType.ShowMembers(R__insp, strcat(R__parent,"fParticleType.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMCnumberOfPDG", &fMCnumberOfPDG);
      R__insp.Inspect(R__cl, R__parent, "fEnergyCut", &fEnergyCut);
      R__insp.Inspect(R__cl, R__parent, "fEnergyLimit", &fEnergyLimit);
      R__insp.Inspect(R__cl, R__parent, "fGranularity", &fGranularity);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TAttParticle(void *p) {
      return  p ? new(p) ::TAttParticle : new ::TAttParticle;
   }
   static void *newArray_TAttParticle(Long_t nElements, void *p) {
      return p ? new(p) ::TAttParticle[nElements] : new ::TAttParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_TAttParticle(void *p) {
      delete ((::TAttParticle*)p);
   }
   static void deleteArray_TAttParticle(void *p) {
      delete [] ((::TAttParticle*)p);
   }
   static void destruct_TAttParticle(void *p) {
      typedef ::TAttParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAttParticle

//______________________________________________________________________________
void TPrimary::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPrimary.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPrimary::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPrimary::Class(),this);
   }
}

//______________________________________________________________________________
void TPrimary::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPrimary.
      TClass *R__cl = ::TPrimary::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fPart", &fPart);
      R__insp.Inspect(R__cl, R__parent, "fFirstMother", &fFirstMother);
      R__insp.Inspect(R__cl, R__parent, "fSecondMother", &fSecondMother);
      R__insp.Inspect(R__cl, R__parent, "fGeneration", &fGeneration);
      R__insp.Inspect(R__cl, R__parent, "fPx", &fPx);
      R__insp.Inspect(R__cl, R__parent, "fPy", &fPy);
      R__insp.Inspect(R__cl, R__parent, "fPz", &fPz);
      R__insp.Inspect(R__cl, R__parent, "fEtot", &fEtot);
      R__insp.Inspect(R__cl, R__parent, "fVx", &fVx);
      R__insp.Inspect(R__cl, R__parent, "fVy", &fVy);
      R__insp.Inspect(R__cl, R__parent, "fVz", &fVz);
      R__insp.Inspect(R__cl, R__parent, "fTime", &fTime);
      R__insp.Inspect(R__cl, R__parent, "fTimeEnd", &fTimeEnd);
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      fType.ShowMembers(R__insp, strcat(R__parent,"fType.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
      TAttLine::ShowMembers(R__insp, R__parent);
      TAtt3D::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPrimary(void *p) {
      return  p ? new(p) ::TPrimary : new ::TPrimary;
   }
   static void *newArray_TPrimary(Long_t nElements, void *p) {
      return p ? new(p) ::TPrimary[nElements] : new ::TPrimary[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPrimary(void *p) {
      delete ((::TPrimary*)p);
   }
   static void deleteArray_TPrimary(void *p) {
      delete [] ((::TPrimary*)p);
   }
   static void destruct_TPrimary(void *p) {
      typedef ::TPrimary current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPrimary

//______________________________________________________________________________
void TGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(TGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void TGenerator::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGenerator.
      TClass *R__cl = ::TGenerator::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fPtCut", &fPtCut);
      R__insp.Inspect(R__cl, R__parent, "fShowNeutrons", &fShowNeutrons);
      R__insp.Inspect(R__cl, R__parent, "*fParticles", &fParticles);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TGenerator(void *p) {
      return  p ? new(p) ::TGenerator : new ::TGenerator;
   }
   static void *newArray_TGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::TGenerator[nElements] : new ::TGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGenerator(void *p) {
      delete ((::TGenerator*)p);
   }
   static void deleteArray_TGenerator(void *p) {
      delete [] ((::TGenerator*)p);
   }
   static void destruct_TGenerator(void *p) {
      typedef ::TGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGenerator

//______________________________________________________________________________
void TDatabasePDG::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDatabasePDG.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TDatabasePDG::Class(),this);
   } else {
      R__b.WriteClassBuffer(TDatabasePDG::Class(),this);
   }
}

//______________________________________________________________________________
void TDatabasePDG::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDatabasePDG.
      TClass *R__cl = ::TDatabasePDG::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fParticleList", &fParticleList);
      R__insp.Inspect(R__cl, R__parent, "*fListOfClasses", &fListOfClasses);
      R__insp.Inspect(R__cl, R__parent, "*fPdgMap", &fPdgMap);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDatabasePDG(void *p) {
      return  p ? new(p) ::TDatabasePDG : new ::TDatabasePDG;
   }
   static void *newArray_TDatabasePDG(Long_t nElements, void *p) {
      return p ? new(p) ::TDatabasePDG[nElements] : new ::TDatabasePDG[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDatabasePDG(void *p) {
      delete ((::TDatabasePDG*)p);
   }
   static void deleteArray_TDatabasePDG(void *p) {
      delete [] ((::TDatabasePDG*)p);
   }
   static void destruct_TDatabasePDG(void *p) {
      typedef ::TDatabasePDG current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDatabasePDG

//______________________________________________________________________________
void TParticlePDG::Streamer(TBuffer &R__b)
{
   // Stream an object of class TParticlePDG.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TParticlePDG::Class(),this);
   } else {
      R__b.WriteClassBuffer(TParticlePDG::Class(),this);
   }
}

//______________________________________________________________________________
void TParticlePDG::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TParticlePDG.
      TClass *R__cl = ::TParticlePDG::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fPdgCode", &fPdgCode);
      R__insp.Inspect(R__cl, R__parent, "fMass", &fMass);
      R__insp.Inspect(R__cl, R__parent, "fCharge", &fCharge);
      R__insp.Inspect(R__cl, R__parent, "fLifetime", &fLifetime);
      R__insp.Inspect(R__cl, R__parent, "fWidth", &fWidth);
      R__insp.Inspect(R__cl, R__parent, "fParity", &fParity);
      R__insp.Inspect(R__cl, R__parent, "fSpin", &fSpin);
      R__insp.Inspect(R__cl, R__parent, "fIsospin", &fIsospin);
      R__insp.Inspect(R__cl, R__parent, "fI3", &fI3);
      R__insp.Inspect(R__cl, R__parent, "fStrangeness", &fStrangeness);
      R__insp.Inspect(R__cl, R__parent, "fCharm", &fCharm);
      R__insp.Inspect(R__cl, R__parent, "fBeauty", &fBeauty);
      R__insp.Inspect(R__cl, R__parent, "fTop", &fTop);
      R__insp.Inspect(R__cl, R__parent, "fY", &fY);
      R__insp.Inspect(R__cl, R__parent, "fX", &fX);
      R__insp.Inspect(R__cl, R__parent, "fStable", &fStable);
      R__insp.Inspect(R__cl, R__parent, "*fDecayList", &fDecayList);
      R__insp.Inspect(R__cl, R__parent, "fParticleClass", &fParticleClass);
      fParticleClass.ShowMembers(R__insp, strcat(R__parent,"fParticleClass.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTrackingCode", &fTrackingCode);
      R__insp.Inspect(R__cl, R__parent, "*fAntiParticle", &fAntiParticle);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TParticlePDG(void *p) {
      return  p ? new(p) ::TParticlePDG : new ::TParticlePDG;
   }
   static void *newArray_TParticlePDG(Long_t nElements, void *p) {
      return p ? new(p) ::TParticlePDG[nElements] : new ::TParticlePDG[nElements];
   }
   // Wrapper around operator delete
   static void delete_TParticlePDG(void *p) {
      delete ((::TParticlePDG*)p);
   }
   static void deleteArray_TParticlePDG(void *p) {
      delete [] ((::TParticlePDG*)p);
   }
   static void destruct_TParticlePDG(void *p) {
      typedef ::TParticlePDG current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TParticlePDG

//______________________________________________________________________________
void TDecayChannel::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDecayChannel.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TDecayChannel::Class(),this);
   } else {
      R__b.WriteClassBuffer(TDecayChannel::Class(),this);
   }
}

//______________________________________________________________________________
void TDecayChannel::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDecayChannel.
      TClass *R__cl = ::TDecayChannel::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNumber", &fNumber);
      R__insp.Inspect(R__cl, R__parent, "fMatrixElementCode", &fMatrixElementCode);
      R__insp.Inspect(R__cl, R__parent, "fBranchingRatio", &fBranchingRatio);
      R__insp.Inspect(R__cl, R__parent, "fDaughters", &fDaughters);
      fDaughters.ShowMembers(R__insp, strcat(R__parent,"fDaughters.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDecayChannel(void *p) {
      return  p ? new(p) ::TDecayChannel : new ::TDecayChannel;
   }
   static void *newArray_TDecayChannel(Long_t nElements, void *p) {
      return p ? new(p) ::TDecayChannel[nElements] : new ::TDecayChannel[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDecayChannel(void *p) {
      delete ((::TDecayChannel*)p);
   }
   static void deleteArray_TDecayChannel(void *p) {
      delete [] ((::TDecayChannel*)p);
   }
   static void destruct_TDecayChannel(void *p) {
      typedef ::TDecayChannel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDecayChannel

//______________________________________________________________________________
void TParticleClassPDG::Streamer(TBuffer &R__b)
{
   // Stream an object of class TParticleClassPDG.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TParticleClassPDG::Class(),this);
   } else {
      R__b.WriteClassBuffer(TParticleClassPDG::Class(),this);
   }
}

//______________________________________________________________________________
void TParticleClassPDG::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TParticleClassPDG.
      TClass *R__cl = ::TParticleClassPDG::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fListOfParticles", &fListOfParticles);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TParticleClassPDG(void *p) {
      return  p ? new(p) ::TParticleClassPDG : new ::TParticleClassPDG;
   }
   static void *newArray_TParticleClassPDG(Long_t nElements, void *p) {
      return p ? new(p) ::TParticleClassPDG[nElements] : new ::TParticleClassPDG[nElements];
   }
   // Wrapper around operator delete
   static void delete_TParticleClassPDG(void *p) {
      delete ((::TParticleClassPDG*)p);
   }
   static void deleteArray_TParticleClassPDG(void *p) {
      delete [] ((::TParticleClassPDG*)p);
   }
   static void destruct_TParticleClassPDG(void *p) {
      typedef ::TParticleClassPDG current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TParticleClassPDG

//______________________________________________________________________________
void TVirtualMCDecayer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TVirtualMCDecayer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TVirtualMCDecayer::Class(),this);
   } else {
      R__b.WriteClassBuffer(TVirtualMCDecayer::Class(),this);
   }
}

//______________________________________________________________________________
void TVirtualMCDecayer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TVirtualMCDecayer.
      TClass *R__cl = ::TVirtualMCDecayer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TVirtualMCDecayer(void *p) {
      delete ((::TVirtualMCDecayer*)p);
   }
   static void deleteArray_TVirtualMCDecayer(void *p) {
      delete [] ((::TVirtualMCDecayer*)p);
   }
   static void destruct_TVirtualMCDecayer(void *p) {
      typedef ::TVirtualMCDecayer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVirtualMCDecayer

/********************************************************
* montecarlo/eg/src/G__EG.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__EG();

extern "C" void G__set_cpp_environmentG__EG() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TAttParticle.h");
  G__add_compiledheader("TDatabasePDG.h");
  G__add_compiledheader("TDecayChannel.h");
  G__add_compiledheader("TGenerator.h");
  G__add_compiledheader("TParticleClassPDG.h");
  G__add_compiledheader("TParticle.h");
  G__add_compiledheader("TParticlePDG.h");
  G__add_compiledheader("TPrimary.h");
  G__add_compiledheader("TVirtualMCDecayer.h");
  G__cpp_reset_tagtableG__EG();
}
#include <new>
extern "C" int G__cpp_dllrevG__EG() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TAttParticle */
static int G__G__EG_109_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAttParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAttParticle[n];
     } else {
       p = new((void*) gvp) TAttParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAttParticle;
     } else {
       p = new((void*) gvp) TAttParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TAttParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAttParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAttParticle(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (const char*) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]));
     } else {
       p = new((void*) gvp) TAttParticle(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (const char*) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAttParticle(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (const char*) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9]));
     } else {
       p = new((void*) gvp) TAttParticle(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (const char*) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAttParticle(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (const char*) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) TAttParticle(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (const char*) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAttParticle(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (const char*) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) TAttParticle(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (const char*) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TAttParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAttParticle::ConvertISAtoPDG((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAttParticle::DefinePDG();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TAttParticle*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TAttParticle*) G__getstructoffset())->GetEnergyCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TAttParticle*) G__getstructoffset())->GetEnergyLimit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TAttParticle*) G__getstructoffset())->GetGranularity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TAttParticle*) G__getstructoffset())->GetDecayWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TAttParticle*) G__getstructoffset())->GetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TAttParticle*) G__getstructoffset())->GetMCNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAttParticle::GetParticle((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAttParticle::GetParticle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TAttParticle*) G__getstructoffset())->GetParticleType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TAttParticle*) G__getstructoffset())->GetStable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TAttParticle*) G__getstructoffset())->SampleMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TAttParticle*) G__getstructoffset())->SampleMass((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAttParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAttParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TAttParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAttParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAttParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAttParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAttParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_109_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAttParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__EG_109_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TAttParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TAttParticle(*(TAttParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TAttParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAttParticle G__TTAttParticle;
static int G__G__EG_109_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TAttParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TAttParticle*) (soff+(sizeof(TAttParticle)*i)))->~G__TTAttParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TAttParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TAttParticle*) (soff))->~G__TTAttParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__EG_109_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAttParticle* dest = (TAttParticle*) G__getstructoffset();
   *dest = *(TAttParticle*) libp->para[0].ref;
   const TAttParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDecayChannel */
static int G__G__EG_118_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDecayChannel* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDecayChannel[n];
     } else {
       p = new((void*) gvp) TDecayChannel[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDecayChannel;
     } else {
       p = new((void*) gvp) TDecayChannel;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TDecayChannel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_118_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDecayChannel* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TDecayChannel(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) TDecayChannel(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TDecayChannel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_118_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDecayChannel*) G__getstructoffset())->Number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_118_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDecayChannel*) G__getstructoffset())->MatrixElementCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_118_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDecayChannel*) G__getstructoffset())->NDaughters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_118_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TDecayChannel*) G__getstructoffset())->BranchingRatio());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_118_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDecayChannel*) G__getstructoffset())->DaughterPdgCode((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_118_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDecayChannel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_118_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDecayChannel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_118_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDecayChannel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_118_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDecayChannel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_118_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDecayChannel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_118_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDecayChannel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_118_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDecayChannel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_118_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDecayChannel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_118_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDecayChannel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__EG_118_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TDecayChannel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TDecayChannel(*(TDecayChannel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TDecayChannel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDecayChannel G__TTDecayChannel;
static int G__G__EG_118_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDecayChannel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDecayChannel*) (soff+(sizeof(TDecayChannel)*i)))->~G__TTDecayChannel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDecayChannel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDecayChannel*) (soff))->~G__TTDecayChannel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__EG_118_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDecayChannel* dest = (TDecayChannel*) G__getstructoffset();
   *dest = *(TDecayChannel*) libp->para[0].ref;
   const TDecayChannel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TParticlePDG */
static int G__G__EG_119_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParticlePDG* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParticlePDG[n];
     } else {
       p = new((void*) gvp) TParticlePDG[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParticlePDG;
     } else {
       p = new((void*) gvp) TParticlePDG;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TParticlePDG));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParticlePDG* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TParticlePDG((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TParticlePDG((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TParticlePDG));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParticlePDG* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TParticlePDG(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (const char*) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
   } else {
     p = new((void*) gvp) TParticlePDG(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (const char*) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TParticlePDG));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticlePDG*) G__getstructoffset())->PdgCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticlePDG*) G__getstructoffset())->Mass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticlePDG*) G__getstructoffset())->Charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticlePDG*) G__getstructoffset())->Lifetime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticlePDG*) G__getstructoffset())->Width());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticlePDG*) G__getstructoffset())->Parity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticlePDG*) G__getstructoffset())->Spin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticlePDG*) G__getstructoffset())->Isospin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticlePDG*) G__getstructoffset())->I3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticlePDG*) G__getstructoffset())->Strangeness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticlePDG*) G__getstructoffset())->Charm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticlePDG*) G__getstructoffset())->Beauty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticlePDG*) G__getstructoffset())->Top());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticlePDG*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticlePDG*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticlePDG*) G__getstructoffset())->Stable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TParticlePDG*) G__getstructoffset())->ParticleClass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParticlePDG*) G__getstructoffset())->DecayList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticlePDG*) G__getstructoffset())->NDecayChannels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticlePDG*) G__getstructoffset())->TrackingCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParticlePDG*) G__getstructoffset())->DecayChannel((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParticlePDG*) G__getstructoffset())->AntiParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticlePDG*) G__getstructoffset())->SetAntiParticle((TParticlePDG*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TParticlePDG*) G__getstructoffset())->AddDecayChannel((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const TParticlePDG*) G__getstructoffset())->PrintDecayChannel((TDecayChannel*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const TParticlePDG*) G__getstructoffset())->PrintDecayChannel((TDecayChannel*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TParticlePDG::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParticlePDG::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TParticlePDG::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TParticlePDG::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticlePDG*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParticlePDG::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParticlePDG::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParticlePDG::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_119_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParticlePDG::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TParticlePDG G__TTParticlePDG;
static int G__G__EG_119_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TParticlePDG*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TParticlePDG*) (soff+(sizeof(TParticlePDG)*i)))->~G__TTParticlePDG();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TParticlePDG*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TParticlePDG*) (soff))->~G__TTParticlePDG();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TParticleClassPDG */
static int G__G__EG_120_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParticleClassPDG* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParticleClassPDG((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TParticleClassPDG((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TParticleClassPDG[n];
       } else {
         p = new((void*) gvp) TParticleClassPDG[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TParticleClassPDG;
       } else {
         p = new((void*) gvp) TParticleClassPDG;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TParticleClassPDG));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_120_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TParticleClassPDG*) G__getstructoffset())->GetNParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_120_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParticleClassPDG*) G__getstructoffset())->GetParticle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_120_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TParticleClassPDG*) G__getstructoffset())->GetListOfParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_120_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticleClassPDG*) G__getstructoffset())->AddParticle((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_120_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TParticleClassPDG::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_120_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParticleClassPDG::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_120_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TParticleClassPDG::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_120_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TParticleClassPDG::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_120_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticleClassPDG*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_120_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParticleClassPDG::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_120_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParticleClassPDG::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_120_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParticleClassPDG::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_120_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParticleClassPDG::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TParticleClassPDG G__TTParticleClassPDG;
static int G__G__EG_120_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TParticleClassPDG*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TParticleClassPDG*) (soff+(sizeof(TParticleClassPDG)*i)))->~G__TTParticleClassPDG();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TParticleClassPDG*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TParticleClassPDG*) (soff))->~G__TTParticleClassPDG();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDatabasePDG */
static int G__G__EG_122_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDatabasePDG* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDatabasePDG[n];
     } else {
       p = new((void*) gvp) TDatabasePDG[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDatabasePDG;
     } else {
       p = new((void*) gvp) TDatabasePDG;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TDatabasePDG));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDatabasePDG::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 10:
      G__letint(result7, 85, (long) ((TDatabasePDG*) G__getstructoffset())->AddParticle(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (const char*) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])));
      break;
   case 9:
      G__letint(result7, 85, (long) ((TDatabasePDG*) G__getstructoffset())->AddParticle(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (const char*) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 85, (long) ((TDatabasePDG*) G__getstructoffset())->AddParticle(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (const char*) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDatabasePDG*) G__getstructoffset())->ConvertGeant3ToPdg((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDatabasePDG*) G__getstructoffset())->ConvertPdgToGeant3((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDatabasePDG*) G__getstructoffset())->ConvertIsajetToPdg((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TDatabasePDG*) G__getstructoffset())->AddAntiParticle((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDatabasePDG*) G__getstructoffset())->GetParticle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDatabasePDG*) G__getstructoffset())->GetParticle((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TDatabasePDG*) G__getstructoffset())->GetParticleClass((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDatabasePDG*) G__getstructoffset())->ParticleList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TDatabasePDG*) G__getstructoffset())->ReadPDGTable((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TDatabasePDG*) G__getstructoffset())->ReadPDGTable();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDatabasePDG*) G__getstructoffset())->WritePDGTable((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDatabasePDG::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDatabasePDG::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDatabasePDG::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDatabasePDG::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDatabasePDG*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDatabasePDG::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDatabasePDG::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDatabasePDG::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_122_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDatabasePDG::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDatabasePDG G__TTDatabasePDG;
static int G__G__EG_122_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDatabasePDG*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDatabasePDG*) (soff+(sizeof(TDatabasePDG)*i)))->~G__TTDatabasePDG();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDatabasePDG*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDatabasePDG*) (soff))->~G__TTDatabasePDG();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TParticle */
static int G__G__EG_125_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParticle[n];
     } else {
       p = new((void*) gvp) TParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParticle;
     } else {
       p = new((void*) gvp) TParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 14
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TParticle(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13]));
   } else {
     p = new((void*) gvp) TParticle(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TParticle(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, *(TLorentzVector*) libp->para[6].ref, *(TLorentzVector*) libp->para[7].ref);
   } else {
     p = new((void*) gvp) TParticle(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, *(TLorentzVector*) libp->para[6].ref, *(TLorentzVector*) libp->para[7].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TParticle(*(TParticle*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TParticle(*(TParticle*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TParticle& obj = ((TParticle*) G__getstructoffset())->operator=(*(TParticle*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticle*) G__getstructoffset())->GetStatusCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticle*) G__getstructoffset())->GetPdgCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticle*) G__getstructoffset())->GetFirstMother());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticle*) G__getstructoffset())->GetMother((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticle*) G__getstructoffset())->GetSecondMother());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TParticle*) G__getstructoffset())->IsPrimary());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticle*) G__getstructoffset())->GetFirstDaughter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticle*) G__getstructoffset())->GetDaughter((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticle*) G__getstructoffset())->GetLastDaughter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->GetCalcMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TParticle*) G__getstructoffset())->GetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticle*) G__getstructoffset())->GetNDaughters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticle*) G__getstructoffset())->GetWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->GetPolarisation(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((TParticle*) G__getstructoffset())->GetPDG((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TParticle*) G__getstructoffset())->GetPDG());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TParticle*) G__getstructoffset())->Beauty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TParticle*) G__getstructoffset())->Charm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TParticle*) G__getstructoffset())->Strangeness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TParticle*) G__getstructoffset())->Momentum(*(TLorentzVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TParticle*) G__getstructoffset())->ProductionVertex(*(TLorentzVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->Vx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->Vy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->Vz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->T());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->R());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->Rho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->Px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->Py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->Pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->P());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->Pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->Energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->Eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TParticle*) G__getstructoffset())->Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->SetFirstMother((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->SetMother((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->SetLastMother((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->SetFirstDaughter((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->SetDaughter((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->SetLastDaughter((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->SetCalcMass((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->SetPdgCode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->SetPolarisation((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->SetPolarisation(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->SetStatusCode((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TParticle*) G__getstructoffset())->SetWeight((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TParticle*) G__getstructoffset())->SetWeight();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->SetMomentum((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->SetMomentum(*(TLorentzVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->SetProductionVertex((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->SetProductionVertex(*(TLorentzVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_125_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TParticle G__TTParticle;
static int G__G__EG_125_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TParticle*) (soff+(sizeof(TParticle)*i)))->~G__TTParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TParticle*) (soff))->~G__TTParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGenerator */
static int G__G__EG_126_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGenerator[n];
     } else {
       p = new((void*) gvp) TGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGenerator;
     } else {
       p = new((void*) gvp) TGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGenerator((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TGenerator((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGenerator((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TGenerator((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGenerator*) G__getstructoffset())->GenerateEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TGenerator*) G__getstructoffset())->GetParameter((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TGenerator*) G__getstructoffset())->ImportParticles((TClonesArray*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TGenerator*) G__getstructoffset())->ImportParticles((TClonesArray*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((TGenerator*) G__getstructoffset())->ImportParticles((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TGenerator*) G__getstructoffset())->ImportParticles());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TGenerator*) G__getstructoffset())->GetParticle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TGenerator*) G__getstructoffset())->GetNumberOfParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TGenerator*) G__getstructoffset())->GetListOfParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((TGenerator*) G__getstructoffset())->GetPrimaries((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TGenerator*) G__getstructoffset())->GetPrimaries());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TGenerator*) G__getstructoffset())->GetPtCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGenerator*) G__getstructoffset())->SetParameter((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TGenerator*) G__getstructoffset())->SetPtCut((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGenerator*) G__getstructoffset())->SetPtCut();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TGenerator*) G__getstructoffset())->SetViewRadius((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGenerator*) G__getstructoffset())->SetViewRadius();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TGenerator*) G__getstructoffset())->SetViewRange((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TGenerator*) G__getstructoffset())->SetViewRange((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TGenerator*) G__getstructoffset())->SetViewRange((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TGenerator*) G__getstructoffset())->SetViewRange((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TGenerator*) G__getstructoffset())->SetViewRange((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TGenerator*) G__getstructoffset())->SetViewRange((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGenerator*) G__getstructoffset())->SetViewRange();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TGenerator*) G__getstructoffset())->ShowNeutrons((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGenerator*) G__getstructoffset())->ShowNeutrons();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_126_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGenerator G__TTGenerator;
static int G__G__EG_126_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGenerator*) (soff+(sizeof(TGenerator)*i)))->~G__TTGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGenerator*) (soff))->~G__TTGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPrimary */
static int G__G__EG_172_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPrimary* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPrimary[n];
     } else {
       p = new((void*) gvp) TPrimary[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPrimary;
     } else {
       p = new((void*) gvp) TPrimary;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TPrimary));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPrimary* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 14:
     //m: 14
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPrimary(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (const char*) G__int(libp->para[13]));
     } else {
       p = new((void*) gvp) TPrimary(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (const char*) G__int(libp->para[13]));
     }
     break;
   case 13:
     //m: 13
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPrimary(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]));
     } else {
       p = new((void*) gvp) TPrimary(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TPrimary));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TPrimary*) G__getstructoffset())->GetParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPrimary*) G__getstructoffset())->GetFirstMother());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPrimary*) G__getstructoffset())->GetSecondMother());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TPrimary*) G__getstructoffset())->GetGeneration());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TPrimary*) G__getstructoffset())->GetXMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TPrimary*) G__getstructoffset())->GetYMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TPrimary*) G__getstructoffset())->GetZMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TPrimary*) G__getstructoffset())->GetTotalEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TPrimary*) G__getstructoffset())->GetXPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TPrimary*) G__getstructoffset())->GetYPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TPrimary*) G__getstructoffset())->GetZPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TPrimary*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TPrimary*) G__getstructoffset())->GetTimeEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TPrimary*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPrimary::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPrimary::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPrimary::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPrimary::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPrimary*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPrimary::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPrimary::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPrimary::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_172_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPrimary::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__EG_172_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TPrimary* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TPrimary(*(TPrimary*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__EGLN_TPrimary));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPrimary G__TTPrimary;
static int G__G__EG_172_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPrimary*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPrimary*) (soff+(sizeof(TPrimary)*i)))->~G__TTPrimary();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPrimary*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPrimary*) (soff))->~G__TTPrimary();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__EG_172_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPrimary* dest = (TPrimary*) G__getstructoffset();
   *dest = *(TPrimary*) libp->para[0].ref;
   const TPrimary& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVirtualMCDecayer */
static int G__G__EG_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualMCDecayer*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualMCDecayer*) G__getstructoffset())->Decay((Int_t) G__int(libp->para[0]), (TLorentzVector*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TVirtualMCDecayer*) G__getstructoffset())->ImportParticles((TClonesArray*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualMCDecayer*) G__getstructoffset())->SetForceDecay((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualMCDecayer*) G__getstructoffset())->ForceDecay();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TVirtualMCDecayer*) G__getstructoffset())->GetPartialBranchingRatio((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_173_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TVirtualMCDecayer*) G__getstructoffset())->GetLifetime((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_173_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualMCDecayer*) G__getstructoffset())->ReadDecayTable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_173_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TVirtualMCDecayer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_173_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVirtualMCDecayer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TVirtualMCDecayer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TVirtualMCDecayer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_173_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVirtualMCDecayer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_173_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVirtualMCDecayer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_173_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVirtualMCDecayer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_173_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVirtualMCDecayer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__EG_173_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVirtualMCDecayer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVirtualMCDecayer G__TTVirtualMCDecayer;
static int G__G__EG_173_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TVirtualMCDecayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TVirtualMCDecayer*) (soff+(sizeof(TVirtualMCDecayer)*i)))->~G__TTVirtualMCDecayer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TVirtualMCDecayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TVirtualMCDecayer*) (soff))->~G__TTVirtualMCDecayer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__EG_173_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TVirtualMCDecayer* dest = (TVirtualMCDecayer*) G__getstructoffset();
   *dest = *(TVirtualMCDecayer*) libp->para[0].ref;
   const TVirtualMCDecayer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TAttParticle */

/* TDecayChannel */

/* TParticlePDG */

/* TParticleClassPDG */

/* TDatabasePDG */

/* TParticle */

/* TGenerator */

/* TPrimary */

/* TVirtualMCDecayer */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__EG {
 public:
  G__Sizep2memfuncG__EG(): p(&G__Sizep2memfuncG__EG::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__EG::*p)();
};

size_t G__get_sizep2memfuncG__EG()
{
  G__Sizep2memfuncG__EG a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__EG() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__EGLN_TAttParticle))) {
     TAttParticle *G__Lderived;
     G__Lderived=(TAttParticle*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TAttParticle),G__get_linked_tagnum(&G__G__EGLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TAttParticle),G__get_linked_tagnum(&G__G__EGLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__EGLN_TDecayChannel))) {
     TDecayChannel *G__Lderived;
     G__Lderived=(TDecayChannel*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TDecayChannel),G__get_linked_tagnum(&G__G__EGLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__EGLN_TParticlePDG))) {
     TParticlePDG *G__Lderived;
     G__Lderived=(TParticlePDG*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TParticlePDG),G__get_linked_tagnum(&G__G__EGLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TParticlePDG),G__get_linked_tagnum(&G__G__EGLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__EGLN_TParticleClassPDG))) {
     TParticleClassPDG *G__Lderived;
     G__Lderived=(TParticleClassPDG*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TParticleClassPDG),G__get_linked_tagnum(&G__G__EGLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TParticleClassPDG),G__get_linked_tagnum(&G__G__EGLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__EGLN_TDatabasePDG))) {
     TDatabasePDG *G__Lderived;
     G__Lderived=(TDatabasePDG*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TDatabasePDG),G__get_linked_tagnum(&G__G__EGLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TDatabasePDG),G__get_linked_tagnum(&G__G__EGLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__EGLN_TParticle))) {
     TParticle *G__Lderived;
     G__Lderived=(TParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TParticle),G__get_linked_tagnum(&G__G__EGLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TParticle),G__get_linked_tagnum(&G__G__EGLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TParticle),G__get_linked_tagnum(&G__G__EGLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__EGLN_TGenerator))) {
     TGenerator *G__Lderived;
     G__Lderived=(TGenerator*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TGenerator),G__get_linked_tagnum(&G__G__EGLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TGenerator),G__get_linked_tagnum(&G__G__EGLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__EGLN_TPrimary))) {
     TPrimary *G__Lderived;
     G__Lderived=(TPrimary*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TPrimary),G__get_linked_tagnum(&G__G__EGLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TPrimary),G__get_linked_tagnum(&G__G__EGLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TPrimary),G__get_linked_tagnum(&G__G__EGLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__EGLN_TVirtualMCDecayer))) {
     TVirtualMCDecayer *G__Lderived;
     G__Lderived=(TVirtualMCDecayer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__EGLN_TVirtualMCDecayer),G__get_linked_tagnum(&G__G__EGLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__EG() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__EGLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__EGLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__EGLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__EGLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__EGLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__EGLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__EGLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__EGLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__EGLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__EGLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__EGLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__EGLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TAttParticle */
static void G__setup_memvarTAttParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__EGLN_TAttParticle));
   { TAttParticle *p; p=(TAttParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPDGMass=",0,"Mass of the particle in GeV/c2");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPDGStable=",0,"Logical indicator, if TRUE the particle can not decay");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPDGDecayWidth=",0,"Life time of the particle in sec.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPDGCharge=",0,"Charge of the particle in units of e");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__EGLN_TString),-1,-1,4,"fParticleType=",0,"Text indicator for the particle family");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMCnumberOfPDG=",0,"PDG MC number followed by");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEnergyCut=",0,"Lower energy cut off, the default is 10 keV");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEnergyLimit=",0,"High energy cut off, the default is 10 TeV");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fGranularity=",0,"Granularity of the fLogEScale");
   G__memvar_setup((void*)(&TAttParticle::fgList),85,0,0,G__get_linked_tagnum(&G__G__EGLN_THashList),-1,-2,1,"fgList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDecayChannel */
static void G__setup_memvarTDecayChannel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__EGLN_TDecayChannel));
   { TDecayChannel *p; p=(TDecayChannel*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumber=",0,"channel number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMatrixElementCode=",0,"matrix element for this decay mode");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBranchingRatio=",0,"branching ratio ( < 1)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__EGLN_TArrayI),-1,-1,2,"fDaughters=",0,"PDG codes of the daughters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TParticlePDG */
static void G__setup_memvarTParticlePDG(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__EGLN_TParticlePDG));
   { TParticlePDG *p; p=(TParticlePDG*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPdgCode=",0,"PDG code of the particle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMass=",0,"particle mass in GeV");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCharge=",0,"charge in units of |e|/3");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLifetime=",0,"proper lifetime in nanoseconds");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWidth=",0,"total width in GeV");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fParity=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSpin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fIsospin=",0,"isospin");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fI3=",0,"i3");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fStrangeness=",0,"flavours are defined if i3 != -1");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCharm=",0,"1 or -1 for C-particles,");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBeauty=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTop=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fY=",0,"X,Y: quantum numbers for the 4-th generation");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fStable=",0,"1 if stable, 0 otherwise");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TObjArray),-1,-1,2,"fDecayList=",0,"array of decay channels");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__EGLN_TString),-1,-1,2,"fParticleClass=",0,"lepton, meson etc");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTrackingCode=",0,"G3 tracking code of the particle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TParticlePDG),-1,-1,2,"fAntiParticle=",0,"pointer to antiparticle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TParticleClassPDG */
static void G__setup_memvarTParticleClassPDG(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__EGLN_TParticleClassPDG));
   { TParticleClassPDG *p; p=(TParticleClassPDG*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TObjArray),-1,-1,2,"fListOfParticles=",0,"list of (non-owned) particles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDatabasePDG */
static void G__setup_memvarTDatabasePDG(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__EGLN_TDatabasePDG));
   { TDatabasePDG *p; p=(TDatabasePDG*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TDatabasePDG),-1,-2,2,"fgInstance=",0,"protect against multiple instances");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_THashList),-1,-1,2,"fParticleList=",0,"list of PDG particles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TObjArray),-1,-1,2,"fListOfClasses=",0,"list of classes (leptons etc.)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TExMap),-1,-1,2,"fPdgMap=",0,"!hash-map from pdg-code to particle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TParticle */
static void G__setup_memvarTParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__EGLN_TParticle));
   { TParticle *p; p=(TParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPdgCode=",0,"PDG code of the particle");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fStatusCode=",0,"generation status code");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMother[2]=",0,"Indices of the mother particles");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDaughter[2]=",0,"Indices of the daughter particles");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fWeight=",0,"particle weight");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCalcMass=",0,"Calculated mass");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPx=",0,"x component of momentum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPy=",0,"y component of momentum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPz=",0,"z component of momentum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fE=",0,"Energy");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVx=",0,"x of production vertex");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVy=",0,"y of production vertex");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVz=",0,"z of production vertex");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVt=",0,"t of production vertex");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPolarTheta=",0,"Polar angle of polarisation");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPolarPhi=",0,"azymutal angle of polarisation");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TParticlePDG),-1,-1,2,"fParticlePDG=",0,"! reference to the particle record in PDG database");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGenerator */
static void G__setup_memvarTGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__EGLN_TGenerator));
   { TGenerator *p; p=(TGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fPtCut=",0,"!Pt cut. Do not show primaries below");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fShowNeutrons=",0,"!display neutrons if true");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TObjArray),-1,-1,2,"fParticles=",0,"->static container of the primary particles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPrimary */
static void G__setup_memvarTPrimary(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__EGLN_TPrimary));
   { TPrimary *p; p=(TPrimary*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPart=",0,"Particle id produced");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFirstMother=",0,"Index of the first mother particle");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSecondMother=",0,"Index of the second mother particle(if any)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fGeneration=",0,"Generation flag: last gen. (0) or not (1) or ghost (2)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPx=",0,"Momentum in x direction in GeV/c");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPy=",0,"Momentum in y direction in GeV/c");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPz=",0,"Momentum in z direction in GeV/c");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEtot=",0,"Total energy in GeV");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVx=",0,"Production vertex x position in user units");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVy=",0,"Production vertex y position in user units");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVz=",0,"Production vertex z position in user units");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTime=",0,"Time of particle production in user units");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeEnd=",0,"Time of particle destruction (always in the pp-cms!)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__EGLN_TString),-1,-1,2,"fType=",0,"Indicator of primary type");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVirtualMCDecayer */
static void G__setup_memvarTVirtualMCDecayer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__EGLN_TVirtualMCDecayer));
   { TVirtualMCDecayer *p; p=(TVirtualMCDecayer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__EGLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__EG() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTAttParticle(void) {
   /* TAttParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__EGLN_TAttParticle));
   G__memfunc_setup("TAttParticle",1201,G__G__EG_109_0_1, 105, G__get_linked_tagnum(&G__G__EGLN_TAttParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TAttParticle",1201,G__G__EG_109_0_2, 105, G__get_linked_tagnum(&G__G__EGLN_TAttParticle), -1, 0, 11, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"d - 'Double_t' 0 - Mass g - 'Bool_t' 0 - Stable "
"d - 'Double_t' 0 - DecayWidth d - 'Double_t' 0 - Charge "
"C - - 10 - Type i - 'Int_t' 0 - MCnumber "
"i - 'Int_t' 0 '90' granularity d - 'Double_t' 0 '1.e-5' LowerCutOff "
"d - 'Double_t' 0 '1.e4' HighCutOff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertISAtoPDG",1404,G__G__EG_109_0_3, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 1, 0, "i - 'Int_t' 0 - isaNumber", (char*)NULL, (void*) G__func2void( (Int_t (*)(Int_t))(&TAttParticle::ConvertISAtoPDG) ), 0);
   G__memfunc_setup("DefinePDG",806,G__G__EG_109_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAttParticle::DefinePDG) ), 0);
   G__memfunc_setup("GetCharge",874,G__G__EG_109_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyCut",1206,G__G__EG_109_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyLimit",1417,G__G__EG_109_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGranularity",1458,G__G__EG_109_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDecayWidth",1286,G__G__EG_109_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMass",692,G__G__EG_109_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCNumber",1049,G__G__EG_109_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticle",1108,G__G__EG_109_0_12, 85, G__get_linked_tagnum(&G__G__EGLN_TAttParticle), -1, 0, 1, 3, 1, 0, "C - - 10 - name", (char*)NULL, (void*) G__func2void( (TAttParticle* (*)(const char*))(&TAttParticle::GetParticle) ), 0);
   G__memfunc_setup("GetParticle",1108,G__G__EG_109_0_13, 85, G__get_linked_tagnum(&G__G__EGLN_TAttParticle), -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - mcnumber", (char*)NULL, (void*) G__func2void( (TAttParticle* (*)(Int_t))(&TAttParticle::GetParticle) ), 0);
   G__memfunc_setup("GetParticleType",1526,G__G__EG_109_0_14, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStable",891,G__G__EG_109_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SampleMass",1014,G__G__EG_109_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SampleMass",1014,G__G__EG_109_0_18, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - widthcut", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__EG_109_0_19, 85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TAttParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__EG_109_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAttParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__EG_109_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TAttParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__EG_109_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAttParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__EG_109_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__EG_109_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAttParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__EG_109_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAttParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__EG_109_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAttParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__EG_109_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAttParticle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TAttParticle", 1201, G__G__EG_109_0_31, (int) ('i'), G__get_linked_tagnum(&G__G__EGLN_TAttParticle), -1, 0, 1, 1, 1, 0, "u 'TAttParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAttParticle", 1327, G__G__EG_109_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__EG_109_0_33, (int) ('u'), G__get_linked_tagnum(&G__G__EGLN_TAttParticle), -1, 1, 1, 1, 1, 0, "u 'TAttParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDecayChannel(void) {
   /* TDecayChannel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__EGLN_TDecayChannel));
   G__memfunc_setup("TDecayChannel",1267,G__G__EG_118_0_1, 105, G__get_linked_tagnum(&G__G__EGLN_TDecayChannel), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDecayChannel",1267,G__G__EG_118_0_2, 105, G__get_linked_tagnum(&G__G__EGLN_TDecayChannel), -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - Number i - 'Int_t' 0 - MatrixElementCode "
"d - 'Double_t' 0 - BranchingRatio i - 'Int_t' 0 - NDaughters "
"I - 'Int_t' 0 - DaughterPdgCode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Number",617,G__G__EG_118_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MatrixElementCode",1722,G__G__EG_118_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NDaughters",1013,G__G__EG_118_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BranchingRatio",1419,G__G__EG_118_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DaughterPdgCode",1482,G__G__EG_118_0_7, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__EG_118_0_8, 85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDecayChannel::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__EG_118_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDecayChannel::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__EG_118_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDecayChannel::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__EG_118_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDecayChannel::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__EG_118_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__EG_118_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDecayChannel::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__EG_118_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDecayChannel::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__EG_118_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDecayChannel::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__EG_118_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDecayChannel::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TDecayChannel", 1267, G__G__EG_118_0_20, (int) ('i'), G__get_linked_tagnum(&G__G__EGLN_TDecayChannel), -1, 0, 1, 1, 1, 0, "u 'TDecayChannel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TDecayChannel", 1393, G__G__EG_118_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__EG_118_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__EGLN_TDecayChannel), -1, 1, 1, 1, 1, 0, "u 'TDecayChannel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTParticlePDG(void) {
   /* TParticlePDG */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__EGLN_TParticlePDG));
   G__memfunc_setup("TParticlePDG",1123,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__EGLN_TParticlePDG), -1, 0, 1, 1, 2, 0, "u 'TParticlePDG' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__EGLN_TParticlePDG), -1, 1, 1, 1, 2, 0, "u 'TParticlePDG' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParticlePDG",1123,G__G__EG_119_0_3, 105, G__get_linked_tagnum(&G__G__EGLN_TParticlePDG), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParticlePDG",1123,G__G__EG_119_0_4, 105, G__get_linked_tagnum(&G__G__EGLN_TParticlePDG), -1, 0, 1, 1, 1, 0, "i - - 0 - pdg_code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParticlePDG",1123,G__G__EG_119_0_5, 105, G__get_linked_tagnum(&G__G__EGLN_TParticlePDG), -1, 0, 10, 1, 1, 0, 
"C - - 10 - Name C - - 10 - Title "
"d - 'Double_t' 0 - Mass g - 'Bool_t' 0 - Stable "
"d - 'Double_t' 0 - Width d - 'Double_t' 0 - Charge "
"C - - 10 - ParticleClass i - 'Int_t' 0 - PdgCode "
"i - 'Int_t' 0 - Anti i - 'Int_t' 0 - TrackingCode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PdgCode",662,G__G__EG_119_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mass",404,G__G__EG_119_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Charge",586,G__G__EG_119_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "charge in units of |e|/3", (void*) NULL, 0);
   G__memfunc_setup("Lifetime",815,G__G__EG_119_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Width",512,G__G__EG_119_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parity",633,G__G__EG_119_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spin",410,G__G__EG_119_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Isospin",741,G__G__EG_119_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("I3",124,G__G__EG_119_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Strangeness",1165,G__G__EG_119_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Charm",491,G__G__EG_119_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Beauty",618,G__G__EG_119_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Top",307,G__G__EG_119_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__G__EG_119_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__G__EG_119_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Stable",603,G__G__EG_119_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParticleClass",1322,G__G__EG_119_0_22, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecayList",898,G__G__EG_119_0_23, 85, G__get_linked_tagnum(&G__G__EGLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NDecayChannels",1376,G__G__EG_119_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackingCode",1198,G__G__EG_119_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecayChannel",1183,G__G__EG_119_0_26, 85, G__get_linked_tagnum(&G__G__EGLN_TDecayChannel), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AntiParticle",1216,G__G__EG_119_0_27, 85, G__get_linked_tagnum(&G__G__EGLN_TParticlePDG), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAntiParticle",1516,G__G__EG_119_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TParticlePDG' - 0 - ap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDecayChannel",1448,G__G__EG_119_0_29, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - Type d - 'Double_t' 0 - BranchingRatio "
"i - 'Int_t' 0 - NDaughters I - 'Int_t' 0 - DaughterPdgCode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintDecayChannel",1708,G__G__EG_119_0_30, 121, -1, -1, 0, 2, 1, 1, 8, 
"U 'TDecayChannel' - 0 - dc C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__EG_119_0_32, 85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TParticlePDG::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__EG_119_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParticlePDG::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__EG_119_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TParticlePDG::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__EG_119_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TParticlePDG::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__EG_119_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__EG_119_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParticlePDG::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__EG_119_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TParticlePDG::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__EG_119_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParticlePDG::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__EG_119_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TParticlePDG::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TParticlePDG", 1249, G__G__EG_119_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTParticleClassPDG(void) {
   /* TParticleClassPDG */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__EGLN_TParticleClassPDG));
   G__memfunc_setup("TParticleClassPDG",1625,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__EGLN_TParticleClassPDG), -1, 0, 1, 1, 2, 0, "u 'TParticleClassPDG' - 11 - pcp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__EGLN_TParticleClassPDG), -1, 1, 1, 1, 2, 0, "u 'TParticleClassPDG' - 11 - pcp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParticleClassPDG",1625,G__G__EG_120_0_3, 105, G__get_linked_tagnum(&G__G__EGLN_TParticleClassPDG), -1, 0, 1, 1, 1, 0, "C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNParticles",1301,G__G__EG_120_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__G__EG_120_0_5, 85, G__get_linked_tagnum(&G__G__EGLN_TParticlePDG), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfParticles",1816,G__G__EG_120_0_6, 85, G__get_linked_tagnum(&G__G__EGLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,G__G__EG_120_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__EG_120_0_11, 85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TParticleClassPDG::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__EG_120_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParticleClassPDG::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__EG_120_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TParticleClassPDG::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__EG_120_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TParticleClassPDG::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__EG_120_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__EG_120_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParticleClassPDG::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__EG_120_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TParticleClassPDG::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__EG_120_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParticleClassPDG::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__EG_120_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TParticleClassPDG::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TParticleClassPDG", 1751, G__G__EG_120_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDatabasePDG(void) {
   /* TDatabasePDG */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__EGLN_TDatabasePDG));
   G__memfunc_setup("TDatabasePDG",1092,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__EGLN_TDatabasePDG), -1, 0, 1, 1, 2, 0, "u 'TDatabasePDG' - 11 - db", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__EGLN_TDatabasePDG), -1, 1, 1, 1, 2, 0, "u 'TDatabasePDG' - 11 - db", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildPdgMap",1065,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDatabasePDG",1092,G__G__EG_122_0_4, 105, G__get_linked_tagnum(&G__G__EGLN_TDatabasePDG), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__G__EG_122_0_5, 85, G__get_linked_tagnum(&G__G__EGLN_TDatabasePDG), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TDatabasePDG* (*)())(&TDatabasePDG::Instance) ), 0);
   G__memfunc_setup("AddParticle",1085,G__G__EG_122_0_6, 85, G__get_linked_tagnum(&G__G__EGLN_TParticlePDG), -1, 0, 10, 1, 1, 0, 
"C - - 10 - Name C - - 10 - Title "
"d - 'Double_t' 0 - Mass g - 'Bool_t' 0 - Stable "
"d - 'Double_t' 0 - DecayWidth d - 'Double_t' 0 - Charge "
"C - - 10 - ParticleClass i - 'Int_t' 0 - PdgCode "
"i - 'Int_t' 0 '-1' Anti i - 'Int_t' 0 '0' TrackingCode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ConvertGeant3ToPdg",1761,G__G__EG_122_0_7, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Geant3Number", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ConvertPdgToGeant3",1761,G__G__EG_122_0_8, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pdgNumber", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ConvertIsajetToPdg",1823,G__G__EG_122_0_9, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - isaNumber", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddAntiParticle",1481,G__G__EG_122_0_10, 85, G__get_linked_tagnum(&G__G__EGLN_TParticlePDG), -1, 0, 2, 1, 1, 0, 
"C - - 10 - Name i - 'Int_t' 0 - PdgCode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticle",1108,G__G__EG_122_0_11, 85, G__get_linked_tagnum(&G__G__EGLN_TParticlePDG), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - pdgCode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__G__EG_122_0_12, 85, G__get_linked_tagnum(&G__G__EGLN_TParticlePDG), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleClass",1610,G__G__EG_122_0_13, 85, G__get_linked_tagnum(&G__G__EGLN_TParticleClassPDG), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParticleList",1232,G__G__EG_122_0_14, 85, G__get_linked_tagnum(&G__G__EGLN_THashList), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadPDGTable",1087,G__G__EG_122_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WritePDGTable",1230,G__G__EG_122_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__EG_122_0_20, 85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDatabasePDG::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__EG_122_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDatabasePDG::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__EG_122_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDatabasePDG::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__EG_122_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDatabasePDG::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__EG_122_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__EG_122_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDatabasePDG::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__EG_122_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDatabasePDG::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__EG_122_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDatabasePDG::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__EG_122_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDatabasePDG::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDatabasePDG", 1218, G__G__EG_122_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTParticle(void) {
   /* TParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__EGLN_TParticle));
   G__memfunc_setup("TParticle",904,G__G__EG_125_0_1, 105, G__get_linked_tagnum(&G__G__EGLN_TParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParticle",904,G__G__EG_125_0_2, 105, G__get_linked_tagnum(&G__G__EGLN_TParticle), -1, 0, 14, 1, 1, 0, 
"i - 'Int_t' 0 - pdg i - 'Int_t' 0 - status "
"i - 'Int_t' 0 - mother1 i - 'Int_t' 0 - mother2 "
"i - 'Int_t' 0 - daughter1 i - 'Int_t' 0 - daughter2 "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - etot "
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParticle",904,G__G__EG_125_0_3, 105, G__get_linked_tagnum(&G__G__EGLN_TParticle), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - pdg i - 'Int_t' 0 - status "
"i - 'Int_t' 0 - mother1 i - 'Int_t' 0 - mother2 "
"i - 'Int_t' 0 - daughter1 i - 'Int_t' 0 - daughter2 "
"u 'TLorentzVector' - 11 - p u 'TLorentzVector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParticle",904,G__G__EG_125_0_4, 105, G__get_linked_tagnum(&G__G__EGLN_TParticle), -1, 0, 1, 1, 1, 0, "u 'TParticle' - 11 - part", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__EG_125_0_5, 117, G__get_linked_tagnum(&G__G__EGLN_TParticle), -1, 1, 1, 1, 1, 0, "u 'TParticle' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatusCode",1311,G__G__EG_125_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPdgCode",950,G__G__EG_125_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFirstMother",1431,G__G__EG_125_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMother",911,G__G__EG_125_0_9, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondMother",1515,G__G__EG_125_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPrimary",928,G__G__EG_125_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", "Is this particle primary one?", (void*) NULL, 0);
   G__memfunc_setup("GetFirstDaughter",1628,G__G__EG_125_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDaughter",1108,G__G__EG_125_0_13, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastDaughter",1512,G__G__EG_125_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalcMass",1063,G__G__EG_125_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass",692,G__G__EG_125_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDaughters",1301,G__G__EG_125_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWeight",904,G__G__EG_125_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPolarisation",1557,G__G__EG_125_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDG",507,G__G__EG_125_0_20, 85, G__get_linked_tagnum(&G__G__EGLN_TParticlePDG), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Beauty",618,G__G__EG_125_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Charm",491,G__G__EG_125_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Strangeness",1165,G__G__EG_125_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Momentum",850,G__G__EG_125_0_24, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TLorentzVector' - 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProductionVertex",1701,G__G__EG_125_0_25, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TLorentzVector' - 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Vx",206,G__G__EG_125_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Vy",207,G__G__EG_125_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Vz",208,G__G__EG_125_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("T",84,G__G__EG_125_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("R",82,G__G__EG_125_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "Radius of production vertex in cylindrical system", (void*) NULL, 0);
   G__memfunc_setup("Rho",297,G__G__EG_125_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "Radius of production vertex in spherical system", (void*) NULL, 0);
   G__memfunc_setup("Px",200,G__G__EG_125_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Py",201,G__G__EG_125_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pz",202,G__G__EG_125_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("P",80,G__G__EG_125_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pt",196,G__G__EG_125_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy",618,G__G__EG_125_0_37, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta",282,G__G__EG_125_0_38, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__G__EG_125_0_39, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__G__EG_125_0_40, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "note that Phi() returns an angle between 0 and 2pi", (void*) NULL, 0);
   G__memfunc_setup("Theta",502,G__G__EG_125_0_41, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFirstMother",1443,G__G__EG_125_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMother",923,G__G__EG_125_0_43, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLastMother",1327,G__G__EG_125_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFirstDaughter",1640,G__G__EG_125_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDaughter",1120,G__G__EG_125_0_46, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLastDaughter",1524,G__G__EG_125_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalcMass",1075,G__G__EG_125_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPdgCode",962,G__G__EG_125_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPolarisation",1569,G__G__EG_125_0_50, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - polx d - 'Double_t' 0 - poly "
"d - 'Double_t' 0 - polz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPolarisation",1569,G__G__EG_125_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStatusCode",1323,G__G__EG_125_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWeight",916,G__G__EG_125_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '1' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMomentum",1150,G__G__EG_125_0_54, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMomentum",1150,G__G__EG_125_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProductionVertex",2001,G__G__EG_125_0_56, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProductionVertex",2001,G__G__EG_125_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Sizeof3D",743,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTitle",802,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__EG_125_0_65, 85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__EG_125_0_66, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__EG_125_0_67, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__EG_125_0_68, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__EG_125_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__EG_125_0_73, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__EG_125_0_74, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__EG_125_0_75, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__EG_125_0_76, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TParticle::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TParticle", 1030, G__G__EG_125_0_77, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGenerator(void) {
   /* TGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__EGLN_TGenerator));
   G__memfunc_setup("TGenerator",1019,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__EGLN_TGenerator), -1, 0, 1, 1, 2, 0, "u 'TGenerator' - 11 - tg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__EGLN_TGenerator), -1, 1, 1, 1, 2, 0, "u 'TGenerator' - 11 - tg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGenerator",1019,G__G__EG_126_0_3, 105, G__get_linked_tagnum(&G__G__EGLN_TGenerator), -1, 0, 0, 1, 1, 0, "", "Used by Dictionary", (void*) NULL, 0);
   G__memfunc_setup("TGenerator",1019,G__G__EG_126_0_4, 105, G__get_linked_tagnum(&G__G__EGLN_TGenerator), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"Generator class\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenerateEvent",1325,G__G__EG_126_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParameter",1217,G__G__EG_126_0_10, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "C - - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ImportParticles",1570,G__G__EG_126_0_11, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"U 'TClonesArray' - 0 - particles C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ImportParticles",1570,G__G__EG_126_0_12, 85, G__get_linked_tagnum(&G__G__EGLN_TObjArray), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticle",1108,G__G__EG_126_0_13, 85, G__get_linked_tagnum(&G__G__EGLN_TParticle), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberOfParticles",2021,G__G__EG_126_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfParticles",1816,G__G__EG_126_0_15, 85, G__get_linked_tagnum(&G__G__EGLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPrimaries",1228,G__G__EG_126_0_16, 85, G__get_linked_tagnum(&G__G__EGLN_TObjArray), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPtCut",784,G__G__EG_126_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParameter",1229,G__G__EG_126_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPtCut",796,G__G__EG_126_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '0' ptcut", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetViewRadius",1327,G__G__EG_126_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '1000' rbox", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetViewRange",1204,G__G__EG_126_0_22, 121, -1, -1, 0, 6, 1, 1, 0, 
"f - 'Float_t' 0 '-10000' xmin f - 'Float_t' 0 '-10000' ymin "
"f - 'Float_t' 0 '-10000' zmin f - 'Float_t' 0 '10000' xmax "
"f - 'Float_t' 0 '10000' ymax f - 'Float_t' 0 '10000' zmax", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("ShowNeutrons",1279,G__G__EG_126_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' show", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__EG_126_0_24, 85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__EG_126_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__EG_126_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__EG_126_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__EG_126_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__EG_126_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__EG_126_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__EG_126_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__EG_126_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGenerator::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGenerator", 1145, G__G__EG_126_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPrimary(void) {
   /* TPrimary */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__EGLN_TPrimary));
   G__memfunc_setup("TPrimary",824,G__G__EG_172_0_1, 105, G__get_linked_tagnum(&G__G__EGLN_TPrimary), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPrimary",824,G__G__EG_172_0_2, 105, G__get_linked_tagnum(&G__G__EGLN_TPrimary), -1, 0, 14, 1, 1, 0, 
"i - 'Int_t' 0 - part i - 'Int_t' 0 - first "
"i - 'Int_t' 0 - second i - 'Int_t' 0 - gener "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - etot "
"d - 'Double_t' 0 - vx d - 'Double_t' 0 - vy "
"d - 'Double_t' 0 - vz d - 'Double_t' 0 - time "
"d - 'Double_t' 0 - timend C - - 10 '\"\"' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticle",1108,G__G__EG_172_0_5, 85, G__get_linked_tagnum(&G__G__EGLN_TAttParticle), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTitle",802,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFirstMother",1431,G__G__EG_172_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSecondMother",1515,G__G__EG_172_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeneration",1324,G__G__EG_172_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXMomentum",1226,G__G__EG_172_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetYMomentum",1227,G__G__EG_172_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZMomentum",1228,G__G__EG_172_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTotalEnergy",1422,G__G__EG_172_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXPosition",1229,G__G__EG_172_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetYPosition",1230,G__G__EG_172_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZPosition",1231,G__G__EG_172_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTime",687,G__G__EG_172_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTimeEnd",966,G__G__EG_172_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__G__EG_172_0_20, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Sizeof3D",743,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__EG_172_0_24, 85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPrimary::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__EG_172_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPrimary::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__EG_172_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPrimary::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__EG_172_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPrimary::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__EG_172_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__EG_172_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPrimary::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__EG_172_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPrimary::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__EG_172_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPrimary::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__EG_172_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPrimary::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TPrimary", 824, G__G__EG_172_0_36, (int) ('i'), G__get_linked_tagnum(&G__G__EGLN_TPrimary), -1, 0, 1, 1, 1, 0, "u 'TPrimary' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPrimary", 950, G__G__EG_172_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__EG_172_0_38, (int) ('u'), G__get_linked_tagnum(&G__G__EGLN_TPrimary), -1, 1, 1, 1, 1, 0, "u 'TPrimary' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVirtualMCDecayer(void) {
   /* TVirtualMCDecayer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__EGLN_TVirtualMCDecayer));
   G__memfunc_setup("Init",404,G__G__EG_173_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Decay",486,G__G__EG_173_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - idpart U 'TLorentzVector' - 0 - p", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ImportParticles",1570,G__G__EG_173_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TClonesArray' - 0 - particles", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetForceDecay",1281,G__G__EG_173_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ForceDecay",981,G__G__EG_173_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPartialBranchingRatio",2424,G__G__EG_173_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ipart", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetLifetime",1103,G__G__EG_173_0_8, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - kf", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ReadDecayTable",1354,G__G__EG_173_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__G__EG_173_0_10, 85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TVirtualMCDecayer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__EG_173_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVirtualMCDecayer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__EG_173_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TVirtualMCDecayer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__EG_173_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TVirtualMCDecayer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__EGLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__EG_173_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__EG_173_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVirtualMCDecayer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__EG_173_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVirtualMCDecayer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__EG_173_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVirtualMCDecayer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__EG_173_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVirtualMCDecayer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TVirtualMCDecayer", 1798, G__G__EG_173_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__EG_173_0_23, (int) ('u'), G__get_linked_tagnum(&G__G__EGLN_TVirtualMCDecayer), -1, 1, 1, 1, 1, 0, "u 'TVirtualMCDecayer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__EG() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__EG() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__EG() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__EGLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__EGLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__EGLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TBrowser = { "TBrowser" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__G__EGLN_THashList = { "THashList" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TAttParticle = { "TAttParticle" , 99 , -1 };
G__linked_taginfo G__G__EGLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__EGLN_TDecayChannel = { "TDecayChannel" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TParticlePDG = { "TParticlePDG" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TParticleClassPDG = { "TParticleClassPDG" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TExMap = { "TExMap" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TDatabasePDG = { "TDatabasePDG" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TParticle = { "TParticle" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TGenerator = { "TGenerator" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TAtt3D = { "TAtt3D" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TPrimary = { "TPrimary" , 99 , -1 };
G__linked_taginfo G__G__EGLN_TVirtualMCDecayer = { "TVirtualMCDecayer" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__EG() {
  G__G__EGLN_TClass.tagnum = -1 ;
  G__G__EGLN_TBuffer.tagnum = -1 ;
  G__G__EGLN_TMemberInspector.tagnum = -1 ;
  G__G__EGLN_TObject.tagnum = -1 ;
  G__G__EGLN_TNamed.tagnum = -1 ;
  G__G__EGLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__EGLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__EGLN_TBrowser.tagnum = -1 ;
  G__G__EGLN_TObjArray.tagnum = -1 ;
  G__G__EGLN_TString.tagnum = -1 ;
  G__G__EGLN_TClonesArray.tagnum = -1 ;
  G__G__EGLN_TAttLine.tagnum = -1 ;
  G__G__EGLN_THashList.tagnum = -1 ;
  G__G__EGLN_TAttParticle.tagnum = -1 ;
  G__G__EGLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__EGLN_TDecayChannel.tagnum = -1 ;
  G__G__EGLN_TParticlePDG.tagnum = -1 ;
  G__G__EGLN_TParticleClassPDG.tagnum = -1 ;
  G__G__EGLN_TExMap.tagnum = -1 ;
  G__G__EGLN_TDatabasePDG.tagnum = -1 ;
  G__G__EGLN_TArrayI.tagnum = -1 ;
  G__G__EGLN_TParticle.tagnum = -1 ;
  G__G__EGLN_TGenerator.tagnum = -1 ;
  G__G__EGLN_TAtt3D.tagnum = -1 ;
  G__G__EGLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__EGLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__EGLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__EGLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__EGLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__EGLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__EGLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__EGLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__EGLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__EGLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__EGLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__EGLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__EGLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__EGLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__EGLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__EGLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__EGLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__EGLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__EGLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__EGLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__EGLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__EGLN_TVector3.tagnum = -1 ;
  G__G__EGLN_TLorentzVector.tagnum = -1 ;
  G__G__EGLN_TPrimary.tagnum = -1 ;
  G__G__EGLN_TVirtualMCDecayer.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__EG() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__EGLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__EGLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TBrowser);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TString);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__G__EGLN_THashList);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__EGLN_TAttParticle),sizeof(TAttParticle),-1,324864,"Particle definition",G__setup_memvarTAttParticle,G__setup_memfuncTAttParticle);
   G__get_linked_tagnum_fwd(&G__G__EGLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__EGLN_TDecayChannel),sizeof(TDecayChannel),-1,324864,"Class describing a particle decay channel",G__setup_memvarTDecayChannel,G__setup_memfuncTDecayChannel);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__EGLN_TParticlePDG),sizeof(TParticlePDG),-1,327424,"PDG static particle definition",G__setup_memvarTParticlePDG,G__setup_memfuncTParticlePDG);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__EGLN_TParticleClassPDG),sizeof(TParticleClassPDG),-1,327424,"PDG static particle definition",G__setup_memvarTParticleClassPDG,G__setup_memfuncTParticleClassPDG);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TExMap);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__EGLN_TDatabasePDG),sizeof(TDatabasePDG),-1,327424,"PDG particle database",G__setup_memvarTDatabasePDG,G__setup_memfuncTDatabasePDG);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TArrayI);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__EGLN_TParticle),sizeof(TParticle),-1,130816,"TParticle vertex particle information",G__setup_memvarTParticle,G__setup_memfuncTParticle);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__EGLN_TGenerator),sizeof(TGenerator),-1,327424,"Event generator interface abstract baseclass",G__setup_memvarTGenerator,G__setup_memfuncTGenerator);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TAtt3D);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TVector3);
   G__get_linked_tagnum_fwd(&G__G__EGLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__EGLN_TPrimary),sizeof(TPrimary),-1,324864,"TPrimary vertex particle information",G__setup_memvarTPrimary,G__setup_memfuncTPrimary);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__EGLN_TVirtualMCDecayer),sizeof(TVirtualMCDecayer),-1,292104,"Particle Decayer Base Class",G__setup_memvarTVirtualMCDecayer,G__setup_memfuncTVirtualMCDecayer);
}
extern "C" void G__cpp_setupG__EG(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__EG()");
  G__set_cpp_environmentG__EG();
  G__cpp_setup_tagtableG__EG();

  G__cpp_setup_inheritanceG__EG();

  G__cpp_setup_typetableG__EG();

  G__cpp_setup_memvarG__EG();

  G__cpp_setup_memfuncG__EG();
  G__cpp_setup_globalG__EG();
  G__cpp_setup_funcG__EG();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__EG();
  return;
}
class G__cpp_setup_initG__EG {
  public:
    G__cpp_setup_initG__EG() { G__add_setup_func("G__EG",(G__incsetup)(&G__cpp_setupG__EG)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__EG() { G__remove_setup_func("G__EG"); }
};
G__cpp_setup_initG__EG G__cpp_setup_initializerG__EG;

