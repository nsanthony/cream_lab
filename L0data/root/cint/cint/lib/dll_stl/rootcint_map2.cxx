//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:39:30 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "rootcint_map2.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void maplEdoublecOcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplEdoublecOcharmUgR_Dictionary();
   static void *new_maplEdoublecOcharmUgR(void *p = 0);
   static void *newArray_maplEdoublecOcharmUgR(Long_t size, void *p);
   static void delete_maplEdoublecOcharmUgR(void *p);
   static void deleteArray_maplEdoublecOcharmUgR(void *p);
   static void destruct_maplEdoublecOcharmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<double,char*>*)
   {
      map<double,char*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<double,char*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<double,char*>", -2, "prec_stl/map", 63,
                  typeid(map<double,char*>), DefineBehavior(ptr, ptr),
                  0, &maplEdoublecOcharmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<double,char*>) );
      instance.SetNew(&new_maplEdoublecOcharmUgR);
      instance.SetNewArray(&newArray_maplEdoublecOcharmUgR);
      instance.SetDelete(&delete_maplEdoublecOcharmUgR);
      instance.SetDeleteArray(&deleteArray_maplEdoublecOcharmUgR);
      instance.SetDestructor(&destruct_maplEdoublecOcharmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<double,char*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<double,char*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEdoublecOcharmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<double,char*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEdoublecOcharmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,char*> : new map<double,char*>;
   }
   static void *newArray_maplEdoublecOcharmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,char*>[nElements] : new map<double,char*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEdoublecOcharmUgR(void *p) {
      delete ((map<double,char*>*)p);
   }
   static void deleteArray_maplEdoublecOcharmUgR(void *p) {
      delete [] ((map<double,char*>*)p);
   }
   static void destruct_maplEdoublecOcharmUgR(void *p) {
      typedef map<double,char*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<double,char*>

namespace ROOT {
   void maplEdoublecOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplEdoublecOdoublegR_Dictionary();
   static void *new_maplEdoublecOdoublegR(void *p = 0);
   static void *newArray_maplEdoublecOdoublegR(Long_t size, void *p);
   static void delete_maplEdoublecOdoublegR(void *p);
   static void deleteArray_maplEdoublecOdoublegR(void *p);
   static void destruct_maplEdoublecOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<double,double>*)
   {
      map<double,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<double,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<double,double>", -2, "prec_stl/map", 63,
                  typeid(map<double,double>), DefineBehavior(ptr, ptr),
                  0, &maplEdoublecOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<double,double>) );
      instance.SetNew(&new_maplEdoublecOdoublegR);
      instance.SetNewArray(&newArray_maplEdoublecOdoublegR);
      instance.SetDelete(&delete_maplEdoublecOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEdoublecOdoublegR);
      instance.SetDestructor(&destruct_maplEdoublecOdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<double,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<double,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEdoublecOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<double,double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEdoublecOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,double> : new map<double,double>;
   }
   static void *newArray_maplEdoublecOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,double>[nElements] : new map<double,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEdoublecOdoublegR(void *p) {
      delete ((map<double,double>*)p);
   }
   static void deleteArray_maplEdoublecOdoublegR(void *p) {
      delete [] ((map<double,double>*)p);
   }
   static void destruct_maplEdoublecOdoublegR(void *p) {
      typedef map<double,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<double,double>

namespace ROOT {
   void maplEdoublecOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplEdoublecOfloatgR_Dictionary();
   static void *new_maplEdoublecOfloatgR(void *p = 0);
   static void *newArray_maplEdoublecOfloatgR(Long_t size, void *p);
   static void delete_maplEdoublecOfloatgR(void *p);
   static void deleteArray_maplEdoublecOfloatgR(void *p);
   static void destruct_maplEdoublecOfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<double,float>*)
   {
      map<double,float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<double,float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<double,float>", -2, "prec_stl/map", 63,
                  typeid(map<double,float>), DefineBehavior(ptr, ptr),
                  0, &maplEdoublecOfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(map<double,float>) );
      instance.SetNew(&new_maplEdoublecOfloatgR);
      instance.SetNewArray(&newArray_maplEdoublecOfloatgR);
      instance.SetDelete(&delete_maplEdoublecOfloatgR);
      instance.SetDeleteArray(&deleteArray_maplEdoublecOfloatgR);
      instance.SetDestructor(&destruct_maplEdoublecOfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<double,float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<double,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEdoublecOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<double,float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEdoublecOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,float> : new map<double,float>;
   }
   static void *newArray_maplEdoublecOfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,float>[nElements] : new map<double,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEdoublecOfloatgR(void *p) {
      delete ((map<double,float>*)p);
   }
   static void deleteArray_maplEdoublecOfloatgR(void *p) {
      delete [] ((map<double,float>*)p);
   }
   static void destruct_maplEdoublecOfloatgR(void *p) {
      typedef map<double,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<double,float>

namespace ROOT {
   void maplEdoublecOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplEdoublecOintgR_Dictionary();
   static void *new_maplEdoublecOintgR(void *p = 0);
   static void *newArray_maplEdoublecOintgR(Long_t size, void *p);
   static void delete_maplEdoublecOintgR(void *p);
   static void deleteArray_maplEdoublecOintgR(void *p);
   static void destruct_maplEdoublecOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<double,int>*)
   {
      map<double,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<double,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<double,int>", -2, "prec_stl/map", 63,
                  typeid(map<double,int>), DefineBehavior(ptr, ptr),
                  0, &maplEdoublecOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<double,int>) );
      instance.SetNew(&new_maplEdoublecOintgR);
      instance.SetNewArray(&newArray_maplEdoublecOintgR);
      instance.SetDelete(&delete_maplEdoublecOintgR);
      instance.SetDeleteArray(&deleteArray_maplEdoublecOintgR);
      instance.SetDestructor(&destruct_maplEdoublecOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<double,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<double,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEdoublecOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<double,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEdoublecOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,int> : new map<double,int>;
   }
   static void *newArray_maplEdoublecOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,int>[nElements] : new map<double,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEdoublecOintgR(void *p) {
      delete ((map<double,int>*)p);
   }
   static void deleteArray_maplEdoublecOintgR(void *p) {
      delete [] ((map<double,int>*)p);
   }
   static void destruct_maplEdoublecOintgR(void *p) {
      typedef map<double,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<double,int>

namespace ROOT {
   void maplEdoublecOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplEdoublecOlonggR_Dictionary();
   static void *new_maplEdoublecOlonggR(void *p = 0);
   static void *newArray_maplEdoublecOlonggR(Long_t size, void *p);
   static void delete_maplEdoublecOlonggR(void *p);
   static void deleteArray_maplEdoublecOlonggR(void *p);
   static void destruct_maplEdoublecOlonggR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<double,long>*)
   {
      map<double,long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<double,long>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<double,long>", -2, "prec_stl/map", 63,
                  typeid(map<double,long>), DefineBehavior(ptr, ptr),
                  0, &maplEdoublecOlonggR_Dictionary, isa_proxy, 0,
                  sizeof(map<double,long>) );
      instance.SetNew(&new_maplEdoublecOlonggR);
      instance.SetNewArray(&newArray_maplEdoublecOlonggR);
      instance.SetDelete(&delete_maplEdoublecOlonggR);
      instance.SetDeleteArray(&deleteArray_maplEdoublecOlonggR);
      instance.SetDestructor(&destruct_maplEdoublecOlonggR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<double,long> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<double,long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEdoublecOlonggR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<double,long>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEdoublecOlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,long> : new map<double,long>;
   }
   static void *newArray_maplEdoublecOlonggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,long>[nElements] : new map<double,long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEdoublecOlonggR(void *p) {
      delete ((map<double,long>*)p);
   }
   static void deleteArray_maplEdoublecOlonggR(void *p) {
      delete [] ((map<double,long>*)p);
   }
   static void destruct_maplEdoublecOlonggR(void *p) {
      typedef map<double,long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<double,long>

namespace ROOT {
   void maplEdoublecOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplEdoublecOvoidmUgR_Dictionary();
   static void *new_maplEdoublecOvoidmUgR(void *p = 0);
   static void *newArray_maplEdoublecOvoidmUgR(Long_t size, void *p);
   static void delete_maplEdoublecOvoidmUgR(void *p);
   static void deleteArray_maplEdoublecOvoidmUgR(void *p);
   static void destruct_maplEdoublecOvoidmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<double,void*>*)
   {
      map<double,void*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<double,void*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<double,void*>", -2, "prec_stl/map", 63,
                  typeid(map<double,void*>), DefineBehavior(ptr, ptr),
                  0, &maplEdoublecOvoidmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<double,void*>) );
      instance.SetNew(&new_maplEdoublecOvoidmUgR);
      instance.SetNewArray(&newArray_maplEdoublecOvoidmUgR);
      instance.SetDelete(&delete_maplEdoublecOvoidmUgR);
      instance.SetDeleteArray(&deleteArray_maplEdoublecOvoidmUgR);
      instance.SetDestructor(&destruct_maplEdoublecOvoidmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<double,void*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<double,void*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEdoublecOvoidmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<double,void*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEdoublecOvoidmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,void*> : new map<double,void*>;
   }
   static void *newArray_maplEdoublecOvoidmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,void*>[nElements] : new map<double,void*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEdoublecOvoidmUgR(void *p) {
      delete ((map<double,void*>*)p);
   }
   static void deleteArray_maplEdoublecOvoidmUgR(void *p) {
      delete [] ((map<double,void*>*)p);
   }
   static void destruct_maplEdoublecOvoidmUgR(void *p) {
      typedef map<double,void*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<double,void*>

namespace ROOT {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "prec_stl/map", 63,
                  typeid(map<int,int>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,int>

namespace ROOT {
   void maplElongcOcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplElongcOcharmUgR_Dictionary();
   static void *new_maplElongcOcharmUgR(void *p = 0);
   static void *newArray_maplElongcOcharmUgR(Long_t size, void *p);
   static void delete_maplElongcOcharmUgR(void *p);
   static void deleteArray_maplElongcOcharmUgR(void *p);
   static void destruct_maplElongcOcharmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<long,char*>*)
   {
      map<long,char*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<long,char*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<long,char*>", -2, "prec_stl/map", 63,
                  typeid(map<long,char*>), DefineBehavior(ptr, ptr),
                  0, &maplElongcOcharmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<long,char*>) );
      instance.SetNew(&new_maplElongcOcharmUgR);
      instance.SetNewArray(&newArray_maplElongcOcharmUgR);
      instance.SetDelete(&delete_maplElongcOcharmUgR);
      instance.SetDeleteArray(&deleteArray_maplElongcOcharmUgR);
      instance.SetDestructor(&destruct_maplElongcOcharmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<long,char*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<long,char*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplElongcOcharmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<long,char*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplElongcOcharmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<long,char*> : new map<long,char*>;
   }
   static void *newArray_maplElongcOcharmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<long,char*>[nElements] : new map<long,char*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplElongcOcharmUgR(void *p) {
      delete ((map<long,char*>*)p);
   }
   static void deleteArray_maplElongcOcharmUgR(void *p) {
      delete [] ((map<long,char*>*)p);
   }
   static void destruct_maplElongcOcharmUgR(void *p) {
      typedef map<long,char*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<long,char*>

namespace ROOT {
   void maplElongcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplElongcOdoublegR_Dictionary();
   static void *new_maplElongcOdoublegR(void *p = 0);
   static void *newArray_maplElongcOdoublegR(Long_t size, void *p);
   static void delete_maplElongcOdoublegR(void *p);
   static void deleteArray_maplElongcOdoublegR(void *p);
   static void destruct_maplElongcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<long,double>*)
   {
      map<long,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<long,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<long,double>", -2, "prec_stl/map", 63,
                  typeid(map<long,double>), DefineBehavior(ptr, ptr),
                  0, &maplElongcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<long,double>) );
      instance.SetNew(&new_maplElongcOdoublegR);
      instance.SetNewArray(&newArray_maplElongcOdoublegR);
      instance.SetDelete(&delete_maplElongcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplElongcOdoublegR);
      instance.SetDestructor(&destruct_maplElongcOdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<long,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<long,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplElongcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<long,double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplElongcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<long,double> : new map<long,double>;
   }
   static void *newArray_maplElongcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<long,double>[nElements] : new map<long,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplElongcOdoublegR(void *p) {
      delete ((map<long,double>*)p);
   }
   static void deleteArray_maplElongcOdoublegR(void *p) {
      delete [] ((map<long,double>*)p);
   }
   static void destruct_maplElongcOdoublegR(void *p) {
      typedef map<long,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<long,double>

namespace ROOT {
   void maplElongcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplElongcOfloatgR_Dictionary();
   static void *new_maplElongcOfloatgR(void *p = 0);
   static void *newArray_maplElongcOfloatgR(Long_t size, void *p);
   static void delete_maplElongcOfloatgR(void *p);
   static void deleteArray_maplElongcOfloatgR(void *p);
   static void destruct_maplElongcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<long,float>*)
   {
      map<long,float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<long,float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<long,float>", -2, "prec_stl/map", 63,
                  typeid(map<long,float>), DefineBehavior(ptr, ptr),
                  0, &maplElongcOfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(map<long,float>) );
      instance.SetNew(&new_maplElongcOfloatgR);
      instance.SetNewArray(&newArray_maplElongcOfloatgR);
      instance.SetDelete(&delete_maplElongcOfloatgR);
      instance.SetDeleteArray(&deleteArray_maplElongcOfloatgR);
      instance.SetDestructor(&destruct_maplElongcOfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<long,float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<long,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplElongcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<long,float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplElongcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<long,float> : new map<long,float>;
   }
   static void *newArray_maplElongcOfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<long,float>[nElements] : new map<long,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplElongcOfloatgR(void *p) {
      delete ((map<long,float>*)p);
   }
   static void deleteArray_maplElongcOfloatgR(void *p) {
      delete [] ((map<long,float>*)p);
   }
   static void destruct_maplElongcOfloatgR(void *p) {
      typedef map<long,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<long,float>

namespace ROOT {
   void maplElongcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplElongcOintgR_Dictionary();
   static void *new_maplElongcOintgR(void *p = 0);
   static void *newArray_maplElongcOintgR(Long_t size, void *p);
   static void delete_maplElongcOintgR(void *p);
   static void deleteArray_maplElongcOintgR(void *p);
   static void destruct_maplElongcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<long,int>*)
   {
      map<long,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<long,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<long,int>", -2, "prec_stl/map", 63,
                  typeid(map<long,int>), DefineBehavior(ptr, ptr),
                  0, &maplElongcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<long,int>) );
      instance.SetNew(&new_maplElongcOintgR);
      instance.SetNewArray(&newArray_maplElongcOintgR);
      instance.SetDelete(&delete_maplElongcOintgR);
      instance.SetDeleteArray(&deleteArray_maplElongcOintgR);
      instance.SetDestructor(&destruct_maplElongcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<long,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<long,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplElongcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<long,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplElongcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<long,int> : new map<long,int>;
   }
   static void *newArray_maplElongcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<long,int>[nElements] : new map<long,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplElongcOintgR(void *p) {
      delete ((map<long,int>*)p);
   }
   static void deleteArray_maplElongcOintgR(void *p) {
      delete [] ((map<long,int>*)p);
   }
   static void destruct_maplElongcOintgR(void *p) {
      typedef map<long,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<long,int>

namespace ROOT {
   void maplElongcOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplElongcOlonggR_Dictionary();
   static void *new_maplElongcOlonggR(void *p = 0);
   static void *newArray_maplElongcOlonggR(Long_t size, void *p);
   static void delete_maplElongcOlonggR(void *p);
   static void deleteArray_maplElongcOlonggR(void *p);
   static void destruct_maplElongcOlonggR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<long,long>*)
   {
      map<long,long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<long,long>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<long,long>", -2, "prec_stl/map", 63,
                  typeid(map<long,long>), DefineBehavior(ptr, ptr),
                  0, &maplElongcOlonggR_Dictionary, isa_proxy, 0,
                  sizeof(map<long,long>) );
      instance.SetNew(&new_maplElongcOlonggR);
      instance.SetNewArray(&newArray_maplElongcOlonggR);
      instance.SetDelete(&delete_maplElongcOlonggR);
      instance.SetDeleteArray(&deleteArray_maplElongcOlonggR);
      instance.SetDestructor(&destruct_maplElongcOlonggR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<long,long> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<long,long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplElongcOlonggR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<long,long>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplElongcOlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<long,long> : new map<long,long>;
   }
   static void *newArray_maplElongcOlonggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<long,long>[nElements] : new map<long,long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplElongcOlonggR(void *p) {
      delete ((map<long,long>*)p);
   }
   static void deleteArray_maplElongcOlonggR(void *p) {
      delete [] ((map<long,long>*)p);
   }
   static void destruct_maplElongcOlonggR(void *p) {
      typedef map<long,long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<long,long>

namespace ROOT {
   void maplElongcOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplElongcOvoidmUgR_Dictionary();
   static void *new_maplElongcOvoidmUgR(void *p = 0);
   static void *newArray_maplElongcOvoidmUgR(Long_t size, void *p);
   static void delete_maplElongcOvoidmUgR(void *p);
   static void deleteArray_maplElongcOvoidmUgR(void *p);
   static void destruct_maplElongcOvoidmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<long,void*>*)
   {
      map<long,void*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<long,void*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<long,void*>", -2, "prec_stl/map", 63,
                  typeid(map<long,void*>), DefineBehavior(ptr, ptr),
                  0, &maplElongcOvoidmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<long,void*>) );
      instance.SetNew(&new_maplElongcOvoidmUgR);
      instance.SetNewArray(&newArray_maplElongcOvoidmUgR);
      instance.SetDelete(&delete_maplElongcOvoidmUgR);
      instance.SetDeleteArray(&deleteArray_maplElongcOvoidmUgR);
      instance.SetDestructor(&destruct_maplElongcOvoidmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<long,void*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<long,void*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplElongcOvoidmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<long,void*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplElongcOvoidmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<long,void*> : new map<long,void*>;
   }
   static void *newArray_maplElongcOvoidmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<long,void*>[nElements] : new map<long,void*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplElongcOvoidmUgR(void *p) {
      delete ((map<long,void*>*)p);
   }
   static void deleteArray_maplElongcOvoidmUgR(void *p) {
      delete [] ((map<long,void*>*)p);
   }
   static void destruct_maplElongcOvoidmUgR(void *p) {
      typedef map<long,void*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<long,void*>

/********************************************************
* cint/cint/lib/dll_stl/rootcint_map2.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablerootcint_map2();

extern "C" void G__set_cpp_environmentrootcint_map2() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("map");
  G__cpp_reset_tagtablerootcint_map2();
}
#include <new>
extern "C" int G__cpp_dllrevrootcint_map2() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncrootcint_map2 {
 public:
  G__Sizep2memfuncrootcint_map2(): p(&G__Sizep2memfuncrootcint_map2::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncrootcint_map2::*p)();
};

size_t G__get_sizep2memfuncrootcint_map2()
{
  G__Sizep2memfuncrootcint_map2 a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancerootcint_map2() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablerootcint_map2() {

   /* Setting up typedef entry */
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__rootcint_map2LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootcint_map2LN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootcint_map2LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootcint_map2LN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootcint_map2LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__rootcint_map2LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */
extern "C" void G__cpp_setup_memvarrootcint_map2() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/

/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncrootcint_map2() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalrootcint_map2() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcrootcint_map2() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__rootcint_map2LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__rootcint_map2LN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablerootcint_map2() {
  G__rootcint_map2LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__rootcint_map2LN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablerootcint_map2() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__rootcint_map2LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__rootcint_map2LN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setuprootcint_map2(void) {
  G__check_setup_version(30051515,"G__cpp_setuprootcint_map2()");
  G__set_cpp_environmentrootcint_map2();
  G__cpp_setup_tagtablerootcint_map2();

  G__cpp_setup_inheritancerootcint_map2();

  G__cpp_setup_typetablerootcint_map2();

  G__cpp_setup_memvarrootcint_map2();

  G__cpp_setup_memfuncrootcint_map2();
  G__cpp_setup_globalrootcint_map2();
  G__cpp_setup_funcrootcint_map2();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncrootcint_map2();
  return;
}
class G__cpp_setup_initrootcint_map2 {
  public:
    G__cpp_setup_initrootcint_map2() { G__add_setup_func("rootcint_map2",(G__incsetup)(&G__cpp_setuprootcint_map2)); G__call_setup_funcs(); }
   ~G__cpp_setup_initrootcint_map2() { G__remove_setup_func("rootcint_map2"); }
};
G__cpp_setup_initrootcint_map2 G__cpp_setup_initializerrootcint_map2;

