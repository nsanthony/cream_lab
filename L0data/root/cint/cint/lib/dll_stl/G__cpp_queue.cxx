/********************************************************
* cint/cint/lib/dll_stl/G__cpp_queue.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/
#include "cint/cint/lib/dll_stl/G__cpp_queue.h" //newlink 3678 

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtable();

extern "C" void G__set_cpp_environment() {
  G__add_compiledheader("cint/cint/lib/dll_stl/que.h");
  G__add_compiledheader("cint/cint/inc/cintdictversion.h");
  G__cpp_reset_tagtable();
}
#include <new>
extern "C" int G__cpp_dllrev() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* allocator<int> */
static int G__queue_48_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<int>[n];
     } else {
       p = new((void*) gvp) allocator<int>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<int>;
     } else {
       p = new((void*) gvp) allocator<int>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_48_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<int>(*(allocator<int>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<int>(*(allocator<int>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_48_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const allocator<int>*) G__getstructoffset())->address(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_48_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const allocator<int>*) G__getstructoffset())->address(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_48_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 73, (long) ((allocator<int>*) G__getstructoffset())->allocate((allocator<int>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 73, (long) ((allocator<int>*) G__getstructoffset())->allocate((allocator<int>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_48_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<int>*) G__getstructoffset())->deallocate((allocator<int>::pointer) G__int(libp->para[0]), (allocator<int>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_48_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<int>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_48_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<int>*) G__getstructoffset())->construct((allocator<int>::pointer) G__int(libp->para[0]), *(int*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_48_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<int>*) G__getstructoffset())->destroy((allocator<int>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<int> G__TallocatorlEintgR;
static int G__queue_48_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<int>*) (soff+(sizeof(allocator<int>)*i)))->~G__TallocatorlEintgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<int>*) (soff))->~G__TallocatorlEintgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__queue_48_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<int>* dest = (allocator<int>*) G__getstructoffset();
   const allocator<int>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<int,allocator<int> > */
static int G__queue_49_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<int,allocator<int> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<int,allocator<int> >[n];
     } else {
       p = new((void*) gvp) deque<int,allocator<int> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<int,allocator<int> >;
     } else {
       p = new((void*) gvp) deque<int,allocator<int> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<int,allocator<int> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<int,allocator<int> >((deque<int,allocator<int> >::size_type) G__int(libp->para[0]), *(int*) G__Intref(&libp->para[1]));
     } else {
       p = new((void*) gvp) deque<int,allocator<int> >((deque<int,allocator<int> >::size_type) G__int(libp->para[0]), *(int*) G__Intref(&libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<int,allocator<int> >((deque<int,allocator<int> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) deque<int,allocator<int> >((deque<int,allocator<int> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<int,allocator<int> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<int,allocator<int> >((const int*) G__int(libp->para[0]), (const int*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) deque<int,allocator<int> >((const int*) G__int(libp->para[0]), (const int*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<int,allocator<int> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<int,allocator<int> >(*((deque<int,allocator<int> >::const_iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) deque<int,allocator<int> >(*((deque<int,allocator<int> >::const_iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<int,allocator<int> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<int,allocator<int> >(*(deque<int,allocator<int> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<int,allocator<int> >(*(deque<int,allocator<int> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<int,allocator<int> >& obj = ((deque<int,allocator<int> >*) G__getstructoffset())->operator=(*(deque<int,allocator<int> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = ((deque<int,allocator<int> >*) G__getstructoffset())->begin();
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = ((deque<int,allocator<int> >*) G__getstructoffset())->end();
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::reverse_iterator* pobj;
         deque<int,allocator<int> >::reverse_iterator xobj = ((deque<int,allocator<int> >*) G__getstructoffset())->rbegin();
         pobj = new deque<int,allocator<int> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::reverse_iterator* pobj;
         deque<int,allocator<int> >::reverse_iterator xobj = ((deque<int,allocator<int> >*) G__getstructoffset())->rend();
         pobj = new deque<int,allocator<int> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const deque<int,allocator<int> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const deque<int,allocator<int> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((deque<int,allocator<int> >*) G__getstructoffset())->resize((deque<int,allocator<int> >::size_type) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((deque<int,allocator<int> >*) G__getstructoffset())->resize((deque<int,allocator<int> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const deque<int,allocator<int> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((deque<int,allocator<int> >*) G__getstructoffset())->operator[]((deque<int,allocator<int> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((deque<int,allocator<int> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((deque<int,allocator<int> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<int,allocator<int> >*) G__getstructoffset())->push_front(*(int*) G__Intref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<int,allocator<int> >*) G__getstructoffset())->push_back(*(int*) G__Intref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = ((deque<int,allocator<int> >*) G__getstructoffset())->insert(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *(int*) G__Intref(&libp->para[1]));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<int,allocator<int> >*) G__getstructoffset())->insert(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), (deque<int,allocator<int> >::size_type) G__int(libp->para[1])
, *(int*) G__Intref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<int,allocator<int> >*) G__getstructoffset())->pop_front();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<int,allocator<int> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = ((deque<int,allocator<int> >*) G__getstructoffset())->erase(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = ((deque<int,allocator<int> >*) G__getstructoffset())->erase(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<int,allocator<int> >*) G__getstructoffset())->swap(*(deque<int,allocator<int> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_49_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<int,allocator<int> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<int,allocator<int> > G__TdequelEintcOallocatorlEintgRsPgR;
static int G__queue_49_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<int,allocator<int> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<int,allocator<int> >*) (soff+(sizeof(deque<int,allocator<int> >)*i)))->~G__TdequelEintcOallocatorlEintgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<int,allocator<int> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<int,allocator<int> >*) (soff))->~G__TdequelEintcOallocatorlEintgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<int,allocator<int> >::iterator */
static int G__queue_50_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<int,allocator<int> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<int,allocator<int> >::iterator[n];
     } else {
       p = new((void*) gvp) deque<int,allocator<int> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<int,allocator<int> >::iterator;
     } else {
       p = new((void*) gvp) deque<int,allocator<int> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_50_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<int,allocator<int> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<int,allocator<int> >::iterator(*(deque<int,allocator<int> >::iterator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<int,allocator<int> >::iterator(*(deque<int,allocator<int> >::iterator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_50_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<int,allocator<int> >::iterator& obj = ((deque<int,allocator<int> >::iterator*) G__getstructoffset())->operator=(*(deque<int,allocator<int> >::iterator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_50_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((const deque<int,allocator<int> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_50_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const deque<int,allocator<int> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_50_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<int,allocator<int> >::iterator& obj = ((deque<int,allocator<int> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_50_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = ((deque<int,allocator<int> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_50_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<int,allocator<int> >::iterator& obj = ((deque<int,allocator<int> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_50_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = ((deque<int,allocator<int> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_50_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = ((deque<int,allocator<int> >::iterator*) G__getstructoffset())->operator+((long) G__int(libp->para[0]));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_50_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = ((deque<int,allocator<int> >::iterator*) G__getstructoffset())->operator-((long) G__int(libp->para[0]));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_50_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<int,allocator<int> >::iterator& obj = ((deque<int,allocator<int> >::iterator*) G__getstructoffset())->operator+=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_50_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<int,allocator<int> >::iterator& obj = ((deque<int,allocator<int> >::iterator*) G__getstructoffset())->operator-=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_50_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((deque<int,allocator<int> >::iterator*) G__getstructoffset())->operator[]((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<int,allocator<int> >::iterator G__TdequelEintcOallocatorlEintgRsPgRcLcLiterator;
static int G__queue_50_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<int,allocator<int> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<int,allocator<int> >::iterator*) (soff+(sizeof(deque<int,allocator<int> >::iterator)*i)))->~G__TdequelEintcOallocatorlEintgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<int,allocator<int> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<int,allocator<int> >::iterator*) (soff))->~G__TdequelEintcOallocatorlEintgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<int,allocator<int> >::reverse_iterator */
static int G__queue_51_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<int,allocator<int> >::reverse_iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<int,allocator<int> >::reverse_iterator(*(deque<int,allocator<int> >::reverse_iterator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<int,allocator<int> >::reverse_iterator(*(deque<int,allocator<int> >::reverse_iterator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_51_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<int,allocator<int> >::reverse_iterator& obj = ((deque<int,allocator<int> >::reverse_iterator*) G__getstructoffset())->operator=(*(deque<int,allocator<int> >::reverse_iterator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_51_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((const deque<int,allocator<int> >::reverse_iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_51_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((const deque<int,allocator<int> >::reverse_iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_51_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<int,allocator<int> >::reverse_iterator& obj = ((deque<int,allocator<int> >::reverse_iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_51_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::reverse_iterator* pobj;
         deque<int,allocator<int> >::reverse_iterator xobj = ((deque<int,allocator<int> >::reverse_iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new deque<int,allocator<int> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_51_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<int,allocator<int> >::reverse_iterator& obj = ((deque<int,allocator<int> >::reverse_iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_51_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::reverse_iterator* pobj;
         deque<int,allocator<int> >::reverse_iterator xobj = ((deque<int,allocator<int> >::reverse_iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new deque<int,allocator<int> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_51_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::reverse_iterator* pobj;
         deque<int,allocator<int> >::reverse_iterator xobj = ((deque<int,allocator<int> >::reverse_iterator*) G__getstructoffset())->operator+((long) G__int(libp->para[0]));
         pobj = new deque<int,allocator<int> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_51_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::reverse_iterator* pobj;
         deque<int,allocator<int> >::reverse_iterator xobj = ((deque<int,allocator<int> >::reverse_iterator*) G__getstructoffset())->operator-((long) G__int(libp->para[0]));
         pobj = new deque<int,allocator<int> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_51_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<int,allocator<int> >::reverse_iterator& obj = ((deque<int,allocator<int> >::reverse_iterator*) G__getstructoffset())->operator+=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_51_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<int,allocator<int> >::reverse_iterator& obj = ((deque<int,allocator<int> >::reverse_iterator*) G__getstructoffset())->operator-=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_51_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((deque<int,allocator<int> >::reverse_iterator*) G__getstructoffset())->operator[]((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<int,allocator<int> >::reverse_iterator G__TdequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator;
static int G__queue_51_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<int,allocator<int> >::reverse_iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<int,allocator<int> >::reverse_iterator*) (soff+(sizeof(deque<int,allocator<int> >::reverse_iterator)*i)))->~G__TdequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<int,allocator<int> >::reverse_iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<int,allocator<int> >::reverse_iterator*) (soff))->~G__TdequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* queue<int,deque<int,allocator<int> > > */
static int G__queue_52_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   queue<int,deque<int,allocator<int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new queue<int,deque<int,allocator<int> > >[n];
     } else {
       p = new((void*) gvp) queue<int,deque<int,allocator<int> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new queue<int,deque<int,allocator<int> > >;
     } else {
       p = new((void*) gvp) queue<int,deque<int,allocator<int> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_queuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_52_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const queue<int,deque<int,allocator<int> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_52_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const queue<int,deque<int,allocator<int> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_52_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const queue<int,deque<int,allocator<int> > >::value_type& obj = ((queue<int,deque<int,allocator<int> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_52_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const queue<int,deque<int,allocator<int> > >::value_type& obj = ((queue<int,deque<int,allocator<int> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_52_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((queue<int,deque<int,allocator<int> > >*) G__getstructoffset())->push(*(int*) G__Intref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_52_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((queue<int,deque<int,allocator<int> > >*) G__getstructoffset())->pop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__queue_52_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   queue<int,deque<int,allocator<int> > >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new queue<int,deque<int,allocator<int> > >(*(queue<int,deque<int,allocator<int> > >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_queuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef queue<int,deque<int,allocator<int> > > G__TqueuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR;
static int G__queue_52_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (queue<int,deque<int,allocator<int> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((queue<int,deque<int,allocator<int> > >*) (soff+(sizeof(queue<int,deque<int,allocator<int> > >)*i)))->~G__TqueuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (queue<int,deque<int,allocator<int> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((queue<int,deque<int,allocator<int> > >*) (soff))->~G__TqueuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__queue_52_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   queue<int,deque<int,allocator<int> > >* dest = (queue<int,deque<int,allocator<int> > >*) G__getstructoffset();
   *dest = *(queue<int,deque<int,allocator<int> > >*) libp->para[0].ref;
   const queue<int,deque<int,allocator<int> > >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* allocator<long> */
static int G__queue_53_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<long>[n];
     } else {
       p = new((void*) gvp) allocator<long>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<long>;
     } else {
       p = new((void*) gvp) allocator<long>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_53_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<long>(*(allocator<long>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<long>(*(allocator<long>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_53_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 76, (long) ((const allocator<long>*) G__getstructoffset())->address(*(long*) G__Longref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_53_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 76, (long) ((const allocator<long>*) G__getstructoffset())->address(*(long*) G__Longref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_53_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 76, (long) ((allocator<long>*) G__getstructoffset())->allocate((allocator<long>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 76, (long) ((allocator<long>*) G__getstructoffset())->allocate((allocator<long>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_53_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<long>*) G__getstructoffset())->deallocate((allocator<long>::pointer) G__int(libp->para[0]), (allocator<long>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_53_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<long>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_53_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<long>*) G__getstructoffset())->construct((allocator<long>::pointer) G__int(libp->para[0]), *(long*) G__Longref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_53_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<long>*) G__getstructoffset())->destroy((allocator<long>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<long> G__TallocatorlElonggR;
static int G__queue_53_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<long>*) (soff+(sizeof(allocator<long>)*i)))->~G__TallocatorlElonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<long>*) (soff))->~G__TallocatorlElonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__queue_53_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<long>* dest = (allocator<long>*) G__getstructoffset();
   const allocator<long>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<long,allocator<long> > */
static int G__queue_54_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<long,allocator<long> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<long,allocator<long> >[n];
     } else {
       p = new((void*) gvp) deque<long,allocator<long> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<long,allocator<long> >;
     } else {
       p = new((void*) gvp) deque<long,allocator<long> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<long,allocator<long> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<long,allocator<long> >((deque<long,allocator<long> >::size_type) G__int(libp->para[0]), *(long*) G__Longref(&libp->para[1]));
     } else {
       p = new((void*) gvp) deque<long,allocator<long> >((deque<long,allocator<long> >::size_type) G__int(libp->para[0]), *(long*) G__Longref(&libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<long,allocator<long> >((deque<long,allocator<long> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) deque<long,allocator<long> >((deque<long,allocator<long> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<long,allocator<long> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<long,allocator<long> >((const long*) G__int(libp->para[0]), (const long*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) deque<long,allocator<long> >((const long*) G__int(libp->para[0]), (const long*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<long,allocator<long> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<long,allocator<long> >(*((deque<long,allocator<long> >::const_iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) deque<long,allocator<long> >(*((deque<long,allocator<long> >::const_iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<long,allocator<long> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<long,allocator<long> >(*(deque<long,allocator<long> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<long,allocator<long> >(*(deque<long,allocator<long> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<long,allocator<long> >& obj = ((deque<long,allocator<long> >*) G__getstructoffset())->operator=(*(deque<long,allocator<long> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = ((deque<long,allocator<long> >*) G__getstructoffset())->begin();
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = ((deque<long,allocator<long> >*) G__getstructoffset())->end();
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::reverse_iterator* pobj;
         deque<long,allocator<long> >::reverse_iterator xobj = ((deque<long,allocator<long> >*) G__getstructoffset())->rbegin();
         pobj = new deque<long,allocator<long> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::reverse_iterator* pobj;
         deque<long,allocator<long> >::reverse_iterator xobj = ((deque<long,allocator<long> >*) G__getstructoffset())->rend();
         pobj = new deque<long,allocator<long> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const deque<long,allocator<long> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const deque<long,allocator<long> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((deque<long,allocator<long> >*) G__getstructoffset())->resize((deque<long,allocator<long> >::size_type) G__int(libp->para[0]), (long) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((deque<long,allocator<long> >*) G__getstructoffset())->resize((deque<long,allocator<long> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const deque<long,allocator<long> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = ((deque<long,allocator<long> >*) G__getstructoffset())->operator[]((deque<long,allocator<long> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = ((deque<long,allocator<long> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = ((deque<long,allocator<long> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<long,allocator<long> >*) G__getstructoffset())->push_front(*(long*) G__Longref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<long,allocator<long> >*) G__getstructoffset())->push_back(*(long*) G__Longref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = ((deque<long,allocator<long> >*) G__getstructoffset())->insert(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *(long*) G__Longref(&libp->para[1]));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<long,allocator<long> >*) G__getstructoffset())->insert(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), (deque<long,allocator<long> >::size_type) G__int(libp->para[1])
, *(long*) G__Longref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<long,allocator<long> >*) G__getstructoffset())->pop_front();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<long,allocator<long> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = ((deque<long,allocator<long> >*) G__getstructoffset())->erase(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = ((deque<long,allocator<long> >*) G__getstructoffset())->erase(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<long,allocator<long> >*) G__getstructoffset())->swap(*(deque<long,allocator<long> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_54_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<long,allocator<long> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<long,allocator<long> > G__TdequelElongcOallocatorlElonggRsPgR;
static int G__queue_54_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<long,allocator<long> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<long,allocator<long> >*) (soff+(sizeof(deque<long,allocator<long> >)*i)))->~G__TdequelElongcOallocatorlElonggRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<long,allocator<long> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<long,allocator<long> >*) (soff))->~G__TdequelElongcOallocatorlElonggRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<long,allocator<long> >::iterator */
static int G__queue_55_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<long,allocator<long> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<long,allocator<long> >::iterator[n];
     } else {
       p = new((void*) gvp) deque<long,allocator<long> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<long,allocator<long> >::iterator;
     } else {
       p = new((void*) gvp) deque<long,allocator<long> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_55_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<long,allocator<long> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<long,allocator<long> >::iterator(*(deque<long,allocator<long> >::iterator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<long,allocator<long> >::iterator(*(deque<long,allocator<long> >::iterator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_55_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<long,allocator<long> >::iterator& obj = ((deque<long,allocator<long> >::iterator*) G__getstructoffset())->operator=(*(deque<long,allocator<long> >::iterator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_55_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = ((const deque<long,allocator<long> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_55_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 76, (long) ((const deque<long,allocator<long> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_55_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<long,allocator<long> >::iterator& obj = ((deque<long,allocator<long> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_55_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = ((deque<long,allocator<long> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_55_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<long,allocator<long> >::iterator& obj = ((deque<long,allocator<long> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_55_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = ((deque<long,allocator<long> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_55_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = ((deque<long,allocator<long> >::iterator*) G__getstructoffset())->operator+((long) G__int(libp->para[0]));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_55_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = ((deque<long,allocator<long> >::iterator*) G__getstructoffset())->operator-((long) G__int(libp->para[0]));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_55_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<long,allocator<long> >::iterator& obj = ((deque<long,allocator<long> >::iterator*) G__getstructoffset())->operator+=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_55_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<long,allocator<long> >::iterator& obj = ((deque<long,allocator<long> >::iterator*) G__getstructoffset())->operator-=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_55_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = ((deque<long,allocator<long> >::iterator*) G__getstructoffset())->operator[]((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<long,allocator<long> >::iterator G__TdequelElongcOallocatorlElonggRsPgRcLcLiterator;
static int G__queue_55_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<long,allocator<long> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<long,allocator<long> >::iterator*) (soff+(sizeof(deque<long,allocator<long> >::iterator)*i)))->~G__TdequelElongcOallocatorlElonggRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<long,allocator<long> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<long,allocator<long> >::iterator*) (soff))->~G__TdequelElongcOallocatorlElonggRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<long,allocator<long> >::reverse_iterator */
static int G__queue_56_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<long,allocator<long> >::reverse_iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<long,allocator<long> >::reverse_iterator(*(deque<long,allocator<long> >::reverse_iterator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<long,allocator<long> >::reverse_iterator(*(deque<long,allocator<long> >::reverse_iterator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_56_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<long,allocator<long> >::reverse_iterator& obj = ((deque<long,allocator<long> >::reverse_iterator*) G__getstructoffset())->operator=(*(deque<long,allocator<long> >::reverse_iterator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_56_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = ((const deque<long,allocator<long> >::reverse_iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_56_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 76, (long) ((const deque<long,allocator<long> >::reverse_iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_56_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<long,allocator<long> >::reverse_iterator& obj = ((deque<long,allocator<long> >::reverse_iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_56_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::reverse_iterator* pobj;
         deque<long,allocator<long> >::reverse_iterator xobj = ((deque<long,allocator<long> >::reverse_iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new deque<long,allocator<long> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_56_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<long,allocator<long> >::reverse_iterator& obj = ((deque<long,allocator<long> >::reverse_iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_56_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::reverse_iterator* pobj;
         deque<long,allocator<long> >::reverse_iterator xobj = ((deque<long,allocator<long> >::reverse_iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new deque<long,allocator<long> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_56_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::reverse_iterator* pobj;
         deque<long,allocator<long> >::reverse_iterator xobj = ((deque<long,allocator<long> >::reverse_iterator*) G__getstructoffset())->operator+((long) G__int(libp->para[0]));
         pobj = new deque<long,allocator<long> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_56_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::reverse_iterator* pobj;
         deque<long,allocator<long> >::reverse_iterator xobj = ((deque<long,allocator<long> >::reverse_iterator*) G__getstructoffset())->operator-((long) G__int(libp->para[0]));
         pobj = new deque<long,allocator<long> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_56_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<long,allocator<long> >::reverse_iterator& obj = ((deque<long,allocator<long> >::reverse_iterator*) G__getstructoffset())->operator+=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_56_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<long,allocator<long> >::reverse_iterator& obj = ((deque<long,allocator<long> >::reverse_iterator*) G__getstructoffset())->operator-=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_56_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = ((deque<long,allocator<long> >::reverse_iterator*) G__getstructoffset())->operator[]((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<long,allocator<long> >::reverse_iterator G__TdequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator;
static int G__queue_56_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<long,allocator<long> >::reverse_iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<long,allocator<long> >::reverse_iterator*) (soff+(sizeof(deque<long,allocator<long> >::reverse_iterator)*i)))->~G__TdequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<long,allocator<long> >::reverse_iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<long,allocator<long> >::reverse_iterator*) (soff))->~G__TdequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* queue<long,deque<long,allocator<long> > > */
static int G__queue_57_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   queue<long,deque<long,allocator<long> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new queue<long,deque<long,allocator<long> > >[n];
     } else {
       p = new((void*) gvp) queue<long,deque<long,allocator<long> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new queue<long,deque<long,allocator<long> > >;
     } else {
       p = new((void*) gvp) queue<long,deque<long,allocator<long> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_queuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_57_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const queue<long,deque<long,allocator<long> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_57_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const queue<long,deque<long,allocator<long> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_57_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const queue<long,deque<long,allocator<long> > >::value_type& obj = ((queue<long,deque<long,allocator<long> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_57_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const queue<long,deque<long,allocator<long> > >::value_type& obj = ((queue<long,deque<long,allocator<long> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_57_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((queue<long,deque<long,allocator<long> > >*) G__getstructoffset())->push(*(long*) G__Longref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_57_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((queue<long,deque<long,allocator<long> > >*) G__getstructoffset())->pop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__queue_57_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   queue<long,deque<long,allocator<long> > >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new queue<long,deque<long,allocator<long> > >(*(queue<long,deque<long,allocator<long> > >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_queuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef queue<long,deque<long,allocator<long> > > G__TqueuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR;
static int G__queue_57_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (queue<long,deque<long,allocator<long> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((queue<long,deque<long,allocator<long> > >*) (soff+(sizeof(queue<long,deque<long,allocator<long> > >)*i)))->~G__TqueuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (queue<long,deque<long,allocator<long> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((queue<long,deque<long,allocator<long> > >*) (soff))->~G__TqueuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__queue_57_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   queue<long,deque<long,allocator<long> > >* dest = (queue<long,deque<long,allocator<long> > >*) G__getstructoffset();
   *dest = *(queue<long,deque<long,allocator<long> > >*) libp->para[0].ref;
   const queue<long,deque<long,allocator<long> > >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* allocator<double> */
static int G__queue_58_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<double>[n];
     } else {
       p = new((void*) gvp) allocator<double>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<double>;
     } else {
       p = new((void*) gvp) allocator<double>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_58_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<double>(*(allocator<double>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<double>(*(allocator<double>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_58_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const allocator<double>*) G__getstructoffset())->address(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_58_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const allocator<double>*) G__getstructoffset())->address(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_58_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 68, (long) ((allocator<double>*) G__getstructoffset())->allocate((allocator<double>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 68, (long) ((allocator<double>*) G__getstructoffset())->allocate((allocator<double>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_58_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<double>*) G__getstructoffset())->deallocate((allocator<double>::pointer) G__int(libp->para[0]), (allocator<double>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_58_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<double>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_58_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<double>*) G__getstructoffset())->construct((allocator<double>::pointer) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_58_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<double>*) G__getstructoffset())->destroy((allocator<double>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<double> G__TallocatorlEdoublegR;
static int G__queue_58_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<double>*) (soff+(sizeof(allocator<double>)*i)))->~G__TallocatorlEdoublegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<double>*) (soff))->~G__TallocatorlEdoublegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__queue_58_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<double>* dest = (allocator<double>*) G__getstructoffset();
   const allocator<double>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<double,allocator<double> > */
static int G__queue_59_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<double,allocator<double> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<double,allocator<double> >[n];
     } else {
       p = new((void*) gvp) deque<double,allocator<double> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<double,allocator<double> >;
     } else {
       p = new((void*) gvp) deque<double,allocator<double> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<double,allocator<double> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<double,allocator<double> >((deque<double,allocator<double> >::size_type) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
     } else {
       p = new((void*) gvp) deque<double,allocator<double> >((deque<double,allocator<double> >::size_type) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<double,allocator<double> >((deque<double,allocator<double> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) deque<double,allocator<double> >((deque<double,allocator<double> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<double,allocator<double> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<double,allocator<double> >((const double*) G__int(libp->para[0]), (const double*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) deque<double,allocator<double> >((const double*) G__int(libp->para[0]), (const double*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<double,allocator<double> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<double,allocator<double> >(*((deque<double,allocator<double> >::const_iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) deque<double,allocator<double> >(*((deque<double,allocator<double> >::const_iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<double,allocator<double> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<double,allocator<double> >(*(deque<double,allocator<double> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<double,allocator<double> >(*(deque<double,allocator<double> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<double,allocator<double> >& obj = ((deque<double,allocator<double> >*) G__getstructoffset())->operator=(*(deque<double,allocator<double> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = ((deque<double,allocator<double> >*) G__getstructoffset())->begin();
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = ((deque<double,allocator<double> >*) G__getstructoffset())->end();
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::reverse_iterator* pobj;
         deque<double,allocator<double> >::reverse_iterator xobj = ((deque<double,allocator<double> >*) G__getstructoffset())->rbegin();
         pobj = new deque<double,allocator<double> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::reverse_iterator* pobj;
         deque<double,allocator<double> >::reverse_iterator xobj = ((deque<double,allocator<double> >*) G__getstructoffset())->rend();
         pobj = new deque<double,allocator<double> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const deque<double,allocator<double> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const deque<double,allocator<double> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((deque<double,allocator<double> >*) G__getstructoffset())->resize((deque<double,allocator<double> >::size_type) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((deque<double,allocator<double> >*) G__getstructoffset())->resize((deque<double,allocator<double> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const deque<double,allocator<double> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((deque<double,allocator<double> >*) G__getstructoffset())->operator[]((deque<double,allocator<double> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((deque<double,allocator<double> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((deque<double,allocator<double> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<double,allocator<double> >*) G__getstructoffset())->push_front(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<double,allocator<double> >*) G__getstructoffset())->push_back(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = ((deque<double,allocator<double> >*) G__getstructoffset())->insert(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *(double*) G__Doubleref(&libp->para[1]));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<double,allocator<double> >*) G__getstructoffset())->insert(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), (deque<double,allocator<double> >::size_type) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<double,allocator<double> >*) G__getstructoffset())->pop_front();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<double,allocator<double> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = ((deque<double,allocator<double> >*) G__getstructoffset())->erase(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = ((deque<double,allocator<double> >*) G__getstructoffset())->erase(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<double,allocator<double> >*) G__getstructoffset())->swap(*(deque<double,allocator<double> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_59_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<double,allocator<double> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<double,allocator<double> > G__TdequelEdoublecOallocatorlEdoublegRsPgR;
static int G__queue_59_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<double,allocator<double> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<double,allocator<double> >*) (soff+(sizeof(deque<double,allocator<double> >)*i)))->~G__TdequelEdoublecOallocatorlEdoublegRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<double,allocator<double> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<double,allocator<double> >*) (soff))->~G__TdequelEdoublecOallocatorlEdoublegRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<double,allocator<double> >::iterator */
static int G__queue_60_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<double,allocator<double> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<double,allocator<double> >::iterator[n];
     } else {
       p = new((void*) gvp) deque<double,allocator<double> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<double,allocator<double> >::iterator;
     } else {
       p = new((void*) gvp) deque<double,allocator<double> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_60_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<double,allocator<double> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<double,allocator<double> >::iterator(*(deque<double,allocator<double> >::iterator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<double,allocator<double> >::iterator(*(deque<double,allocator<double> >::iterator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_60_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<double,allocator<double> >::iterator& obj = ((deque<double,allocator<double> >::iterator*) G__getstructoffset())->operator=(*(deque<double,allocator<double> >::iterator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_60_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const deque<double,allocator<double> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_60_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const deque<double,allocator<double> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_60_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<double,allocator<double> >::iterator& obj = ((deque<double,allocator<double> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_60_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = ((deque<double,allocator<double> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_60_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<double,allocator<double> >::iterator& obj = ((deque<double,allocator<double> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_60_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = ((deque<double,allocator<double> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_60_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = ((deque<double,allocator<double> >::iterator*) G__getstructoffset())->operator+((long) G__int(libp->para[0]));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_60_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = ((deque<double,allocator<double> >::iterator*) G__getstructoffset())->operator-((long) G__int(libp->para[0]));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_60_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<double,allocator<double> >::iterator& obj = ((deque<double,allocator<double> >::iterator*) G__getstructoffset())->operator+=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_60_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<double,allocator<double> >::iterator& obj = ((deque<double,allocator<double> >::iterator*) G__getstructoffset())->operator-=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_60_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((deque<double,allocator<double> >::iterator*) G__getstructoffset())->operator[]((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<double,allocator<double> >::iterator G__TdequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator;
static int G__queue_60_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<double,allocator<double> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<double,allocator<double> >::iterator*) (soff+(sizeof(deque<double,allocator<double> >::iterator)*i)))->~G__TdequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<double,allocator<double> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<double,allocator<double> >::iterator*) (soff))->~G__TdequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<double,allocator<double> >::reverse_iterator */
static int G__queue_61_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<double,allocator<double> >::reverse_iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<double,allocator<double> >::reverse_iterator(*(deque<double,allocator<double> >::reverse_iterator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<double,allocator<double> >::reverse_iterator(*(deque<double,allocator<double> >::reverse_iterator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_61_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<double,allocator<double> >::reverse_iterator& obj = ((deque<double,allocator<double> >::reverse_iterator*) G__getstructoffset())->operator=(*(deque<double,allocator<double> >::reverse_iterator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_61_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const deque<double,allocator<double> >::reverse_iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_61_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const deque<double,allocator<double> >::reverse_iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_61_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<double,allocator<double> >::reverse_iterator& obj = ((deque<double,allocator<double> >::reverse_iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_61_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::reverse_iterator* pobj;
         deque<double,allocator<double> >::reverse_iterator xobj = ((deque<double,allocator<double> >::reverse_iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new deque<double,allocator<double> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_61_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<double,allocator<double> >::reverse_iterator& obj = ((deque<double,allocator<double> >::reverse_iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_61_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::reverse_iterator* pobj;
         deque<double,allocator<double> >::reverse_iterator xobj = ((deque<double,allocator<double> >::reverse_iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new deque<double,allocator<double> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_61_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::reverse_iterator* pobj;
         deque<double,allocator<double> >::reverse_iterator xobj = ((deque<double,allocator<double> >::reverse_iterator*) G__getstructoffset())->operator+((long) G__int(libp->para[0]));
         pobj = new deque<double,allocator<double> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_61_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::reverse_iterator* pobj;
         deque<double,allocator<double> >::reverse_iterator xobj = ((deque<double,allocator<double> >::reverse_iterator*) G__getstructoffset())->operator-((long) G__int(libp->para[0]));
         pobj = new deque<double,allocator<double> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_61_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<double,allocator<double> >::reverse_iterator& obj = ((deque<double,allocator<double> >::reverse_iterator*) G__getstructoffset())->operator+=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_61_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<double,allocator<double> >::reverse_iterator& obj = ((deque<double,allocator<double> >::reverse_iterator*) G__getstructoffset())->operator-=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_61_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((deque<double,allocator<double> >::reverse_iterator*) G__getstructoffset())->operator[]((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<double,allocator<double> >::reverse_iterator G__TdequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator;
static int G__queue_61_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<double,allocator<double> >::reverse_iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<double,allocator<double> >::reverse_iterator*) (soff+(sizeof(deque<double,allocator<double> >::reverse_iterator)*i)))->~G__TdequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<double,allocator<double> >::reverse_iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<double,allocator<double> >::reverse_iterator*) (soff))->~G__TdequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* queue<double,deque<double,allocator<double> > > */
static int G__queue_62_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   queue<double,deque<double,allocator<double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new queue<double,deque<double,allocator<double> > >[n];
     } else {
       p = new((void*) gvp) queue<double,deque<double,allocator<double> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new queue<double,deque<double,allocator<double> > >;
     } else {
       p = new((void*) gvp) queue<double,deque<double,allocator<double> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_queuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_62_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const queue<double,deque<double,allocator<double> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_62_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const queue<double,deque<double,allocator<double> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_62_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const queue<double,deque<double,allocator<double> > >::value_type& obj = ((queue<double,deque<double,allocator<double> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_62_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const queue<double,deque<double,allocator<double> > >::value_type& obj = ((queue<double,deque<double,allocator<double> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_62_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((queue<double,deque<double,allocator<double> > >*) G__getstructoffset())->push(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_62_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((queue<double,deque<double,allocator<double> > >*) G__getstructoffset())->pop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__queue_62_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   queue<double,deque<double,allocator<double> > >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new queue<double,deque<double,allocator<double> > >(*(queue<double,deque<double,allocator<double> > >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_queuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef queue<double,deque<double,allocator<double> > > G__TqueuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR;
static int G__queue_62_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (queue<double,deque<double,allocator<double> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((queue<double,deque<double,allocator<double> > >*) (soff+(sizeof(queue<double,deque<double,allocator<double> > >)*i)))->~G__TqueuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (queue<double,deque<double,allocator<double> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((queue<double,deque<double,allocator<double> > >*) (soff))->~G__TqueuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__queue_62_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   queue<double,deque<double,allocator<double> > >* dest = (queue<double,deque<double,allocator<double> > >*) G__getstructoffset();
   *dest = *(queue<double,deque<double,allocator<double> > >*) libp->para[0].ref;
   const queue<double,deque<double,allocator<double> > >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* allocator<void*> */
static int G__queue_63_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<void*>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<void*>[n];
     } else {
       p = new((void*) gvp) allocator<void*>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<void*>;
     } else {
       p = new((void*) gvp) allocator<void*>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_63_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<void*>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<void*>(*(allocator<void*>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<void*>(*(allocator<void*>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_63_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((const allocator<void*>*) G__getstructoffset())->address(libp->para[0].ref ? *(void**) libp->para[0].ref : *(void**) (&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_63_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((const allocator<void*>*) G__getstructoffset())->address(libp->para[0].ref ? *(void**) libp->para[0].ref : *(void**) (&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_63_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 89, (long) ((allocator<void*>*) G__getstructoffset())->allocate((allocator<void*>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 89, (long) ((allocator<void*>*) G__getstructoffset())->allocate((allocator<void*>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_63_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<void*>*) G__getstructoffset())->deallocate((allocator<void*>::pointer) G__int(libp->para[0]), (allocator<void*>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_63_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<void*>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_63_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<void*>*) G__getstructoffset())->construct((allocator<void*>::pointer) G__int(libp->para[0]), libp->para[1].ref ? *(void**) libp->para[1].ref : *(void**) (&G__Mlong(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_63_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<void*>*) G__getstructoffset())->destroy((allocator<void*>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<void*> G__TallocatorlEvoidmUgR;
static int G__queue_63_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<void*>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<void*>*) (soff+(sizeof(allocator<void*>)*i)))->~G__TallocatorlEvoidmUgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<void*>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<void*>*) (soff))->~G__TallocatorlEvoidmUgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__queue_63_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<void*>* dest = (allocator<void*>*) G__getstructoffset();
   const allocator<void*>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<void*,allocator<void*> > */
static int G__queue_64_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<void*,allocator<void*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<void*,allocator<void*> >[n];
     } else {
       p = new((void*) gvp) deque<void*,allocator<void*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<void*,allocator<void*> >;
     } else {
       p = new((void*) gvp) deque<void*,allocator<void*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<void*,allocator<void*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<void*,allocator<void*> >((deque<void*,allocator<void*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(void**) libp->para[1].ref : *(void**) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) deque<void*,allocator<void*> >((deque<void*,allocator<void*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(void**) libp->para[1].ref : *(void**) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<void*,allocator<void*> >((deque<void*,allocator<void*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) deque<void*,allocator<void*> >((deque<void*,allocator<void*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<void*,allocator<void*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<void*,allocator<void*> >((void* *const) G__int(libp->para[0]), (void* *const) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) deque<void*,allocator<void*> >((void* *const) G__int(libp->para[0]), (void* *const) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<void*,allocator<void*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<void*,allocator<void*> >(*((deque<void*,allocator<void*> >::const_iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) deque<void*,allocator<void*> >(*((deque<void*,allocator<void*> >::const_iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<void*,allocator<void*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<void*,allocator<void*> >(*(deque<void*,allocator<void*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<void*,allocator<void*> >(*(deque<void*,allocator<void*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<void*,allocator<void*> >& obj = ((deque<void*,allocator<void*> >*) G__getstructoffset())->operator=(*(deque<void*,allocator<void*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = ((deque<void*,allocator<void*> >*) G__getstructoffset())->begin();
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = ((deque<void*,allocator<void*> >*) G__getstructoffset())->end();
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::reverse_iterator* pobj;
         deque<void*,allocator<void*> >::reverse_iterator xobj = ((deque<void*,allocator<void*> >*) G__getstructoffset())->rbegin();
         pobj = new deque<void*,allocator<void*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::reverse_iterator* pobj;
         deque<void*,allocator<void*> >::reverse_iterator xobj = ((deque<void*,allocator<void*> >*) G__getstructoffset())->rend();
         pobj = new deque<void*,allocator<void*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const deque<void*,allocator<void*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const deque<void*,allocator<void*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((deque<void*,allocator<void*> >*) G__getstructoffset())->resize((deque<void*,allocator<void*> >::size_type) G__int(libp->para[0]), (void*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((deque<void*,allocator<void*> >*) G__getstructoffset())->resize((deque<void*,allocator<void*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const deque<void*,allocator<void*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         void*& obj = ((deque<void*,allocator<void*> >*) G__getstructoffset())->operator[]((deque<void*,allocator<void*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         void*& obj = ((deque<void*,allocator<void*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         void*& obj = ((deque<void*,allocator<void*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<void*,allocator<void*> >*) G__getstructoffset())->push_front(libp->para[0].ref ? *(void**) libp->para[0].ref : *(void**) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<void*,allocator<void*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(void**) libp->para[0].ref : *(void**) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = ((deque<void*,allocator<void*> >*) G__getstructoffset())->insert(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(void**) libp->para[1].ref : *(void**) (&G__Mlong(libp->para[1])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<void*,allocator<void*> >*) G__getstructoffset())->insert(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), (deque<void*,allocator<void*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<void*,allocator<void*> >*) G__getstructoffset())->pop_front();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<void*,allocator<void*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = ((deque<void*,allocator<void*> >*) G__getstructoffset())->erase(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = ((deque<void*,allocator<void*> >*) G__getstructoffset())->erase(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<void*,allocator<void*> >*) G__getstructoffset())->swap(*(deque<void*,allocator<void*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_64_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<void*,allocator<void*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<void*,allocator<void*> > G__TdequelEvoidmUcOallocatorlEvoidmUgRsPgR;
static int G__queue_64_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<void*,allocator<void*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<void*,allocator<void*> >*) (soff+(sizeof(deque<void*,allocator<void*> >)*i)))->~G__TdequelEvoidmUcOallocatorlEvoidmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<void*,allocator<void*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<void*,allocator<void*> >*) (soff))->~G__TdequelEvoidmUcOallocatorlEvoidmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<void*,allocator<void*> >::iterator */
static int G__queue_65_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<void*,allocator<void*> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<void*,allocator<void*> >::iterator[n];
     } else {
       p = new((void*) gvp) deque<void*,allocator<void*> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<void*,allocator<void*> >::iterator;
     } else {
       p = new((void*) gvp) deque<void*,allocator<void*> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_65_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<void*,allocator<void*> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<void*,allocator<void*> >::iterator(*(deque<void*,allocator<void*> >::iterator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<void*,allocator<void*> >::iterator(*(deque<void*,allocator<void*> >::iterator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_65_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<void*,allocator<void*> >::iterator& obj = ((deque<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator=(*(deque<void*,allocator<void*> >::iterator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_65_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         void* const& obj = ((const deque<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_65_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((const deque<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_65_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<void*,allocator<void*> >::iterator& obj = ((deque<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_65_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = ((deque<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_65_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<void*,allocator<void*> >::iterator& obj = ((deque<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_65_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = ((deque<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_65_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = ((deque<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator+((long) G__int(libp->para[0]));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_65_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = ((deque<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator-((long) G__int(libp->para[0]));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_65_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<void*,allocator<void*> >::iterator& obj = ((deque<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator+=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_65_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<void*,allocator<void*> >::iterator& obj = ((deque<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator-=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_65_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         void*& obj = ((deque<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator[]((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<void*,allocator<void*> >::iterator G__TdequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator;
static int G__queue_65_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<void*,allocator<void*> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<void*,allocator<void*> >::iterator*) (soff+(sizeof(deque<void*,allocator<void*> >::iterator)*i)))->~G__TdequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<void*,allocator<void*> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<void*,allocator<void*> >::iterator*) (soff))->~G__TdequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<void*,allocator<void*> >::reverse_iterator */
static int G__queue_66_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<void*,allocator<void*> >::reverse_iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<void*,allocator<void*> >::reverse_iterator(*(deque<void*,allocator<void*> >::reverse_iterator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<void*,allocator<void*> >::reverse_iterator(*(deque<void*,allocator<void*> >::reverse_iterator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_66_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<void*,allocator<void*> >::reverse_iterator& obj = ((deque<void*,allocator<void*> >::reverse_iterator*) G__getstructoffset())->operator=(*(deque<void*,allocator<void*> >::reverse_iterator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_66_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         void* const& obj = ((const deque<void*,allocator<void*> >::reverse_iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_66_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((const deque<void*,allocator<void*> >::reverse_iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_66_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<void*,allocator<void*> >::reverse_iterator& obj = ((deque<void*,allocator<void*> >::reverse_iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_66_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::reverse_iterator* pobj;
         deque<void*,allocator<void*> >::reverse_iterator xobj = ((deque<void*,allocator<void*> >::reverse_iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new deque<void*,allocator<void*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_66_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<void*,allocator<void*> >::reverse_iterator& obj = ((deque<void*,allocator<void*> >::reverse_iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_66_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::reverse_iterator* pobj;
         deque<void*,allocator<void*> >::reverse_iterator xobj = ((deque<void*,allocator<void*> >::reverse_iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new deque<void*,allocator<void*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_66_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::reverse_iterator* pobj;
         deque<void*,allocator<void*> >::reverse_iterator xobj = ((deque<void*,allocator<void*> >::reverse_iterator*) G__getstructoffset())->operator+((long) G__int(libp->para[0]));
         pobj = new deque<void*,allocator<void*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_66_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::reverse_iterator* pobj;
         deque<void*,allocator<void*> >::reverse_iterator xobj = ((deque<void*,allocator<void*> >::reverse_iterator*) G__getstructoffset())->operator-((long) G__int(libp->para[0]));
         pobj = new deque<void*,allocator<void*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_66_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<void*,allocator<void*> >::reverse_iterator& obj = ((deque<void*,allocator<void*> >::reverse_iterator*) G__getstructoffset())->operator+=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_66_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<void*,allocator<void*> >::reverse_iterator& obj = ((deque<void*,allocator<void*> >::reverse_iterator*) G__getstructoffset())->operator-=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_66_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         void*& obj = ((deque<void*,allocator<void*> >::reverse_iterator*) G__getstructoffset())->operator[]((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<void*,allocator<void*> >::reverse_iterator G__TdequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator;
static int G__queue_66_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<void*,allocator<void*> >::reverse_iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<void*,allocator<void*> >::reverse_iterator*) (soff+(sizeof(deque<void*,allocator<void*> >::reverse_iterator)*i)))->~G__TdequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<void*,allocator<void*> >::reverse_iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<void*,allocator<void*> >::reverse_iterator*) (soff))->~G__TdequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* queue<void*,deque<void*,allocator<void*> > > */
static int G__queue_67_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   queue<void*,deque<void*,allocator<void*> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new queue<void*,deque<void*,allocator<void*> > >[n];
     } else {
       p = new((void*) gvp) queue<void*,deque<void*,allocator<void*> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new queue<void*,deque<void*,allocator<void*> > >;
     } else {
       p = new((void*) gvp) queue<void*,deque<void*,allocator<void*> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_queuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_67_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const queue<void*,deque<void*,allocator<void*> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_67_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const queue<void*,deque<void*,allocator<void*> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_67_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         queue<void*,deque<void*,allocator<void*> > >::value_type& obj = ((queue<void*,deque<void*,allocator<void*> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_67_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         queue<void*,deque<void*,allocator<void*> > >::value_type& obj = ((queue<void*,deque<void*,allocator<void*> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_67_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((queue<void*,deque<void*,allocator<void*> > >*) G__getstructoffset())->push(libp->para[0].ref ? *(void**) libp->para[0].ref : *(void**) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_67_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((queue<void*,deque<void*,allocator<void*> > >*) G__getstructoffset())->pop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__queue_67_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   queue<void*,deque<void*,allocator<void*> > >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new queue<void*,deque<void*,allocator<void*> > >(*(queue<void*,deque<void*,allocator<void*> > >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_queuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef queue<void*,deque<void*,allocator<void*> > > G__TqueuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR;
static int G__queue_67_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (queue<void*,deque<void*,allocator<void*> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((queue<void*,deque<void*,allocator<void*> > >*) (soff+(sizeof(queue<void*,deque<void*,allocator<void*> > >)*i)))->~G__TqueuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (queue<void*,deque<void*,allocator<void*> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((queue<void*,deque<void*,allocator<void*> > >*) (soff))->~G__TqueuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__queue_67_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   queue<void*,deque<void*,allocator<void*> > >* dest = (queue<void*,deque<void*,allocator<void*> > >*) G__getstructoffset();
   *dest = *(queue<void*,deque<void*,allocator<void*> > >*) libp->para[0].ref;
   const queue<void*,deque<void*,allocator<void*> > >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* allocator<char*> */
static int G__queue_68_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<char*>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<char*>[n];
     } else {
       p = new((void*) gvp) allocator<char*>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<char*>;
     } else {
       p = new((void*) gvp) allocator<char*>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_68_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<char*>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<char*>(*(allocator<char*>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<char*>(*(allocator<char*>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_68_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const allocator<char*>*) G__getstructoffset())->address(libp->para[0].ref ? *(char**) libp->para[0].ref : *(char**) (&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_68_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const allocator<char*>*) G__getstructoffset())->address(libp->para[0].ref ? *(char**) libp->para[0].ref : *(char**) (&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_68_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 67, (long) ((allocator<char*>*) G__getstructoffset())->allocate((allocator<char*>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 67, (long) ((allocator<char*>*) G__getstructoffset())->allocate((allocator<char*>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_68_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<char*>*) G__getstructoffset())->deallocate((allocator<char*>::pointer) G__int(libp->para[0]), (allocator<char*>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_68_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<char*>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_68_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<char*>*) G__getstructoffset())->construct((allocator<char*>::pointer) G__int(libp->para[0]), libp->para[1].ref ? *(char**) libp->para[1].ref : *(char**) (&G__Mlong(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_68_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<char*>*) G__getstructoffset())->destroy((allocator<char*>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<char*> G__TallocatorlEcharmUgR;
static int G__queue_68_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<char*>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<char*>*) (soff+(sizeof(allocator<char*>)*i)))->~G__TallocatorlEcharmUgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<char*>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<char*>*) (soff))->~G__TallocatorlEcharmUgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__queue_68_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<char*>* dest = (allocator<char*>*) G__getstructoffset();
   const allocator<char*>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<char*,allocator<char*> > */
static int G__queue_69_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<char*,allocator<char*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<char*,allocator<char*> >[n];
     } else {
       p = new((void*) gvp) deque<char*,allocator<char*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<char*,allocator<char*> >;
     } else {
       p = new((void*) gvp) deque<char*,allocator<char*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<char*,allocator<char*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<char*,allocator<char*> >((deque<char*,allocator<char*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(char**) libp->para[1].ref : *(char**) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) deque<char*,allocator<char*> >((deque<char*,allocator<char*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(char**) libp->para[1].ref : *(char**) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<char*,allocator<char*> >((deque<char*,allocator<char*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) deque<char*,allocator<char*> >((deque<char*,allocator<char*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<char*,allocator<char*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<char*,allocator<char*> >((char* *const) G__int(libp->para[0]), (char* *const) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) deque<char*,allocator<char*> >((char* *const) G__int(libp->para[0]), (char* *const) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<char*,allocator<char*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<char*,allocator<char*> >(*((deque<char*,allocator<char*> >::const_iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) deque<char*,allocator<char*> >(*((deque<char*,allocator<char*> >::const_iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<char*,allocator<char*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<char*,allocator<char*> >(*(deque<char*,allocator<char*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<char*,allocator<char*> >(*(deque<char*,allocator<char*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<char*,allocator<char*> >& obj = ((deque<char*,allocator<char*> >*) G__getstructoffset())->operator=(*(deque<char*,allocator<char*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = ((deque<char*,allocator<char*> >*) G__getstructoffset())->begin();
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = ((deque<char*,allocator<char*> >*) G__getstructoffset())->end();
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::reverse_iterator* pobj;
         deque<char*,allocator<char*> >::reverse_iterator xobj = ((deque<char*,allocator<char*> >*) G__getstructoffset())->rbegin();
         pobj = new deque<char*,allocator<char*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::reverse_iterator* pobj;
         deque<char*,allocator<char*> >::reverse_iterator xobj = ((deque<char*,allocator<char*> >*) G__getstructoffset())->rend();
         pobj = new deque<char*,allocator<char*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const deque<char*,allocator<char*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const deque<char*,allocator<char*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((deque<char*,allocator<char*> >*) G__getstructoffset())->resize((deque<char*,allocator<char*> >::size_type) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((deque<char*,allocator<char*> >*) G__getstructoffset())->resize((deque<char*,allocator<char*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const deque<char*,allocator<char*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         char*& obj = ((deque<char*,allocator<char*> >*) G__getstructoffset())->operator[]((deque<char*,allocator<char*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         char*& obj = ((deque<char*,allocator<char*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         char*& obj = ((deque<char*,allocator<char*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<char*,allocator<char*> >*) G__getstructoffset())->push_front(libp->para[0].ref ? *(char**) libp->para[0].ref : *(char**) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<char*,allocator<char*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(char**) libp->para[0].ref : *(char**) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = ((deque<char*,allocator<char*> >*) G__getstructoffset())->insert(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(char**) libp->para[1].ref : *(char**) (&G__Mlong(libp->para[1])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<char*,allocator<char*> >*) G__getstructoffset())->insert(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), (deque<char*,allocator<char*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<char*,allocator<char*> >*) G__getstructoffset())->pop_front();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<char*,allocator<char*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = ((deque<char*,allocator<char*> >*) G__getstructoffset())->erase(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = ((deque<char*,allocator<char*> >*) G__getstructoffset())->erase(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<char*,allocator<char*> >*) G__getstructoffset())->swap(*(deque<char*,allocator<char*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_69_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<char*,allocator<char*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<char*,allocator<char*> > G__TdequelEcharmUcOallocatorlEcharmUgRsPgR;
static int G__queue_69_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<char*,allocator<char*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<char*,allocator<char*> >*) (soff+(sizeof(deque<char*,allocator<char*> >)*i)))->~G__TdequelEcharmUcOallocatorlEcharmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<char*,allocator<char*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<char*,allocator<char*> >*) (soff))->~G__TdequelEcharmUcOallocatorlEcharmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<char*,allocator<char*> >::iterator */
static int G__queue_70_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<char*,allocator<char*> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<char*,allocator<char*> >::iterator[n];
     } else {
       p = new((void*) gvp) deque<char*,allocator<char*> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<char*,allocator<char*> >::iterator;
     } else {
       p = new((void*) gvp) deque<char*,allocator<char*> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_70_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<char*,allocator<char*> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<char*,allocator<char*> >::iterator(*(deque<char*,allocator<char*> >::iterator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<char*,allocator<char*> >::iterator(*(deque<char*,allocator<char*> >::iterator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_70_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<char*,allocator<char*> >::iterator& obj = ((deque<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator=(*(deque<char*,allocator<char*> >::iterator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_70_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         char* const& obj = ((const deque<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_70_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const deque<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_70_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<char*,allocator<char*> >::iterator& obj = ((deque<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_70_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = ((deque<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_70_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<char*,allocator<char*> >::iterator& obj = ((deque<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_70_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = ((deque<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_70_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = ((deque<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator+((long) G__int(libp->para[0]));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_70_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = ((deque<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator-((long) G__int(libp->para[0]));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_70_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<char*,allocator<char*> >::iterator& obj = ((deque<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator+=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_70_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<char*,allocator<char*> >::iterator& obj = ((deque<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator-=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_70_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         char*& obj = ((deque<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator[]((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<char*,allocator<char*> >::iterator G__TdequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator;
static int G__queue_70_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<char*,allocator<char*> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<char*,allocator<char*> >::iterator*) (soff+(sizeof(deque<char*,allocator<char*> >::iterator)*i)))->~G__TdequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<char*,allocator<char*> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<char*,allocator<char*> >::iterator*) (soff))->~G__TdequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<char*,allocator<char*> >::reverse_iterator */
static int G__queue_71_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<char*,allocator<char*> >::reverse_iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<char*,allocator<char*> >::reverse_iterator(*(deque<char*,allocator<char*> >::reverse_iterator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<char*,allocator<char*> >::reverse_iterator(*(deque<char*,allocator<char*> >::reverse_iterator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_71_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<char*,allocator<char*> >::reverse_iterator& obj = ((deque<char*,allocator<char*> >::reverse_iterator*) G__getstructoffset())->operator=(*(deque<char*,allocator<char*> >::reverse_iterator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_71_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         char* const& obj = ((const deque<char*,allocator<char*> >::reverse_iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_71_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const deque<char*,allocator<char*> >::reverse_iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_71_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<char*,allocator<char*> >::reverse_iterator& obj = ((deque<char*,allocator<char*> >::reverse_iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_71_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::reverse_iterator* pobj;
         deque<char*,allocator<char*> >::reverse_iterator xobj = ((deque<char*,allocator<char*> >::reverse_iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new deque<char*,allocator<char*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_71_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<char*,allocator<char*> >::reverse_iterator& obj = ((deque<char*,allocator<char*> >::reverse_iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_71_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::reverse_iterator* pobj;
         deque<char*,allocator<char*> >::reverse_iterator xobj = ((deque<char*,allocator<char*> >::reverse_iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new deque<char*,allocator<char*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_71_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::reverse_iterator* pobj;
         deque<char*,allocator<char*> >::reverse_iterator xobj = ((deque<char*,allocator<char*> >::reverse_iterator*) G__getstructoffset())->operator+((long) G__int(libp->para[0]));
         pobj = new deque<char*,allocator<char*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_71_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::reverse_iterator* pobj;
         deque<char*,allocator<char*> >::reverse_iterator xobj = ((deque<char*,allocator<char*> >::reverse_iterator*) G__getstructoffset())->operator-((long) G__int(libp->para[0]));
         pobj = new deque<char*,allocator<char*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_71_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<char*,allocator<char*> >::reverse_iterator& obj = ((deque<char*,allocator<char*> >::reverse_iterator*) G__getstructoffset())->operator+=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_71_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<char*,allocator<char*> >::reverse_iterator& obj = ((deque<char*,allocator<char*> >::reverse_iterator*) G__getstructoffset())->operator-=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_71_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         char*& obj = ((deque<char*,allocator<char*> >::reverse_iterator*) G__getstructoffset())->operator[]((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<char*,allocator<char*> >::reverse_iterator G__TdequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator;
static int G__queue_71_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<char*,allocator<char*> >::reverse_iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<char*,allocator<char*> >::reverse_iterator*) (soff+(sizeof(deque<char*,allocator<char*> >::reverse_iterator)*i)))->~G__TdequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<char*,allocator<char*> >::reverse_iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<char*,allocator<char*> >::reverse_iterator*) (soff))->~G__TdequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* queue<char*,deque<char*,allocator<char*> > > */
static int G__queue_72_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   queue<char*,deque<char*,allocator<char*> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new queue<char*,deque<char*,allocator<char*> > >[n];
     } else {
       p = new((void*) gvp) queue<char*,deque<char*,allocator<char*> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new queue<char*,deque<char*,allocator<char*> > >;
     } else {
       p = new((void*) gvp) queue<char*,deque<char*,allocator<char*> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_queuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_72_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const queue<char*,deque<char*,allocator<char*> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_72_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const queue<char*,deque<char*,allocator<char*> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_72_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         queue<char*,deque<char*,allocator<char*> > >::value_type& obj = ((queue<char*,deque<char*,allocator<char*> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_72_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         queue<char*,deque<char*,allocator<char*> > >::value_type& obj = ((queue<char*,deque<char*,allocator<char*> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_72_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((queue<char*,deque<char*,allocator<char*> > >*) G__getstructoffset())->push(libp->para[0].ref ? *(char**) libp->para[0].ref : *(char**) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_72_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((queue<char*,deque<char*,allocator<char*> > >*) G__getstructoffset())->pop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__queue_72_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   queue<char*,deque<char*,allocator<char*> > >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new queue<char*,deque<char*,allocator<char*> > >(*(queue<char*,deque<char*,allocator<char*> > >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_queuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef queue<char*,deque<char*,allocator<char*> > > G__TqueuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR;
static int G__queue_72_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (queue<char*,deque<char*,allocator<char*> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((queue<char*,deque<char*,allocator<char*> > >*) (soff+(sizeof(queue<char*,deque<char*,allocator<char*> > >)*i)))->~G__TqueuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (queue<char*,deque<char*,allocator<char*> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((queue<char*,deque<char*,allocator<char*> > >*) (soff))->~G__TqueuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__queue_72_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   queue<char*,deque<char*,allocator<char*> > >* dest = (queue<char*,deque<char*,allocator<char*> > >*) G__getstructoffset();
   *dest = *(queue<char*,deque<char*,allocator<char*> > >*) libp->para[0].ref;
   const queue<char*,deque<char*,allocator<char*> > >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* allocator<string> */
static int G__queue_73_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<string>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<string>[n];
     } else {
       p = new((void*) gvp) allocator<string>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<string>;
     } else {
       p = new((void*) gvp) allocator<string>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEstringgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_73_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<string>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<string>(*(allocator<string>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<string>(*(allocator<string>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEstringgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_73_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const allocator<string>*) G__getstructoffset())->address(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_73_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const allocator<string>*) G__getstructoffset())->address(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_73_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((allocator<string>*) G__getstructoffset())->allocate((allocator<string>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((allocator<string>*) G__getstructoffset())->allocate((allocator<string>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_73_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<string>*) G__getstructoffset())->deallocate((allocator<string>::pointer) G__int(libp->para[0]), (allocator<string>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_73_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<string>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_73_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<string>*) G__getstructoffset())->construct((allocator<string>::pointer) G__int(libp->para[0]), *(string*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_73_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<string>*) G__getstructoffset())->destroy((allocator<string>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<string> G__TallocatorlEstringgR;
static int G__queue_73_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<string>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<string>*) (soff+(sizeof(allocator<string>)*i)))->~G__TallocatorlEstringgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<string>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<string>*) (soff))->~G__TallocatorlEstringgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__queue_73_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<string>* dest = (allocator<string>*) G__getstructoffset();
   const allocator<string>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<string,allocator<string> > */
static int G__queue_74_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<string,allocator<string> >[n];
     } else {
       p = new((void*) gvp) deque<string,allocator<string> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<string,allocator<string> >;
     } else {
       p = new((void*) gvp) deque<string,allocator<string> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<string,allocator<string> >((deque<string,allocator<string> >::size_type) G__int(libp->para[0]), *(string*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) deque<string,allocator<string> >((deque<string,allocator<string> >::size_type) G__int(libp->para[0]), *(string*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<string,allocator<string> >((deque<string,allocator<string> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) deque<string,allocator<string> >((deque<string,allocator<string> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<string,allocator<string> >((const string*) G__int(libp->para[0]), (const string*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) deque<string,allocator<string> >((const string*) G__int(libp->para[0]), (const string*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<string,allocator<string> >(*((deque<string,allocator<string> >::const_iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) deque<string,allocator<string> >(*((deque<string,allocator<string> >::const_iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<string,allocator<string> >(*(deque<string,allocator<string> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<string,allocator<string> >(*(deque<string,allocator<string> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<string,allocator<string> >& obj = ((deque<string,allocator<string> >*) G__getstructoffset())->operator=(*(deque<string,allocator<string> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = ((deque<string,allocator<string> >*) G__getstructoffset())->begin();
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = ((deque<string,allocator<string> >*) G__getstructoffset())->end();
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::reverse_iterator* pobj;
         deque<string,allocator<string> >::reverse_iterator xobj = ((deque<string,allocator<string> >*) G__getstructoffset())->rbegin();
         pobj = new deque<string,allocator<string> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::reverse_iterator* pobj;
         deque<string,allocator<string> >::reverse_iterator xobj = ((deque<string,allocator<string> >*) G__getstructoffset())->rend();
         pobj = new deque<string,allocator<string> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const deque<string,allocator<string> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const deque<string,allocator<string> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((deque<string,allocator<string> >*) G__getstructoffset())->resize((deque<string,allocator<string> >::size_type) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((deque<string,allocator<string> >*) G__getstructoffset())->resize((deque<string,allocator<string> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const deque<string,allocator<string> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((deque<string,allocator<string> >*) G__getstructoffset())->operator[]((deque<string,allocator<string> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((deque<string,allocator<string> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((deque<string,allocator<string> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<string,allocator<string> >*) G__getstructoffset())->push_front(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<string,allocator<string> >*) G__getstructoffset())->push_back(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = ((deque<string,allocator<string> >*) G__getstructoffset())->insert(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *(string*) libp->para[1].ref);
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<string,allocator<string> >*) G__getstructoffset())->insert(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), (deque<string,allocator<string> >::size_type) G__int(libp->para[1])
, *(string*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<string,allocator<string> >*) G__getstructoffset())->pop_front();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<string,allocator<string> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = ((deque<string,allocator<string> >*) G__getstructoffset())->erase(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = ((deque<string,allocator<string> >*) G__getstructoffset())->erase(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<string,allocator<string> >*) G__getstructoffset())->swap(*(deque<string,allocator<string> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_74_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((deque<string,allocator<string> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<string,allocator<string> > G__TdequelEstringcOallocatorlEstringgRsPgR;
static int G__queue_74_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<string,allocator<string> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<string,allocator<string> >*) (soff+(sizeof(deque<string,allocator<string> >)*i)))->~G__TdequelEstringcOallocatorlEstringgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<string,allocator<string> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<string,allocator<string> >*) (soff))->~G__TdequelEstringcOallocatorlEstringgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<string,allocator<string> >::iterator */
static int G__queue_75_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<string,allocator<string> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<string,allocator<string> >::iterator[n];
     } else {
       p = new((void*) gvp) deque<string,allocator<string> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new deque<string,allocator<string> >::iterator;
     } else {
       p = new((void*) gvp) deque<string,allocator<string> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_75_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<string,allocator<string> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<string,allocator<string> >::iterator(*(deque<string,allocator<string> >::iterator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<string,allocator<string> >::iterator(*(deque<string,allocator<string> >::iterator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_75_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<string,allocator<string> >::iterator& obj = ((deque<string,allocator<string> >::iterator*) G__getstructoffset())->operator=(*(deque<string,allocator<string> >::iterator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_75_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const deque<string,allocator<string> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_75_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const deque<string,allocator<string> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_75_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<string,allocator<string> >::iterator& obj = ((deque<string,allocator<string> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_75_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = ((deque<string,allocator<string> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_75_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<string,allocator<string> >::iterator& obj = ((deque<string,allocator<string> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_75_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = ((deque<string,allocator<string> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_75_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = ((deque<string,allocator<string> >::iterator*) G__getstructoffset())->operator+((long) G__int(libp->para[0]));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_75_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = ((deque<string,allocator<string> >::iterator*) G__getstructoffset())->operator-((long) G__int(libp->para[0]));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_75_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<string,allocator<string> >::iterator& obj = ((deque<string,allocator<string> >::iterator*) G__getstructoffset())->operator+=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_75_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<string,allocator<string> >::iterator& obj = ((deque<string,allocator<string> >::iterator*) G__getstructoffset())->operator-=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_75_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((deque<string,allocator<string> >::iterator*) G__getstructoffset())->operator[]((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<string,allocator<string> >::iterator G__TdequelEstringcOallocatorlEstringgRsPgRcLcLiterator;
static int G__queue_75_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<string,allocator<string> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<string,allocator<string> >::iterator*) (soff+(sizeof(deque<string,allocator<string> >::iterator)*i)))->~G__TdequelEstringcOallocatorlEstringgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<string,allocator<string> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<string,allocator<string> >::iterator*) (soff))->~G__TdequelEstringcOallocatorlEstringgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* deque<string,allocator<string> >::reverse_iterator */
static int G__queue_76_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   deque<string,allocator<string> >::reverse_iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new deque<string,allocator<string> >::reverse_iterator(*(deque<string,allocator<string> >::reverse_iterator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) deque<string,allocator<string> >::reverse_iterator(*(deque<string,allocator<string> >::reverse_iterator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_76_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<string,allocator<string> >::reverse_iterator& obj = ((deque<string,allocator<string> >::reverse_iterator*) G__getstructoffset())->operator=(*(deque<string,allocator<string> >::reverse_iterator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_76_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const deque<string,allocator<string> >::reverse_iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_76_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const deque<string,allocator<string> >::reverse_iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_76_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<string,allocator<string> >::reverse_iterator& obj = ((deque<string,allocator<string> >::reverse_iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_76_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::reverse_iterator* pobj;
         deque<string,allocator<string> >::reverse_iterator xobj = ((deque<string,allocator<string> >::reverse_iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new deque<string,allocator<string> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_76_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<string,allocator<string> >::reverse_iterator& obj = ((deque<string,allocator<string> >::reverse_iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_76_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::reverse_iterator* pobj;
         deque<string,allocator<string> >::reverse_iterator xobj = ((deque<string,allocator<string> >::reverse_iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new deque<string,allocator<string> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_76_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::reverse_iterator* pobj;
         deque<string,allocator<string> >::reverse_iterator xobj = ((deque<string,allocator<string> >::reverse_iterator*) G__getstructoffset())->operator+((long) G__int(libp->para[0]));
         pobj = new deque<string,allocator<string> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_76_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::reverse_iterator* pobj;
         deque<string,allocator<string> >::reverse_iterator xobj = ((deque<string,allocator<string> >::reverse_iterator*) G__getstructoffset())->operator-((long) G__int(libp->para[0]));
         pobj = new deque<string,allocator<string> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_76_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<string,allocator<string> >::reverse_iterator& obj = ((deque<string,allocator<string> >::reverse_iterator*) G__getstructoffset())->operator+=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_76_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const deque<string,allocator<string> >::reverse_iterator& obj = ((deque<string,allocator<string> >::reverse_iterator*) G__getstructoffset())->operator-=((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_76_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((deque<string,allocator<string> >::reverse_iterator*) G__getstructoffset())->operator[]((long) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef deque<string,allocator<string> >::reverse_iterator G__TdequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator;
static int G__queue_76_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (deque<string,allocator<string> >::reverse_iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((deque<string,allocator<string> >::reverse_iterator*) (soff+(sizeof(deque<string,allocator<string> >::reverse_iterator)*i)))->~G__TdequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (deque<string,allocator<string> >::reverse_iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((deque<string,allocator<string> >::reverse_iterator*) (soff))->~G__TdequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* queue<string,deque<string,allocator<string> > > */
static int G__queue_77_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   queue<string,deque<string,allocator<string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new queue<string,deque<string,allocator<string> > >[n];
     } else {
       p = new((void*) gvp) queue<string,deque<string,allocator<string> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new queue<string,deque<string,allocator<string> > >;
     } else {
       p = new((void*) gvp) queue<string,deque<string,allocator<string> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_queuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_77_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const queue<string,deque<string,allocator<string> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_77_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const queue<string,deque<string,allocator<string> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_77_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const queue<string,deque<string,allocator<string> > >::value_type& obj = ((queue<string,deque<string,allocator<string> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_77_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const queue<string,deque<string,allocator<string> > >::value_type& obj = ((queue<string,deque<string,allocator<string> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_77_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((queue<string,deque<string,allocator<string> > >*) G__getstructoffset())->push(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue_77_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((queue<string,deque<string,allocator<string> > >*) G__getstructoffset())->pop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__queue_77_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   queue<string,deque<string,allocator<string> > >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new queue<string,deque<string,allocator<string> > >(*(queue<string,deque<string,allocator<string> > >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_queuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef queue<string,deque<string,allocator<string> > > G__TqueuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR;
static int G__queue_77_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (queue<string,deque<string,allocator<string> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((queue<string,deque<string,allocator<string> > >*) (soff+(sizeof(queue<string,deque<string,allocator<string> > >)*i)))->~G__TqueuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (queue<string,deque<string,allocator<string> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((queue<string,deque<string,allocator<string> > >*) (soff))->~G__TqueuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__queue_77_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   queue<string,deque<string,allocator<string> > >* dest = (queue<string,deque<string,allocator<string> > >*) G__getstructoffset();
   *dest = *(queue<string,deque<string,allocator<string> > >*) libp->para[0].ref;
   const queue<string,deque<string,allocator<string> > >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__queue__0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<int,allocator<int> >::iterator*) libp->para[0].ref, *(deque<int,allocator<int> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<int,allocator<int> >::iterator*) libp->para[0].ref, *(deque<int,allocator<int> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<int,allocator<int> >::reverse_iterator*) libp->para[0].ref, *(deque<int,allocator<int> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<int,allocator<int> >::reverse_iterator*) libp->para[0].ref, *(deque<int,allocator<int> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<int,allocator<int> >*) libp->para[0].ref, *(deque<int,allocator<int> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(deque<int,allocator<int> >*) libp->para[0].ref, *(deque<int,allocator<int> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<int,allocator<int> >*) libp->para[0].ref, *(deque<int,allocator<int> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(deque<int,allocator<int> >*) libp->para[0].ref, *(deque<int,allocator<int> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(deque<int,allocator<int> >*) libp->para[0].ref, *(deque<int,allocator<int> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(deque<int,allocator<int> >*) libp->para[0].ref, *(deque<int,allocator<int> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = find(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *(int*) G__Intref(&libp->para[2]));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = find_end(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = find_first_of(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = adjacent_find(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *(int*) G__Intref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = search(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = search_n(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, (deque<int,allocator<int> >::size_type) G__int(libp->para[2]), *(int*) G__Intref(&libp->para[3]));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = copy(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = copy_backward(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      swap(*(int*) G__Intref(&libp->para[0]), *(int*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = swap_ranges(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *(int*) G__Intref(&libp->para[2]), *(int*) G__Intref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = replace_copy(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])), *(int*) G__Intref(&libp->para[3])
, *(int*) G__Intref(&libp->para[4]));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *(int*) G__Intref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), (deque<int,allocator<int> >::size_type) G__int(libp->para[1])
, *(int*) G__Intref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = remove(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *(int*) G__Intref(&libp->para[2]));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = remove_copy(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])), *(int*) G__Intref(&libp->para[3]));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = unique(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = unique_copy(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = reverse_copy(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_145(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_146(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = rotate_copy(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_147(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_148(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_149(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_150(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_151(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = partial_sort_copy(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_152(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_153(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = lower_bound(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *(int*) G__Intref(&libp->para[2]));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_154(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = upper_bound(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *(int*) G__Intref(&libp->para[2]));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_155(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *(int*) G__Intref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_156(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = merge(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[3]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_157(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_158(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_159(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = set_union(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[3]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_160(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = set_intersection(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[3]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_161(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = set_difference(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[3]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_162(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = set_symmetric_difference(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[3]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_163(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_164(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_165(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_166(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_167(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = min(*(int*) G__Intref(&libp->para[0]), *(int*) G__Intref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_168(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = max(*(int*) G__Intref(&libp->para[0]), *(int*) G__Intref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_169(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = min_element(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_170(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<int,allocator<int> >::iterator* pobj;
         deque<int,allocator<int> >::iterator xobj = max_element(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<int,allocator<int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_171(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))
, *((deque<int,allocator<int> >::iterator*) G__int(libp->para[2])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_172(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_173(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((deque<int,allocator<int> >::iterator*) G__int(libp->para[0])), *((deque<int,allocator<int> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_174(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(queue<int,deque<int,allocator<int> > >*) libp->para[0].ref, *(queue<int,deque<int,allocator<int> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_175(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(queue<int,deque<int,allocator<int> > >*) libp->para[0].ref, *(queue<int,deque<int,allocator<int> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_176(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(queue<int,deque<int,allocator<int> > >*) libp->para[0].ref, *(queue<int,deque<int,allocator<int> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_177(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(queue<int,deque<int,allocator<int> > >*) libp->para[0].ref, *(queue<int,deque<int,allocator<int> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_178(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(queue<int,deque<int,allocator<int> > >*) libp->para[0].ref, *(queue<int,deque<int,allocator<int> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_179(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(queue<int,deque<int,allocator<int> > >*) libp->para[0].ref, *(queue<int,deque<int,allocator<int> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_180(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<long,allocator<long> >::iterator*) libp->para[0].ref, *(deque<long,allocator<long> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_181(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<long,allocator<long> >::iterator*) libp->para[0].ref, *(deque<long,allocator<long> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_182(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<long,allocator<long> >::reverse_iterator*) libp->para[0].ref, *(deque<long,allocator<long> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_183(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<long,allocator<long> >::reverse_iterator*) libp->para[0].ref, *(deque<long,allocator<long> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_184(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<long,allocator<long> >*) libp->para[0].ref, *(deque<long,allocator<long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_185(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(deque<long,allocator<long> >*) libp->para[0].ref, *(deque<long,allocator<long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_186(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<long,allocator<long> >*) libp->para[0].ref, *(deque<long,allocator<long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_187(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(deque<long,allocator<long> >*) libp->para[0].ref, *(deque<long,allocator<long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_188(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(deque<long,allocator<long> >*) libp->para[0].ref, *(deque<long,allocator<long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_189(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(deque<long,allocator<long> >*) libp->para[0].ref, *(deque<long,allocator<long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_190(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = find(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *(long*) G__Longref(&libp->para[2]));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_191(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = find_end(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_192(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = find_first_of(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_193(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = adjacent_find(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_194(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *(long*) G__Longref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_195(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_196(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = search(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_197(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = search_n(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, (deque<long,allocator<long> >::size_type) G__int(libp->para[2]), *(long*) G__Longref(&libp->para[3]));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_198(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = copy(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_199(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = copy_backward(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_200(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      swap(*(long*) G__Longref(&libp->para[0]), *(long*) G__Longref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_201(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = swap_ranges(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_202(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_203(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *(long*) G__Longref(&libp->para[2]), *(long*) G__Longref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_204(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = replace_copy(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])), *(long*) G__Longref(&libp->para[3])
, *(long*) G__Longref(&libp->para[4]));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_205(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *(long*) G__Longref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_206(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), (deque<long,allocator<long> >::size_type) G__int(libp->para[1])
, *(long*) G__Longref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_207(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = remove(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *(long*) G__Longref(&libp->para[2]));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_208(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = remove_copy(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])), *(long*) G__Longref(&libp->para[3]));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_209(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = unique(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_210(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = unique_copy(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_211(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_212(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = reverse_copy(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_213(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_214(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = rotate_copy(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_215(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_216(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_217(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_218(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_219(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = partial_sort_copy(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_220(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_221(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = lower_bound(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *(long*) G__Longref(&libp->para[2]));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_222(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = upper_bound(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *(long*) G__Longref(&libp->para[2]));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_223(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *(long*) G__Longref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_224(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = merge(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[3]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_225(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_226(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_227(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = set_union(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[3]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_228(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = set_intersection(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[3]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_229(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = set_difference(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[3]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_230(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = set_symmetric_difference(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[3]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_231(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_232(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_233(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_234(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_235(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = min(*(long*) G__Longref(&libp->para[0]), *(long*) G__Longref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_236(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = max(*(long*) G__Longref(&libp->para[0]), *(long*) G__Longref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_237(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = min_element(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_238(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<long,allocator<long> >::iterator* pobj;
         deque<long,allocator<long> >::iterator xobj = max_element(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_239(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((deque<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_240(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_241(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((deque<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((deque<long,allocator<long> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_242(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(queue<long,deque<long,allocator<long> > >*) libp->para[0].ref, *(queue<long,deque<long,allocator<long> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_243(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(queue<long,deque<long,allocator<long> > >*) libp->para[0].ref, *(queue<long,deque<long,allocator<long> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_244(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(queue<long,deque<long,allocator<long> > >*) libp->para[0].ref, *(queue<long,deque<long,allocator<long> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_245(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(queue<long,deque<long,allocator<long> > >*) libp->para[0].ref, *(queue<long,deque<long,allocator<long> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_246(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(queue<long,deque<long,allocator<long> > >*) libp->para[0].ref, *(queue<long,deque<long,allocator<long> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_247(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(queue<long,deque<long,allocator<long> > >*) libp->para[0].ref, *(queue<long,deque<long,allocator<long> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_248(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<double,allocator<double> >::iterator*) libp->para[0].ref, *(deque<double,allocator<double> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_249(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<double,allocator<double> >::iterator*) libp->para[0].ref, *(deque<double,allocator<double> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_250(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<double,allocator<double> >::reverse_iterator*) libp->para[0].ref, *(deque<double,allocator<double> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_251(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<double,allocator<double> >::reverse_iterator*) libp->para[0].ref, *(deque<double,allocator<double> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_252(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<double,allocator<double> >*) libp->para[0].ref, *(deque<double,allocator<double> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_253(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(deque<double,allocator<double> >*) libp->para[0].ref, *(deque<double,allocator<double> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_254(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<double,allocator<double> >*) libp->para[0].ref, *(deque<double,allocator<double> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_255(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(deque<double,allocator<double> >*) libp->para[0].ref, *(deque<double,allocator<double> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_256(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(deque<double,allocator<double> >*) libp->para[0].ref, *(deque<double,allocator<double> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_257(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(deque<double,allocator<double> >*) libp->para[0].ref, *(deque<double,allocator<double> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_258(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = find(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *(double*) G__Doubleref(&libp->para[2]));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_259(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = find_end(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_260(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = find_first_of(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_261(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = adjacent_find(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_262(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *(double*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_263(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_264(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = search(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_265(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = search_n(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, (deque<double,allocator<double> >::size_type) G__int(libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_266(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = copy(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_267(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = copy_backward(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_268(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      swap(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_269(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = swap_ranges(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_270(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_271(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_272(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = replace_copy(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_273(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_274(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), (deque<double,allocator<double> >::size_type) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_275(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = remove(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *(double*) G__Doubleref(&libp->para[2]));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_276(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = remove_copy(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])), *(double*) G__Doubleref(&libp->para[3]));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_277(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = unique(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_278(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = unique_copy(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_279(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_280(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = reverse_copy(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_281(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_282(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = rotate_copy(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_283(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_284(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_285(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_286(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_287(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = partial_sort_copy(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_288(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_289(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = lower_bound(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *(double*) G__Doubleref(&libp->para[2]));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_290(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = upper_bound(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *(double*) G__Doubleref(&libp->para[2]));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_291(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *(double*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_292(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = merge(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[3]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_293(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_294(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_295(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = set_union(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[3]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_296(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = set_intersection(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[3]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_297(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = set_difference(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[3]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_298(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = set_symmetric_difference(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[3]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_299(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_300(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_301(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_302(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_303(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = min(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_304(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = max(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_305(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = min_element(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_306(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<double,allocator<double> >::iterator* pobj;
         deque<double,allocator<double> >::iterator xobj = max_element(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_307(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((deque<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_308(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_309(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((deque<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((deque<double,allocator<double> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_310(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(queue<double,deque<double,allocator<double> > >*) libp->para[0].ref, *(queue<double,deque<double,allocator<double> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_311(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(queue<double,deque<double,allocator<double> > >*) libp->para[0].ref, *(queue<double,deque<double,allocator<double> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_312(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(queue<double,deque<double,allocator<double> > >*) libp->para[0].ref, *(queue<double,deque<double,allocator<double> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_313(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(queue<double,deque<double,allocator<double> > >*) libp->para[0].ref, *(queue<double,deque<double,allocator<double> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_314(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(queue<double,deque<double,allocator<double> > >*) libp->para[0].ref, *(queue<double,deque<double,allocator<double> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_315(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(queue<double,deque<double,allocator<double> > >*) libp->para[0].ref, *(queue<double,deque<double,allocator<double> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_316(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<void*,allocator<void*> >::iterator*) libp->para[0].ref, *(deque<void*,allocator<void*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_317(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<void*,allocator<void*> >::iterator*) libp->para[0].ref, *(deque<void*,allocator<void*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_318(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<void*,allocator<void*> >::reverse_iterator*) libp->para[0].ref, *(deque<void*,allocator<void*> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_319(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<void*,allocator<void*> >::reverse_iterator*) libp->para[0].ref, *(deque<void*,allocator<void*> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_320(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<void*,allocator<void*> >*) libp->para[0].ref, *(deque<void*,allocator<void*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_321(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(deque<void*,allocator<void*> >*) libp->para[0].ref, *(deque<void*,allocator<void*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_322(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<void*,allocator<void*> >*) libp->para[0].ref, *(deque<void*,allocator<void*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_323(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(deque<void*,allocator<void*> >*) libp->para[0].ref, *(deque<void*,allocator<void*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_324(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(deque<void*,allocator<void*> >*) libp->para[0].ref, *(deque<void*,allocator<void*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_325(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(deque<void*,allocator<void*> >*) libp->para[0].ref, *(deque<void*,allocator<void*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_326(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = find(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_327(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = find_end(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_328(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = find_first_of(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_329(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = adjacent_find(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_330(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_331(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_332(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = search(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_333(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = search_n(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, (deque<void*,allocator<void*> >::size_type) G__int(libp->para[2]), libp->para[3].ref ? *(void**) libp->para[3].ref : *(void**) (&G__Mlong(libp->para[3])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_334(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = copy(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_335(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = copy_backward(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_336(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      swap(libp->para[0].ref ? *(void**) libp->para[0].ref : *(void**) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(void**) libp->para[1].ref : *(void**) (&G__Mlong(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_337(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = swap_ranges(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_338(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_339(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2])), libp->para[3].ref ? *(void**) libp->para[3].ref : *(void**) (&G__Mlong(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_340(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = replace_copy(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), libp->para[3].ref ? *(void**) libp->para[3].ref : *(void**) (&G__Mlong(libp->para[3]))
, libp->para[4].ref ? *(void**) libp->para[4].ref : *(void**) (&G__Mlong(libp->para[4])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_341(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_342(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), (deque<void*,allocator<void*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_343(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = remove(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_344(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = remove_copy(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), libp->para[3].ref ? *(void**) libp->para[3].ref : *(void**) (&G__Mlong(libp->para[3])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_345(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = unique(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_346(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = unique_copy(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_347(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_348(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = reverse_copy(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_349(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_350(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = rotate_copy(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_351(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_352(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_353(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_354(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_355(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = partial_sort_copy(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_356(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_357(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = lower_bound(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_358(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = upper_bound(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_359(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_360(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = merge(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[3]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_361(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_362(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_363(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = set_union(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[3]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_364(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = set_intersection(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[3]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_365(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = set_difference(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[3]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_366(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = set_symmetric_difference(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[3]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_367(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_368(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_369(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_370(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_371(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         void* const& obj = min(libp->para[0].ref ? *(void**) libp->para[0].ref : *(void**) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(void**) libp->para[1].ref : *(void**) (&G__Mlong(libp->para[1])));
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_372(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         void* const& obj = max(libp->para[0].ref ? *(void**) libp->para[0].ref : *(void**) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(void**) libp->para[1].ref : *(void**) (&G__Mlong(libp->para[1])));
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_373(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = min_element(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_374(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<void*,allocator<void*> >::iterator* pobj;
         deque<void*,allocator<void*> >::iterator xobj = max_element(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_375(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_376(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_377(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((deque<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_378(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(queue<void*,deque<void*,allocator<void*> > >*) libp->para[0].ref, *(queue<void*,deque<void*,allocator<void*> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_379(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(queue<void*,deque<void*,allocator<void*> > >*) libp->para[0].ref, *(queue<void*,deque<void*,allocator<void*> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_380(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(queue<void*,deque<void*,allocator<void*> > >*) libp->para[0].ref, *(queue<void*,deque<void*,allocator<void*> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_381(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(queue<void*,deque<void*,allocator<void*> > >*) libp->para[0].ref, *(queue<void*,deque<void*,allocator<void*> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_382(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(queue<void*,deque<void*,allocator<void*> > >*) libp->para[0].ref, *(queue<void*,deque<void*,allocator<void*> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_383(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(queue<void*,deque<void*,allocator<void*> > >*) libp->para[0].ref, *(queue<void*,deque<void*,allocator<void*> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_384(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<char*,allocator<char*> >::iterator*) libp->para[0].ref, *(deque<char*,allocator<char*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_385(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<char*,allocator<char*> >::iterator*) libp->para[0].ref, *(deque<char*,allocator<char*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_386(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<char*,allocator<char*> >::reverse_iterator*) libp->para[0].ref, *(deque<char*,allocator<char*> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_387(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<char*,allocator<char*> >::reverse_iterator*) libp->para[0].ref, *(deque<char*,allocator<char*> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_388(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<char*,allocator<char*> >*) libp->para[0].ref, *(deque<char*,allocator<char*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_389(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(deque<char*,allocator<char*> >*) libp->para[0].ref, *(deque<char*,allocator<char*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_390(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<char*,allocator<char*> >*) libp->para[0].ref, *(deque<char*,allocator<char*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_391(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(deque<char*,allocator<char*> >*) libp->para[0].ref, *(deque<char*,allocator<char*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_392(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(deque<char*,allocator<char*> >*) libp->para[0].ref, *(deque<char*,allocator<char*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_393(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(deque<char*,allocator<char*> >*) libp->para[0].ref, *(deque<char*,allocator<char*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_394(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = find(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_395(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = find_end(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_396(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = find_first_of(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_397(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = adjacent_find(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_398(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_399(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_400(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = search(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_401(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = search_n(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, (deque<char*,allocator<char*> >::size_type) G__int(libp->para[2]), libp->para[3].ref ? *(char**) libp->para[3].ref : *(char**) (&G__Mlong(libp->para[3])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_402(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = copy(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_403(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = copy_backward(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_404(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      swap(libp->para[0].ref ? *(char**) libp->para[0].ref : *(char**) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(char**) libp->para[1].ref : *(char**) (&G__Mlong(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_405(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = swap_ranges(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_406(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_407(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2])), libp->para[3].ref ? *(char**) libp->para[3].ref : *(char**) (&G__Mlong(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_408(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = replace_copy(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), libp->para[3].ref ? *(char**) libp->para[3].ref : *(char**) (&G__Mlong(libp->para[3]))
, libp->para[4].ref ? *(char**) libp->para[4].ref : *(char**) (&G__Mlong(libp->para[4])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_409(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_410(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), (deque<char*,allocator<char*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_411(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = remove(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_412(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = remove_copy(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), libp->para[3].ref ? *(char**) libp->para[3].ref : *(char**) (&G__Mlong(libp->para[3])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_413(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = unique(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_414(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = unique_copy(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_415(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_416(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = reverse_copy(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_417(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_418(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = rotate_copy(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_419(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_420(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_421(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_422(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_423(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = partial_sort_copy(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_424(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_425(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = lower_bound(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_426(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = upper_bound(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_427(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_428(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = merge(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[3]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_429(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_430(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_431(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = set_union(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[3]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_432(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = set_intersection(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[3]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_433(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = set_difference(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[3]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_434(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = set_symmetric_difference(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[3]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_435(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_436(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_437(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_438(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_439(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         char* const& obj = min(libp->para[0].ref ? *(char**) libp->para[0].ref : *(char**) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(char**) libp->para[1].ref : *(char**) (&G__Mlong(libp->para[1])));
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_440(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         char* const& obj = max(libp->para[0].ref ? *(char**) libp->para[0].ref : *(char**) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(char**) libp->para[1].ref : *(char**) (&G__Mlong(libp->para[1])));
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_441(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = min_element(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_442(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<char*,allocator<char*> >::iterator* pobj;
         deque<char*,allocator<char*> >::iterator xobj = max_element(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_443(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_444(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_445(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((deque<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_446(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(queue<char*,deque<char*,allocator<char*> > >*) libp->para[0].ref, *(queue<char*,deque<char*,allocator<char*> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_447(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(queue<char*,deque<char*,allocator<char*> > >*) libp->para[0].ref, *(queue<char*,deque<char*,allocator<char*> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_448(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(queue<char*,deque<char*,allocator<char*> > >*) libp->para[0].ref, *(queue<char*,deque<char*,allocator<char*> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_449(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(queue<char*,deque<char*,allocator<char*> > >*) libp->para[0].ref, *(queue<char*,deque<char*,allocator<char*> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_450(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(queue<char*,deque<char*,allocator<char*> > >*) libp->para[0].ref, *(queue<char*,deque<char*,allocator<char*> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_451(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(queue<char*,deque<char*,allocator<char*> > >*) libp->para[0].ref, *(queue<char*,deque<char*,allocator<char*> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_452(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<string,allocator<string> >::iterator*) libp->para[0].ref, *(deque<string,allocator<string> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_453(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<string,allocator<string> >::iterator*) libp->para[0].ref, *(deque<string,allocator<string> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_454(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<string,allocator<string> >::reverse_iterator*) libp->para[0].ref, *(deque<string,allocator<string> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_455(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<string,allocator<string> >::reverse_iterator*) libp->para[0].ref, *(deque<string,allocator<string> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_456(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(deque<string,allocator<string> >*) libp->para[0].ref, *(deque<string,allocator<string> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_457(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(deque<string,allocator<string> >*) libp->para[0].ref, *(deque<string,allocator<string> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_458(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(deque<string,allocator<string> >*) libp->para[0].ref, *(deque<string,allocator<string> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_459(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(deque<string,allocator<string> >*) libp->para[0].ref, *(deque<string,allocator<string> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_460(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(deque<string,allocator<string> >*) libp->para[0].ref, *(deque<string,allocator<string> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_461(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(deque<string,allocator<string> >*) libp->para[0].ref, *(deque<string,allocator<string> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_462(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = find(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *(string*) libp->para[2].ref);
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_463(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = find_end(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_464(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = find_first_of(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_465(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = adjacent_find(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_466(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *(string*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_467(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_468(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = search(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_469(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = search_n(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, (deque<string,allocator<string> >::size_type) G__int(libp->para[2]), *(string*) libp->para[3].ref);
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_470(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = copy(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_471(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = copy_backward(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_472(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = swap_ranges(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_473(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_474(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *(string*) libp->para[2].ref, *(string*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_475(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = replace_copy(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])), *(string*) libp->para[3].ref
, *(string*) libp->para[4].ref);
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_476(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *(string*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_477(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), (deque<string,allocator<string> >::size_type) G__int(libp->para[1])
, *(string*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_478(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = remove(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *(string*) libp->para[2].ref);
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_479(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = remove_copy(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])), *(string*) libp->para[3].ref);
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_480(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = unique(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_481(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = unique_copy(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_482(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_483(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = reverse_copy(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_484(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_485(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = rotate_copy(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_486(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_487(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_488(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_489(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_490(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = partial_sort_copy(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[3])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_491(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_492(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = lower_bound(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *(string*) libp->para[2].ref);
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_493(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = upper_bound(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *(string*) libp->para[2].ref);
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_494(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *(string*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_495(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = merge(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[3]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_496(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_497(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_498(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = set_union(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[3]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_499(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = set_intersection(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[3]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_500(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = set_difference(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[3]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_501(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = set_symmetric_difference(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[3]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[4])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_502(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_503(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_504(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_505(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_506(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = min(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_507(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = max(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_508(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = min_element(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_509(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         deque<string,allocator<string> >::iterator* pobj;
         deque<string,allocator<string> >::iterator xobj = max_element(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1])));
         pobj = new deque<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_510(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))
, *((deque<string,allocator<string> >::iterator*) G__int(libp->para[2])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_511(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_512(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((deque<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((deque<string,allocator<string> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_513(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(queue<string,deque<string,allocator<string> > >*) libp->para[0].ref, *(queue<string,deque<string,allocator<string> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_514(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(queue<string,deque<string,allocator<string> > >*) libp->para[0].ref, *(queue<string,deque<string,allocator<string> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_515(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(queue<string,deque<string,allocator<string> > >*) libp->para[0].ref, *(queue<string,deque<string,allocator<string> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_516(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(queue<string,deque<string,allocator<string> > >*) libp->para[0].ref, *(queue<string,deque<string,allocator<string> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_517(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(queue<string,deque<string,allocator<string> > >*) libp->para[0].ref, *(queue<string,deque<string,allocator<string> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__queue__0_518(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(queue<string,deque<string,allocator<string> > >*) libp->para[0].ref, *(queue<string,deque<string,allocator<string> > >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* allocator<int> */

/* deque<int,allocator<int> > */

/* deque<int,allocator<int> >::iterator */

/* deque<int,allocator<int> >::reverse_iterator */

/* queue<int,deque<int,allocator<int> > > */

/* allocator<long> */

/* deque<long,allocator<long> > */

/* deque<long,allocator<long> >::iterator */

/* deque<long,allocator<long> >::reverse_iterator */

/* queue<long,deque<long,allocator<long> > > */

/* allocator<double> */

/* deque<double,allocator<double> > */

/* deque<double,allocator<double> >::iterator */

/* deque<double,allocator<double> >::reverse_iterator */

/* queue<double,deque<double,allocator<double> > > */

/* allocator<void*> */

/* deque<void*,allocator<void*> > */

/* deque<void*,allocator<void*> >::iterator */

/* deque<void*,allocator<void*> >::reverse_iterator */

/* queue<void*,deque<void*,allocator<void*> > > */

/* allocator<char*> */

/* deque<char*,allocator<char*> > */

/* deque<char*,allocator<char*> >::iterator */

/* deque<char*,allocator<char*> >::reverse_iterator */

/* queue<char*,deque<char*,allocator<char*> > > */

/* allocator<string> */

/* deque<string,allocator<string> > */

/* deque<string,allocator<string> >::iterator */

/* deque<string,allocator<string> >::reverse_iterator */

/* queue<string,deque<string,allocator<string> > > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunc {
 public:
  G__Sizep2memfunc(): p(&G__Sizep2memfunc::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunc::*p)();
};

size_t G__get_sizep2memfunc()
{
  G__Sizep2memfunc a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritance() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetable() {

   /* Setting up typedef entry */
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEintgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEintgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",73,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEintgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",73,-1,256,G__get_linked_tagnum(&G__LN_allocatorlEintgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",105,-1,1,G__get_linked_tagnum(&G__LN_allocatorlEintgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",105,-1,257,G__get_linked_tagnum(&G__LN_allocatorlEintgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",105,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEintgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<int>",117,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",105,-1,0,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__LN_allocatorlEintgR),0,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",73,-1,0,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",73,-1,256,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",105,-1,1,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",105,-1,257,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("queue<int>",117,G__get_linked_tagnum(&G__LN_queuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",105,-1,0,G__get_linked_tagnum(&G__LN_queuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_queuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("container_type",117,G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__LN_queuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",76,-1,0,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",76,-1,256,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",108,-1,1,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",108,-1,257,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<long>",117,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",108,-1,0,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__LN_allocatorlElonggR),0,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",76,-1,0,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",76,-1,256,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",108,-1,1,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",108,-1,257,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("queue<long>",117,G__get_linked_tagnum(&G__LN_queuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",108,-1,0,G__get_linked_tagnum(&G__LN_queuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_queuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("container_type",117,G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR),0,G__get_linked_tagnum(&G__LN_queuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",68,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",68,-1,256,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",100,-1,1,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",100,-1,257,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<double>",117,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR),0,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",68,-1,0,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",68,-1,256,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",100,-1,1,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",100,-1,257,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("queue<double>",117,G__get_linked_tagnum(&G__LN_queuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__LN_queuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_queuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("container_type",117,G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR),0,G__get_linked_tagnum(&G__LN_queuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",89,-1,2,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",89,-1,258,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",89,-1,1,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",89,-1,1025,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",89,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<void*>",117,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",89,-1,0,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR),0,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",89,-1,0,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",89,-1,256,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",89,-1,1,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",89,-1,257,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("queue<void*>",117,G__get_linked_tagnum(&G__LN_queuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",89,-1,0,G__get_linked_tagnum(&G__LN_queuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_queuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("container_type",117,G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR),0,G__get_linked_tagnum(&G__LN_queuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",67,-1,2,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",67,-1,258,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",67,-1,1,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",67,-1,1025,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",67,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<char*>",117,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",67,-1,0,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR),0,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",67,-1,0,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",67,-1,256,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",67,-1,1,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",67,-1,257,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("queue<char*>",117,G__get_linked_tagnum(&G__LN_queuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",67,-1,0,G__get_linked_tagnum(&G__LN_queuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_queuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("container_type",117,G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR),0,G__get_linked_tagnum(&G__LN_queuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEstringgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEstringgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__LN_string),0,G__get_linked_tagnum(&G__LN_allocatorlEstringgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__LN_string),256,G__get_linked_tagnum(&G__LN_allocatorlEstringgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__LN_string),1,G__get_linked_tagnum(&G__LN_allocatorlEstringgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__LN_string),257,G__get_linked_tagnum(&G__LN_allocatorlEstringgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__LN_string),0,G__get_linked_tagnum(&G__LN_allocatorlEstringgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<string>",117,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__LN_string),0,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__LN_allocatorlEstringgR),0,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__LN_string),0,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__LN_string),256,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__LN_string),1,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__LN_string),257,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("queue<string>",117,G__get_linked_tagnum(&G__LN_queuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__LN_string),0,G__get_linked_tagnum(&G__LN_queuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_queuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("container_type",117,G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR),0,G__get_linked_tagnum(&G__LN_queuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* allocator<int> */
static void G__setup_memvarallocatorlEintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlEintgR));
   { allocator<int> *p; p=(allocator<int>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<int,allocator<int> > */
static void G__setup_memvardequelEintcOallocatorlEintgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   { deque<int,allocator<int> > *p; p=(deque<int,allocator<int> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<int,allocator<int> >::iterator */
static void G__setup_memvardequelEintcOallocatorlEintgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator));
   { deque<int,allocator<int> >::iterator *p; p=(deque<int,allocator<int> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<int,allocator<int> >::reverse_iterator */
static void G__setup_memvardequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator));
   { deque<int,allocator<int> >::reverse_iterator *p; p=(deque<int,allocator<int> >::reverse_iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* queue<int,deque<int,allocator<int> > > */
static void G__setup_memvarqueuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_queuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR));
   { queue<int,deque<int,allocator<int> > > *p; p=(queue<int,deque<int,allocator<int> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* allocator<long> */
static void G__setup_memvarallocatorlElonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   { allocator<long> *p; p=(allocator<long>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<long,allocator<long> > */
static void G__setup_memvardequelElongcOallocatorlElonggRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   { deque<long,allocator<long> > *p; p=(deque<long,allocator<long> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<long,allocator<long> >::iterator */
static void G__setup_memvardequelElongcOallocatorlElonggRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator));
   { deque<long,allocator<long> >::iterator *p; p=(deque<long,allocator<long> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<long,allocator<long> >::reverse_iterator */
static void G__setup_memvardequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator));
   { deque<long,allocator<long> >::reverse_iterator *p; p=(deque<long,allocator<long> >::reverse_iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* queue<long,deque<long,allocator<long> > > */
static void G__setup_memvarqueuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_queuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR));
   { queue<long,deque<long,allocator<long> > > *p; p=(queue<long,deque<long,allocator<long> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* allocator<double> */
static void G__setup_memvarallocatorlEdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   { allocator<double> *p; p=(allocator<double>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<double,allocator<double> > */
static void G__setup_memvardequelEdoublecOallocatorlEdoublegRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   { deque<double,allocator<double> > *p; p=(deque<double,allocator<double> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<double,allocator<double> >::iterator */
static void G__setup_memvardequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator));
   { deque<double,allocator<double> >::iterator *p; p=(deque<double,allocator<double> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<double,allocator<double> >::reverse_iterator */
static void G__setup_memvardequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator));
   { deque<double,allocator<double> >::reverse_iterator *p; p=(deque<double,allocator<double> >::reverse_iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* queue<double,deque<double,allocator<double> > > */
static void G__setup_memvarqueuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_queuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR));
   { queue<double,deque<double,allocator<double> > > *p; p=(queue<double,deque<double,allocator<double> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* allocator<void*> */
static void G__setup_memvarallocatorlEvoidmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   { allocator<void*> *p; p=(allocator<void*>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<void*,allocator<void*> > */
static void G__setup_memvardequelEvoidmUcOallocatorlEvoidmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   { deque<void*,allocator<void*> > *p; p=(deque<void*,allocator<void*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<void*,allocator<void*> >::iterator */
static void G__setup_memvardequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator));
   { deque<void*,allocator<void*> >::iterator *p; p=(deque<void*,allocator<void*> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<void*,allocator<void*> >::reverse_iterator */
static void G__setup_memvardequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator));
   { deque<void*,allocator<void*> >::reverse_iterator *p; p=(deque<void*,allocator<void*> >::reverse_iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* queue<void*,deque<void*,allocator<void*> > > */
static void G__setup_memvarqueuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_queuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR));
   { queue<void*,deque<void*,allocator<void*> > > *p; p=(queue<void*,deque<void*,allocator<void*> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* allocator<char*> */
static void G__setup_memvarallocatorlEcharmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   { allocator<char*> *p; p=(allocator<char*>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<char*,allocator<char*> > */
static void G__setup_memvardequelEcharmUcOallocatorlEcharmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   { deque<char*,allocator<char*> > *p; p=(deque<char*,allocator<char*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<char*,allocator<char*> >::iterator */
static void G__setup_memvardequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator));
   { deque<char*,allocator<char*> >::iterator *p; p=(deque<char*,allocator<char*> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<char*,allocator<char*> >::reverse_iterator */
static void G__setup_memvardequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator));
   { deque<char*,allocator<char*> >::reverse_iterator *p; p=(deque<char*,allocator<char*> >::reverse_iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* queue<char*,deque<char*,allocator<char*> > > */
static void G__setup_memvarqueuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_queuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR));
   { queue<char*,deque<char*,allocator<char*> > > *p; p=(queue<char*,deque<char*,allocator<char*> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* allocator<string> */
static void G__setup_memvarallocatorlEstringgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlEstringgR));
   { allocator<string> *p; p=(allocator<string>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<string,allocator<string> > */
static void G__setup_memvardequelEstringcOallocatorlEstringgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   { deque<string,allocator<string> > *p; p=(deque<string,allocator<string> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<string,allocator<string> >::iterator */
static void G__setup_memvardequelEstringcOallocatorlEstringgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator));
   { deque<string,allocator<string> >::iterator *p; p=(deque<string,allocator<string> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* deque<string,allocator<string> >::reverse_iterator */
static void G__setup_memvardequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator));
   { deque<string,allocator<string> >::reverse_iterator *p; p=(deque<string,allocator<string> >::reverse_iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* queue<string,deque<string,allocator<string> > > */
static void G__setup_memvarqueuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_queuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR));
   { queue<string,deque<string,allocator<string> > > *p; p=(queue<string,deque<string,allocator<string> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvar() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncallocatorlEintgR(void) {
   /* allocator<int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlEintgR));
   G__memfunc_setup("allocator<int>",1414,G__queue_48_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlEintgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<int>",1414,G__queue_48_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlEintgR), -1, 0, 1, 1, 1, 0, "u 'allocator<int>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__queue_48_0_3, 73, -1, G__defined_typename("allocator<int>::pointer"), 0, 1, 1, 1, 8, "i - 'allocator<int>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__queue_48_0_4, 73, -1, G__defined_typename("allocator<int>::const_pointer"), 0, 1, 1, 1, 8, "i - 'allocator<int>::const_reference' 10 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__queue_48_0_5, 73, -1, -1, 0, 2, 1, 1, 0, 
"h - 'allocator<int>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__queue_48_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"I - 'allocator<int>::pointer' 0 - __p h - 'allocator<int>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__queue_48_0_7, 104, -1, G__defined_typename("allocator<int>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__queue_48_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"I - 'allocator<int>::pointer' 0 - __p i - - 11 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__queue_48_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'allocator<int>::pointer' 0 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<int>", 1540, G__queue_48_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__queue_48_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlEintgR), -1, 1, 1, 1, 1, 0, "u 'allocator<int>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEintcOallocatorlEintgRsPgR(void) {
   /* deque<int,allocator<int> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR));
   G__memfunc_setup("deque<int,allocator<int> >",2475,G__queue_49_0_1, 105, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<int,allocator<int> >",2475,G__queue_49_0_2, 105, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'deque<int,allocator<int> >::size_type' 0 - n i - - 11 'int()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<int,allocator<int> >",2475,G__queue_49_0_3, 105, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR), -1, 0, 2, 1, 1, 0, 
"I - - 10 - first I - - 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<int,allocator<int> >",2475,G__queue_49_0_4, 105, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' 'deque<int,allocator<int> >::const_iterator' 10 - first u 'deque<int,allocator<int> >::iterator' 'deque<int,allocator<int> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<int,allocator<int> >",2475,G__queue_49_0_5, 105, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR), -1, 0, 1, 1, 1, 0, "u 'deque<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_49_0_6, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR), -1, 1, 1, 1, 1, 0, "u 'deque<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__queue_49_0_7, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__queue_49_0_8, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__queue_49_0_9, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__queue_49_0_10, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__queue_49_0_11, 104, -1, G__defined_typename("deque<int,allocator<int> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__queue_49_0_12, 104, -1, G__defined_typename("deque<int,allocator<int> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__queue_49_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'deque<int,allocator<int> >::size_type' 0 - sz i - - 0 'int()' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__queue_49_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_49_0_15, 105, -1, -1, 1, 1, 1, 1, 0, "h - 'deque<int,allocator<int> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__queue_49_0_16, 105, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__queue_49_0_17, 105, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_front",1096,G__queue_49_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__queue_49_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__queue_49_0_20, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - position i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__queue_49_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - position h - 'deque<int,allocator<int> >::size_type' 0 - n "
"i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_front",983,G__queue_49_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__queue_49_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__queue_49_0_24, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'deque<int,allocator<int> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__queue_49_0_25, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__queue_49_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'deque<int,allocator<int> >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__queue_49_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~deque<int,allocator<int> >", 2601, G__queue_49_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEintcOallocatorlEintgRsPgRcLcLiterator(void) {
   /* deque<int,allocator<int> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__queue_50_0_1, 105, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__queue_50_0_2, 105, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'deque<int,allocator<int> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_50_0_3, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "u 'deque<int,allocator<int> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__queue_50_0_4, 105, -1, -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__queue_50_0_5, 73, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_50_0_6, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_50_0_7, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_50_0_8, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_50_0_9, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__queue_50_0_10, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__queue_50_0_11, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__queue_50_0_12, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__queue_50_0_13, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_50_0_14, 105, -1, -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__queue_50_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator(void) {
   /* deque<int,allocator<int> >::reverse_iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator));
   G__memfunc_setup("reverse_iterator",1733,G__queue_51_0_1, 105, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "u 'deque<int,allocator<int> >::reverse_iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_51_0_2, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "u 'deque<int,allocator<int> >::reverse_iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__queue_51_0_3, 105, -1, -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__queue_51_0_4, 73, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_51_0_5, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_51_0_6, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_51_0_7, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_51_0_8, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__queue_51_0_9, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__queue_51_0_10, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__queue_51_0_11, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__queue_51_0_12, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_51_0_13, 105, -1, -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator", 1859, G__queue_51_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncqueuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR(void) {
   /* queue<int,deque<int,allocator<int> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_queuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR));
   G__memfunc_setup("queue<int,deque<int,allocator<int> > >",3553,G__queue_52_0_1, 105, G__get_linked_tagnum(&G__LN_queuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__queue_52_0_2, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__queue_52_0_3, 104, -1, G__defined_typename("queue<int,deque<int,allocator<int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__queue_52_0_4, 105, -1, G__defined_typename("queue<int,deque<int,allocator<int> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__queue_52_0_5, 105, -1, G__defined_typename("queue<int,deque<int,allocator<int> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push",448,G__queue_52_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop",335,G__queue_52_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("queue<int,deque<int,allocator<int> > >", 3553, G__queue_52_0_8, (int) ('i'), 
G__get_linked_tagnum(&G__LN_queuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'queue<int,deque<int,allocator<int> > >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~queue<int,deque<int,allocator<int> > >", 3679, G__queue_52_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__queue_52_0_10, (int) ('u'), G__get_linked_tagnum(&G__LN_queuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'queue<int,deque<int,allocator<int> > >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncallocatorlElonggR(void) {
   /* allocator<long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   G__memfunc_setup("allocator<long>",1515,G__queue_53_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlElonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<long>",1515,G__queue_53_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlElonggR), -1, 0, 1, 1, 1, 0, "u 'allocator<long>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__queue_53_0_3, 76, -1, G__defined_typename("allocator<long>::pointer"), 0, 1, 1, 1, 8, "l - 'allocator<long>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__queue_53_0_4, 76, -1, G__defined_typename("allocator<long>::const_pointer"), 0, 1, 1, 1, 8, "l - 'allocator<long>::const_reference' 10 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__queue_53_0_5, 76, -1, -1, 0, 2, 1, 1, 0, 
"h - 'allocator<long>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__queue_53_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"L - 'allocator<long>::pointer' 0 - __p h - 'allocator<long>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__queue_53_0_7, 104, -1, G__defined_typename("allocator<long>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__queue_53_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"L - 'allocator<long>::pointer' 0 - __p l - - 11 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__queue_53_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "L - 'allocator<long>::pointer' 0 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<long>", 1641, G__queue_53_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__queue_53_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlElonggR), -1, 1, 1, 1, 1, 0, "u 'allocator<long>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelElongcOallocatorlElonggRsPgR(void) {
   /* deque<long,allocator<long> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR));
   G__memfunc_setup("deque<long,allocator<long> >",2677,G__queue_54_0_1, 105, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<long,allocator<long> >",2677,G__queue_54_0_2, 105, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'deque<long,allocator<long> >::size_type' 0 - n l - - 11 'long()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<long,allocator<long> >",2677,G__queue_54_0_3, 105, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR), -1, 0, 2, 1, 1, 0, 
"L - - 10 - first L - - 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<long,allocator<long> >",2677,G__queue_54_0_4, 105, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' 'deque<long,allocator<long> >::const_iterator' 10 - first u 'deque<long,allocator<long> >::iterator' 'deque<long,allocator<long> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<long,allocator<long> >",2677,G__queue_54_0_5, 105, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR), -1, 0, 1, 1, 1, 0, "u 'deque<long,allocator<long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_54_0_6, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR), -1, 1, 1, 1, 1, 0, "u 'deque<long,allocator<long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__queue_54_0_7, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__queue_54_0_8, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__queue_54_0_9, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__queue_54_0_10, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__queue_54_0_11, 104, -1, G__defined_typename("deque<long,allocator<long> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__queue_54_0_12, 104, -1, G__defined_typename("deque<long,allocator<long> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__queue_54_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'deque<long,allocator<long> >::size_type' 0 - sz l - - 0 'long()' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__queue_54_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_54_0_15, 108, -1, -1, 1, 1, 1, 1, 0, "h - 'deque<long,allocator<long> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__queue_54_0_16, 108, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__queue_54_0_17, 108, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_front",1096,G__queue_54_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "l - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__queue_54_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "l - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__queue_54_0_20, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - position l - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__queue_54_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - position h - 'deque<long,allocator<long> >::size_type' 0 - n "
"l - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_front",983,G__queue_54_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__queue_54_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__queue_54_0_24, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'deque<long,allocator<long> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__queue_54_0_25, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__queue_54_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'deque<long,allocator<long> >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__queue_54_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~deque<long,allocator<long> >", 2803, G__queue_54_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelElongcOallocatorlElonggRsPgRcLcLiterator(void) {
   /* deque<long,allocator<long> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__queue_55_0_1, 105, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__queue_55_0_2, 105, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'deque<long,allocator<long> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_55_0_3, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "u 'deque<long,allocator<long> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__queue_55_0_4, 108, -1, -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__queue_55_0_5, 76, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_55_0_6, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_55_0_7, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_55_0_8, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_55_0_9, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__queue_55_0_10, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__queue_55_0_11, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__queue_55_0_12, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__queue_55_0_13, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_55_0_14, 108, -1, -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__queue_55_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator(void) {
   /* deque<long,allocator<long> >::reverse_iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator));
   G__memfunc_setup("reverse_iterator",1733,G__queue_56_0_1, 105, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "u 'deque<long,allocator<long> >::reverse_iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_56_0_2, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "u 'deque<long,allocator<long> >::reverse_iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__queue_56_0_3, 108, -1, -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__queue_56_0_4, 76, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_56_0_5, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_56_0_6, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_56_0_7, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_56_0_8, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__queue_56_0_9, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__queue_56_0_10, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__queue_56_0_11, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__queue_56_0_12, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_56_0_13, 108, -1, -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator", 1859, G__queue_56_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncqueuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR(void) {
   /* queue<long,deque<long,allocator<long> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_queuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR));
   G__memfunc_setup("queue<long,deque<long,allocator<long> > >",3856,G__queue_57_0_1, 105, G__get_linked_tagnum(&G__LN_queuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__queue_57_0_2, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__queue_57_0_3, 104, -1, G__defined_typename("queue<long,deque<long,allocator<long> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__queue_57_0_4, 108, -1, G__defined_typename("queue<long,deque<long,allocator<long> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__queue_57_0_5, 108, -1, G__defined_typename("queue<long,deque<long,allocator<long> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push",448,G__queue_57_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "l - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop",335,G__queue_57_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("queue<long,deque<long,allocator<long> > >", 3856, G__queue_57_0_8, (int) ('i'), 
G__get_linked_tagnum(&G__LN_queuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'queue<long,deque<long,allocator<long> > >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~queue<long,deque<long,allocator<long> > >", 3982, G__queue_57_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__queue_57_0_10, (int) ('u'), G__get_linked_tagnum(&G__LN_queuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'queue<long,deque<long,allocator<long> > >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncallocatorlEdoublegR(void) {
   /* allocator<double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   G__memfunc_setup("allocator<double>",1718,G__queue_58_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlEdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<double>",1718,G__queue_58_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlEdoublegR), -1, 0, 1, 1, 1, 0, "u 'allocator<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__queue_58_0_3, 68, -1, G__defined_typename("allocator<double>::pointer"), 0, 1, 1, 1, 8, "d - 'allocator<double>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__queue_58_0_4, 68, -1, G__defined_typename("allocator<double>::const_pointer"), 0, 1, 1, 1, 8, "d - 'allocator<double>::const_reference' 10 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__queue_58_0_5, 68, -1, -1, 0, 2, 1, 1, 0, 
"h - 'allocator<double>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__queue_58_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'allocator<double>::pointer' 0 - __p h - 'allocator<double>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__queue_58_0_7, 104, -1, G__defined_typename("allocator<double>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__queue_58_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'allocator<double>::pointer' 0 - __p d - - 11 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__queue_58_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'allocator<double>::pointer' 0 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<double>", 1844, G__queue_58_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__queue_58_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'allocator<double>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEdoublecOallocatorlEdoublegRsPgR(void) {
   /* deque<double,allocator<double> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR));
   G__memfunc_setup("deque<double,allocator<double> >",3083,G__queue_59_0_1, 105, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<double,allocator<double> >",3083,G__queue_59_0_2, 105, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'deque<double,allocator<double> >::size_type' 0 - n d - - 11 'double()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<double,allocator<double> >",3083,G__queue_59_0_3, 105, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR), -1, 0, 2, 1, 1, 0, 
"D - - 10 - first D - - 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<double,allocator<double> >",3083,G__queue_59_0_4, 105, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' 'deque<double,allocator<double> >::const_iterator' 10 - first u 'deque<double,allocator<double> >::iterator' 'deque<double,allocator<double> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<double,allocator<double> >",3083,G__queue_59_0_5, 105, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR), -1, 0, 1, 1, 1, 0, "u 'deque<double,allocator<double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_59_0_6, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR), -1, 1, 1, 1, 1, 0, "u 'deque<double,allocator<double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__queue_59_0_7, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__queue_59_0_8, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__queue_59_0_9, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__queue_59_0_10, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__queue_59_0_11, 104, -1, G__defined_typename("deque<double,allocator<double> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__queue_59_0_12, 104, -1, G__defined_typename("deque<double,allocator<double> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__queue_59_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'deque<double,allocator<double> >::size_type' 0 - sz d - - 0 'double()' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__queue_59_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_59_0_15, 100, -1, -1, 1, 1, 1, 1, 0, "h - 'deque<double,allocator<double> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__queue_59_0_16, 100, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__queue_59_0_17, 100, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_front",1096,G__queue_59_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__queue_59_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__queue_59_0_20, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - position d - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__queue_59_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - position h - 'deque<double,allocator<double> >::size_type' 0 - n "
"d - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_front",983,G__queue_59_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__queue_59_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__queue_59_0_24, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'deque<double,allocator<double> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__queue_59_0_25, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__queue_59_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'deque<double,allocator<double> >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__queue_59_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~deque<double,allocator<double> >", 3209, G__queue_59_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator(void) {
   /* deque<double,allocator<double> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__queue_60_0_1, 105, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__queue_60_0_2, 105, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'deque<double,allocator<double> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_60_0_3, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "u 'deque<double,allocator<double> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__queue_60_0_4, 100, -1, -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__queue_60_0_5, 68, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_60_0_6, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_60_0_7, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_60_0_8, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_60_0_9, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__queue_60_0_10, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__queue_60_0_11, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__queue_60_0_12, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__queue_60_0_13, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_60_0_14, 100, -1, -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__queue_60_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator(void) {
   /* deque<double,allocator<double> >::reverse_iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator));
   G__memfunc_setup("reverse_iterator",1733,G__queue_61_0_1, 105, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "u 'deque<double,allocator<double> >::reverse_iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_61_0_2, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "u 'deque<double,allocator<double> >::reverse_iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__queue_61_0_3, 100, -1, -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__queue_61_0_4, 68, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_61_0_5, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_61_0_6, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_61_0_7, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_61_0_8, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__queue_61_0_9, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__queue_61_0_10, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__queue_61_0_11, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__queue_61_0_12, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_61_0_13, 100, -1, -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator", 1859, G__queue_61_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncqueuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR(void) {
   /* queue<double,deque<double,allocator<double> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_queuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR));
   G__memfunc_setup("queue<double,deque<double,allocator<double> > >",4465,G__queue_62_0_1, 105, G__get_linked_tagnum(&G__LN_queuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__queue_62_0_2, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__queue_62_0_3, 104, -1, G__defined_typename("queue<double,deque<double,allocator<double> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__queue_62_0_4, 100, -1, G__defined_typename("queue<double,deque<double,allocator<double> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__queue_62_0_5, 100, -1, G__defined_typename("queue<double,deque<double,allocator<double> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push",448,G__queue_62_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop",335,G__queue_62_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("queue<double,deque<double,allocator<double> > >", 4465, G__queue_62_0_8, (int) ('i'), 
G__get_linked_tagnum(&G__LN_queuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'queue<double,deque<double,allocator<double> > >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~queue<double,deque<double,allocator<double> > >", 4591, G__queue_62_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__queue_62_0_10, (int) ('u'), G__get_linked_tagnum(&G__LN_queuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'queue<double,deque<double,allocator<double> > >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncallocatorlEvoidmUgR(void) {
   /* allocator<void*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   G__memfunc_setup("allocator<void*>",1559,G__queue_63_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<void*>",1559,G__queue_63_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR), -1, 0, 1, 1, 1, 0, "u 'allocator<void*>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__queue_63_0_3, 89, -1, G__defined_typename("allocator<void*>::pointer"), 2, 1, 1, 1, 8, "Y - 'allocator<void*>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__queue_63_0_4, 89, -1, G__defined_typename("allocator<void*>::const_pointer"), 2, 1, 1, 1, 8, "Y - 'allocator<void*>::const_reference' 40 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__queue_63_0_5, 89, -1, -1, 2, 2, 1, 1, 0, 
"h - 'allocator<void*>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__queue_63_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"Y - 'allocator<void*>::pointer' 2 - __p h - 'allocator<void*>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__queue_63_0_7, 104, -1, G__defined_typename("allocator<void*>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__queue_63_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"Y - 'allocator<void*>::pointer' 2 - __p Y - - 41 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__queue_63_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "Y - 'allocator<void*>::pointer' 2 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<void*>", 1685, G__queue_63_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__queue_63_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR), -1, 1, 1, 1, 1, 0, "u 'allocator<void*>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEvoidmUcOallocatorlEvoidmUgRsPgR(void) {
   /* deque<void*,allocator<void*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__memfunc_setup("deque<void*,allocator<void*> >",2765,G__queue_64_0_1, 105, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<void*,allocator<void*> >",2765,G__queue_64_0_2, 105, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'deque<void*,allocator<void*> >::size_type' 0 - n Y - - 41 '(void*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<void*,allocator<void*> >",2765,G__queue_64_0_3, 105, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"Y - - 42 - first Y - - 42 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<void*,allocator<void*> >",2765,G__queue_64_0_4, 105, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' 'deque<void*,allocator<void*> >::const_iterator' 10 - first u 'deque<void*,allocator<void*> >::iterator' 'deque<void*,allocator<void*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<void*,allocator<void*> >",2765,G__queue_64_0_5, 105, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'deque<void*,allocator<void*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_64_0_6, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'deque<void*,allocator<void*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__queue_64_0_7, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__queue_64_0_8, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__queue_64_0_9, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__queue_64_0_10, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__queue_64_0_11, 104, -1, G__defined_typename("deque<void*,allocator<void*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__queue_64_0_12, 104, -1, G__defined_typename("deque<void*,allocator<void*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__queue_64_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'deque<void*,allocator<void*> >::size_type' 0 - sz Y - - 0 '(void*)()' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__queue_64_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_64_0_15, 89, -1, -1, 1, 1, 1, 1, 0, "h - 'deque<void*,allocator<void*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__queue_64_0_16, 89, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__queue_64_0_17, 89, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_front",1096,G__queue_64_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__queue_64_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__queue_64_0_20, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - position Y - - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__queue_64_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - position h - 'deque<void*,allocator<void*> >::size_type' 0 - n "
"Y - - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_front",983,G__queue_64_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__queue_64_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__queue_64_0_24, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'deque<void*,allocator<void*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__queue_64_0_25, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__queue_64_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'deque<void*,allocator<void*> >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__queue_64_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~deque<void*,allocator<void*> >", 2891, G__queue_64_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator(void) {
   /* deque<void*,allocator<void*> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__queue_65_0_1, 105, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__queue_65_0_2, 105, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'deque<void*,allocator<void*> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_65_0_3, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "u 'deque<void*,allocator<void*> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__queue_65_0_4, 89, -1, -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__queue_65_0_5, 89, -1, -1, 2, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_65_0_6, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_65_0_7, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_65_0_8, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_65_0_9, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__queue_65_0_10, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__queue_65_0_11, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__queue_65_0_12, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__queue_65_0_13, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_65_0_14, 89, -1, -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__queue_65_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator(void) {
   /* deque<void*,allocator<void*> >::reverse_iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator));
   G__memfunc_setup("reverse_iterator",1733,G__queue_66_0_1, 105, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "u 'deque<void*,allocator<void*> >::reverse_iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_66_0_2, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "u 'deque<void*,allocator<void*> >::reverse_iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__queue_66_0_3, 89, -1, -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__queue_66_0_4, 89, -1, -1, 2, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_66_0_5, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_66_0_6, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_66_0_7, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_66_0_8, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__queue_66_0_9, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__queue_66_0_10, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__queue_66_0_11, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__queue_66_0_12, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_66_0_13, 89, -1, -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator", 1859, G__queue_66_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncqueuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR(void) {
   /* queue<void*,deque<void*,allocator<void*> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_queuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR));
   G__memfunc_setup("queue<void*,deque<void*,allocator<void*> > >",3988,G__queue_67_0_1, 105, G__get_linked_tagnum(&G__LN_queuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__queue_67_0_2, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__queue_67_0_3, 104, -1, G__defined_typename("queue<void*,deque<void*,allocator<void*> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__queue_67_0_4, 89, -1, G__defined_typename("queue<void*,deque<void*,allocator<void*> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__queue_67_0_5, 89, -1, G__defined_typename("queue<void*,deque<void*,allocator<void*> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push",448,G__queue_67_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop",335,G__queue_67_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("queue<void*,deque<void*,allocator<void*> > >", 3988, G__queue_67_0_8, (int) ('i'), 
G__get_linked_tagnum(&G__LN_queuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'queue<void*,deque<void*,allocator<void*> > >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~queue<void*,deque<void*,allocator<void*> > >", 4114, G__queue_67_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__queue_67_0_10, (int) ('u'), G__get_linked_tagnum(&G__LN_queuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'queue<void*,deque<void*,allocator<void*> > >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncallocatorlEcharmUgR(void) {
   /* allocator<char*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   G__memfunc_setup("allocator<char*>",1539,G__queue_68_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<char*>",1539,G__queue_68_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR), -1, 0, 1, 1, 1, 0, "u 'allocator<char*>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__queue_68_0_3, 67, -1, G__defined_typename("allocator<char*>::pointer"), 2, 1, 1, 1, 8, "C - 'allocator<char*>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__queue_68_0_4, 67, -1, G__defined_typename("allocator<char*>::const_pointer"), 2, 1, 1, 1, 8, "C - 'allocator<char*>::const_reference' 40 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__queue_68_0_5, 67, -1, -1, 2, 2, 1, 1, 0, 
"h - 'allocator<char*>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__queue_68_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'allocator<char*>::pointer' 2 - __p h - 'allocator<char*>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__queue_68_0_7, 104, -1, G__defined_typename("allocator<char*>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__queue_68_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'allocator<char*>::pointer' 2 - __p C - - 41 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__queue_68_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'allocator<char*>::pointer' 2 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<char*>", 1665, G__queue_68_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__queue_68_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR), -1, 1, 1, 1, 1, 0, "u 'allocator<char*>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEcharmUcOallocatorlEcharmUgRsPgR(void) {
   /* deque<char*,allocator<char*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR));
   G__memfunc_setup("deque<char*,allocator<char*> >",2725,G__queue_69_0_1, 105, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<char*,allocator<char*> >",2725,G__queue_69_0_2, 105, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'deque<char*,allocator<char*> >::size_type' 0 - n C - - 41 '(char*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<char*,allocator<char*> >",2725,G__queue_69_0_3, 105, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"C - - 42 - first C - - 42 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<char*,allocator<char*> >",2725,G__queue_69_0_4, 105, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' 'deque<char*,allocator<char*> >::const_iterator' 10 - first u 'deque<char*,allocator<char*> >::iterator' 'deque<char*,allocator<char*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<char*,allocator<char*> >",2725,G__queue_69_0_5, 105, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'deque<char*,allocator<char*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_69_0_6, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'deque<char*,allocator<char*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__queue_69_0_7, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__queue_69_0_8, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__queue_69_0_9, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__queue_69_0_10, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__queue_69_0_11, 104, -1, G__defined_typename("deque<char*,allocator<char*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__queue_69_0_12, 104, -1, G__defined_typename("deque<char*,allocator<char*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__queue_69_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'deque<char*,allocator<char*> >::size_type' 0 - sz C - - 0 '(char*)()' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__queue_69_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_69_0_15, 67, -1, -1, 1, 1, 1, 1, 0, "h - 'deque<char*,allocator<char*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__queue_69_0_16, 67, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__queue_69_0_17, 67, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_front",1096,G__queue_69_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__queue_69_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__queue_69_0_20, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - position C - - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__queue_69_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - position h - 'deque<char*,allocator<char*> >::size_type' 0 - n "
"C - - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_front",983,G__queue_69_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__queue_69_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__queue_69_0_24, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'deque<char*,allocator<char*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__queue_69_0_25, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__queue_69_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'deque<char*,allocator<char*> >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__queue_69_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~deque<char*,allocator<char*> >", 2851, G__queue_69_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator(void) {
   /* deque<char*,allocator<char*> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__queue_70_0_1, 105, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__queue_70_0_2, 105, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'deque<char*,allocator<char*> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_70_0_3, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "u 'deque<char*,allocator<char*> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__queue_70_0_4, 67, -1, -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__queue_70_0_5, 67, -1, -1, 2, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_70_0_6, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_70_0_7, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_70_0_8, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_70_0_9, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__queue_70_0_10, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__queue_70_0_11, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__queue_70_0_12, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__queue_70_0_13, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_70_0_14, 67, -1, -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__queue_70_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator(void) {
   /* deque<char*,allocator<char*> >::reverse_iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator));
   G__memfunc_setup("reverse_iterator",1733,G__queue_71_0_1, 105, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "u 'deque<char*,allocator<char*> >::reverse_iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_71_0_2, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "u 'deque<char*,allocator<char*> >::reverse_iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__queue_71_0_3, 67, -1, -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__queue_71_0_4, 67, -1, -1, 2, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_71_0_5, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_71_0_6, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_71_0_7, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_71_0_8, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__queue_71_0_9, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__queue_71_0_10, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__queue_71_0_11, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__queue_71_0_12, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_71_0_13, 67, -1, -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator", 1859, G__queue_71_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncqueuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR(void) {
   /* queue<char*,deque<char*,allocator<char*> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_queuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR));
   G__memfunc_setup("queue<char*,deque<char*,allocator<char*> > >",3928,G__queue_72_0_1, 105, G__get_linked_tagnum(&G__LN_queuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__queue_72_0_2, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__queue_72_0_3, 104, -1, G__defined_typename("queue<char*,deque<char*,allocator<char*> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__queue_72_0_4, 67, -1, G__defined_typename("queue<char*,deque<char*,allocator<char*> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__queue_72_0_5, 67, -1, G__defined_typename("queue<char*,deque<char*,allocator<char*> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push",448,G__queue_72_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop",335,G__queue_72_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("queue<char*,deque<char*,allocator<char*> > >", 3928, G__queue_72_0_8, (int) ('i'), 
G__get_linked_tagnum(&G__LN_queuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'queue<char*,deque<char*,allocator<char*> > >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~queue<char*,deque<char*,allocator<char*> > >", 4054, G__queue_72_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__queue_72_0_10, (int) ('u'), G__get_linked_tagnum(&G__LN_queuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'queue<char*,deque<char*,allocator<char*> > >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncallocatorlEstringgR(void) {
   /* allocator<string> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlEstringgR));
   G__memfunc_setup("allocator<string>",1746,G__queue_73_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlEstringgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<string>",1746,G__queue_73_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlEstringgR), -1, 0, 1, 1, 1, 0, "u 'allocator<string>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__queue_73_0_3, 85, G__get_linked_tagnum(&G__LN_string), G__defined_typename("allocator<string>::pointer"), 0, 1, 1, 1, 8, "u 'string' 'allocator<string>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__queue_73_0_4, 85, G__get_linked_tagnum(&G__LN_string), G__defined_typename("allocator<string>::const_pointer"), 0, 1, 1, 1, 8, "u 'string' 'allocator<string>::const_reference' 10 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__queue_73_0_5, 85, G__get_linked_tagnum(&G__LN_string), -1, 0, 2, 1, 1, 0, 
"h - 'allocator<string>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__queue_73_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'string' 'allocator<string>::pointer' 0 - __p h - 'allocator<string>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__queue_73_0_7, 104, -1, G__defined_typename("allocator<string>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__queue_73_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'string' 'allocator<string>::pointer' 0 - __p u 'string' - 11 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__queue_73_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'string' 'allocator<string>::pointer' 0 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<string>", 1872, G__queue_73_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__queue_73_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlEstringgR), -1, 1, 1, 1, 1, 0, "u 'allocator<string>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEstringcOallocatorlEstringgRsPgR(void) {
   /* deque<string,allocator<string> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR));
   G__memfunc_setup("deque<string,allocator<string> >",3139,G__queue_74_0_1, 105, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<string,allocator<string> >",3139,G__queue_74_0_2, 105, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'deque<string,allocator<string> >::size_type' 0 - n u 'string' - 11 'string()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<string,allocator<string> >",3139,G__queue_74_0_3, 105, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR), -1, 0, 2, 1, 1, 0, 
"U 'string' - 10 - first U 'string' - 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<string,allocator<string> >",3139,G__queue_74_0_4, 105, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' 'deque<string,allocator<string> >::const_iterator' 10 - first u 'deque<string,allocator<string> >::iterator' 'deque<string,allocator<string> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deque<string,allocator<string> >",3139,G__queue_74_0_5, 105, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR), -1, 0, 1, 1, 1, 0, "u 'deque<string,allocator<string> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_74_0_6, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR), -1, 1, 1, 1, 1, 0, "u 'deque<string,allocator<string> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__queue_74_0_7, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__queue_74_0_8, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__queue_74_0_9, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__queue_74_0_10, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__queue_74_0_11, 104, -1, G__defined_typename("deque<string,allocator<string> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__queue_74_0_12, 104, -1, G__defined_typename("deque<string,allocator<string> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__queue_74_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'deque<string,allocator<string> >::size_type' 0 - sz u 'string' - 0 'string()' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__queue_74_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_74_0_15, 117, G__get_linked_tagnum(&G__LN_string), -1, 1, 1, 1, 1, 0, "h - 'deque<string,allocator<string> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__queue_74_0_16, 117, G__get_linked_tagnum(&G__LN_string), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__queue_74_0_17, 117, G__get_linked_tagnum(&G__LN_string), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_front",1096,G__queue_74_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__queue_74_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__queue_74_0_20, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - position u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__queue_74_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - position h - 'deque<string,allocator<string> >::size_type' 0 - n "
"u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_front",983,G__queue_74_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__queue_74_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__queue_74_0_24, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'deque<string,allocator<string> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__queue_74_0_25, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__queue_74_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'deque<string,allocator<string> >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__queue_74_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~deque<string,allocator<string> >", 3265, G__queue_74_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEstringcOallocatorlEstringgRsPgRcLcLiterator(void) {
   /* deque<string,allocator<string> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__queue_75_0_1, 105, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__queue_75_0_2, 105, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'deque<string,allocator<string> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_75_0_3, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "u 'deque<string,allocator<string> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__queue_75_0_4, 117, G__get_linked_tagnum(&G__LN_string), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__queue_75_0_5, 85, G__get_linked_tagnum(&G__LN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_75_0_6, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_75_0_7, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_75_0_8, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_75_0_9, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__queue_75_0_10, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__queue_75_0_11, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__queue_75_0_12, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__queue_75_0_13, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_75_0_14, 117, G__get_linked_tagnum(&G__LN_string), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__queue_75_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator(void) {
   /* deque<string,allocator<string> >::reverse_iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator));
   G__memfunc_setup("reverse_iterator",1733,G__queue_76_0_1, 105, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "u 'deque<string,allocator<string> >::reverse_iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__queue_76_0_2, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "u 'deque<string,allocator<string> >::reverse_iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__queue_76_0_3, 117, G__get_linked_tagnum(&G__LN_string), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__queue_76_0_4, 85, G__get_linked_tagnum(&G__LN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_76_0_5, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__queue_76_0_6, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_76_0_7, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__queue_76_0_8, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__queue_76_0_9, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__queue_76_0_10, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__queue_76_0_11, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__queue_76_0_12, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__queue_76_0_13, 117, G__get_linked_tagnum(&G__LN_string), -1, 1, 1, 1, 1, 0, "l - - 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator", 1859, G__queue_76_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncqueuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR(void) {
   /* queue<string,deque<string,allocator<string> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_queuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR));
   G__memfunc_setup("queue<string,deque<string,allocator<string> > >",4549,G__queue_77_0_1, 105, G__get_linked_tagnum(&G__LN_queuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__queue_77_0_2, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__queue_77_0_3, 104, -1, G__defined_typename("queue<string,deque<string,allocator<string> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__queue_77_0_4, 117, G__get_linked_tagnum(&G__LN_string), G__defined_typename("queue<string,deque<string,allocator<string> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__queue_77_0_5, 117, G__get_linked_tagnum(&G__LN_string), G__defined_typename("queue<string,deque<string,allocator<string> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push",448,G__queue_77_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop",335,G__queue_77_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("queue<string,deque<string,allocator<string> > >", 4549, G__queue_77_0_8, (int) ('i'), 
G__get_linked_tagnum(&G__LN_queuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'queue<string,deque<string,allocator<string> > >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~queue<string,deque<string,allocator<string> > >", 4675, G__queue_77_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__queue_77_0_10, (int) ('u'), G__get_linked_tagnum(&G__LN_queuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'queue<string,deque<string,allocator<string> > >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunc() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__GNUC__=3",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__GNUC_MINOR__=4",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"G__QUEUE_DLL=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"INCLUDE_CINTDICTVERSION=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"G__CINTDICTVERSION=20090608",1,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_global() {
  G__cpp_setup_global0();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
   G__memfunc_setup("operator==", 998, G__queue__0_112, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<int,allocator<int> >::iterator' - 11 - x u 'deque<int,allocator<int> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_113, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<int,allocator<int> >::iterator' - 11 - x u 'deque<int,allocator<int> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_114, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<int,allocator<int> >::reverse_iterator' - 11 - x u 'deque<int,allocator<int> >::reverse_iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_115, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<int,allocator<int> >::reverse_iterator' - 11 - x u 'deque<int,allocator<int> >::reverse_iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_116, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >' - 11 - x u 'deque<int,allocator<int> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__queue__0_117, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >' - 11 - x u 'deque<int,allocator<int> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_118, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >' - 11 - x u 'deque<int,allocator<int> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__queue__0_119, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >' - 11 - x u 'deque<int,allocator<int> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__queue__0_120, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >' - 11 - x u 'deque<int,allocator<int> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__queue__0_121, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >' - 11 - x u 'deque<int,allocator<int> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__queue__0_122, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last "
"i - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__queue__0_123, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first1 u 'deque<int,allocator<int> >::iterator' - 0 - last1 "
"u 'deque<int,allocator<int> >::iterator' - 0 - first2 u 'deque<int,allocator<int> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__queue__0_124, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first1 u 'deque<int,allocator<int> >::iterator' - 0 - last1 "
"u 'deque<int,allocator<int> >::iterator' - 0 - first2 u 'deque<int,allocator<int> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__queue__0_125, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__queue__0_126, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last "
"i - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__queue__0_127, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first1 u 'deque<int,allocator<int> >::iterator' - 0 - last1 "
"u 'deque<int,allocator<int> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__queue__0_128, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first1 u 'deque<int,allocator<int> >::iterator' - 0 - last1 "
"u 'deque<int,allocator<int> >::iterator' - 0 - first2 u 'deque<int,allocator<int> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search_n", 835, G__queue__0_129, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last "
"h - 'size_type' 0 - count i - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__queue__0_130, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last "
"u 'deque<int,allocator<int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__queue__0_131, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last "
"u 'deque<int,allocator<int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap", 443, G__queue__0_132, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 1 - a i - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__queue__0_133, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first1 u 'deque<int,allocator<int> >::iterator' - 0 - last1 "
"u 'deque<int,allocator<int> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__queue__0_134, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - a u 'deque<int,allocator<int> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace", 732, G__queue__0_135, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last "
"i - - 11 - old_value i - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__queue__0_136, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last "
"u 'deque<int,allocator<int> >::iterator' - 0 - result i - - 11 - old_value "
"i - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__queue__0_137, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last "
"i - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__queue__0_138, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first h - 'size_type' 0 - n "
"i - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__queue__0_139, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last "
"i - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__queue__0_140, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last "
"u 'deque<int,allocator<int> >::iterator' - 0 - result i - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__queue__0_141, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__queue__0_142, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last "
"u 'deque<int,allocator<int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__queue__0_143, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__queue__0_144, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last "
"u 'deque<int,allocator<int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__queue__0_145, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - mid "
"u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__queue__0_146, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - mid "
"u 'deque<int,allocator<int> >::iterator' - 0 - last u 'deque<int,allocator<int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__queue__0_147, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__queue__0_148, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__queue__0_149, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__queue__0_150, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - mid "
"u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__queue__0_151, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last "
"u 'deque<int,allocator<int> >::iterator' - 0 - result_first u 'deque<int,allocator<int> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__queue__0_152, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - nth "
"u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__queue__0_153, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last "
"i - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__queue__0_154, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last "
"i - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__queue__0_155, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last "
"i - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__queue__0_156, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first1 u 'deque<int,allocator<int> >::iterator' - 0 - last1 "
"u 'deque<int,allocator<int> >::iterator' - 0 - first2 u 'deque<int,allocator<int> >::iterator' - 0 - last2 "
"u 'deque<int,allocator<int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__queue__0_157, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - middle "
"u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__queue__0_158, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first1 u 'deque<int,allocator<int> >::iterator' - 0 - last1 "
"u 'deque<int,allocator<int> >::iterator' - 0 - first2 u 'deque<int,allocator<int> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__queue__0_159, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first1 u 'deque<int,allocator<int> >::iterator' - 0 - last1 "
"u 'deque<int,allocator<int> >::iterator' - 0 - first2 u 'deque<int,allocator<int> >::iterator' - 0 - last2 "
"u 'deque<int,allocator<int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__queue__0_160, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first1 u 'deque<int,allocator<int> >::iterator' - 0 - last1 "
"u 'deque<int,allocator<int> >::iterator' - 0 - first2 u 'deque<int,allocator<int> >::iterator' - 0 - last2 "
"u 'deque<int,allocator<int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__queue__0_161, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first1 u 'deque<int,allocator<int> >::iterator' - 0 - last1 "
"u 'deque<int,allocator<int> >::iterator' - 0 - first2 u 'deque<int,allocator<int> >::iterator' - 0 - last2 "
"u 'deque<int,allocator<int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__queue__0_162, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first1 u 'deque<int,allocator<int> >::iterator' - 0 - last1 "
"u 'deque<int,allocator<int> >::iterator' - 0 - first2 u 'deque<int,allocator<int> >::iterator' - 0 - last2 "
"u 'deque<int,allocator<int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("push_heap", 957, G__queue__0_163, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__queue__0_164, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__queue__0_165, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__queue__0_166, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__queue__0_167, 105, -1, -1, 1, 2, 1, 1, 1, 
"i - - 11 - a i - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__queue__0_168, 105, -1, -1, 1, 2, 1, 1, 1, 
"i - - 11 - a i - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min_element", 1165, G__queue__0_169, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max_element", 1167, G__queue__0_170, 117, G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__queue__0_171, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first1 u 'deque<int,allocator<int> >::iterator' - 0 - last1 "
"u 'deque<int,allocator<int> >::iterator' - 0 - first2 u 'deque<int,allocator<int> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__queue__0_172, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__queue__0_173, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<int,allocator<int> >::iterator' - 0 - first u 'deque<int,allocator<int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_174, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<int,deque<int,allocator<int> > >' - 11 - x u 'queue<int,deque<int,allocator<int> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__queue__0_175, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<int,deque<int,allocator<int> > >' - 11 - x u 'queue<int,deque<int,allocator<int> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_176, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<int,deque<int,allocator<int> > >' - 11 - x u 'queue<int,deque<int,allocator<int> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__queue__0_177, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<int,deque<int,allocator<int> > >' - 11 - x u 'queue<int,deque<int,allocator<int> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__queue__0_178, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<int,deque<int,allocator<int> > >' - 11 - x u 'queue<int,deque<int,allocator<int> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__queue__0_179, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<int,deque<int,allocator<int> > >' - 11 - x u 'queue<int,deque<int,allocator<int> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_180, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<long,allocator<long> >::iterator' - 11 - x u 'deque<long,allocator<long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_181, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<long,allocator<long> >::iterator' - 11 - x u 'deque<long,allocator<long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_182, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<long,allocator<long> >::reverse_iterator' - 11 - x u 'deque<long,allocator<long> >::reverse_iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_183, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<long,allocator<long> >::reverse_iterator' - 11 - x u 'deque<long,allocator<long> >::reverse_iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_184, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >' - 11 - x u 'deque<long,allocator<long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__queue__0_185, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >' - 11 - x u 'deque<long,allocator<long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_186, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >' - 11 - x u 'deque<long,allocator<long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__queue__0_187, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >' - 11 - x u 'deque<long,allocator<long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__queue__0_188, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >' - 11 - x u 'deque<long,allocator<long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__queue__0_189, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >' - 11 - x u 'deque<long,allocator<long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__queue__0_190, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last "
"l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__queue__0_191, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first1 u 'deque<long,allocator<long> >::iterator' - 0 - last1 "
"u 'deque<long,allocator<long> >::iterator' - 0 - first2 u 'deque<long,allocator<long> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__queue__0_192, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first1 u 'deque<long,allocator<long> >::iterator' - 0 - last1 "
"u 'deque<long,allocator<long> >::iterator' - 0 - first2 u 'deque<long,allocator<long> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__queue__0_193, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__queue__0_194, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last "
"l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__queue__0_195, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first1 u 'deque<long,allocator<long> >::iterator' - 0 - last1 "
"u 'deque<long,allocator<long> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__queue__0_196, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first1 u 'deque<long,allocator<long> >::iterator' - 0 - last1 "
"u 'deque<long,allocator<long> >::iterator' - 0 - first2 u 'deque<long,allocator<long> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search_n", 835, G__queue__0_197, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last "
"h - 'size_type' 0 - count l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__queue__0_198, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last "
"u 'deque<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__queue__0_199, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last "
"u 'deque<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap", 443, G__queue__0_200, 121, -1, -1, 0, 2, 1, 1, 0, 
"l - - 1 - a l - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__queue__0_201, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first1 u 'deque<long,allocator<long> >::iterator' - 0 - last1 "
"u 'deque<long,allocator<long> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__queue__0_202, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - a u 'deque<long,allocator<long> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func2() {
   G__memfunc_setup("replace", 732, G__queue__0_203, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last "
"l - - 11 - old_value l - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__queue__0_204, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last "
"u 'deque<long,allocator<long> >::iterator' - 0 - result l - - 11 - old_value "
"l - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__queue__0_205, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last "
"l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__queue__0_206, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first h - 'size_type' 0 - n "
"l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__queue__0_207, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last "
"l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__queue__0_208, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last "
"u 'deque<long,allocator<long> >::iterator' - 0 - result l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__queue__0_209, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__queue__0_210, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last "
"u 'deque<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__queue__0_211, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__queue__0_212, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last "
"u 'deque<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__queue__0_213, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - mid "
"u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__queue__0_214, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - mid "
"u 'deque<long,allocator<long> >::iterator' - 0 - last u 'deque<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__queue__0_215, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__queue__0_216, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__queue__0_217, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__queue__0_218, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - mid "
"u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__queue__0_219, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last "
"u 'deque<long,allocator<long> >::iterator' - 0 - result_first u 'deque<long,allocator<long> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__queue__0_220, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - nth "
"u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__queue__0_221, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last "
"l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__queue__0_222, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last "
"l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__queue__0_223, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last "
"l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__queue__0_224, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first1 u 'deque<long,allocator<long> >::iterator' - 0 - last1 "
"u 'deque<long,allocator<long> >::iterator' - 0 - first2 u 'deque<long,allocator<long> >::iterator' - 0 - last2 "
"u 'deque<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__queue__0_225, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - middle "
"u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__queue__0_226, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first1 u 'deque<long,allocator<long> >::iterator' - 0 - last1 "
"u 'deque<long,allocator<long> >::iterator' - 0 - first2 u 'deque<long,allocator<long> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__queue__0_227, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first1 u 'deque<long,allocator<long> >::iterator' - 0 - last1 "
"u 'deque<long,allocator<long> >::iterator' - 0 - first2 u 'deque<long,allocator<long> >::iterator' - 0 - last2 "
"u 'deque<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__queue__0_228, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first1 u 'deque<long,allocator<long> >::iterator' - 0 - last1 "
"u 'deque<long,allocator<long> >::iterator' - 0 - first2 u 'deque<long,allocator<long> >::iterator' - 0 - last2 "
"u 'deque<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__queue__0_229, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first1 u 'deque<long,allocator<long> >::iterator' - 0 - last1 "
"u 'deque<long,allocator<long> >::iterator' - 0 - first2 u 'deque<long,allocator<long> >::iterator' - 0 - last2 "
"u 'deque<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__queue__0_230, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first1 u 'deque<long,allocator<long> >::iterator' - 0 - last1 "
"u 'deque<long,allocator<long> >::iterator' - 0 - first2 u 'deque<long,allocator<long> >::iterator' - 0 - last2 "
"u 'deque<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("push_heap", 957, G__queue__0_231, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__queue__0_232, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__queue__0_233, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__queue__0_234, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__queue__0_235, 108, -1, -1, 1, 2, 1, 1, 1, 
"l - - 11 - a l - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__queue__0_236, 108, -1, -1, 1, 2, 1, 1, 1, 
"l - - 11 - a l - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min_element", 1165, G__queue__0_237, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max_element", 1167, G__queue__0_238, 117, G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__queue__0_239, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first1 u 'deque<long,allocator<long> >::iterator' - 0 - last1 "
"u 'deque<long,allocator<long> >::iterator' - 0 - first2 u 'deque<long,allocator<long> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__queue__0_240, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__queue__0_241, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<long,allocator<long> >::iterator' - 0 - first u 'deque<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_242, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<long,deque<long,allocator<long> > >' - 11 - x u 'queue<long,deque<long,allocator<long> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__queue__0_243, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<long,deque<long,allocator<long> > >' - 11 - x u 'queue<long,deque<long,allocator<long> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_244, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<long,deque<long,allocator<long> > >' - 11 - x u 'queue<long,deque<long,allocator<long> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__queue__0_245, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<long,deque<long,allocator<long> > >' - 11 - x u 'queue<long,deque<long,allocator<long> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__queue__0_246, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<long,deque<long,allocator<long> > >' - 11 - x u 'queue<long,deque<long,allocator<long> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__queue__0_247, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<long,deque<long,allocator<long> > >' - 11 - x u 'queue<long,deque<long,allocator<long> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_248, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<double,allocator<double> >::iterator' - 11 - x u 'deque<double,allocator<double> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_249, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<double,allocator<double> >::iterator' - 11 - x u 'deque<double,allocator<double> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_250, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<double,allocator<double> >::reverse_iterator' - 11 - x u 'deque<double,allocator<double> >::reverse_iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_251, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<double,allocator<double> >::reverse_iterator' - 11 - x u 'deque<double,allocator<double> >::reverse_iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_252, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >' - 11 - x u 'deque<double,allocator<double> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__queue__0_253, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >' - 11 - x u 'deque<double,allocator<double> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_254, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >' - 11 - x u 'deque<double,allocator<double> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__queue__0_255, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >' - 11 - x u 'deque<double,allocator<double> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__queue__0_256, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >' - 11 - x u 'deque<double,allocator<double> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__queue__0_257, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >' - 11 - x u 'deque<double,allocator<double> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__queue__0_258, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last "
"d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__queue__0_259, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first1 u 'deque<double,allocator<double> >::iterator' - 0 - last1 "
"u 'deque<double,allocator<double> >::iterator' - 0 - first2 u 'deque<double,allocator<double> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__queue__0_260, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first1 u 'deque<double,allocator<double> >::iterator' - 0 - last1 "
"u 'deque<double,allocator<double> >::iterator' - 0 - first2 u 'deque<double,allocator<double> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__queue__0_261, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__queue__0_262, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last "
"d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__queue__0_263, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first1 u 'deque<double,allocator<double> >::iterator' - 0 - last1 "
"u 'deque<double,allocator<double> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__queue__0_264, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first1 u 'deque<double,allocator<double> >::iterator' - 0 - last1 "
"u 'deque<double,allocator<double> >::iterator' - 0 - first2 u 'deque<double,allocator<double> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search_n", 835, G__queue__0_265, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last "
"h - 'size_type' 0 - count d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__queue__0_266, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last "
"u 'deque<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__queue__0_267, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last "
"u 'deque<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap", 443, G__queue__0_268, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 1 - a d - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__queue__0_269, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first1 u 'deque<double,allocator<double> >::iterator' - 0 - last1 "
"u 'deque<double,allocator<double> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__queue__0_270, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - a u 'deque<double,allocator<double> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace", 732, G__queue__0_271, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last "
"d - - 11 - old_value d - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__queue__0_272, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last "
"u 'deque<double,allocator<double> >::iterator' - 0 - result d - - 11 - old_value "
"d - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__queue__0_273, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last "
"d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__queue__0_274, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first h - 'size_type' 0 - n "
"d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__queue__0_275, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last "
"d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__queue__0_276, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last "
"u 'deque<double,allocator<double> >::iterator' - 0 - result d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__queue__0_277, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__queue__0_278, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last "
"u 'deque<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__queue__0_279, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__queue__0_280, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last "
"u 'deque<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__queue__0_281, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - mid "
"u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__queue__0_282, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - mid "
"u 'deque<double,allocator<double> >::iterator' - 0 - last u 'deque<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__queue__0_283, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__queue__0_284, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__queue__0_285, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__queue__0_286, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - mid "
"u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__queue__0_287, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last "
"u 'deque<double,allocator<double> >::iterator' - 0 - result_first u 'deque<double,allocator<double> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__queue__0_288, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - nth "
"u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__queue__0_289, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last "
"d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__queue__0_290, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last "
"d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__queue__0_291, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last "
"d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__queue__0_292, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first1 u 'deque<double,allocator<double> >::iterator' - 0 - last1 "
"u 'deque<double,allocator<double> >::iterator' - 0 - first2 u 'deque<double,allocator<double> >::iterator' - 0 - last2 "
"u 'deque<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__queue__0_293, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - middle "
"u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__queue__0_294, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first1 u 'deque<double,allocator<double> >::iterator' - 0 - last1 "
"u 'deque<double,allocator<double> >::iterator' - 0 - first2 u 'deque<double,allocator<double> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__queue__0_295, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first1 u 'deque<double,allocator<double> >::iterator' - 0 - last1 "
"u 'deque<double,allocator<double> >::iterator' - 0 - first2 u 'deque<double,allocator<double> >::iterator' - 0 - last2 "
"u 'deque<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__queue__0_296, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first1 u 'deque<double,allocator<double> >::iterator' - 0 - last1 "
"u 'deque<double,allocator<double> >::iterator' - 0 - first2 u 'deque<double,allocator<double> >::iterator' - 0 - last2 "
"u 'deque<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__queue__0_297, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first1 u 'deque<double,allocator<double> >::iterator' - 0 - last1 "
"u 'deque<double,allocator<double> >::iterator' - 0 - first2 u 'deque<double,allocator<double> >::iterator' - 0 - last2 "
"u 'deque<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__queue__0_298, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first1 u 'deque<double,allocator<double> >::iterator' - 0 - last1 "
"u 'deque<double,allocator<double> >::iterator' - 0 - first2 u 'deque<double,allocator<double> >::iterator' - 0 - last2 "
"u 'deque<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("push_heap", 957, G__queue__0_299, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__queue__0_300, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__queue__0_301, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__queue__0_302, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__queue__0_303, 100, -1, -1, 1, 2, 1, 1, 1, 
"d - - 11 - a d - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__queue__0_304, 100, -1, -1, 1, 2, 1, 1, 1, 
"d - - 11 - a d - - 11 - b", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func3() {
   G__memfunc_setup("min_element", 1165, G__queue__0_305, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max_element", 1167, G__queue__0_306, 117, G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__queue__0_307, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first1 u 'deque<double,allocator<double> >::iterator' - 0 - last1 "
"u 'deque<double,allocator<double> >::iterator' - 0 - first2 u 'deque<double,allocator<double> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__queue__0_308, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__queue__0_309, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<double,allocator<double> >::iterator' - 0 - first u 'deque<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_310, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<double,deque<double,allocator<double> > >' - 11 - x u 'queue<double,deque<double,allocator<double> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__queue__0_311, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<double,deque<double,allocator<double> > >' - 11 - x u 'queue<double,deque<double,allocator<double> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_312, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<double,deque<double,allocator<double> > >' - 11 - x u 'queue<double,deque<double,allocator<double> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__queue__0_313, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<double,deque<double,allocator<double> > >' - 11 - x u 'queue<double,deque<double,allocator<double> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__queue__0_314, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<double,deque<double,allocator<double> > >' - 11 - x u 'queue<double,deque<double,allocator<double> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__queue__0_315, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<double,deque<double,allocator<double> > >' - 11 - x u 'queue<double,deque<double,allocator<double> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_316, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<void*,allocator<void*> >::iterator' - 11 - x u 'deque<void*,allocator<void*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_317, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<void*,allocator<void*> >::iterator' - 11 - x u 'deque<void*,allocator<void*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_318, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<void*,allocator<void*> >::reverse_iterator' - 11 - x u 'deque<void*,allocator<void*> >::reverse_iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_319, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<void*,allocator<void*> >::reverse_iterator' - 11 - x u 'deque<void*,allocator<void*> >::reverse_iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_320, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >' - 11 - x u 'deque<void*,allocator<void*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__queue__0_321, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >' - 11 - x u 'deque<void*,allocator<void*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_322, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >' - 11 - x u 'deque<void*,allocator<void*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__queue__0_323, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >' - 11 - x u 'deque<void*,allocator<void*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__queue__0_324, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >' - 11 - x u 'deque<void*,allocator<void*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__queue__0_325, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >' - 11 - x u 'deque<void*,allocator<void*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__queue__0_326, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last "
"Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__queue__0_327, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first1 u 'deque<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first2 u 'deque<void*,allocator<void*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__queue__0_328, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first1 u 'deque<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first2 u 'deque<void*,allocator<void*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__queue__0_329, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__queue__0_330, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last "
"Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__queue__0_331, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first1 u 'deque<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__queue__0_332, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first1 u 'deque<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first2 u 'deque<void*,allocator<void*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search_n", 835, G__queue__0_333, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last "
"h - 'size_type' 0 - count Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__queue__0_334, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__queue__0_335, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap", 443, G__queue__0_336, 121, -1, -1, 0, 2, 1, 1, 0, 
"Y - - 1 - a Y - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__queue__0_337, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first1 u 'deque<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__queue__0_338, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - a u 'deque<void*,allocator<void*> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace", 732, G__queue__0_339, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last "
"Y - - 41 - old_value Y - - 41 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__queue__0_340, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - result Y - - 41 - old_value "
"Y - - 41 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__queue__0_341, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last "
"Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__queue__0_342, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first h - 'size_type' 0 - n "
"Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__queue__0_343, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last "
"Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__queue__0_344, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - result Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__queue__0_345, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__queue__0_346, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__queue__0_347, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__queue__0_348, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__queue__0_349, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - mid "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__queue__0_350, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - mid "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - last u 'deque<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__queue__0_351, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__queue__0_352, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__queue__0_353, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__queue__0_354, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - mid "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__queue__0_355, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - result_first u 'deque<void*,allocator<void*> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__queue__0_356, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - nth "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__queue__0_357, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last "
"Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__queue__0_358, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last "
"Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__queue__0_359, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last "
"Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__queue__0_360, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first1 u 'deque<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first2 u 'deque<void*,allocator<void*> >::iterator' - 0 - last2 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__queue__0_361, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - middle "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__queue__0_362, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first1 u 'deque<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first2 u 'deque<void*,allocator<void*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__queue__0_363, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first1 u 'deque<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first2 u 'deque<void*,allocator<void*> >::iterator' - 0 - last2 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__queue__0_364, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first1 u 'deque<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first2 u 'deque<void*,allocator<void*> >::iterator' - 0 - last2 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__queue__0_365, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first1 u 'deque<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first2 u 'deque<void*,allocator<void*> >::iterator' - 0 - last2 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__queue__0_366, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first1 u 'deque<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first2 u 'deque<void*,allocator<void*> >::iterator' - 0 - last2 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("push_heap", 957, G__queue__0_367, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__queue__0_368, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__queue__0_369, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__queue__0_370, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__queue__0_371, 89, -1, -1, 1, 2, 1, 1, 4, 
"Y - - 41 - a Y - - 41 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__queue__0_372, 89, -1, -1, 1, 2, 1, 1, 4, 
"Y - - 41 - a Y - - 41 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min_element", 1165, G__queue__0_373, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max_element", 1167, G__queue__0_374, 117, G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__queue__0_375, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first1 u 'deque<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first2 u 'deque<void*,allocator<void*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__queue__0_376, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__queue__0_377, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<void*,allocator<void*> >::iterator' - 0 - first u 'deque<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_378, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<void*,deque<void*,allocator<void*> > >' - 11 - x u 'queue<void*,deque<void*,allocator<void*> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__queue__0_379, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<void*,deque<void*,allocator<void*> > >' - 11 - x u 'queue<void*,deque<void*,allocator<void*> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_380, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<void*,deque<void*,allocator<void*> > >' - 11 - x u 'queue<void*,deque<void*,allocator<void*> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__queue__0_381, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<void*,deque<void*,allocator<void*> > >' - 11 - x u 'queue<void*,deque<void*,allocator<void*> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__queue__0_382, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<void*,deque<void*,allocator<void*> > >' - 11 - x u 'queue<void*,deque<void*,allocator<void*> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__queue__0_383, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<void*,deque<void*,allocator<void*> > >' - 11 - x u 'queue<void*,deque<void*,allocator<void*> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_384, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<char*,allocator<char*> >::iterator' - 11 - x u 'deque<char*,allocator<char*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_385, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<char*,allocator<char*> >::iterator' - 11 - x u 'deque<char*,allocator<char*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_386, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<char*,allocator<char*> >::reverse_iterator' - 11 - x u 'deque<char*,allocator<char*> >::reverse_iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_387, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<char*,allocator<char*> >::reverse_iterator' - 11 - x u 'deque<char*,allocator<char*> >::reverse_iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_388, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >' - 11 - x u 'deque<char*,allocator<char*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__queue__0_389, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >' - 11 - x u 'deque<char*,allocator<char*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_390, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >' - 11 - x u 'deque<char*,allocator<char*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__queue__0_391, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >' - 11 - x u 'deque<char*,allocator<char*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__queue__0_392, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >' - 11 - x u 'deque<char*,allocator<char*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__queue__0_393, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >' - 11 - x u 'deque<char*,allocator<char*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__queue__0_394, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last "
"C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__queue__0_395, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first1 u 'deque<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first2 u 'deque<char*,allocator<char*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__queue__0_396, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first1 u 'deque<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first2 u 'deque<char*,allocator<char*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__queue__0_397, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__queue__0_398, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last "
"C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__queue__0_399, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first1 u 'deque<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__queue__0_400, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first1 u 'deque<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first2 u 'deque<char*,allocator<char*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search_n", 835, G__queue__0_401, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last "
"h - 'size_type' 0 - count C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__queue__0_402, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__queue__0_403, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap", 443, G__queue__0_404, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 1 - a C - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__queue__0_405, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first1 u 'deque<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__queue__0_406, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - a u 'deque<char*,allocator<char*> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func4() {
   G__memfunc_setup("replace", 732, G__queue__0_407, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last "
"C - - 41 - old_value C - - 41 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__queue__0_408, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - result C - - 41 - old_value "
"C - - 41 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__queue__0_409, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last "
"C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__queue__0_410, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first h - 'size_type' 0 - n "
"C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__queue__0_411, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last "
"C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__queue__0_412, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - result C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__queue__0_413, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__queue__0_414, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__queue__0_415, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__queue__0_416, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__queue__0_417, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - mid "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__queue__0_418, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - mid "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - last u 'deque<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__queue__0_419, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__queue__0_420, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__queue__0_421, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__queue__0_422, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - mid "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__queue__0_423, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - result_first u 'deque<char*,allocator<char*> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__queue__0_424, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - nth "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__queue__0_425, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last "
"C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__queue__0_426, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last "
"C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__queue__0_427, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last "
"C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__queue__0_428, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first1 u 'deque<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first2 u 'deque<char*,allocator<char*> >::iterator' - 0 - last2 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__queue__0_429, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - middle "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__queue__0_430, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first1 u 'deque<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first2 u 'deque<char*,allocator<char*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__queue__0_431, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first1 u 'deque<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first2 u 'deque<char*,allocator<char*> >::iterator' - 0 - last2 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__queue__0_432, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first1 u 'deque<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first2 u 'deque<char*,allocator<char*> >::iterator' - 0 - last2 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__queue__0_433, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first1 u 'deque<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first2 u 'deque<char*,allocator<char*> >::iterator' - 0 - last2 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__queue__0_434, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first1 u 'deque<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first2 u 'deque<char*,allocator<char*> >::iterator' - 0 - last2 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("push_heap", 957, G__queue__0_435, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__queue__0_436, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__queue__0_437, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__queue__0_438, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__queue__0_439, 67, -1, -1, 1, 2, 1, 1, 4, 
"C - - 41 - a C - - 41 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__queue__0_440, 67, -1, -1, 1, 2, 1, 1, 4, 
"C - - 41 - a C - - 41 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min_element", 1165, G__queue__0_441, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max_element", 1167, G__queue__0_442, 117, G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__queue__0_443, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first1 u 'deque<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first2 u 'deque<char*,allocator<char*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__queue__0_444, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__queue__0_445, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<char*,allocator<char*> >::iterator' - 0 - first u 'deque<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_446, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<char*,deque<char*,allocator<char*> > >' - 11 - x u 'queue<char*,deque<char*,allocator<char*> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__queue__0_447, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<char*,deque<char*,allocator<char*> > >' - 11 - x u 'queue<char*,deque<char*,allocator<char*> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_448, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<char*,deque<char*,allocator<char*> > >' - 11 - x u 'queue<char*,deque<char*,allocator<char*> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__queue__0_449, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<char*,deque<char*,allocator<char*> > >' - 11 - x u 'queue<char*,deque<char*,allocator<char*> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__queue__0_450, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<char*,deque<char*,allocator<char*> > >' - 11 - x u 'queue<char*,deque<char*,allocator<char*> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__queue__0_451, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<char*,deque<char*,allocator<char*> > >' - 11 - x u 'queue<char*,deque<char*,allocator<char*> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_452, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<string,allocator<string> >::iterator' - 11 - x u 'deque<string,allocator<string> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_453, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<string,allocator<string> >::iterator' - 11 - x u 'deque<string,allocator<string> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_454, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<string,allocator<string> >::reverse_iterator' - 11 - x u 'deque<string,allocator<string> >::reverse_iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_455, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'deque<string,allocator<string> >::reverse_iterator' - 11 - x u 'deque<string,allocator<string> >::reverse_iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_456, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >' - 11 - x u 'deque<string,allocator<string> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__queue__0_457, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >' - 11 - x u 'deque<string,allocator<string> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_458, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >' - 11 - x u 'deque<string,allocator<string> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__queue__0_459, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >' - 11 - x u 'deque<string,allocator<string> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__queue__0_460, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >' - 11 - x u 'deque<string,allocator<string> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__queue__0_461, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >' - 11 - x u 'deque<string,allocator<string> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__queue__0_462, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last "
"u 'string' - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__queue__0_463, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first1 u 'deque<string,allocator<string> >::iterator' - 0 - last1 "
"u 'deque<string,allocator<string> >::iterator' - 0 - first2 u 'deque<string,allocator<string> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__queue__0_464, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first1 u 'deque<string,allocator<string> >::iterator' - 0 - last1 "
"u 'deque<string,allocator<string> >::iterator' - 0 - first2 u 'deque<string,allocator<string> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__queue__0_465, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__queue__0_466, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last "
"u 'string' - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__queue__0_467, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first1 u 'deque<string,allocator<string> >::iterator' - 0 - last1 "
"u 'deque<string,allocator<string> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__queue__0_468, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first1 u 'deque<string,allocator<string> >::iterator' - 0 - last1 "
"u 'deque<string,allocator<string> >::iterator' - 0 - first2 u 'deque<string,allocator<string> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search_n", 835, G__queue__0_469, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last "
"h - 'size_type' 0 - count u 'string' - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__queue__0_470, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last "
"u 'deque<string,allocator<string> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__queue__0_471, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last "
"u 'deque<string,allocator<string> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__queue__0_472, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first1 u 'deque<string,allocator<string> >::iterator' - 0 - last1 "
"u 'deque<string,allocator<string> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__queue__0_473, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - a u 'deque<string,allocator<string> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace", 732, G__queue__0_474, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last "
"u 'string' - 11 - old_value u 'string' - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__queue__0_475, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last "
"u 'deque<string,allocator<string> >::iterator' - 0 - result u 'string' - 11 - old_value "
"u 'string' - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__queue__0_476, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last "
"u 'string' - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__queue__0_477, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first h - 'size_type' 0 - n "
"u 'string' - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__queue__0_478, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last "
"u 'string' - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__queue__0_479, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last "
"u 'deque<string,allocator<string> >::iterator' - 0 - result u 'string' - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__queue__0_480, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__queue__0_481, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last "
"u 'deque<string,allocator<string> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__queue__0_482, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__queue__0_483, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last "
"u 'deque<string,allocator<string> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__queue__0_484, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - mid "
"u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__queue__0_485, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - mid "
"u 'deque<string,allocator<string> >::iterator' - 0 - last u 'deque<string,allocator<string> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__queue__0_486, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__queue__0_487, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__queue__0_488, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__queue__0_489, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - mid "
"u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__queue__0_490, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last "
"u 'deque<string,allocator<string> >::iterator' - 0 - result_first u 'deque<string,allocator<string> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__queue__0_491, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - nth "
"u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__queue__0_492, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last "
"u 'string' - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__queue__0_493, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last "
"u 'string' - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__queue__0_494, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last "
"u 'string' - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__queue__0_495, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first1 u 'deque<string,allocator<string> >::iterator' - 0 - last1 "
"u 'deque<string,allocator<string> >::iterator' - 0 - first2 u 'deque<string,allocator<string> >::iterator' - 0 - last2 "
"u 'deque<string,allocator<string> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__queue__0_496, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - middle "
"u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__queue__0_497, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first1 u 'deque<string,allocator<string> >::iterator' - 0 - last1 "
"u 'deque<string,allocator<string> >::iterator' - 0 - first2 u 'deque<string,allocator<string> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__queue__0_498, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first1 u 'deque<string,allocator<string> >::iterator' - 0 - last1 "
"u 'deque<string,allocator<string> >::iterator' - 0 - first2 u 'deque<string,allocator<string> >::iterator' - 0 - last2 "
"u 'deque<string,allocator<string> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__queue__0_499, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first1 u 'deque<string,allocator<string> >::iterator' - 0 - last1 "
"u 'deque<string,allocator<string> >::iterator' - 0 - first2 u 'deque<string,allocator<string> >::iterator' - 0 - last2 "
"u 'deque<string,allocator<string> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__queue__0_500, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first1 u 'deque<string,allocator<string> >::iterator' - 0 - last1 "
"u 'deque<string,allocator<string> >::iterator' - 0 - first2 u 'deque<string,allocator<string> >::iterator' - 0 - last2 "
"u 'deque<string,allocator<string> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__queue__0_501, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first1 u 'deque<string,allocator<string> >::iterator' - 0 - last1 "
"u 'deque<string,allocator<string> >::iterator' - 0 - first2 u 'deque<string,allocator<string> >::iterator' - 0 - last2 "
"u 'deque<string,allocator<string> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("push_heap", 957, G__queue__0_502, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__queue__0_503, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__queue__0_504, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__queue__0_505, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__queue__0_506, 117, G__get_linked_tagnum(&G__LN_string), -1, 1, 2, 1, 1, 1, 
"u 'string' - 11 - a u 'string' - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__queue__0_507, 117, G__get_linked_tagnum(&G__LN_string), -1, 1, 2, 1, 1, 1, 
"u 'string' - 11 - a u 'string' - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min_element", 1165, G__queue__0_508, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func5() {
   G__memfunc_setup("max_element", 1167, G__queue__0_509, 117, G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__queue__0_510, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first1 u 'deque<string,allocator<string> >::iterator' - 0 - last1 "
"u 'deque<string,allocator<string> >::iterator' - 0 - first2 u 'deque<string,allocator<string> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__queue__0_511, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__queue__0_512, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'deque<string,allocator<string> >::iterator' - 0 - first u 'deque<string,allocator<string> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__queue__0_513, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<string,deque<string,allocator<string> > >' - 11 - x u 'queue<string,deque<string,allocator<string> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__queue__0_514, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<string,deque<string,allocator<string> > >' - 11 - x u 'queue<string,deque<string,allocator<string> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__queue__0_515, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<string,deque<string,allocator<string> > >' - 11 - x u 'queue<string,deque<string,allocator<string> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__queue__0_516, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<string,deque<string,allocator<string> > >' - 11 - x u 'queue<string,deque<string,allocator<string> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__queue__0_517, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<string,deque<string,allocator<string> > >' - 11 - x u 'queue<string,deque<string,allocator<string> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__queue__0_518, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'queue<string,deque<string,allocator<string> > >' - 11 - x u 'queue<string,deque<string,allocator<string> > >' - 11 - y", (char*) NULL
, (void*) NULL, 0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_func() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__LN_string = { "string" , 99 , -1 };
G__linked_taginfo G__LN_allocatorlEintgR = { "allocator<int>" , 99 , -1 };
G__linked_taginfo G__LN_dequelEintcOallocatorlEintgRsPgR = { "deque<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator = { "deque<int,allocator<int> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator = { "deque<int,allocator<int> >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__LN_queuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR = { "queue<int,deque<int,allocator<int> > >" , 99 , -1 };
G__linked_taginfo G__LN_allocatorlElonggR = { "allocator<long>" , 99 , -1 };
G__linked_taginfo G__LN_dequelElongcOallocatorlElonggRsPgR = { "deque<long,allocator<long> >" , 99 , -1 };
G__linked_taginfo G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator = { "deque<long,allocator<long> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator = { "deque<long,allocator<long> >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__LN_queuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR = { "queue<long,deque<long,allocator<long> > >" , 99 , -1 };
G__linked_taginfo G__LN_allocatorlEdoublegR = { "allocator<double>" , 99 , -1 };
G__linked_taginfo G__LN_dequelEdoublecOallocatorlEdoublegRsPgR = { "deque<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator = { "deque<double,allocator<double> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator = { "deque<double,allocator<double> >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__LN_queuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR = { "queue<double,deque<double,allocator<double> > >" , 99 , -1 };
G__linked_taginfo G__LN_allocatorlEvoidmUgR = { "allocator<void*>" , 99 , -1 };
G__linked_taginfo G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR = { "deque<void*,allocator<void*> >" , 99 , -1 };
G__linked_taginfo G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator = { "deque<void*,allocator<void*> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator = { "deque<void*,allocator<void*> >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__LN_queuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR = { "queue<void*,deque<void*,allocator<void*> > >" , 99 , -1 };
G__linked_taginfo G__LN_allocatorlEcharmUgR = { "allocator<char*>" , 99 , -1 };
G__linked_taginfo G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR = { "deque<char*,allocator<char*> >" , 99 , -1 };
G__linked_taginfo G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator = { "deque<char*,allocator<char*> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator = { "deque<char*,allocator<char*> >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__LN_queuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR = { "queue<char*,deque<char*,allocator<char*> > >" , 99 , -1 };
G__linked_taginfo G__LN_allocatorlEstringgR = { "allocator<string>" , 99 , -1 };
G__linked_taginfo G__LN_dequelEstringcOallocatorlEstringgRsPgR = { "deque<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator = { "deque<string,allocator<string> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator = { "deque<string,allocator<string> >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__LN_queuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR = { "queue<string,deque<string,allocator<string> > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtable() {
  G__LN_string.tagnum = -1 ;
  G__LN_allocatorlEintgR.tagnum = -1 ;
  G__LN_dequelEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__LN_queuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR.tagnum = -1 ;
  G__LN_allocatorlElonggR.tagnum = -1 ;
  G__LN_dequelElongcOallocatorlElonggRsPgR.tagnum = -1 ;
  G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__LN_queuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR.tagnum = -1 ;
  G__LN_allocatorlEdoublegR.tagnum = -1 ;
  G__LN_dequelEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__LN_queuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR.tagnum = -1 ;
  G__LN_allocatorlEvoidmUgR.tagnum = -1 ;
  G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR.tagnum = -1 ;
  G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__LN_queuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR.tagnum = -1 ;
  G__LN_allocatorlEcharmUgR.tagnum = -1 ;
  G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR.tagnum = -1 ;
  G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__LN_queuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR.tagnum = -1 ;
  G__LN_allocatorlEstringgR.tagnum = -1 ;
  G__LN_dequelEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__LN_queuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtable() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__LN_string);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlEintgR),sizeof(allocator<int>),-1,1792,(char*)NULL,G__setup_memvarallocatorlEintgR,G__setup_memfuncallocatorlEintgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgR),sizeof(deque<int,allocator<int> >),-1,36608,(char*)NULL,G__setup_memvardequelEintcOallocatorlEintgRsPgR,G__setup_memfuncdequelEintcOallocatorlEintgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLiterator),sizeof(deque<int,allocator<int> >::iterator),-1,2816,(char*)NULL,G__setup_memvardequelEintcOallocatorlEintgRsPgRcLcLiterator,G__setup_memfuncdequelEintcOallocatorlEintgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator),sizeof(deque<int,allocator<int> >::reverse_iterator),-1,2560,(char*)NULL,G__setup_memvardequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator,G__setup_memfuncdequelEintcOallocatorlEintgRsPgRcLcLreverse_iterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_queuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR),sizeof(queue<int,deque<int,allocator<int> > >),-1,256,(char*)NULL,G__setup_memvarqueuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR,G__setup_memfuncqueuelEintcOdequelEintcOallocatorlEintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlElonggR),sizeof(allocator<long>),-1,1792,(char*)NULL,G__setup_memvarallocatorlElonggR,G__setup_memfuncallocatorlElonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgR),sizeof(deque<long,allocator<long> >),-1,36608,(char*)NULL,G__setup_memvardequelElongcOallocatorlElonggRsPgR,G__setup_memfuncdequelElongcOallocatorlElonggRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLiterator),sizeof(deque<long,allocator<long> >::iterator),-1,2816,(char*)NULL,G__setup_memvardequelElongcOallocatorlElonggRsPgRcLcLiterator,G__setup_memfuncdequelElongcOallocatorlElonggRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator),sizeof(deque<long,allocator<long> >::reverse_iterator),-1,2560,(char*)NULL,G__setup_memvardequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator,G__setup_memfuncdequelElongcOallocatorlElonggRsPgRcLcLreverse_iterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_queuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR),sizeof(queue<long,deque<long,allocator<long> > >),-1,256,(char*)NULL,G__setup_memvarqueuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR,G__setup_memfuncqueuelElongcOdequelElongcOallocatorlElonggRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlEdoublegR),sizeof(allocator<double>),-1,1792,(char*)NULL,G__setup_memvarallocatorlEdoublegR,G__setup_memfuncallocatorlEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgR),sizeof(deque<double,allocator<double> >),-1,36608,(char*)NULL,G__setup_memvardequelEdoublecOallocatorlEdoublegRsPgR,G__setup_memfuncdequelEdoublecOallocatorlEdoublegRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator),sizeof(deque<double,allocator<double> >::iterator),-1,2816,(char*)NULL,G__setup_memvardequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator,G__setup_memfuncdequelEdoublecOallocatorlEdoublegRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator),sizeof(deque<double,allocator<double> >::reverse_iterator),-1,2560,(char*)NULL,G__setup_memvardequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator,G__setup_memfuncdequelEdoublecOallocatorlEdoublegRsPgRcLcLreverse_iterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_queuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR),sizeof(queue<double,deque<double,allocator<double> > >),-1,256,(char*)NULL,G__setup_memvarqueuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR,G__setup_memfuncqueuelEdoublecOdequelEdoublecOallocatorlEdoublegRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR),sizeof(allocator<void*>),-1,1792,(char*)NULL,G__setup_memvarallocatorlEvoidmUgR,G__setup_memfuncallocatorlEvoidmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgR),sizeof(deque<void*,allocator<void*> >),-1,36608,(char*)NULL,G__setup_memvardequelEvoidmUcOallocatorlEvoidmUgRsPgR,G__setup_memfuncdequelEvoidmUcOallocatorlEvoidmUgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator),sizeof(deque<void*,allocator<void*> >::iterator),-1,2816,(char*)NULL,G__setup_memvardequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator,G__setup_memfuncdequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator),sizeof(deque<void*,allocator<void*> >::reverse_iterator),-1,2560,(char*)NULL,G__setup_memvardequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator,G__setup_memfuncdequelEvoidmUcOallocatorlEvoidmUgRsPgRcLcLreverse_iterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_queuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR),sizeof(queue<void*,deque<void*,allocator<void*> > >),-1,256,(char*)NULL,G__setup_memvarqueuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR,G__setup_memfuncqueuelEvoidmUcOdequelEvoidmUcOallocatorlEvoidmUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR),sizeof(allocator<char*>),-1,1792,(char*)NULL,G__setup_memvarallocatorlEcharmUgR,G__setup_memfuncallocatorlEcharmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgR),sizeof(deque<char*,allocator<char*> >),-1,36608,(char*)NULL,G__setup_memvardequelEcharmUcOallocatorlEcharmUgRsPgR,G__setup_memfuncdequelEcharmUcOallocatorlEcharmUgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator),sizeof(deque<char*,allocator<char*> >::iterator),-1,2816,(char*)NULL,G__setup_memvardequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator,G__setup_memfuncdequelEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator),sizeof(deque<char*,allocator<char*> >::reverse_iterator),-1,2560,(char*)NULL,G__setup_memvardequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator,G__setup_memfuncdequelEcharmUcOallocatorlEcharmUgRsPgRcLcLreverse_iterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_queuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR),sizeof(queue<char*,deque<char*,allocator<char*> > >),-1,256,(char*)NULL,G__setup_memvarqueuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR,G__setup_memfuncqueuelEcharmUcOdequelEcharmUcOallocatorlEcharmUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlEstringgR),sizeof(allocator<string>),-1,1792,(char*)NULL,G__setup_memvarallocatorlEstringgR,G__setup_memfuncallocatorlEstringgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgR),sizeof(deque<string,allocator<string> >),-1,36608,(char*)NULL,G__setup_memvardequelEstringcOallocatorlEstringgRsPgR,G__setup_memfuncdequelEstringcOallocatorlEstringgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLiterator),sizeof(deque<string,allocator<string> >::iterator),-1,2816,(char*)NULL,G__setup_memvardequelEstringcOallocatorlEstringgRsPgRcLcLiterator,G__setup_memfuncdequelEstringcOallocatorlEstringgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_dequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator),sizeof(deque<string,allocator<string> >::reverse_iterator),-1,2560,(char*)NULL,G__setup_memvardequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator,G__setup_memfuncdequelEstringcOallocatorlEstringgRsPgRcLcLreverse_iterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_queuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR),sizeof(queue<string,deque<string,allocator<string> > >),-1,256,(char*)NULL,G__setup_memvarqueuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR,G__setup_memfuncqueuelEstringcOdequelEstringcOallocatorlEstringgRsPgRsPgR);
}
extern "C" void G__cpp_setup(void) {
  G__check_setup_version(30051515,"G__cpp_setup()");
  G__set_cpp_environment();
  G__cpp_setup_tagtable();

  G__cpp_setup_inheritance();

  G__cpp_setup_typetable();

  G__cpp_setup_memvar();

  G__cpp_setup_memfunc();
  G__cpp_setup_global();
  G__cpp_setup_func();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunc();
  return;
}
class G__cpp_setup_init {
  public:
    G__cpp_setup_init() { G__add_setup_func("G__Default",(G__incsetup)(&G__cpp_setup)); }
   ~G__cpp_setup_init() { G__remove_setup_func("G__Default"); }
};
G__cpp_setup_init G__cpp_setup_initializer;

