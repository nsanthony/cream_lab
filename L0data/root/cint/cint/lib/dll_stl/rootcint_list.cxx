//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:39:26 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "rootcint_list.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void listlEcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void listlEcharmUgR_Dictionary();
   static void *new_listlEcharmUgR(void *p = 0);
   static void *newArray_listlEcharmUgR(Long_t size, void *p);
   static void delete_listlEcharmUgR(void *p);
   static void deleteArray_listlEcharmUgR(void *p);
   static void destruct_listlEcharmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const list<char*>*)
   {
      list<char*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(list<char*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("list<char*>", -2, "prec_stl/list", 44,
                  typeid(list<char*>), DefineBehavior(ptr, ptr),
                  0, &listlEcharmUgR_Dictionary, isa_proxy, 0,
                  sizeof(list<char*>) );
      instance.SetNew(&new_listlEcharmUgR);
      instance.SetNewArray(&newArray_listlEcharmUgR);
      instance.SetDelete(&delete_listlEcharmUgR);
      instance.SetDeleteArray(&deleteArray_listlEcharmUgR);
      instance.SetDestructor(&destruct_listlEcharmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< list<char*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const list<char*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void listlEcharmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const list<char*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_listlEcharmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) list<char*> : new list<char*>;
   }
   static void *newArray_listlEcharmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) list<char*>[nElements] : new list<char*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_listlEcharmUgR(void *p) {
      delete ((list<char*>*)p);
   }
   static void deleteArray_listlEcharmUgR(void *p) {
      delete [] ((list<char*>*)p);
   }
   static void destruct_listlEcharmUgR(void *p) {
      typedef list<char*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class list<char*>

namespace ROOT {
   void listlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void listlEdoublegR_Dictionary();
   static void *new_listlEdoublegR(void *p = 0);
   static void *newArray_listlEdoublegR(Long_t size, void *p);
   static void delete_listlEdoublegR(void *p);
   static void deleteArray_listlEdoublegR(void *p);
   static void destruct_listlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const list<double>*)
   {
      list<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(list<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("list<double>", -2, "prec_stl/list", 44,
                  typeid(list<double>), DefineBehavior(ptr, ptr),
                  0, &listlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(list<double>) );
      instance.SetNew(&new_listlEdoublegR);
      instance.SetNewArray(&newArray_listlEdoublegR);
      instance.SetDelete(&delete_listlEdoublegR);
      instance.SetDeleteArray(&deleteArray_listlEdoublegR);
      instance.SetDestructor(&destruct_listlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< list<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const list<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void listlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const list<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_listlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) list<double> : new list<double>;
   }
   static void *newArray_listlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) list<double>[nElements] : new list<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_listlEdoublegR(void *p) {
      delete ((list<double>*)p);
   }
   static void deleteArray_listlEdoublegR(void *p) {
      delete [] ((list<double>*)p);
   }
   static void destruct_listlEdoublegR(void *p) {
      typedef list<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class list<double>

namespace ROOT {
   void listlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void listlEfloatgR_Dictionary();
   static void *new_listlEfloatgR(void *p = 0);
   static void *newArray_listlEfloatgR(Long_t size, void *p);
   static void delete_listlEfloatgR(void *p);
   static void deleteArray_listlEfloatgR(void *p);
   static void destruct_listlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const list<float>*)
   {
      list<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(list<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("list<float>", -2, "prec_stl/list", 44,
                  typeid(list<float>), DefineBehavior(ptr, ptr),
                  0, &listlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(list<float>) );
      instance.SetNew(&new_listlEfloatgR);
      instance.SetNewArray(&newArray_listlEfloatgR);
      instance.SetDelete(&delete_listlEfloatgR);
      instance.SetDeleteArray(&deleteArray_listlEfloatgR);
      instance.SetDestructor(&destruct_listlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< list<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const list<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void listlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const list<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_listlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) list<float> : new list<float>;
   }
   static void *newArray_listlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) list<float>[nElements] : new list<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_listlEfloatgR(void *p) {
      delete ((list<float>*)p);
   }
   static void deleteArray_listlEfloatgR(void *p) {
      delete [] ((list<float>*)p);
   }
   static void destruct_listlEfloatgR(void *p) {
      typedef list<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class list<float>

namespace ROOT {
   void listlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void listlEintgR_Dictionary();
   static void *new_listlEintgR(void *p = 0);
   static void *newArray_listlEintgR(Long_t size, void *p);
   static void delete_listlEintgR(void *p);
   static void deleteArray_listlEintgR(void *p);
   static void destruct_listlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const list<int>*)
   {
      list<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(list<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("list<int>", -2, "prec_stl/list", 44,
                  typeid(list<int>), DefineBehavior(ptr, ptr),
                  0, &listlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(list<int>) );
      instance.SetNew(&new_listlEintgR);
      instance.SetNewArray(&newArray_listlEintgR);
      instance.SetDelete(&delete_listlEintgR);
      instance.SetDeleteArray(&deleteArray_listlEintgR);
      instance.SetDestructor(&destruct_listlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< list<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const list<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void listlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const list<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_listlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) list<int> : new list<int>;
   }
   static void *newArray_listlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) list<int>[nElements] : new list<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_listlEintgR(void *p) {
      delete ((list<int>*)p);
   }
   static void deleteArray_listlEintgR(void *p) {
      delete [] ((list<int>*)p);
   }
   static void destruct_listlEintgR(void *p) {
      typedef list<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class list<int>

namespace ROOT {
   void listlElonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void listlElonggR_Dictionary();
   static void *new_listlElonggR(void *p = 0);
   static void *newArray_listlElonggR(Long_t size, void *p);
   static void delete_listlElonggR(void *p);
   static void deleteArray_listlElonggR(void *p);
   static void destruct_listlElonggR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const list<long>*)
   {
      list<long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(list<long>),0);
      static ::ROOT::TGenericClassInfo 
         instance("list<long>", -2, "prec_stl/list", 44,
                  typeid(list<long>), DefineBehavior(ptr, ptr),
                  0, &listlElonggR_Dictionary, isa_proxy, 0,
                  sizeof(list<long>) );
      instance.SetNew(&new_listlElonggR);
      instance.SetNewArray(&newArray_listlElonggR);
      instance.SetDelete(&delete_listlElonggR);
      instance.SetDeleteArray(&deleteArray_listlElonggR);
      instance.SetDestructor(&destruct_listlElonggR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< list<long> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const list<long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void listlElonggR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const list<long>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_listlElonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) list<long> : new list<long>;
   }
   static void *newArray_listlElonggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) list<long>[nElements] : new list<long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_listlElonggR(void *p) {
      delete ((list<long>*)p);
   }
   static void deleteArray_listlElonggR(void *p) {
      delete [] ((list<long>*)p);
   }
   static void destruct_listlElonggR(void *p) {
      typedef list<long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class list<long>

namespace ROOT {
   void listlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void listlEstringgR_Dictionary();
   static void *new_listlEstringgR(void *p = 0);
   static void *newArray_listlEstringgR(Long_t size, void *p);
   static void delete_listlEstringgR(void *p);
   static void deleteArray_listlEstringgR(void *p);
   static void destruct_listlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const list<string>*)
   {
      list<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(list<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("list<string>", -2, "prec_stl/list", 44,
                  typeid(list<string>), DefineBehavior(ptr, ptr),
                  0, &listlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(list<string>) );
      instance.SetNew(&new_listlEstringgR);
      instance.SetNewArray(&newArray_listlEstringgR);
      instance.SetDelete(&delete_listlEstringgR);
      instance.SetDeleteArray(&deleteArray_listlEstringgR);
      instance.SetDestructor(&destruct_listlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< list<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const list<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void listlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const list<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_listlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) list<string> : new list<string>;
   }
   static void *newArray_listlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) list<string>[nElements] : new list<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_listlEstringgR(void *p) {
      delete ((list<string>*)p);
   }
   static void deleteArray_listlEstringgR(void *p) {
      delete [] ((list<string>*)p);
   }
   static void destruct_listlEstringgR(void *p) {
      typedef list<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class list<string>

namespace ROOT {
   void listlEvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void listlEvoidmUgR_Dictionary();
   static void *new_listlEvoidmUgR(void *p = 0);
   static void *newArray_listlEvoidmUgR(Long_t size, void *p);
   static void delete_listlEvoidmUgR(void *p);
   static void deleteArray_listlEvoidmUgR(void *p);
   static void destruct_listlEvoidmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const list<void*>*)
   {
      list<void*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(list<void*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("list<void*>", -2, "prec_stl/list", 44,
                  typeid(list<void*>), DefineBehavior(ptr, ptr),
                  0, &listlEvoidmUgR_Dictionary, isa_proxy, 0,
                  sizeof(list<void*>) );
      instance.SetNew(&new_listlEvoidmUgR);
      instance.SetNewArray(&newArray_listlEvoidmUgR);
      instance.SetDelete(&delete_listlEvoidmUgR);
      instance.SetDeleteArray(&deleteArray_listlEvoidmUgR);
      instance.SetDestructor(&destruct_listlEvoidmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< list<void*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const list<void*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void listlEvoidmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const list<void*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_listlEvoidmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) list<void*> : new list<void*>;
   }
   static void *newArray_listlEvoidmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) list<void*>[nElements] : new list<void*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_listlEvoidmUgR(void *p) {
      delete ((list<void*>*)p);
   }
   static void deleteArray_listlEvoidmUgR(void *p) {
      delete [] ((list<void*>*)p);
   }
   static void destruct_listlEvoidmUgR(void *p) {
      typedef list<void*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class list<void*>

/********************************************************
* cint/cint/lib/dll_stl/rootcint_list.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablerootcint_list();

extern "C" void G__set_cpp_environmentrootcint_list() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("list");
  G__cpp_reset_tagtablerootcint_list();
}
#include <new>
extern "C" int G__cpp_dllrevrootcint_list() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncrootcint_list {
 public:
  G__Sizep2memfuncrootcint_list(): p(&G__Sizep2memfuncrootcint_list::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncrootcint_list::*p)();
};

size_t G__get_sizep2memfuncrootcint_list()
{
  G__Sizep2memfuncrootcint_list a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancerootcint_list() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablerootcint_list() {

   /* Setting up typedef entry */
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__rootcint_listLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootcint_listLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootcint_listLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootcint_listLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootcint_listLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__rootcint_listLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */
extern "C" void G__cpp_setup_memvarrootcint_list() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/

/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncrootcint_list() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalrootcint_list() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcrootcint_list() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__rootcint_listLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__rootcint_listLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablerootcint_list() {
  G__rootcint_listLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__rootcint_listLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablerootcint_list() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__rootcint_listLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__rootcint_listLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setuprootcint_list(void) {
  G__check_setup_version(30051515,"G__cpp_setuprootcint_list()");
  G__set_cpp_environmentrootcint_list();
  G__cpp_setup_tagtablerootcint_list();

  G__cpp_setup_inheritancerootcint_list();

  G__cpp_setup_typetablerootcint_list();

  G__cpp_setup_memvarrootcint_list();

  G__cpp_setup_memfuncrootcint_list();
  G__cpp_setup_globalrootcint_list();
  G__cpp_setup_funcrootcint_list();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncrootcint_list();
  return;
}
class G__cpp_setup_initrootcint_list {
  public:
    G__cpp_setup_initrootcint_list() { G__add_setup_func("rootcint_list",(G__incsetup)(&G__cpp_setuprootcint_list)); G__call_setup_funcs(); }
   ~G__cpp_setup_initrootcint_list() { G__remove_setup_func("rootcint_list"); }
};
G__cpp_setup_initrootcint_list G__cpp_setup_initializerrootcint_list;

