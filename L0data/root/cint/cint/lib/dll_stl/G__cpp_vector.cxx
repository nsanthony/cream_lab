/********************************************************
* cint/cint/lib/dll_stl/G__cpp_vector.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/
#include "cint/cint/lib/dll_stl/G__cpp_vector.h" //newlink 3678 

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtable();

extern "C" void G__set_cpp_environment() {
  G__add_compiledheader("cint/cint/lib/dll_stl/vec.h");
  G__add_compiledheader("cint/cint/inc/cintdictversion.h");
  G__cpp_reset_tagtable();
}
#include <new>
extern "C" int G__cpp_dllrev() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* allocator<char> */
static int G__vector_48_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<char>[n];
     } else {
       p = new((void*) gvp) allocator<char>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<char>;
     } else {
       p = new((void*) gvp) allocator<char>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_48_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<char>(*(allocator<char>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<char>(*(allocator<char>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_48_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const allocator<char>*) G__getstructoffset())->address(*(char*) G__Charref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_48_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const allocator<char>*) G__getstructoffset())->address(*(char*) G__Charref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_48_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 67, (long) ((allocator<char>*) G__getstructoffset())->allocate((allocator<char>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 67, (long) ((allocator<char>*) G__getstructoffset())->allocate((allocator<char>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_48_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<char>*) G__getstructoffset())->deallocate((allocator<char>::pointer) G__int(libp->para[0]), (allocator<char>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_48_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<char>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_48_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<char>*) G__getstructoffset())->construct((allocator<char>::pointer) G__int(libp->para[0]), *(char*) G__Charref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_48_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<char>*) G__getstructoffset())->destroy((allocator<char>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<char> G__TallocatorlEchargR;
static int G__vector_48_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<char>*) (soff+(sizeof(allocator<char>)*i)))->~G__TallocatorlEchargR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<char>*) (soff))->~G__TallocatorlEchargR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_48_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<char>* dest = (allocator<char>*) G__getstructoffset();
   const allocator<char>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<char,allocator<char> > */
static int G__vector_49_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char& obj = ((vector<char,allocator<char> >*) G__getstructoffset())->at((vector<char,allocator<char> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = ((vector<char,allocator<char> >*) G__getstructoffset())->begin();
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = ((vector<char,allocator<char> >*) G__getstructoffset())->end();
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::reverse_iterator* pobj;
         vector<char,allocator<char> >::reverse_iterator xobj = ((vector<char,allocator<char> >*) G__getstructoffset())->rbegin();
         pobj = new vector<char,allocator<char> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::reverse_iterator* pobj;
         vector<char,allocator<char> >::reverse_iterator xobj = ((vector<char,allocator<char> >*) G__getstructoffset())->rend();
         pobj = new vector<char,allocator<char> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<char,allocator<char> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<char,allocator<char> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char,allocator<char> >*) G__getstructoffset())->resize((vector<char,allocator<char> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char,allocator<char> >*) G__getstructoffset())->resize((vector<char,allocator<char> >::size_type) G__int(libp->para[0]), (char) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<char,allocator<char> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<char,allocator<char> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char& obj = ((vector<char,allocator<char> >*) G__getstructoffset())->operator[]((vector<char,allocator<char> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<char,allocator<char> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<char,allocator<char> >[n];
     } else {
       p = new((void*) gvp) vector<char,allocator<char> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<char,allocator<char> >;
     } else {
       p = new((void*) gvp) vector<char,allocator<char> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<char,allocator<char> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<char,allocator<char> >((vector<char,allocator<char> >::size_type) G__int(libp->para[0]), *(char*) G__Charref(&libp->para[1]));
     } else {
       p = new((void*) gvp) vector<char,allocator<char> >((vector<char,allocator<char> >::size_type) G__int(libp->para[0]), *(char*) G__Charref(&libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<char,allocator<char> >((vector<char,allocator<char> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<char,allocator<char> >((vector<char,allocator<char> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<char,allocator<char> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<char,allocator<char> >(*(vector<char,allocator<char> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<char,allocator<char> >(*(vector<char,allocator<char> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<char,allocator<char> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<char,allocator<char> >(*((vector<char,allocator<char> >::const_iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<char,allocator<char> >(*((vector<char,allocator<char> >::const_iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char,allocator<char> >& obj = ((vector<char,allocator<char> >*) G__getstructoffset())->operator=(*(vector<char,allocator<char> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char,allocator<char> >*) G__getstructoffset())->reserve((vector<char,allocator<char> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char& obj = ((vector<char,allocator<char> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char& obj = ((vector<char,allocator<char> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char,allocator<char> >*) G__getstructoffset())->push_back(*(char*) G__Charref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char,allocator<char> >*) G__getstructoffset())->swap(*(vector<char,allocator<char> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = ((vector<char,allocator<char> >*) G__getstructoffset())->insert(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *(char*) G__Charref(&libp->para[1]));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char,allocator<char> >*) G__getstructoffset())->insert(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::const_iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char,allocator<char> >*) G__getstructoffset())->insert(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), (vector<char,allocator<char> >::size_type) G__int(libp->para[1])
, *(char*) G__Charref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char,allocator<char> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char,allocator<char> >*) G__getstructoffset())->erase(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char,allocator<char> >*) G__getstructoffset())->erase(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_49_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char,allocator<char> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<char,allocator<char> > G__TvectorlEcharcOallocatorlEchargRsPgR;
static int G__vector_49_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<char,allocator<char> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<char,allocator<char> >*) (soff+(sizeof(vector<char,allocator<char> >)*i)))->~G__TvectorlEcharcOallocatorlEchargRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<char,allocator<char> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<char,allocator<char> >*) (soff))->~G__TvectorlEcharcOallocatorlEchargRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<char,allocator<char> >::iterator */
static int G__vector_50_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<char,allocator<char> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<char,allocator<char> >::iterator[n];
     } else {
       p = new((void*) gvp) vector<char,allocator<char> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<char,allocator<char> >::iterator;
     } else {
       p = new((void*) gvp) vector<char,allocator<char> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_50_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<char,allocator<char> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<char,allocator<char> >::iterator(libp->para[0].ref ? *(const vector<char,allocator<char> >::iterator::pointer*) libp->para[0].ref : *(const vector<char,allocator<char> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   } else {
     p = new((void*) gvp) vector<char,allocator<char> >::iterator(libp->para[0].ref ? *(const vector<char,allocator<char> >::iterator::pointer*) libp->para[0].ref : *(const vector<char,allocator<char> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_50_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char,allocator<char> >::iterator::reference obj = ((const vector<char,allocator<char> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_50_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const vector<char,allocator<char> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_50_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char,allocator<char> >::iterator& obj = ((vector<char,allocator<char> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_50_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = ((vector<char,allocator<char> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_50_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char,allocator<char> >::iterator& obj = ((vector<char,allocator<char> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_50_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = ((vector<char,allocator<char> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_50_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char,allocator<char> >::iterator::reference obj = ((const vector<char,allocator<char> >::iterator*) G__getstructoffset())->operator[](*(vector<char,allocator<char> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_50_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char,allocator<char> >::iterator& obj = ((vector<char,allocator<char> >::iterator*) G__getstructoffset())->operator+=(*(vector<char,allocator<char> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_50_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char,allocator<char> >::iterator* pobj;
         const vector<char,allocator<char> >::iterator xobj = ((const vector<char,allocator<char> >::iterator*) G__getstructoffset())->operator+(*(vector<char,allocator<char> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_50_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char,allocator<char> >::iterator& obj = ((vector<char,allocator<char> >::iterator*) G__getstructoffset())->operator-=(*(vector<char,allocator<char> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_50_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char,allocator<char> >::iterator* pobj;
         const vector<char,allocator<char> >::iterator xobj = ((const vector<char,allocator<char> >::iterator*) G__getstructoffset())->operator-(*(vector<char,allocator<char> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_50_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char,allocator<char> >::iterator::pointer& obj = ((const vector<char,allocator<char> >::iterator*) G__getstructoffset())->base();
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_50_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = ((vector<char,allocator<char> >::iterator*) G__getstructoffset())->operator=(*(vector<char,allocator<char> >::iterator*) libp->para[0].ref);
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_50_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vector<char,allocator<char> >::iterator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vector<char,allocator<char> >::iterator(*(vector<char,allocator<char> >::iterator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<char,allocator<char> >::iterator G__TvectorlEcharcOallocatorlEchargRsPgRcLcLiterator;
static int G__vector_50_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<char,allocator<char> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<char,allocator<char> >::iterator*) (soff+(sizeof(vector<char,allocator<char> >::iterator)*i)))->~G__TvectorlEcharcOallocatorlEchargRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<char,allocator<char> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<char,allocator<char> >::iterator*) (soff))->~G__TvectorlEcharcOallocatorlEchargRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* reverse_iterator<vector<char,allocator<char> >::iterator> */
static int G__vector_51_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<char,allocator<char> >::iterator>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<char,allocator<char> >::iterator>[n];
     } else {
       p = new((void*) gvp) reverse_iterator<vector<char,allocator<char> >::iterator>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<char,allocator<char> >::iterator>;
     } else {
       p = new((void*) gvp) reverse_iterator<vector<char,allocator<char> >::iterator>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_51_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char,allocator<char> >::iterator* pobj;
         const vector<char,allocator<char> >::iterator xobj = ((const reverse_iterator<vector<char,allocator<char> >::iterator>*) G__getstructoffset())->base();
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_51_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<char,allocator<char> >::iterator>::reference obj = ((const reverse_iterator<vector<char,allocator<char> >::iterator>*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_51_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const reverse_iterator<vector<char,allocator<char> >::iterator>*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_51_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<char,allocator<char> >::iterator>& obj = ((reverse_iterator<vector<char,allocator<char> >::iterator>*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_51_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<char,allocator<char> >::iterator>* pobj;
         reverse_iterator<vector<char,allocator<char> >::iterator> xobj = ((reverse_iterator<vector<char,allocator<char> >::iterator>*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<char,allocator<char> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_51_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<char,allocator<char> >::iterator>& obj = ((reverse_iterator<vector<char,allocator<char> >::iterator>*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_51_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<char,allocator<char> >::iterator>* pobj;
         reverse_iterator<vector<char,allocator<char> >::iterator> xobj = ((reverse_iterator<vector<char,allocator<char> >::iterator>*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<char,allocator<char> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_51_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<char,allocator<char> >::iterator>* pobj;
         const reverse_iterator<vector<char,allocator<char> >::iterator> xobj = ((const reverse_iterator<vector<char,allocator<char> >::iterator>*) G__getstructoffset())->operator+((reverse_iterator<vector<char,allocator<char> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<char,allocator<char> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_51_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<char,allocator<char> >::iterator>& obj = ((reverse_iterator<vector<char,allocator<char> >::iterator>*) G__getstructoffset())->operator+=((reverse_iterator<vector<char,allocator<char> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_51_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<char,allocator<char> >::iterator>* pobj;
         const reverse_iterator<vector<char,allocator<char> >::iterator> xobj = ((const reverse_iterator<vector<char,allocator<char> >::iterator>*) G__getstructoffset())->operator-((reverse_iterator<vector<char,allocator<char> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<char,allocator<char> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_51_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<char,allocator<char> >::iterator>& obj = ((reverse_iterator<vector<char,allocator<char> >::iterator>*) G__getstructoffset())->operator-=((reverse_iterator<vector<char,allocator<char> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_51_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<char,allocator<char> >::iterator>::reference obj = ((const reverse_iterator<vector<char,allocator<char> >::iterator>*) G__getstructoffset())->operator[]((reverse_iterator<vector<char,allocator<char> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_51_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   reverse_iterator<vector<char,allocator<char> >::iterator>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new reverse_iterator<vector<char,allocator<char> >::iterator>(*(reverse_iterator<vector<char,allocator<char> >::iterator>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef reverse_iterator<vector<char,allocator<char> >::iterator> G__Treverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR;
static int G__vector_51_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (reverse_iterator<vector<char,allocator<char> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((reverse_iterator<vector<char,allocator<char> >::iterator>*) (soff+(sizeof(reverse_iterator<vector<char,allocator<char> >::iterator>)*i)))->~G__Treverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (reverse_iterator<vector<char,allocator<char> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((reverse_iterator<vector<char,allocator<char> >::iterator>*) (soff))->~G__Treverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_51_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<char,allocator<char> >::iterator>* dest = (reverse_iterator<vector<char,allocator<char> >::iterator>*) G__getstructoffset();
   const reverse_iterator<vector<char,allocator<char> >::iterator>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* allocator<short> */
static int G__vector_52_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<short>[n];
     } else {
       p = new((void*) gvp) allocator<short>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<short>;
     } else {
       p = new((void*) gvp) allocator<short>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_52_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<short>(*(allocator<short>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<short>(*(allocator<short>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_52_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 83, (long) ((const allocator<short>*) G__getstructoffset())->address(*(short*) G__Shortref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_52_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 83, (long) ((const allocator<short>*) G__getstructoffset())->address(*(short*) G__Shortref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_52_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 83, (long) ((allocator<short>*) G__getstructoffset())->allocate((allocator<short>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 83, (long) ((allocator<short>*) G__getstructoffset())->allocate((allocator<short>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_52_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<short>*) G__getstructoffset())->deallocate((allocator<short>::pointer) G__int(libp->para[0]), (allocator<short>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_52_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<short>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_52_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<short>*) G__getstructoffset())->construct((allocator<short>::pointer) G__int(libp->para[0]), *(short*) G__Shortref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_52_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<short>*) G__getstructoffset())->destroy((allocator<short>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<short> G__TallocatorlEshortgR;
static int G__vector_52_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<short>*) (soff+(sizeof(allocator<short>)*i)))->~G__TallocatorlEshortgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<short>*) (soff))->~G__TallocatorlEshortgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_52_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<short>* dest = (allocator<short>*) G__getstructoffset();
   const allocator<short>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<short,allocator<short> > */
static int G__vector_53_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const short& obj = ((vector<short,allocator<short> >*) G__getstructoffset())->at((vector<short,allocator<short> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = ((vector<short,allocator<short> >*) G__getstructoffset())->begin();
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = ((vector<short,allocator<short> >*) G__getstructoffset())->end();
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::reverse_iterator* pobj;
         vector<short,allocator<short> >::reverse_iterator xobj = ((vector<short,allocator<short> >*) G__getstructoffset())->rbegin();
         pobj = new vector<short,allocator<short> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::reverse_iterator* pobj;
         vector<short,allocator<short> >::reverse_iterator xobj = ((vector<short,allocator<short> >*) G__getstructoffset())->rend();
         pobj = new vector<short,allocator<short> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<short,allocator<short> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<short,allocator<short> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<short,allocator<short> >*) G__getstructoffset())->resize((vector<short,allocator<short> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<short,allocator<short> >*) G__getstructoffset())->resize((vector<short,allocator<short> >::size_type) G__int(libp->para[0]), (short) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<short,allocator<short> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<short,allocator<short> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const short& obj = ((vector<short,allocator<short> >*) G__getstructoffset())->operator[]((vector<short,allocator<short> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<short,allocator<short> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<short,allocator<short> >[n];
     } else {
       p = new((void*) gvp) vector<short,allocator<short> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<short,allocator<short> >;
     } else {
       p = new((void*) gvp) vector<short,allocator<short> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<short,allocator<short> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<short,allocator<short> >((vector<short,allocator<short> >::size_type) G__int(libp->para[0]), *(short*) G__Shortref(&libp->para[1]));
     } else {
       p = new((void*) gvp) vector<short,allocator<short> >((vector<short,allocator<short> >::size_type) G__int(libp->para[0]), *(short*) G__Shortref(&libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<short,allocator<short> >((vector<short,allocator<short> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<short,allocator<short> >((vector<short,allocator<short> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<short,allocator<short> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<short,allocator<short> >(*(vector<short,allocator<short> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<short,allocator<short> >(*(vector<short,allocator<short> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<short,allocator<short> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<short,allocator<short> >(*((vector<short,allocator<short> >::const_iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<short,allocator<short> >(*((vector<short,allocator<short> >::const_iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<short,allocator<short> >& obj = ((vector<short,allocator<short> >*) G__getstructoffset())->operator=(*(vector<short,allocator<short> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<short,allocator<short> >*) G__getstructoffset())->reserve((vector<short,allocator<short> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const short& obj = ((vector<short,allocator<short> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const short& obj = ((vector<short,allocator<short> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<short,allocator<short> >*) G__getstructoffset())->push_back(*(short*) G__Shortref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<short,allocator<short> >*) G__getstructoffset())->swap(*(vector<short,allocator<short> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = ((vector<short,allocator<short> >*) G__getstructoffset())->insert(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *(short*) G__Shortref(&libp->para[1]));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<short,allocator<short> >*) G__getstructoffset())->insert(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::const_iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<short,allocator<short> >*) G__getstructoffset())->insert(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), (vector<short,allocator<short> >::size_type) G__int(libp->para[1])
, *(short*) G__Shortref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<short,allocator<short> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<short,allocator<short> >*) G__getstructoffset())->erase(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<short,allocator<short> >*) G__getstructoffset())->erase(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_53_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<short,allocator<short> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<short,allocator<short> > G__TvectorlEshortcOallocatorlEshortgRsPgR;
static int G__vector_53_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<short,allocator<short> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<short,allocator<short> >*) (soff+(sizeof(vector<short,allocator<short> >)*i)))->~G__TvectorlEshortcOallocatorlEshortgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<short,allocator<short> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<short,allocator<short> >*) (soff))->~G__TvectorlEshortcOallocatorlEshortgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<short,allocator<short> >::iterator */
static int G__vector_54_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<short,allocator<short> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<short,allocator<short> >::iterator[n];
     } else {
       p = new((void*) gvp) vector<short,allocator<short> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<short,allocator<short> >::iterator;
     } else {
       p = new((void*) gvp) vector<short,allocator<short> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_54_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<short,allocator<short> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<short,allocator<short> >::iterator(libp->para[0].ref ? *(const vector<short,allocator<short> >::iterator::pointer*) libp->para[0].ref : *(const vector<short,allocator<short> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   } else {
     p = new((void*) gvp) vector<short,allocator<short> >::iterator(libp->para[0].ref ? *(const vector<short,allocator<short> >::iterator::pointer*) libp->para[0].ref : *(const vector<short,allocator<short> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_54_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<short,allocator<short> >::iterator::reference obj = ((const vector<short,allocator<short> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_54_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 83, (long) ((const vector<short,allocator<short> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_54_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<short,allocator<short> >::iterator& obj = ((vector<short,allocator<short> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_54_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = ((vector<short,allocator<short> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_54_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<short,allocator<short> >::iterator& obj = ((vector<short,allocator<short> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_54_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = ((vector<short,allocator<short> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_54_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<short,allocator<short> >::iterator::reference obj = ((const vector<short,allocator<short> >::iterator*) G__getstructoffset())->operator[](*(vector<short,allocator<short> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_54_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<short,allocator<short> >::iterator& obj = ((vector<short,allocator<short> >::iterator*) G__getstructoffset())->operator+=(*(vector<short,allocator<short> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_54_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<short,allocator<short> >::iterator* pobj;
         const vector<short,allocator<short> >::iterator xobj = ((const vector<short,allocator<short> >::iterator*) G__getstructoffset())->operator+(*(vector<short,allocator<short> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_54_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<short,allocator<short> >::iterator& obj = ((vector<short,allocator<short> >::iterator*) G__getstructoffset())->operator-=(*(vector<short,allocator<short> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_54_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<short,allocator<short> >::iterator* pobj;
         const vector<short,allocator<short> >::iterator xobj = ((const vector<short,allocator<short> >::iterator*) G__getstructoffset())->operator-(*(vector<short,allocator<short> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_54_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<short,allocator<short> >::iterator::pointer& obj = ((const vector<short,allocator<short> >::iterator*) G__getstructoffset())->base();
         result7->ref = (long) (&obj);
         G__letint(result7, 'S', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_54_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = ((vector<short,allocator<short> >::iterator*) G__getstructoffset())->operator=(*(vector<short,allocator<short> >::iterator*) libp->para[0].ref);
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_54_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vector<short,allocator<short> >::iterator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vector<short,allocator<short> >::iterator(*(vector<short,allocator<short> >::iterator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<short,allocator<short> >::iterator G__TvectorlEshortcOallocatorlEshortgRsPgRcLcLiterator;
static int G__vector_54_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<short,allocator<short> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<short,allocator<short> >::iterator*) (soff+(sizeof(vector<short,allocator<short> >::iterator)*i)))->~G__TvectorlEshortcOallocatorlEshortgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<short,allocator<short> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<short,allocator<short> >::iterator*) (soff))->~G__TvectorlEshortcOallocatorlEshortgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* reverse_iterator<vector<short,allocator<short> >::iterator> */
static int G__vector_55_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<short,allocator<short> >::iterator>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<short,allocator<short> >::iterator>[n];
     } else {
       p = new((void*) gvp) reverse_iterator<vector<short,allocator<short> >::iterator>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<short,allocator<short> >::iterator>;
     } else {
       p = new((void*) gvp) reverse_iterator<vector<short,allocator<short> >::iterator>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_55_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<short,allocator<short> >::iterator* pobj;
         const vector<short,allocator<short> >::iterator xobj = ((const reverse_iterator<vector<short,allocator<short> >::iterator>*) G__getstructoffset())->base();
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_55_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<short,allocator<short> >::iterator>::reference obj = ((const reverse_iterator<vector<short,allocator<short> >::iterator>*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_55_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 83, (long) ((const reverse_iterator<vector<short,allocator<short> >::iterator>*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_55_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<short,allocator<short> >::iterator>& obj = ((reverse_iterator<vector<short,allocator<short> >::iterator>*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_55_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<short,allocator<short> >::iterator>* pobj;
         reverse_iterator<vector<short,allocator<short> >::iterator> xobj = ((reverse_iterator<vector<short,allocator<short> >::iterator>*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<short,allocator<short> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_55_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<short,allocator<short> >::iterator>& obj = ((reverse_iterator<vector<short,allocator<short> >::iterator>*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_55_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<short,allocator<short> >::iterator>* pobj;
         reverse_iterator<vector<short,allocator<short> >::iterator> xobj = ((reverse_iterator<vector<short,allocator<short> >::iterator>*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<short,allocator<short> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_55_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<short,allocator<short> >::iterator>* pobj;
         const reverse_iterator<vector<short,allocator<short> >::iterator> xobj = ((const reverse_iterator<vector<short,allocator<short> >::iterator>*) G__getstructoffset())->operator+((reverse_iterator<vector<short,allocator<short> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<short,allocator<short> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_55_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<short,allocator<short> >::iterator>& obj = ((reverse_iterator<vector<short,allocator<short> >::iterator>*) G__getstructoffset())->operator+=((reverse_iterator<vector<short,allocator<short> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_55_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<short,allocator<short> >::iterator>* pobj;
         const reverse_iterator<vector<short,allocator<short> >::iterator> xobj = ((const reverse_iterator<vector<short,allocator<short> >::iterator>*) G__getstructoffset())->operator-((reverse_iterator<vector<short,allocator<short> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<short,allocator<short> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_55_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<short,allocator<short> >::iterator>& obj = ((reverse_iterator<vector<short,allocator<short> >::iterator>*) G__getstructoffset())->operator-=((reverse_iterator<vector<short,allocator<short> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_55_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<short,allocator<short> >::iterator>::reference obj = ((const reverse_iterator<vector<short,allocator<short> >::iterator>*) G__getstructoffset())->operator[]((reverse_iterator<vector<short,allocator<short> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_55_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   reverse_iterator<vector<short,allocator<short> >::iterator>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new reverse_iterator<vector<short,allocator<short> >::iterator>(*(reverse_iterator<vector<short,allocator<short> >::iterator>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef reverse_iterator<vector<short,allocator<short> >::iterator> G__Treverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR;
static int G__vector_55_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (reverse_iterator<vector<short,allocator<short> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((reverse_iterator<vector<short,allocator<short> >::iterator>*) (soff+(sizeof(reverse_iterator<vector<short,allocator<short> >::iterator>)*i)))->~G__Treverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (reverse_iterator<vector<short,allocator<short> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((reverse_iterator<vector<short,allocator<short> >::iterator>*) (soff))->~G__Treverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_55_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<short,allocator<short> >::iterator>* dest = (reverse_iterator<vector<short,allocator<short> >::iterator>*) G__getstructoffset();
   const reverse_iterator<vector<short,allocator<short> >::iterator>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* allocator<long> */
static int G__vector_56_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<long>[n];
     } else {
       p = new((void*) gvp) allocator<long>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<long>;
     } else {
       p = new((void*) gvp) allocator<long>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_56_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<long>(*(allocator<long>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<long>(*(allocator<long>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_56_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 76, (long) ((const allocator<long>*) G__getstructoffset())->address(*(long*) G__Longref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_56_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 76, (long) ((const allocator<long>*) G__getstructoffset())->address(*(long*) G__Longref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_56_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 76, (long) ((allocator<long>*) G__getstructoffset())->allocate((allocator<long>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 76, (long) ((allocator<long>*) G__getstructoffset())->allocate((allocator<long>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_56_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<long>*) G__getstructoffset())->deallocate((allocator<long>::pointer) G__int(libp->para[0]), (allocator<long>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_56_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<long>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_56_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<long>*) G__getstructoffset())->construct((allocator<long>::pointer) G__int(libp->para[0]), *(long*) G__Longref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_56_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<long>*) G__getstructoffset())->destroy((allocator<long>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<long> G__TallocatorlElonggR;
static int G__vector_56_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<long>*) (soff+(sizeof(allocator<long>)*i)))->~G__TallocatorlElonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<long>*) (soff))->~G__TallocatorlElonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_56_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<long>* dest = (allocator<long>*) G__getstructoffset();
   const allocator<long>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<long,allocator<long> > */
static int G__vector_57_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = ((vector<long,allocator<long> >*) G__getstructoffset())->at((vector<long,allocator<long> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = ((vector<long,allocator<long> >*) G__getstructoffset())->begin();
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = ((vector<long,allocator<long> >*) G__getstructoffset())->end();
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::reverse_iterator* pobj;
         vector<long,allocator<long> >::reverse_iterator xobj = ((vector<long,allocator<long> >*) G__getstructoffset())->rbegin();
         pobj = new vector<long,allocator<long> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::reverse_iterator* pobj;
         vector<long,allocator<long> >::reverse_iterator xobj = ((vector<long,allocator<long> >*) G__getstructoffset())->rend();
         pobj = new vector<long,allocator<long> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<long,allocator<long> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<long,allocator<long> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long,allocator<long> >*) G__getstructoffset())->resize((vector<long,allocator<long> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long,allocator<long> >*) G__getstructoffset())->resize((vector<long,allocator<long> >::size_type) G__int(libp->para[0]), (long) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<long,allocator<long> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<long,allocator<long> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = ((vector<long,allocator<long> >*) G__getstructoffset())->operator[]((vector<long,allocator<long> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<long,allocator<long> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<long,allocator<long> >[n];
     } else {
       p = new((void*) gvp) vector<long,allocator<long> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<long,allocator<long> >;
     } else {
       p = new((void*) gvp) vector<long,allocator<long> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<long,allocator<long> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<long,allocator<long> >((vector<long,allocator<long> >::size_type) G__int(libp->para[0]), *(long*) G__Longref(&libp->para[1]));
     } else {
       p = new((void*) gvp) vector<long,allocator<long> >((vector<long,allocator<long> >::size_type) G__int(libp->para[0]), *(long*) G__Longref(&libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<long,allocator<long> >((vector<long,allocator<long> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<long,allocator<long> >((vector<long,allocator<long> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<long,allocator<long> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<long,allocator<long> >(*(vector<long,allocator<long> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<long,allocator<long> >(*(vector<long,allocator<long> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<long,allocator<long> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<long,allocator<long> >(*((vector<long,allocator<long> >::const_iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<long,allocator<long> >(*((vector<long,allocator<long> >::const_iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long,allocator<long> >& obj = ((vector<long,allocator<long> >*) G__getstructoffset())->operator=(*(vector<long,allocator<long> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long,allocator<long> >*) G__getstructoffset())->reserve((vector<long,allocator<long> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = ((vector<long,allocator<long> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = ((vector<long,allocator<long> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long,allocator<long> >*) G__getstructoffset())->push_back(*(long*) G__Longref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long,allocator<long> >*) G__getstructoffset())->swap(*(vector<long,allocator<long> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = ((vector<long,allocator<long> >*) G__getstructoffset())->insert(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *(long*) G__Longref(&libp->para[1]));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long,allocator<long> >*) G__getstructoffset())->insert(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::const_iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long,allocator<long> >*) G__getstructoffset())->insert(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), (vector<long,allocator<long> >::size_type) G__int(libp->para[1])
, *(long*) G__Longref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long,allocator<long> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long,allocator<long> >*) G__getstructoffset())->erase(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long,allocator<long> >*) G__getstructoffset())->erase(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_57_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long,allocator<long> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<long,allocator<long> > G__TvectorlElongcOallocatorlElonggRsPgR;
static int G__vector_57_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<long,allocator<long> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<long,allocator<long> >*) (soff+(sizeof(vector<long,allocator<long> >)*i)))->~G__TvectorlElongcOallocatorlElonggRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<long,allocator<long> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<long,allocator<long> >*) (soff))->~G__TvectorlElongcOallocatorlElonggRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<long,allocator<long> >::iterator */
static int G__vector_58_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<long,allocator<long> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<long,allocator<long> >::iterator[n];
     } else {
       p = new((void*) gvp) vector<long,allocator<long> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<long,allocator<long> >::iterator;
     } else {
       p = new((void*) gvp) vector<long,allocator<long> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_58_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<long,allocator<long> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<long,allocator<long> >::iterator(libp->para[0].ref ? *(const vector<long,allocator<long> >::iterator::pointer*) libp->para[0].ref : *(const vector<long,allocator<long> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   } else {
     p = new((void*) gvp) vector<long,allocator<long> >::iterator(libp->para[0].ref ? *(const vector<long,allocator<long> >::iterator::pointer*) libp->para[0].ref : *(const vector<long,allocator<long> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_58_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long,allocator<long> >::iterator::reference obj = ((const vector<long,allocator<long> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_58_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 76, (long) ((const vector<long,allocator<long> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_58_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long,allocator<long> >::iterator& obj = ((vector<long,allocator<long> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_58_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = ((vector<long,allocator<long> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_58_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long,allocator<long> >::iterator& obj = ((vector<long,allocator<long> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_58_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = ((vector<long,allocator<long> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_58_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long,allocator<long> >::iterator::reference obj = ((const vector<long,allocator<long> >::iterator*) G__getstructoffset())->operator[](*(vector<long,allocator<long> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_58_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long,allocator<long> >::iterator& obj = ((vector<long,allocator<long> >::iterator*) G__getstructoffset())->operator+=(*(vector<long,allocator<long> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_58_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long,allocator<long> >::iterator* pobj;
         const vector<long,allocator<long> >::iterator xobj = ((const vector<long,allocator<long> >::iterator*) G__getstructoffset())->operator+(*(vector<long,allocator<long> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_58_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long,allocator<long> >::iterator& obj = ((vector<long,allocator<long> >::iterator*) G__getstructoffset())->operator-=(*(vector<long,allocator<long> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_58_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long,allocator<long> >::iterator* pobj;
         const vector<long,allocator<long> >::iterator xobj = ((const vector<long,allocator<long> >::iterator*) G__getstructoffset())->operator-(*(vector<long,allocator<long> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_58_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long,allocator<long> >::iterator::pointer& obj = ((const vector<long,allocator<long> >::iterator*) G__getstructoffset())->base();
         result7->ref = (long) (&obj);
         G__letint(result7, 'L', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_58_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = ((vector<long,allocator<long> >::iterator*) G__getstructoffset())->operator=(*(vector<long,allocator<long> >::iterator*) libp->para[0].ref);
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_58_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vector<long,allocator<long> >::iterator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vector<long,allocator<long> >::iterator(*(vector<long,allocator<long> >::iterator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<long,allocator<long> >::iterator G__TvectorlElongcOallocatorlElonggRsPgRcLcLiterator;
static int G__vector_58_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<long,allocator<long> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<long,allocator<long> >::iterator*) (soff+(sizeof(vector<long,allocator<long> >::iterator)*i)))->~G__TvectorlElongcOallocatorlElonggRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<long,allocator<long> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<long,allocator<long> >::iterator*) (soff))->~G__TvectorlElongcOallocatorlElonggRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* reverse_iterator<vector<long,allocator<long> >::iterator> */
static int G__vector_59_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<long,allocator<long> >::iterator>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<long,allocator<long> >::iterator>[n];
     } else {
       p = new((void*) gvp) reverse_iterator<vector<long,allocator<long> >::iterator>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<long,allocator<long> >::iterator>;
     } else {
       p = new((void*) gvp) reverse_iterator<vector<long,allocator<long> >::iterator>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_59_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long,allocator<long> >::iterator* pobj;
         const vector<long,allocator<long> >::iterator xobj = ((const reverse_iterator<vector<long,allocator<long> >::iterator>*) G__getstructoffset())->base();
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_59_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<long,allocator<long> >::iterator>::reference obj = ((const reverse_iterator<vector<long,allocator<long> >::iterator>*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_59_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 76, (long) ((const reverse_iterator<vector<long,allocator<long> >::iterator>*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_59_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<long,allocator<long> >::iterator>& obj = ((reverse_iterator<vector<long,allocator<long> >::iterator>*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_59_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<long,allocator<long> >::iterator>* pobj;
         reverse_iterator<vector<long,allocator<long> >::iterator> xobj = ((reverse_iterator<vector<long,allocator<long> >::iterator>*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<long,allocator<long> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_59_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<long,allocator<long> >::iterator>& obj = ((reverse_iterator<vector<long,allocator<long> >::iterator>*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_59_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<long,allocator<long> >::iterator>* pobj;
         reverse_iterator<vector<long,allocator<long> >::iterator> xobj = ((reverse_iterator<vector<long,allocator<long> >::iterator>*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<long,allocator<long> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_59_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<long,allocator<long> >::iterator>* pobj;
         const reverse_iterator<vector<long,allocator<long> >::iterator> xobj = ((const reverse_iterator<vector<long,allocator<long> >::iterator>*) G__getstructoffset())->operator+((reverse_iterator<vector<long,allocator<long> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<long,allocator<long> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_59_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<long,allocator<long> >::iterator>& obj = ((reverse_iterator<vector<long,allocator<long> >::iterator>*) G__getstructoffset())->operator+=((reverse_iterator<vector<long,allocator<long> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_59_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<long,allocator<long> >::iterator>* pobj;
         const reverse_iterator<vector<long,allocator<long> >::iterator> xobj = ((const reverse_iterator<vector<long,allocator<long> >::iterator>*) G__getstructoffset())->operator-((reverse_iterator<vector<long,allocator<long> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<long,allocator<long> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_59_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<long,allocator<long> >::iterator>& obj = ((reverse_iterator<vector<long,allocator<long> >::iterator>*) G__getstructoffset())->operator-=((reverse_iterator<vector<long,allocator<long> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_59_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<long,allocator<long> >::iterator>::reference obj = ((const reverse_iterator<vector<long,allocator<long> >::iterator>*) G__getstructoffset())->operator[]((reverse_iterator<vector<long,allocator<long> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_59_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   reverse_iterator<vector<long,allocator<long> >::iterator>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new reverse_iterator<vector<long,allocator<long> >::iterator>(*(reverse_iterator<vector<long,allocator<long> >::iterator>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef reverse_iterator<vector<long,allocator<long> >::iterator> G__Treverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR;
static int G__vector_59_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (reverse_iterator<vector<long,allocator<long> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((reverse_iterator<vector<long,allocator<long> >::iterator>*) (soff+(sizeof(reverse_iterator<vector<long,allocator<long> >::iterator>)*i)))->~G__Treverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (reverse_iterator<vector<long,allocator<long> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((reverse_iterator<vector<long,allocator<long> >::iterator>*) (soff))->~G__Treverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_59_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<long,allocator<long> >::iterator>* dest = (reverse_iterator<vector<long,allocator<long> >::iterator>*) G__getstructoffset();
   const reverse_iterator<vector<long,allocator<long> >::iterator>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* allocator<unsigned char> */
static int G__vector_60_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<unsigned char>[n];
     } else {
       p = new((void*) gvp) allocator<unsigned char>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<unsigned char>;
     } else {
       p = new((void*) gvp) allocator<unsigned char>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_60_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<unsigned char>(*(allocator<unsigned char>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<unsigned char>(*(allocator<unsigned char>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_60_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((const allocator<unsigned char>*) G__getstructoffset())->address(*(unsigned char*) G__UCharref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_60_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((const allocator<unsigned char>*) G__getstructoffset())->address(*(unsigned char*) G__UCharref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_60_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 66, (long) ((allocator<unsigned char>*) G__getstructoffset())->allocate((allocator<unsigned char>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 66, (long) ((allocator<unsigned char>*) G__getstructoffset())->allocate((allocator<unsigned char>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_60_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<unsigned char>*) G__getstructoffset())->deallocate((allocator<unsigned char>::pointer) G__int(libp->para[0]), (allocator<unsigned char>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_60_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<unsigned char>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_60_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<unsigned char>*) G__getstructoffset())->construct((allocator<unsigned char>::pointer) G__int(libp->para[0]), *(unsigned char*) G__UCharref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_60_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<unsigned char>*) G__getstructoffset())->destroy((allocator<unsigned char>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<unsigned char> G__TallocatorlEunsignedsPchargR;
static int G__vector_60_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<unsigned char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<unsigned char>*) (soff+(sizeof(allocator<unsigned char>)*i)))->~G__TallocatorlEunsignedsPchargR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<unsigned char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<unsigned char>*) (soff))->~G__TallocatorlEunsignedsPchargR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_60_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<unsigned char>* dest = (allocator<unsigned char>*) G__getstructoffset();
   const allocator<unsigned char>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<unsigned char,allocator<unsigned char> > */
static int G__vector_61_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned char& obj = ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->at((vector<unsigned char,allocator<unsigned char> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->begin();
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->end();
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::reverse_iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::reverse_iterator xobj = ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->rbegin();
         pobj = new vector<unsigned char,allocator<unsigned char> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::reverse_iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::reverse_iterator xobj = ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->rend();
         pobj = new vector<unsigned char,allocator<unsigned char> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->resize((vector<unsigned char,allocator<unsigned char> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->resize((vector<unsigned char,allocator<unsigned char> >::size_type) G__int(libp->para[0]), (unsigned char) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned char& obj = ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->operator[]((vector<unsigned char,allocator<unsigned char> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned char,allocator<unsigned char> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned char,allocator<unsigned char> >[n];
     } else {
       p = new((void*) gvp) vector<unsigned char,allocator<unsigned char> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned char,allocator<unsigned char> >;
     } else {
       p = new((void*) gvp) vector<unsigned char,allocator<unsigned char> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned char,allocator<unsigned char> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned char,allocator<unsigned char> >((vector<unsigned char,allocator<unsigned char> >::size_type) G__int(libp->para[0]), *(unsigned char*) G__UCharref(&libp->para[1]));
     } else {
       p = new((void*) gvp) vector<unsigned char,allocator<unsigned char> >((vector<unsigned char,allocator<unsigned char> >::size_type) G__int(libp->para[0]), *(unsigned char*) G__UCharref(&libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned char,allocator<unsigned char> >((vector<unsigned char,allocator<unsigned char> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<unsigned char,allocator<unsigned char> >((vector<unsigned char,allocator<unsigned char> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned char,allocator<unsigned char> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<unsigned char,allocator<unsigned char> >(*(vector<unsigned char,allocator<unsigned char> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<unsigned char,allocator<unsigned char> >(*(vector<unsigned char,allocator<unsigned char> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned char,allocator<unsigned char> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<unsigned char,allocator<unsigned char> >(*((vector<unsigned char,allocator<unsigned char> >::const_iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<unsigned char,allocator<unsigned char> >(*((vector<unsigned char,allocator<unsigned char> >::const_iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned char,allocator<unsigned char> >& obj = ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->operator=(*(vector<unsigned char,allocator<unsigned char> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->reserve((vector<unsigned char,allocator<unsigned char> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned char& obj = ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned char& obj = ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->push_back(*(unsigned char*) G__UCharref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->swap(*(vector<unsigned char,allocator<unsigned char> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->insert(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *(unsigned char*) G__UCharref(&libp->para[1]));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->insert(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::const_iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->insert(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), (vector<unsigned char,allocator<unsigned char> >::size_type) G__int(libp->para[1])
, *(unsigned char*) G__UCharref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->erase(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->erase(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_61_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned char,allocator<unsigned char> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<unsigned char,allocator<unsigned char> > G__TvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR;
static int G__vector_61_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<unsigned char,allocator<unsigned char> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<unsigned char,allocator<unsigned char> >*) (soff+(sizeof(vector<unsigned char,allocator<unsigned char> >)*i)))->~G__TvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<unsigned char,allocator<unsigned char> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<unsigned char,allocator<unsigned char> >*) (soff))->~G__TvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<unsigned char,allocator<unsigned char> >::iterator */
static int G__vector_62_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned char,allocator<unsigned char> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned char,allocator<unsigned char> >::iterator[n];
     } else {
       p = new((void*) gvp) vector<unsigned char,allocator<unsigned char> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned char,allocator<unsigned char> >::iterator;
     } else {
       p = new((void*) gvp) vector<unsigned char,allocator<unsigned char> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_62_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned char,allocator<unsigned char> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<unsigned char,allocator<unsigned char> >::iterator(libp->para[0].ref ? *(const vector<unsigned char,allocator<unsigned char> >::iterator::pointer*) libp->para[0].ref : *(const vector<unsigned char,allocator<unsigned char> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   } else {
     p = new((void*) gvp) vector<unsigned char,allocator<unsigned char> >::iterator(libp->para[0].ref ? *(const vector<unsigned char,allocator<unsigned char> >::iterator::pointer*) libp->para[0].ref : *(const vector<unsigned char,allocator<unsigned char> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_62_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned char,allocator<unsigned char> >::iterator::reference obj = ((const vector<unsigned char,allocator<unsigned char> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_62_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((const vector<unsigned char,allocator<unsigned char> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_62_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned char,allocator<unsigned char> >::iterator& obj = ((vector<unsigned char,allocator<unsigned char> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_62_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = ((vector<unsigned char,allocator<unsigned char> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_62_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned char,allocator<unsigned char> >::iterator& obj = ((vector<unsigned char,allocator<unsigned char> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_62_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = ((vector<unsigned char,allocator<unsigned char> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_62_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned char,allocator<unsigned char> >::iterator::reference obj = ((const vector<unsigned char,allocator<unsigned char> >::iterator*) G__getstructoffset())->operator[](*(vector<unsigned char,allocator<unsigned char> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_62_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned char,allocator<unsigned char> >::iterator& obj = ((vector<unsigned char,allocator<unsigned char> >::iterator*) G__getstructoffset())->operator+=(*(vector<unsigned char,allocator<unsigned char> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_62_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         const vector<unsigned char,allocator<unsigned char> >::iterator xobj = ((const vector<unsigned char,allocator<unsigned char> >::iterator*) G__getstructoffset())->operator+(*(vector<unsigned char,allocator<unsigned char> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_62_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned char,allocator<unsigned char> >::iterator& obj = ((vector<unsigned char,allocator<unsigned char> >::iterator*) G__getstructoffset())->operator-=(*(vector<unsigned char,allocator<unsigned char> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_62_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         const vector<unsigned char,allocator<unsigned char> >::iterator xobj = ((const vector<unsigned char,allocator<unsigned char> >::iterator*) G__getstructoffset())->operator-(*(vector<unsigned char,allocator<unsigned char> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_62_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned char,allocator<unsigned char> >::iterator::pointer& obj = ((const vector<unsigned char,allocator<unsigned char> >::iterator*) G__getstructoffset())->base();
         result7->ref = (long) (&obj);
         G__letint(result7, 'B', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_62_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = ((vector<unsigned char,allocator<unsigned char> >::iterator*) G__getstructoffset())->operator=(*(vector<unsigned char,allocator<unsigned char> >::iterator*) libp->para[0].ref);
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_62_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vector<unsigned char,allocator<unsigned char> >::iterator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vector<unsigned char,allocator<unsigned char> >::iterator(*(vector<unsigned char,allocator<unsigned char> >::iterator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<unsigned char,allocator<unsigned char> >::iterator G__TvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator;
static int G__vector_62_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<unsigned char,allocator<unsigned char> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<unsigned char,allocator<unsigned char> >::iterator*) (soff+(sizeof(vector<unsigned char,allocator<unsigned char> >::iterator)*i)))->~G__TvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<unsigned char,allocator<unsigned char> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<unsigned char,allocator<unsigned char> >::iterator*) (soff))->~G__TvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator> */
static int G__vector_63_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>[n];
     } else {
       p = new((void*) gvp) reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>;
     } else {
       p = new((void*) gvp) reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_63_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         const vector<unsigned char,allocator<unsigned char> >::iterator xobj = ((const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) G__getstructoffset())->base();
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_63_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>::reference obj = ((const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_63_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_63_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>& obj = ((reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_63_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>* pobj;
         reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator> xobj = ((reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_63_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>& obj = ((reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_63_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>* pobj;
         reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator> xobj = ((reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_63_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>* pobj;
         const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator> xobj = ((const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) G__getstructoffset())->operator+((reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_63_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>& obj = ((reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) G__getstructoffset())->operator+=((reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_63_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>* pobj;
         const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator> xobj = ((const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) G__getstructoffset())->operator-((reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_63_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>& obj = ((reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) G__getstructoffset())->operator-=((reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_63_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>::reference obj = ((const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) G__getstructoffset())->operator[]((reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_63_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>(*(reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator> G__Treverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR;
static int G__vector_63_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) (soff+(sizeof(reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>)*i)))->~G__Treverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) (soff))->~G__Treverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_63_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>* dest = (reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*) G__getstructoffset();
   const reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* allocator<unsigned short> */
static int G__vector_64_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<unsigned short>[n];
     } else {
       p = new((void*) gvp) allocator<unsigned short>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<unsigned short>;
     } else {
       p = new((void*) gvp) allocator<unsigned short>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_64_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<unsigned short>(*(allocator<unsigned short>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<unsigned short>(*(allocator<unsigned short>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_64_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 82, (long) ((const allocator<unsigned short>*) G__getstructoffset())->address(*(unsigned short*) G__UShortref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_64_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 82, (long) ((const allocator<unsigned short>*) G__getstructoffset())->address(*(unsigned short*) G__UShortref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_64_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 82, (long) ((allocator<unsigned short>*) G__getstructoffset())->allocate((allocator<unsigned short>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 82, (long) ((allocator<unsigned short>*) G__getstructoffset())->allocate((allocator<unsigned short>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_64_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<unsigned short>*) G__getstructoffset())->deallocate((allocator<unsigned short>::pointer) G__int(libp->para[0]), (allocator<unsigned short>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_64_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<unsigned short>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_64_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<unsigned short>*) G__getstructoffset())->construct((allocator<unsigned short>::pointer) G__int(libp->para[0]), *(unsigned short*) G__UShortref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_64_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<unsigned short>*) G__getstructoffset())->destroy((allocator<unsigned short>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<unsigned short> G__TallocatorlEunsignedsPshortgR;
static int G__vector_64_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<unsigned short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<unsigned short>*) (soff+(sizeof(allocator<unsigned short>)*i)))->~G__TallocatorlEunsignedsPshortgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<unsigned short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<unsigned short>*) (soff))->~G__TallocatorlEunsignedsPshortgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_64_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<unsigned short>* dest = (allocator<unsigned short>*) G__getstructoffset();
   const allocator<unsigned short>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<unsigned short,allocator<unsigned short> > */
static int G__vector_65_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned short& obj = ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->at((vector<unsigned short,allocator<unsigned short> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->begin();
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->end();
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::reverse_iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::reverse_iterator xobj = ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->rbegin();
         pobj = new vector<unsigned short,allocator<unsigned short> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::reverse_iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::reverse_iterator xobj = ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->rend();
         pobj = new vector<unsigned short,allocator<unsigned short> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->resize((vector<unsigned short,allocator<unsigned short> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->resize((vector<unsigned short,allocator<unsigned short> >::size_type) G__int(libp->para[0]), (unsigned short) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned short& obj = ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->operator[]((vector<unsigned short,allocator<unsigned short> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned short,allocator<unsigned short> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned short,allocator<unsigned short> >[n];
     } else {
       p = new((void*) gvp) vector<unsigned short,allocator<unsigned short> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned short,allocator<unsigned short> >;
     } else {
       p = new((void*) gvp) vector<unsigned short,allocator<unsigned short> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned short,allocator<unsigned short> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned short,allocator<unsigned short> >((vector<unsigned short,allocator<unsigned short> >::size_type) G__int(libp->para[0]), *(unsigned short*) G__UShortref(&libp->para[1]));
     } else {
       p = new((void*) gvp) vector<unsigned short,allocator<unsigned short> >((vector<unsigned short,allocator<unsigned short> >::size_type) G__int(libp->para[0]), *(unsigned short*) G__UShortref(&libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned short,allocator<unsigned short> >((vector<unsigned short,allocator<unsigned short> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<unsigned short,allocator<unsigned short> >((vector<unsigned short,allocator<unsigned short> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned short,allocator<unsigned short> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<unsigned short,allocator<unsigned short> >(*(vector<unsigned short,allocator<unsigned short> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<unsigned short,allocator<unsigned short> >(*(vector<unsigned short,allocator<unsigned short> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned short,allocator<unsigned short> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<unsigned short,allocator<unsigned short> >(*((vector<unsigned short,allocator<unsigned short> >::const_iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<unsigned short,allocator<unsigned short> >(*((vector<unsigned short,allocator<unsigned short> >::const_iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >& obj = ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->operator=(*(vector<unsigned short,allocator<unsigned short> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->reserve((vector<unsigned short,allocator<unsigned short> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned short& obj = ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned short& obj = ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->push_back(*(unsigned short*) G__UShortref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->swap(*(vector<unsigned short,allocator<unsigned short> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->insert(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *(unsigned short*) G__UShortref(&libp->para[1]));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->insert(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::const_iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->insert(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), (vector<unsigned short,allocator<unsigned short> >::size_type) G__int(libp->para[1])
, *(unsigned short*) G__UShortref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->erase(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->erase(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_65_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned short,allocator<unsigned short> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<unsigned short,allocator<unsigned short> > G__TvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR;
static int G__vector_65_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<unsigned short,allocator<unsigned short> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<unsigned short,allocator<unsigned short> >*) (soff+(sizeof(vector<unsigned short,allocator<unsigned short> >)*i)))->~G__TvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<unsigned short,allocator<unsigned short> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<unsigned short,allocator<unsigned short> >*) (soff))->~G__TvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<unsigned short,allocator<unsigned short> >::iterator */
static int G__vector_66_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned short,allocator<unsigned short> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned short,allocator<unsigned short> >::iterator[n];
     } else {
       p = new((void*) gvp) vector<unsigned short,allocator<unsigned short> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned short,allocator<unsigned short> >::iterator;
     } else {
       p = new((void*) gvp) vector<unsigned short,allocator<unsigned short> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_66_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned short,allocator<unsigned short> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<unsigned short,allocator<unsigned short> >::iterator(libp->para[0].ref ? *(const vector<unsigned short,allocator<unsigned short> >::iterator::pointer*) libp->para[0].ref : *(const vector<unsigned short,allocator<unsigned short> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   } else {
     p = new((void*) gvp) vector<unsigned short,allocator<unsigned short> >::iterator(libp->para[0].ref ? *(const vector<unsigned short,allocator<unsigned short> >::iterator::pointer*) libp->para[0].ref : *(const vector<unsigned short,allocator<unsigned short> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_66_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >::iterator::reference obj = ((const vector<unsigned short,allocator<unsigned short> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_66_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 82, (long) ((const vector<unsigned short,allocator<unsigned short> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_66_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >::iterator& obj = ((vector<unsigned short,allocator<unsigned short> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_66_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = ((vector<unsigned short,allocator<unsigned short> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_66_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >::iterator& obj = ((vector<unsigned short,allocator<unsigned short> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_66_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = ((vector<unsigned short,allocator<unsigned short> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_66_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >::iterator::reference obj = ((const vector<unsigned short,allocator<unsigned short> >::iterator*) G__getstructoffset())->operator[](*(vector<unsigned short,allocator<unsigned short> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_66_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >::iterator& obj = ((vector<unsigned short,allocator<unsigned short> >::iterator*) G__getstructoffset())->operator+=(*(vector<unsigned short,allocator<unsigned short> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_66_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         const vector<unsigned short,allocator<unsigned short> >::iterator xobj = ((const vector<unsigned short,allocator<unsigned short> >::iterator*) G__getstructoffset())->operator+(*(vector<unsigned short,allocator<unsigned short> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_66_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >::iterator& obj = ((vector<unsigned short,allocator<unsigned short> >::iterator*) G__getstructoffset())->operator-=(*(vector<unsigned short,allocator<unsigned short> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_66_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         const vector<unsigned short,allocator<unsigned short> >::iterator xobj = ((const vector<unsigned short,allocator<unsigned short> >::iterator*) G__getstructoffset())->operator-(*(vector<unsigned short,allocator<unsigned short> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_66_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >::iterator::pointer& obj = ((const vector<unsigned short,allocator<unsigned short> >::iterator*) G__getstructoffset())->base();
         result7->ref = (long) (&obj);
         G__letint(result7, 'R', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_66_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = ((vector<unsigned short,allocator<unsigned short> >::iterator*) G__getstructoffset())->operator=(*(vector<unsigned short,allocator<unsigned short> >::iterator*) libp->para[0].ref);
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_66_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vector<unsigned short,allocator<unsigned short> >::iterator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vector<unsigned short,allocator<unsigned short> >::iterator(*(vector<unsigned short,allocator<unsigned short> >::iterator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<unsigned short,allocator<unsigned short> >::iterator G__TvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator;
static int G__vector_66_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<unsigned short,allocator<unsigned short> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<unsigned short,allocator<unsigned short> >::iterator*) (soff+(sizeof(vector<unsigned short,allocator<unsigned short> >::iterator)*i)))->~G__TvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<unsigned short,allocator<unsigned short> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<unsigned short,allocator<unsigned short> >::iterator*) (soff))->~G__TvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator> */
static int G__vector_67_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>[n];
     } else {
       p = new((void*) gvp) reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>;
     } else {
       p = new((void*) gvp) reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_67_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         const vector<unsigned short,allocator<unsigned short> >::iterator xobj = ((const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) G__getstructoffset())->base();
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_67_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>::reference obj = ((const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_67_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 82, (long) ((const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_67_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>& obj = ((reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_67_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>* pobj;
         reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator> xobj = ((reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_67_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>& obj = ((reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_67_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>* pobj;
         reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator> xobj = ((reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_67_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>* pobj;
         const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator> xobj = ((const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) G__getstructoffset())->operator+((reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_67_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>& obj = ((reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) G__getstructoffset())->operator+=((reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_67_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>* pobj;
         const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator> xobj = ((const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) G__getstructoffset())->operator-((reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_67_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>& obj = ((reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) G__getstructoffset())->operator-=((reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_67_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>::reference obj = ((const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) G__getstructoffset())->operator[]((reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_67_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>(*(reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator> G__Treverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR;
static int G__vector_67_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) (soff+(sizeof(reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>)*i)))->~G__Treverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) (soff))->~G__Treverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_67_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>* dest = (reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*) G__getstructoffset();
   const reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* allocator<unsigned int> */
static int G__vector_68_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<unsigned int>[n];
     } else {
       p = new((void*) gvp) allocator<unsigned int>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<unsigned int>;
     } else {
       p = new((void*) gvp) allocator<unsigned int>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_68_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<unsigned int>(*(allocator<unsigned int>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<unsigned int>(*(allocator<unsigned int>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_68_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((const allocator<unsigned int>*) G__getstructoffset())->address(*(unsigned int*) G__UIntref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_68_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((const allocator<unsigned int>*) G__getstructoffset())->address(*(unsigned int*) G__UIntref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_68_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 72, (long) ((allocator<unsigned int>*) G__getstructoffset())->allocate((allocator<unsigned int>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 72, (long) ((allocator<unsigned int>*) G__getstructoffset())->allocate((allocator<unsigned int>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_68_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<unsigned int>*) G__getstructoffset())->deallocate((allocator<unsigned int>::pointer) G__int(libp->para[0]), (allocator<unsigned int>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_68_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<unsigned int>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_68_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<unsigned int>*) G__getstructoffset())->construct((allocator<unsigned int>::pointer) G__int(libp->para[0]), *(unsigned int*) G__UIntref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_68_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<unsigned int>*) G__getstructoffset())->destroy((allocator<unsigned int>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<unsigned int> G__TallocatorlEunsignedsPintgR;
static int G__vector_68_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<unsigned int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<unsigned int>*) (soff+(sizeof(allocator<unsigned int>)*i)))->~G__TallocatorlEunsignedsPintgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<unsigned int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<unsigned int>*) (soff))->~G__TallocatorlEunsignedsPintgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_68_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<unsigned int>* dest = (allocator<unsigned int>*) G__getstructoffset();
   const allocator<unsigned int>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<unsigned int,allocator<unsigned int> > */
static int G__vector_69_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned int& obj = ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->at((vector<unsigned int,allocator<unsigned int> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->begin();
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->end();
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::reverse_iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::reverse_iterator xobj = ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->rbegin();
         pobj = new vector<unsigned int,allocator<unsigned int> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::reverse_iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::reverse_iterator xobj = ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->rend();
         pobj = new vector<unsigned int,allocator<unsigned int> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->resize((vector<unsigned int,allocator<unsigned int> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->resize((vector<unsigned int,allocator<unsigned int> >::size_type) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned int& obj = ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->operator[]((vector<unsigned int,allocator<unsigned int> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned int,allocator<unsigned int> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned int,allocator<unsigned int> >[n];
     } else {
       p = new((void*) gvp) vector<unsigned int,allocator<unsigned int> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned int,allocator<unsigned int> >;
     } else {
       p = new((void*) gvp) vector<unsigned int,allocator<unsigned int> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned int,allocator<unsigned int> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned int,allocator<unsigned int> >((vector<unsigned int,allocator<unsigned int> >::size_type) G__int(libp->para[0]), *(unsigned int*) G__UIntref(&libp->para[1]));
     } else {
       p = new((void*) gvp) vector<unsigned int,allocator<unsigned int> >((vector<unsigned int,allocator<unsigned int> >::size_type) G__int(libp->para[0]), *(unsigned int*) G__UIntref(&libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned int,allocator<unsigned int> >((vector<unsigned int,allocator<unsigned int> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<unsigned int,allocator<unsigned int> >((vector<unsigned int,allocator<unsigned int> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned int,allocator<unsigned int> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<unsigned int,allocator<unsigned int> >(*(vector<unsigned int,allocator<unsigned int> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<unsigned int,allocator<unsigned int> >(*(vector<unsigned int,allocator<unsigned int> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned int,allocator<unsigned int> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<unsigned int,allocator<unsigned int> >(*((vector<unsigned int,allocator<unsigned int> >::const_iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<unsigned int,allocator<unsigned int> >(*((vector<unsigned int,allocator<unsigned int> >::const_iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int,allocator<unsigned int> >& obj = ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->operator=(*(vector<unsigned int,allocator<unsigned int> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->reserve((vector<unsigned int,allocator<unsigned int> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned int& obj = ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned int& obj = ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->push_back(*(unsigned int*) G__UIntref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->swap(*(vector<unsigned int,allocator<unsigned int> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->insert(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *(unsigned int*) G__UIntref(&libp->para[1]));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->insert(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::const_iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->insert(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), (vector<unsigned int,allocator<unsigned int> >::size_type) G__int(libp->para[1])
, *(unsigned int*) G__UIntref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->erase(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->erase(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_69_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned int,allocator<unsigned int> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<unsigned int,allocator<unsigned int> > G__TvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR;
static int G__vector_69_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<unsigned int,allocator<unsigned int> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<unsigned int,allocator<unsigned int> >*) (soff+(sizeof(vector<unsigned int,allocator<unsigned int> >)*i)))->~G__TvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<unsigned int,allocator<unsigned int> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<unsigned int,allocator<unsigned int> >*) (soff))->~G__TvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<unsigned int,allocator<unsigned int> >::iterator */
static int G__vector_70_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned int,allocator<unsigned int> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned int,allocator<unsigned int> >::iterator[n];
     } else {
       p = new((void*) gvp) vector<unsigned int,allocator<unsigned int> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned int,allocator<unsigned int> >::iterator;
     } else {
       p = new((void*) gvp) vector<unsigned int,allocator<unsigned int> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_70_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned int,allocator<unsigned int> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<unsigned int,allocator<unsigned int> >::iterator(libp->para[0].ref ? *(const vector<unsigned int,allocator<unsigned int> >::iterator::pointer*) libp->para[0].ref : *(const vector<unsigned int,allocator<unsigned int> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   } else {
     p = new((void*) gvp) vector<unsigned int,allocator<unsigned int> >::iterator(libp->para[0].ref ? *(const vector<unsigned int,allocator<unsigned int> >::iterator::pointer*) libp->para[0].ref : *(const vector<unsigned int,allocator<unsigned int> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_70_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int,allocator<unsigned int> >::iterator::reference obj = ((const vector<unsigned int,allocator<unsigned int> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_70_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((const vector<unsigned int,allocator<unsigned int> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_70_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int,allocator<unsigned int> >::iterator& obj = ((vector<unsigned int,allocator<unsigned int> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_70_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = ((vector<unsigned int,allocator<unsigned int> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_70_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int,allocator<unsigned int> >::iterator& obj = ((vector<unsigned int,allocator<unsigned int> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_70_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = ((vector<unsigned int,allocator<unsigned int> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_70_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int,allocator<unsigned int> >::iterator::reference obj = ((const vector<unsigned int,allocator<unsigned int> >::iterator*) G__getstructoffset())->operator[](*(vector<unsigned int,allocator<unsigned int> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_70_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int,allocator<unsigned int> >::iterator& obj = ((vector<unsigned int,allocator<unsigned int> >::iterator*) G__getstructoffset())->operator+=(*(vector<unsigned int,allocator<unsigned int> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_70_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         const vector<unsigned int,allocator<unsigned int> >::iterator xobj = ((const vector<unsigned int,allocator<unsigned int> >::iterator*) G__getstructoffset())->operator+(*(vector<unsigned int,allocator<unsigned int> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_70_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int,allocator<unsigned int> >::iterator& obj = ((vector<unsigned int,allocator<unsigned int> >::iterator*) G__getstructoffset())->operator-=(*(vector<unsigned int,allocator<unsigned int> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_70_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         const vector<unsigned int,allocator<unsigned int> >::iterator xobj = ((const vector<unsigned int,allocator<unsigned int> >::iterator*) G__getstructoffset())->operator-(*(vector<unsigned int,allocator<unsigned int> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_70_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int,allocator<unsigned int> >::iterator::pointer& obj = ((const vector<unsigned int,allocator<unsigned int> >::iterator*) G__getstructoffset())->base();
         result7->ref = (long) (&obj);
         G__letint(result7, 'H', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_70_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = ((vector<unsigned int,allocator<unsigned int> >::iterator*) G__getstructoffset())->operator=(*(vector<unsigned int,allocator<unsigned int> >::iterator*) libp->para[0].ref);
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_70_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vector<unsigned int,allocator<unsigned int> >::iterator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vector<unsigned int,allocator<unsigned int> >::iterator(*(vector<unsigned int,allocator<unsigned int> >::iterator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<unsigned int,allocator<unsigned int> >::iterator G__TvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator;
static int G__vector_70_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<unsigned int,allocator<unsigned int> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<unsigned int,allocator<unsigned int> >::iterator*) (soff+(sizeof(vector<unsigned int,allocator<unsigned int> >::iterator)*i)))->~G__TvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<unsigned int,allocator<unsigned int> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<unsigned int,allocator<unsigned int> >::iterator*) (soff))->~G__TvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator> */
static int G__vector_71_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>[n];
     } else {
       p = new((void*) gvp) reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>;
     } else {
       p = new((void*) gvp) reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_71_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         const vector<unsigned int,allocator<unsigned int> >::iterator xobj = ((const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) G__getstructoffset())->base();
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_71_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>::reference obj = ((const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_71_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_71_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>& obj = ((reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_71_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>* pobj;
         reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator> xobj = ((reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_71_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>& obj = ((reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_71_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>* pobj;
         reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator> xobj = ((reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_71_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>* pobj;
         const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator> xobj = ((const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) G__getstructoffset())->operator+((reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_71_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>& obj = ((reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) G__getstructoffset())->operator+=((reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_71_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>* pobj;
         const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator> xobj = ((const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) G__getstructoffset())->operator-((reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_71_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>& obj = ((reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) G__getstructoffset())->operator-=((reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_71_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>::reference obj = ((const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) G__getstructoffset())->operator[]((reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_71_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>(*(reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator> G__Treverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR;
static int G__vector_71_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) (soff+(sizeof(reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>)*i)))->~G__Treverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) (soff))->~G__Treverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_71_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>* dest = (reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*) G__getstructoffset();
   const reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* allocator<unsigned long> */
static int G__vector_72_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<unsigned long>[n];
     } else {
       p = new((void*) gvp) allocator<unsigned long>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<unsigned long>;
     } else {
       p = new((void*) gvp) allocator<unsigned long>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_72_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<unsigned long>(*(allocator<unsigned long>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<unsigned long>(*(allocator<unsigned long>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_72_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 75, (long) ((const allocator<unsigned long>*) G__getstructoffset())->address(*(unsigned long*) G__ULongref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_72_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 75, (long) ((const allocator<unsigned long>*) G__getstructoffset())->address(*(unsigned long*) G__ULongref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_72_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 75, (long) ((allocator<unsigned long>*) G__getstructoffset())->allocate((allocator<unsigned long>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 75, (long) ((allocator<unsigned long>*) G__getstructoffset())->allocate((allocator<unsigned long>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_72_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<unsigned long>*) G__getstructoffset())->deallocate((allocator<unsigned long>::pointer) G__int(libp->para[0]), (allocator<unsigned long>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_72_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<unsigned long>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_72_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<unsigned long>*) G__getstructoffset())->construct((allocator<unsigned long>::pointer) G__int(libp->para[0]), *(unsigned long*) G__ULongref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_72_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<unsigned long>*) G__getstructoffset())->destroy((allocator<unsigned long>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<unsigned long> G__TallocatorlEunsignedsPlonggR;
static int G__vector_72_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<unsigned long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<unsigned long>*) (soff+(sizeof(allocator<unsigned long>)*i)))->~G__TallocatorlEunsignedsPlonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<unsigned long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<unsigned long>*) (soff))->~G__TallocatorlEunsignedsPlonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_72_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<unsigned long>* dest = (allocator<unsigned long>*) G__getstructoffset();
   const allocator<unsigned long>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<unsigned long,allocator<unsigned long> > */
static int G__vector_73_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned long& obj = ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->at((vector<unsigned long,allocator<unsigned long> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->begin();
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->end();
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::reverse_iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::reverse_iterator xobj = ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->rbegin();
         pobj = new vector<unsigned long,allocator<unsigned long> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::reverse_iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::reverse_iterator xobj = ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->rend();
         pobj = new vector<unsigned long,allocator<unsigned long> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->resize((vector<unsigned long,allocator<unsigned long> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->resize((vector<unsigned long,allocator<unsigned long> >::size_type) G__int(libp->para[0]), (unsigned long) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned long& obj = ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->operator[]((vector<unsigned long,allocator<unsigned long> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned long,allocator<unsigned long> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned long,allocator<unsigned long> >[n];
     } else {
       p = new((void*) gvp) vector<unsigned long,allocator<unsigned long> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned long,allocator<unsigned long> >;
     } else {
       p = new((void*) gvp) vector<unsigned long,allocator<unsigned long> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned long,allocator<unsigned long> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned long,allocator<unsigned long> >((vector<unsigned long,allocator<unsigned long> >::size_type) G__int(libp->para[0]), *(unsigned long*) G__ULongref(&libp->para[1]));
     } else {
       p = new((void*) gvp) vector<unsigned long,allocator<unsigned long> >((vector<unsigned long,allocator<unsigned long> >::size_type) G__int(libp->para[0]), *(unsigned long*) G__ULongref(&libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned long,allocator<unsigned long> >((vector<unsigned long,allocator<unsigned long> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<unsigned long,allocator<unsigned long> >((vector<unsigned long,allocator<unsigned long> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned long,allocator<unsigned long> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<unsigned long,allocator<unsigned long> >(*(vector<unsigned long,allocator<unsigned long> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<unsigned long,allocator<unsigned long> >(*(vector<unsigned long,allocator<unsigned long> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned long,allocator<unsigned long> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<unsigned long,allocator<unsigned long> >(*((vector<unsigned long,allocator<unsigned long> >::const_iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<unsigned long,allocator<unsigned long> >(*((vector<unsigned long,allocator<unsigned long> >::const_iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long,allocator<unsigned long> >& obj = ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->operator=(*(vector<unsigned long,allocator<unsigned long> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->reserve((vector<unsigned long,allocator<unsigned long> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned long& obj = ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned long& obj = ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->push_back(*(unsigned long*) G__ULongref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->swap(*(vector<unsigned long,allocator<unsigned long> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->insert(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *(unsigned long*) G__ULongref(&libp->para[1]));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->insert(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::const_iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->insert(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), (vector<unsigned long,allocator<unsigned long> >::size_type) G__int(libp->para[1])
, *(unsigned long*) G__ULongref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->erase(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->erase(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_73_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<unsigned long,allocator<unsigned long> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<unsigned long,allocator<unsigned long> > G__TvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR;
static int G__vector_73_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<unsigned long,allocator<unsigned long> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<unsigned long,allocator<unsigned long> >*) (soff+(sizeof(vector<unsigned long,allocator<unsigned long> >)*i)))->~G__TvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<unsigned long,allocator<unsigned long> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<unsigned long,allocator<unsigned long> >*) (soff))->~G__TvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<unsigned long,allocator<unsigned long> >::iterator */
static int G__vector_74_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned long,allocator<unsigned long> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned long,allocator<unsigned long> >::iterator[n];
     } else {
       p = new((void*) gvp) vector<unsigned long,allocator<unsigned long> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<unsigned long,allocator<unsigned long> >::iterator;
     } else {
       p = new((void*) gvp) vector<unsigned long,allocator<unsigned long> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_74_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<unsigned long,allocator<unsigned long> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<unsigned long,allocator<unsigned long> >::iterator(libp->para[0].ref ? *(const vector<unsigned long,allocator<unsigned long> >::iterator::pointer*) libp->para[0].ref : *(const vector<unsigned long,allocator<unsigned long> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   } else {
     p = new((void*) gvp) vector<unsigned long,allocator<unsigned long> >::iterator(libp->para[0].ref ? *(const vector<unsigned long,allocator<unsigned long> >::iterator::pointer*) libp->para[0].ref : *(const vector<unsigned long,allocator<unsigned long> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_74_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long,allocator<unsigned long> >::iterator::reference obj = ((const vector<unsigned long,allocator<unsigned long> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_74_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 75, (long) ((const vector<unsigned long,allocator<unsigned long> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_74_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long,allocator<unsigned long> >::iterator& obj = ((vector<unsigned long,allocator<unsigned long> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_74_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = ((vector<unsigned long,allocator<unsigned long> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_74_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long,allocator<unsigned long> >::iterator& obj = ((vector<unsigned long,allocator<unsigned long> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_74_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = ((vector<unsigned long,allocator<unsigned long> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_74_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long,allocator<unsigned long> >::iterator::reference obj = ((const vector<unsigned long,allocator<unsigned long> >::iterator*) G__getstructoffset())->operator[](*(vector<unsigned long,allocator<unsigned long> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_74_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long,allocator<unsigned long> >::iterator& obj = ((vector<unsigned long,allocator<unsigned long> >::iterator*) G__getstructoffset())->operator+=(*(vector<unsigned long,allocator<unsigned long> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_74_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         const vector<unsigned long,allocator<unsigned long> >::iterator xobj = ((const vector<unsigned long,allocator<unsigned long> >::iterator*) G__getstructoffset())->operator+(*(vector<unsigned long,allocator<unsigned long> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_74_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long,allocator<unsigned long> >::iterator& obj = ((vector<unsigned long,allocator<unsigned long> >::iterator*) G__getstructoffset())->operator-=(*(vector<unsigned long,allocator<unsigned long> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_74_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         const vector<unsigned long,allocator<unsigned long> >::iterator xobj = ((const vector<unsigned long,allocator<unsigned long> >::iterator*) G__getstructoffset())->operator-(*(vector<unsigned long,allocator<unsigned long> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_74_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long,allocator<unsigned long> >::iterator::pointer& obj = ((const vector<unsigned long,allocator<unsigned long> >::iterator*) G__getstructoffset())->base();
         result7->ref = (long) (&obj);
         G__letint(result7, 'K', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_74_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = ((vector<unsigned long,allocator<unsigned long> >::iterator*) G__getstructoffset())->operator=(*(vector<unsigned long,allocator<unsigned long> >::iterator*) libp->para[0].ref);
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_74_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vector<unsigned long,allocator<unsigned long> >::iterator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vector<unsigned long,allocator<unsigned long> >::iterator(*(vector<unsigned long,allocator<unsigned long> >::iterator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<unsigned long,allocator<unsigned long> >::iterator G__TvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator;
static int G__vector_74_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<unsigned long,allocator<unsigned long> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<unsigned long,allocator<unsigned long> >::iterator*) (soff+(sizeof(vector<unsigned long,allocator<unsigned long> >::iterator)*i)))->~G__TvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<unsigned long,allocator<unsigned long> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<unsigned long,allocator<unsigned long> >::iterator*) (soff))->~G__TvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator> */
static int G__vector_75_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>[n];
     } else {
       p = new((void*) gvp) reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>;
     } else {
       p = new((void*) gvp) reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_75_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         const vector<unsigned long,allocator<unsigned long> >::iterator xobj = ((const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) G__getstructoffset())->base();
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_75_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>::reference obj = ((const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_75_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 75, (long) ((const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_75_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>& obj = ((reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_75_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>* pobj;
         reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator> xobj = ((reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_75_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>& obj = ((reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_75_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>* pobj;
         reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator> xobj = ((reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_75_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>* pobj;
         const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator> xobj = ((const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) G__getstructoffset())->operator+((reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_75_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>& obj = ((reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) G__getstructoffset())->operator+=((reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_75_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>* pobj;
         const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator> xobj = ((const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) G__getstructoffset())->operator-((reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_75_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>& obj = ((reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) G__getstructoffset())->operator-=((reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_75_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>::reference obj = ((const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) G__getstructoffset())->operator[]((reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_75_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>(*(reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator> G__Treverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR;
static int G__vector_75_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) (soff+(sizeof(reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>)*i)))->~G__Treverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) (soff))->~G__Treverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_75_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>* dest = (reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*) G__getstructoffset();
   const reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* allocator<float> */
static int G__vector_76_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<float>[n];
     } else {
       p = new((void*) gvp) allocator<float>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<float>;
     } else {
       p = new((void*) gvp) allocator<float>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_76_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<float>(*(allocator<float>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<float>(*(allocator<float>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_76_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const allocator<float>*) G__getstructoffset())->address(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_76_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const allocator<float>*) G__getstructoffset())->address(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_76_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 70, (long) ((allocator<float>*) G__getstructoffset())->allocate((allocator<float>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 70, (long) ((allocator<float>*) G__getstructoffset())->allocate((allocator<float>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_76_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<float>*) G__getstructoffset())->deallocate((allocator<float>::pointer) G__int(libp->para[0]), (allocator<float>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_76_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<float>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_76_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<float>*) G__getstructoffset())->construct((allocator<float>::pointer) G__int(libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_76_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<float>*) G__getstructoffset())->destroy((allocator<float>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<float> G__TallocatorlEfloatgR;
static int G__vector_76_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<float>*) (soff+(sizeof(allocator<float>)*i)))->~G__TallocatorlEfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<float>*) (soff))->~G__TallocatorlEfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_76_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<float>* dest = (allocator<float>*) G__getstructoffset();
   const allocator<float>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<float,allocator<float> > */
static int G__vector_77_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((vector<float,allocator<float> >*) G__getstructoffset())->at((vector<float,allocator<float> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = ((vector<float,allocator<float> >*) G__getstructoffset())->begin();
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = ((vector<float,allocator<float> >*) G__getstructoffset())->end();
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::reverse_iterator* pobj;
         vector<float,allocator<float> >::reverse_iterator xobj = ((vector<float,allocator<float> >*) G__getstructoffset())->rbegin();
         pobj = new vector<float,allocator<float> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::reverse_iterator* pobj;
         vector<float,allocator<float> >::reverse_iterator xobj = ((vector<float,allocator<float> >*) G__getstructoffset())->rend();
         pobj = new vector<float,allocator<float> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<float,allocator<float> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<float,allocator<float> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<float,allocator<float> >*) G__getstructoffset())->resize((vector<float,allocator<float> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<float,allocator<float> >*) G__getstructoffset())->resize((vector<float,allocator<float> >::size_type) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<float,allocator<float> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<float,allocator<float> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((vector<float,allocator<float> >*) G__getstructoffset())->operator[]((vector<float,allocator<float> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<float,allocator<float> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<float,allocator<float> >[n];
     } else {
       p = new((void*) gvp) vector<float,allocator<float> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<float,allocator<float> >;
     } else {
       p = new((void*) gvp) vector<float,allocator<float> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<float,allocator<float> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<float,allocator<float> >((vector<float,allocator<float> >::size_type) G__int(libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
     } else {
       p = new((void*) gvp) vector<float,allocator<float> >((vector<float,allocator<float> >::size_type) G__int(libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<float,allocator<float> >((vector<float,allocator<float> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<float,allocator<float> >((vector<float,allocator<float> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<float,allocator<float> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<float,allocator<float> >(*(vector<float,allocator<float> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<float,allocator<float> >(*(vector<float,allocator<float> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<float,allocator<float> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<float,allocator<float> >(*((vector<float,allocator<float> >::const_iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<float,allocator<float> >(*((vector<float,allocator<float> >::const_iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >& obj = ((vector<float,allocator<float> >*) G__getstructoffset())->operator=(*(vector<float,allocator<float> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<float,allocator<float> >*) G__getstructoffset())->reserve((vector<float,allocator<float> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((vector<float,allocator<float> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((vector<float,allocator<float> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<float,allocator<float> >*) G__getstructoffset())->push_back(*(float*) G__Floatref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<float,allocator<float> >*) G__getstructoffset())->swap(*(vector<float,allocator<float> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = ((vector<float,allocator<float> >*) G__getstructoffset())->insert(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *(float*) G__Floatref(&libp->para[1]));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<float,allocator<float> >*) G__getstructoffset())->insert(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::const_iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<float,allocator<float> >*) G__getstructoffset())->insert(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), (vector<float,allocator<float> >::size_type) G__int(libp->para[1])
, *(float*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<float,allocator<float> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<float,allocator<float> >*) G__getstructoffset())->erase(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<float,allocator<float> >*) G__getstructoffset())->erase(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_77_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<float,allocator<float> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<float,allocator<float> > G__TvectorlEfloatcOallocatorlEfloatgRsPgR;
static int G__vector_77_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<float,allocator<float> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<float,allocator<float> >*) (soff+(sizeof(vector<float,allocator<float> >)*i)))->~G__TvectorlEfloatcOallocatorlEfloatgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<float,allocator<float> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<float,allocator<float> >*) (soff))->~G__TvectorlEfloatcOallocatorlEfloatgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<float,allocator<float> >::iterator */
static int G__vector_78_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<float,allocator<float> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<float,allocator<float> >::iterator[n];
     } else {
       p = new((void*) gvp) vector<float,allocator<float> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<float,allocator<float> >::iterator;
     } else {
       p = new((void*) gvp) vector<float,allocator<float> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_78_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<float,allocator<float> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<float,allocator<float> >::iterator(libp->para[0].ref ? *(const vector<float,allocator<float> >::iterator::pointer*) libp->para[0].ref : *(const vector<float,allocator<float> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   } else {
     p = new((void*) gvp) vector<float,allocator<float> >::iterator(libp->para[0].ref ? *(const vector<float,allocator<float> >::iterator::pointer*) libp->para[0].ref : *(const vector<float,allocator<float> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_78_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >::iterator::reference obj = ((const vector<float,allocator<float> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_78_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const vector<float,allocator<float> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_78_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >::iterator& obj = ((vector<float,allocator<float> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_78_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = ((vector<float,allocator<float> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_78_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >::iterator& obj = ((vector<float,allocator<float> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_78_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = ((vector<float,allocator<float> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_78_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >::iterator::reference obj = ((const vector<float,allocator<float> >::iterator*) G__getstructoffset())->operator[](*(vector<float,allocator<float> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_78_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >::iterator& obj = ((vector<float,allocator<float> >::iterator*) G__getstructoffset())->operator+=(*(vector<float,allocator<float> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_78_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >::iterator* pobj;
         const vector<float,allocator<float> >::iterator xobj = ((const vector<float,allocator<float> >::iterator*) G__getstructoffset())->operator+(*(vector<float,allocator<float> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_78_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >::iterator& obj = ((vector<float,allocator<float> >::iterator*) G__getstructoffset())->operator-=(*(vector<float,allocator<float> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_78_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >::iterator* pobj;
         const vector<float,allocator<float> >::iterator xobj = ((const vector<float,allocator<float> >::iterator*) G__getstructoffset())->operator-(*(vector<float,allocator<float> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_78_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >::iterator::pointer& obj = ((const vector<float,allocator<float> >::iterator*) G__getstructoffset())->base();
         result7->ref = (long) (&obj);
         G__letint(result7, 'F', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_78_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = ((vector<float,allocator<float> >::iterator*) G__getstructoffset())->operator=(*(vector<float,allocator<float> >::iterator*) libp->para[0].ref);
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_78_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vector<float,allocator<float> >::iterator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vector<float,allocator<float> >::iterator(*(vector<float,allocator<float> >::iterator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<float,allocator<float> >::iterator G__TvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator;
static int G__vector_78_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<float,allocator<float> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<float,allocator<float> >::iterator*) (soff+(sizeof(vector<float,allocator<float> >::iterator)*i)))->~G__TvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<float,allocator<float> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<float,allocator<float> >::iterator*) (soff))->~G__TvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* reverse_iterator<vector<float,allocator<float> >::iterator> */
static int G__vector_79_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<float,allocator<float> >::iterator>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<float,allocator<float> >::iterator>[n];
     } else {
       p = new((void*) gvp) reverse_iterator<vector<float,allocator<float> >::iterator>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<float,allocator<float> >::iterator>;
     } else {
       p = new((void*) gvp) reverse_iterator<vector<float,allocator<float> >::iterator>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_79_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >::iterator* pobj;
         const vector<float,allocator<float> >::iterator xobj = ((const reverse_iterator<vector<float,allocator<float> >::iterator>*) G__getstructoffset())->base();
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_79_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<float,allocator<float> >::iterator>::reference obj = ((const reverse_iterator<vector<float,allocator<float> >::iterator>*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_79_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const reverse_iterator<vector<float,allocator<float> >::iterator>*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_79_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<float,allocator<float> >::iterator>& obj = ((reverse_iterator<vector<float,allocator<float> >::iterator>*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_79_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<float,allocator<float> >::iterator>* pobj;
         reverse_iterator<vector<float,allocator<float> >::iterator> xobj = ((reverse_iterator<vector<float,allocator<float> >::iterator>*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<float,allocator<float> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_79_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<float,allocator<float> >::iterator>& obj = ((reverse_iterator<vector<float,allocator<float> >::iterator>*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_79_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<float,allocator<float> >::iterator>* pobj;
         reverse_iterator<vector<float,allocator<float> >::iterator> xobj = ((reverse_iterator<vector<float,allocator<float> >::iterator>*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<float,allocator<float> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_79_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<float,allocator<float> >::iterator>* pobj;
         const reverse_iterator<vector<float,allocator<float> >::iterator> xobj = ((const reverse_iterator<vector<float,allocator<float> >::iterator>*) G__getstructoffset())->operator+((reverse_iterator<vector<float,allocator<float> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<float,allocator<float> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_79_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<float,allocator<float> >::iterator>& obj = ((reverse_iterator<vector<float,allocator<float> >::iterator>*) G__getstructoffset())->operator+=((reverse_iterator<vector<float,allocator<float> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_79_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<float,allocator<float> >::iterator>* pobj;
         const reverse_iterator<vector<float,allocator<float> >::iterator> xobj = ((const reverse_iterator<vector<float,allocator<float> >::iterator>*) G__getstructoffset())->operator-((reverse_iterator<vector<float,allocator<float> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<float,allocator<float> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_79_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<float,allocator<float> >::iterator>& obj = ((reverse_iterator<vector<float,allocator<float> >::iterator>*) G__getstructoffset())->operator-=((reverse_iterator<vector<float,allocator<float> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_79_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<float,allocator<float> >::iterator>::reference obj = ((const reverse_iterator<vector<float,allocator<float> >::iterator>*) G__getstructoffset())->operator[]((reverse_iterator<vector<float,allocator<float> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_79_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   reverse_iterator<vector<float,allocator<float> >::iterator>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new reverse_iterator<vector<float,allocator<float> >::iterator>(*(reverse_iterator<vector<float,allocator<float> >::iterator>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef reverse_iterator<vector<float,allocator<float> >::iterator> G__Treverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR;
static int G__vector_79_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (reverse_iterator<vector<float,allocator<float> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((reverse_iterator<vector<float,allocator<float> >::iterator>*) (soff+(sizeof(reverse_iterator<vector<float,allocator<float> >::iterator>)*i)))->~G__Treverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (reverse_iterator<vector<float,allocator<float> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((reverse_iterator<vector<float,allocator<float> >::iterator>*) (soff))->~G__Treverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_79_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<float,allocator<float> >::iterator>* dest = (reverse_iterator<vector<float,allocator<float> >::iterator>*) G__getstructoffset();
   const reverse_iterator<vector<float,allocator<float> >::iterator>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* allocator<double> */
static int G__vector_80_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<double>[n];
     } else {
       p = new((void*) gvp) allocator<double>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<double>;
     } else {
       p = new((void*) gvp) allocator<double>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_80_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<double>(*(allocator<double>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<double>(*(allocator<double>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_80_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const allocator<double>*) G__getstructoffset())->address(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_80_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const allocator<double>*) G__getstructoffset())->address(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_80_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 68, (long) ((allocator<double>*) G__getstructoffset())->allocate((allocator<double>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 68, (long) ((allocator<double>*) G__getstructoffset())->allocate((allocator<double>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_80_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<double>*) G__getstructoffset())->deallocate((allocator<double>::pointer) G__int(libp->para[0]), (allocator<double>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_80_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<double>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_80_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<double>*) G__getstructoffset())->construct((allocator<double>::pointer) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_80_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<double>*) G__getstructoffset())->destroy((allocator<double>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<double> G__TallocatorlEdoublegR;
static int G__vector_80_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<double>*) (soff+(sizeof(allocator<double>)*i)))->~G__TallocatorlEdoublegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<double>*) (soff))->~G__TallocatorlEdoublegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_80_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<double>* dest = (allocator<double>*) G__getstructoffset();
   const allocator<double>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<double,allocator<double> > */
static int G__vector_81_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((vector<double,allocator<double> >*) G__getstructoffset())->at((vector<double,allocator<double> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = ((vector<double,allocator<double> >*) G__getstructoffset())->begin();
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = ((vector<double,allocator<double> >*) G__getstructoffset())->end();
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::reverse_iterator* pobj;
         vector<double,allocator<double> >::reverse_iterator xobj = ((vector<double,allocator<double> >*) G__getstructoffset())->rbegin();
         pobj = new vector<double,allocator<double> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::reverse_iterator* pobj;
         vector<double,allocator<double> >::reverse_iterator xobj = ((vector<double,allocator<double> >*) G__getstructoffset())->rend();
         pobj = new vector<double,allocator<double> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<double,allocator<double> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<double,allocator<double> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<double,allocator<double> >*) G__getstructoffset())->resize((vector<double,allocator<double> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<double,allocator<double> >*) G__getstructoffset())->resize((vector<double,allocator<double> >::size_type) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<double,allocator<double> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<double,allocator<double> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((vector<double,allocator<double> >*) G__getstructoffset())->operator[]((vector<double,allocator<double> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<double,allocator<double> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<double,allocator<double> >[n];
     } else {
       p = new((void*) gvp) vector<double,allocator<double> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<double,allocator<double> >;
     } else {
       p = new((void*) gvp) vector<double,allocator<double> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<double,allocator<double> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<double,allocator<double> >((vector<double,allocator<double> >::size_type) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
     } else {
       p = new((void*) gvp) vector<double,allocator<double> >((vector<double,allocator<double> >::size_type) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<double,allocator<double> >((vector<double,allocator<double> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<double,allocator<double> >((vector<double,allocator<double> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<double,allocator<double> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<double,allocator<double> >(*(vector<double,allocator<double> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<double,allocator<double> >(*(vector<double,allocator<double> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<double,allocator<double> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<double,allocator<double> >(*((vector<double,allocator<double> >::const_iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<double,allocator<double> >(*((vector<double,allocator<double> >::const_iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >& obj = ((vector<double,allocator<double> >*) G__getstructoffset())->operator=(*(vector<double,allocator<double> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<double,allocator<double> >*) G__getstructoffset())->reserve((vector<double,allocator<double> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((vector<double,allocator<double> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((vector<double,allocator<double> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<double,allocator<double> >*) G__getstructoffset())->push_back(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<double,allocator<double> >*) G__getstructoffset())->swap(*(vector<double,allocator<double> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = ((vector<double,allocator<double> >*) G__getstructoffset())->insert(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *(double*) G__Doubleref(&libp->para[1]));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<double,allocator<double> >*) G__getstructoffset())->insert(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::const_iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<double,allocator<double> >*) G__getstructoffset())->insert(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), (vector<double,allocator<double> >::size_type) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<double,allocator<double> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<double,allocator<double> >*) G__getstructoffset())->erase(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<double,allocator<double> >*) G__getstructoffset())->erase(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_81_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<double,allocator<double> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<double,allocator<double> > G__TvectorlEdoublecOallocatorlEdoublegRsPgR;
static int G__vector_81_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<double,allocator<double> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<double,allocator<double> >*) (soff+(sizeof(vector<double,allocator<double> >)*i)))->~G__TvectorlEdoublecOallocatorlEdoublegRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<double,allocator<double> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<double,allocator<double> >*) (soff))->~G__TvectorlEdoublecOallocatorlEdoublegRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<double,allocator<double> >::iterator */
static int G__vector_82_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<double,allocator<double> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<double,allocator<double> >::iterator[n];
     } else {
       p = new((void*) gvp) vector<double,allocator<double> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<double,allocator<double> >::iterator;
     } else {
       p = new((void*) gvp) vector<double,allocator<double> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_82_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<double,allocator<double> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<double,allocator<double> >::iterator(libp->para[0].ref ? *(const vector<double,allocator<double> >::iterator::pointer*) libp->para[0].ref : *(const vector<double,allocator<double> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   } else {
     p = new((void*) gvp) vector<double,allocator<double> >::iterator(libp->para[0].ref ? *(const vector<double,allocator<double> >::iterator::pointer*) libp->para[0].ref : *(const vector<double,allocator<double> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_82_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >::iterator::reference obj = ((const vector<double,allocator<double> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_82_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const vector<double,allocator<double> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_82_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >::iterator& obj = ((vector<double,allocator<double> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_82_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = ((vector<double,allocator<double> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_82_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >::iterator& obj = ((vector<double,allocator<double> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_82_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = ((vector<double,allocator<double> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_82_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >::iterator::reference obj = ((const vector<double,allocator<double> >::iterator*) G__getstructoffset())->operator[](*(vector<double,allocator<double> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_82_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >::iterator& obj = ((vector<double,allocator<double> >::iterator*) G__getstructoffset())->operator+=(*(vector<double,allocator<double> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_82_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >::iterator* pobj;
         const vector<double,allocator<double> >::iterator xobj = ((const vector<double,allocator<double> >::iterator*) G__getstructoffset())->operator+(*(vector<double,allocator<double> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_82_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >::iterator& obj = ((vector<double,allocator<double> >::iterator*) G__getstructoffset())->operator-=(*(vector<double,allocator<double> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_82_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >::iterator* pobj;
         const vector<double,allocator<double> >::iterator xobj = ((const vector<double,allocator<double> >::iterator*) G__getstructoffset())->operator-(*(vector<double,allocator<double> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_82_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >::iterator::pointer& obj = ((const vector<double,allocator<double> >::iterator*) G__getstructoffset())->base();
         result7->ref = (long) (&obj);
         G__letint(result7, 'D', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_82_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = ((vector<double,allocator<double> >::iterator*) G__getstructoffset())->operator=(*(vector<double,allocator<double> >::iterator*) libp->para[0].ref);
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_82_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vector<double,allocator<double> >::iterator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vector<double,allocator<double> >::iterator(*(vector<double,allocator<double> >::iterator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<double,allocator<double> >::iterator G__TvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator;
static int G__vector_82_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<double,allocator<double> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<double,allocator<double> >::iterator*) (soff+(sizeof(vector<double,allocator<double> >::iterator)*i)))->~G__TvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<double,allocator<double> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<double,allocator<double> >::iterator*) (soff))->~G__TvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* reverse_iterator<vector<double,allocator<double> >::iterator> */
static int G__vector_83_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<double,allocator<double> >::iterator>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<double,allocator<double> >::iterator>[n];
     } else {
       p = new((void*) gvp) reverse_iterator<vector<double,allocator<double> >::iterator>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<double,allocator<double> >::iterator>;
     } else {
       p = new((void*) gvp) reverse_iterator<vector<double,allocator<double> >::iterator>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_83_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >::iterator* pobj;
         const vector<double,allocator<double> >::iterator xobj = ((const reverse_iterator<vector<double,allocator<double> >::iterator>*) G__getstructoffset())->base();
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_83_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<double,allocator<double> >::iterator>::reference obj = ((const reverse_iterator<vector<double,allocator<double> >::iterator>*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_83_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const reverse_iterator<vector<double,allocator<double> >::iterator>*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_83_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<double,allocator<double> >::iterator>& obj = ((reverse_iterator<vector<double,allocator<double> >::iterator>*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_83_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<double,allocator<double> >::iterator>* pobj;
         reverse_iterator<vector<double,allocator<double> >::iterator> xobj = ((reverse_iterator<vector<double,allocator<double> >::iterator>*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<double,allocator<double> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_83_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<double,allocator<double> >::iterator>& obj = ((reverse_iterator<vector<double,allocator<double> >::iterator>*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_83_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<double,allocator<double> >::iterator>* pobj;
         reverse_iterator<vector<double,allocator<double> >::iterator> xobj = ((reverse_iterator<vector<double,allocator<double> >::iterator>*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<double,allocator<double> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_83_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<double,allocator<double> >::iterator>* pobj;
         const reverse_iterator<vector<double,allocator<double> >::iterator> xobj = ((const reverse_iterator<vector<double,allocator<double> >::iterator>*) G__getstructoffset())->operator+((reverse_iterator<vector<double,allocator<double> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<double,allocator<double> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_83_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<double,allocator<double> >::iterator>& obj = ((reverse_iterator<vector<double,allocator<double> >::iterator>*) G__getstructoffset())->operator+=((reverse_iterator<vector<double,allocator<double> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_83_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<double,allocator<double> >::iterator>* pobj;
         const reverse_iterator<vector<double,allocator<double> >::iterator> xobj = ((const reverse_iterator<vector<double,allocator<double> >::iterator>*) G__getstructoffset())->operator-((reverse_iterator<vector<double,allocator<double> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<double,allocator<double> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_83_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<double,allocator<double> >::iterator>& obj = ((reverse_iterator<vector<double,allocator<double> >::iterator>*) G__getstructoffset())->operator-=((reverse_iterator<vector<double,allocator<double> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_83_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<double,allocator<double> >::iterator>::reference obj = ((const reverse_iterator<vector<double,allocator<double> >::iterator>*) G__getstructoffset())->operator[]((reverse_iterator<vector<double,allocator<double> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_83_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   reverse_iterator<vector<double,allocator<double> >::iterator>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new reverse_iterator<vector<double,allocator<double> >::iterator>(*(reverse_iterator<vector<double,allocator<double> >::iterator>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef reverse_iterator<vector<double,allocator<double> >::iterator> G__Treverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR;
static int G__vector_83_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (reverse_iterator<vector<double,allocator<double> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((reverse_iterator<vector<double,allocator<double> >::iterator>*) (soff+(sizeof(reverse_iterator<vector<double,allocator<double> >::iterator>)*i)))->~G__Treverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (reverse_iterator<vector<double,allocator<double> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((reverse_iterator<vector<double,allocator<double> >::iterator>*) (soff))->~G__Treverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_83_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<double,allocator<double> >::iterator>* dest = (reverse_iterator<vector<double,allocator<double> >::iterator>*) G__getstructoffset();
   const reverse_iterator<vector<double,allocator<double> >::iterator>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* allocator<void*> */
static int G__vector_84_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<void*>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<void*>[n];
     } else {
       p = new((void*) gvp) allocator<void*>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<void*>;
     } else {
       p = new((void*) gvp) allocator<void*>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_84_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<void*>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<void*>(*(allocator<void*>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<void*>(*(allocator<void*>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_84_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((const allocator<void*>*) G__getstructoffset())->address(libp->para[0].ref ? *(void**) libp->para[0].ref : *(void**) (&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_84_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((const allocator<void*>*) G__getstructoffset())->address(libp->para[0].ref ? *(void**) libp->para[0].ref : *(void**) (&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_84_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 89, (long) ((allocator<void*>*) G__getstructoffset())->allocate((allocator<void*>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 89, (long) ((allocator<void*>*) G__getstructoffset())->allocate((allocator<void*>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_84_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<void*>*) G__getstructoffset())->deallocate((allocator<void*>::pointer) G__int(libp->para[0]), (allocator<void*>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_84_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<void*>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_84_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<void*>*) G__getstructoffset())->construct((allocator<void*>::pointer) G__int(libp->para[0]), libp->para[1].ref ? *(void**) libp->para[1].ref : *(void**) (&G__Mlong(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_84_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<void*>*) G__getstructoffset())->destroy((allocator<void*>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<void*> G__TallocatorlEvoidmUgR;
static int G__vector_84_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<void*>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<void*>*) (soff+(sizeof(allocator<void*>)*i)))->~G__TallocatorlEvoidmUgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<void*>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<void*>*) (soff))->~G__TallocatorlEvoidmUgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_84_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<void*>* dest = (allocator<void*>*) G__getstructoffset();
   const allocator<void*>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<void*,allocator<void*> > */
static int G__vector_85_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         void*& obj = ((vector<void*,allocator<void*> >*) G__getstructoffset())->at((vector<void*,allocator<void*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = ((vector<void*,allocator<void*> >*) G__getstructoffset())->begin();
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = ((vector<void*,allocator<void*> >*) G__getstructoffset())->end();
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::reverse_iterator* pobj;
         vector<void*,allocator<void*> >::reverse_iterator xobj = ((vector<void*,allocator<void*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<void*,allocator<void*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::reverse_iterator* pobj;
         vector<void*,allocator<void*> >::reverse_iterator xobj = ((vector<void*,allocator<void*> >*) G__getstructoffset())->rend();
         pobj = new vector<void*,allocator<void*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<void*,allocator<void*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<void*,allocator<void*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<void*,allocator<void*> >*) G__getstructoffset())->resize((vector<void*,allocator<void*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<void*,allocator<void*> >*) G__getstructoffset())->resize((vector<void*,allocator<void*> >::size_type) G__int(libp->para[0]), (void*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<void*,allocator<void*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<void*,allocator<void*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         void*& obj = ((vector<void*,allocator<void*> >*) G__getstructoffset())->operator[]((vector<void*,allocator<void*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<void*,allocator<void*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<void*,allocator<void*> >[n];
     } else {
       p = new((void*) gvp) vector<void*,allocator<void*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<void*,allocator<void*> >;
     } else {
       p = new((void*) gvp) vector<void*,allocator<void*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<void*,allocator<void*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<void*,allocator<void*> >((vector<void*,allocator<void*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(void**) libp->para[1].ref : *(void**) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<void*,allocator<void*> >((vector<void*,allocator<void*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(void**) libp->para[1].ref : *(void**) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<void*,allocator<void*> >((vector<void*,allocator<void*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<void*,allocator<void*> >((vector<void*,allocator<void*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<void*,allocator<void*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<void*,allocator<void*> >(*(vector<void*,allocator<void*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<void*,allocator<void*> >(*(vector<void*,allocator<void*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<void*,allocator<void*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<void*,allocator<void*> >(*((vector<void*,allocator<void*> >::const_iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<void*,allocator<void*> >(*((vector<void*,allocator<void*> >::const_iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<void*,allocator<void*> >& obj = ((vector<void*,allocator<void*> >*) G__getstructoffset())->operator=(*(vector<void*,allocator<void*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<void*,allocator<void*> >*) G__getstructoffset())->reserve((vector<void*,allocator<void*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         void*& obj = ((vector<void*,allocator<void*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         void*& obj = ((vector<void*,allocator<void*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<void*,allocator<void*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(void**) libp->para[0].ref : *(void**) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<void*,allocator<void*> >*) G__getstructoffset())->swap(*(vector<void*,allocator<void*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = ((vector<void*,allocator<void*> >*) G__getstructoffset())->insert(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(void**) libp->para[1].ref : *(void**) (&G__Mlong(libp->para[1])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<void*,allocator<void*> >*) G__getstructoffset())->insert(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<void*,allocator<void*> >*) G__getstructoffset())->insert(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), (vector<void*,allocator<void*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<void*,allocator<void*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<void*,allocator<void*> >*) G__getstructoffset())->erase(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<void*,allocator<void*> >*) G__getstructoffset())->erase(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_85_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<void*,allocator<void*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<void*,allocator<void*> > G__TvectorlEvoidmUcOallocatorlEvoidmUgRsPgR;
static int G__vector_85_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<void*,allocator<void*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<void*,allocator<void*> >*) (soff+(sizeof(vector<void*,allocator<void*> >)*i)))->~G__TvectorlEvoidmUcOallocatorlEvoidmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<void*,allocator<void*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<void*,allocator<void*> >*) (soff))->~G__TvectorlEvoidmUcOallocatorlEvoidmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<void*,allocator<void*> >::iterator */
static int G__vector_86_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<void*,allocator<void*> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<void*,allocator<void*> >::iterator[n];
     } else {
       p = new((void*) gvp) vector<void*,allocator<void*> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<void*,allocator<void*> >::iterator;
     } else {
       p = new((void*) gvp) vector<void*,allocator<void*> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_86_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<void*,allocator<void*> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<void*,allocator<void*> >::iterator(libp->para[0].ref ? *(const vector<void*,allocator<void*> >::iterator::pointer*) libp->para[0].ref : *(const vector<void*,allocator<void*> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   } else {
     p = new((void*) gvp) vector<void*,allocator<void*> >::iterator(libp->para[0].ref ? *(const vector<void*,allocator<void*> >::iterator::pointer*) libp->para[0].ref : *(const vector<void*,allocator<void*> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_86_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator::reference obj = ((const vector<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_86_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((const vector<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_86_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<void*,allocator<void*> >::iterator& obj = ((vector<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_86_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = ((vector<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_86_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<void*,allocator<void*> >::iterator& obj = ((vector<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_86_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = ((vector<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_86_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator::reference obj = ((const vector<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator[](*(vector<void*,allocator<void*> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_86_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<void*,allocator<void*> >::iterator& obj = ((vector<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator+=(*(vector<void*,allocator<void*> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_86_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<void*,allocator<void*> >::iterator* pobj;
         const vector<void*,allocator<void*> >::iterator xobj = ((const vector<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator+(*(vector<void*,allocator<void*> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_86_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<void*,allocator<void*> >::iterator& obj = ((vector<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator-=(*(vector<void*,allocator<void*> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_86_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<void*,allocator<void*> >::iterator* pobj;
         const vector<void*,allocator<void*> >::iterator xobj = ((const vector<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator-(*(vector<void*,allocator<void*> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_86_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<void*,allocator<void*> >::iterator::pointer& obj = ((const vector<void*,allocator<void*> >::iterator*) G__getstructoffset())->base();
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_86_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = ((vector<void*,allocator<void*> >::iterator*) G__getstructoffset())->operator=(*(vector<void*,allocator<void*> >::iterator*) libp->para[0].ref);
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_86_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vector<void*,allocator<void*> >::iterator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vector<void*,allocator<void*> >::iterator(*(vector<void*,allocator<void*> >::iterator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<void*,allocator<void*> >::iterator G__TvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator;
static int G__vector_86_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<void*,allocator<void*> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<void*,allocator<void*> >::iterator*) (soff+(sizeof(vector<void*,allocator<void*> >::iterator)*i)))->~G__TvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<void*,allocator<void*> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<void*,allocator<void*> >::iterator*) (soff))->~G__TvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* reverse_iterator<vector<void*,allocator<void*> >::iterator> */
static int G__vector_87_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<void*,allocator<void*> >::iterator>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<void*,allocator<void*> >::iterator>[n];
     } else {
       p = new((void*) gvp) reverse_iterator<vector<void*,allocator<void*> >::iterator>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<void*,allocator<void*> >::iterator>;
     } else {
       p = new((void*) gvp) reverse_iterator<vector<void*,allocator<void*> >::iterator>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_87_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<void*,allocator<void*> >::iterator* pobj;
         const vector<void*,allocator<void*> >::iterator xobj = ((const reverse_iterator<vector<void*,allocator<void*> >::iterator>*) G__getstructoffset())->base();
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_87_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<void*,allocator<void*> >::iterator>::reference obj = ((const reverse_iterator<vector<void*,allocator<void*> >::iterator>*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_87_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((const reverse_iterator<vector<void*,allocator<void*> >::iterator>*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_87_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<void*,allocator<void*> >::iterator>& obj = ((reverse_iterator<vector<void*,allocator<void*> >::iterator>*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_87_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<void*,allocator<void*> >::iterator>* pobj;
         reverse_iterator<vector<void*,allocator<void*> >::iterator> xobj = ((reverse_iterator<vector<void*,allocator<void*> >::iterator>*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<void*,allocator<void*> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_87_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<void*,allocator<void*> >::iterator>& obj = ((reverse_iterator<vector<void*,allocator<void*> >::iterator>*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_87_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<void*,allocator<void*> >::iterator>* pobj;
         reverse_iterator<vector<void*,allocator<void*> >::iterator> xobj = ((reverse_iterator<vector<void*,allocator<void*> >::iterator>*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<void*,allocator<void*> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_87_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<void*,allocator<void*> >::iterator>* pobj;
         const reverse_iterator<vector<void*,allocator<void*> >::iterator> xobj = ((const reverse_iterator<vector<void*,allocator<void*> >::iterator>*) G__getstructoffset())->operator+((reverse_iterator<vector<void*,allocator<void*> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<void*,allocator<void*> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_87_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<void*,allocator<void*> >::iterator>& obj = ((reverse_iterator<vector<void*,allocator<void*> >::iterator>*) G__getstructoffset())->operator+=((reverse_iterator<vector<void*,allocator<void*> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_87_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<void*,allocator<void*> >::iterator>* pobj;
         const reverse_iterator<vector<void*,allocator<void*> >::iterator> xobj = ((const reverse_iterator<vector<void*,allocator<void*> >::iterator>*) G__getstructoffset())->operator-((reverse_iterator<vector<void*,allocator<void*> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<void*,allocator<void*> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_87_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<void*,allocator<void*> >::iterator>& obj = ((reverse_iterator<vector<void*,allocator<void*> >::iterator>*) G__getstructoffset())->operator-=((reverse_iterator<vector<void*,allocator<void*> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_87_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<void*,allocator<void*> >::iterator>::reference obj = ((const reverse_iterator<vector<void*,allocator<void*> >::iterator>*) G__getstructoffset())->operator[]((reverse_iterator<vector<void*,allocator<void*> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_87_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   reverse_iterator<vector<void*,allocator<void*> >::iterator>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new reverse_iterator<vector<void*,allocator<void*> >::iterator>(*(reverse_iterator<vector<void*,allocator<void*> >::iterator>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef reverse_iterator<vector<void*,allocator<void*> >::iterator> G__Treverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR;
static int G__vector_87_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (reverse_iterator<vector<void*,allocator<void*> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((reverse_iterator<vector<void*,allocator<void*> >::iterator>*) (soff+(sizeof(reverse_iterator<vector<void*,allocator<void*> >::iterator>)*i)))->~G__Treverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (reverse_iterator<vector<void*,allocator<void*> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((reverse_iterator<vector<void*,allocator<void*> >::iterator>*) (soff))->~G__Treverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_87_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<void*,allocator<void*> >::iterator>* dest = (reverse_iterator<vector<void*,allocator<void*> >::iterator>*) G__getstructoffset();
   const reverse_iterator<vector<void*,allocator<void*> >::iterator>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* allocator<char*> */
static int G__vector_88_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<char*>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<char*>[n];
     } else {
       p = new((void*) gvp) allocator<char*>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new allocator<char*>;
     } else {
       p = new((void*) gvp) allocator<char*>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_88_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<char*>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new allocator<char*>(*(allocator<char*>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) allocator<char*>(*(allocator<char*>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_88_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const allocator<char*>*) G__getstructoffset())->address(libp->para[0].ref ? *(char**) libp->para[0].ref : *(char**) (&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_88_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const allocator<char*>*) G__getstructoffset())->address(libp->para[0].ref ? *(char**) libp->para[0].ref : *(char**) (&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_88_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 67, (long) ((allocator<char*>*) G__getstructoffset())->allocate((allocator<char*>::size_type) G__int(libp->para[0]), (const void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 67, (long) ((allocator<char*>*) G__getstructoffset())->allocate((allocator<char*>::size_type) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_88_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<char*>*) G__getstructoffset())->deallocate((allocator<char*>::pointer) G__int(libp->para[0]), (allocator<char*>::size_type) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_88_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const allocator<char*>*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_88_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<char*>*) G__getstructoffset())->construct((allocator<char*>::pointer) G__int(libp->para[0]), libp->para[1].ref ? *(char**) libp->para[1].ref : *(char**) (&G__Mlong(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_88_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((allocator<char*>*) G__getstructoffset())->destroy((allocator<char*>::pointer) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef allocator<char*> G__TallocatorlEcharmUgR;
static int G__vector_88_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (allocator<char*>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((allocator<char*>*) (soff+(sizeof(allocator<char*>)*i)))->~G__TallocatorlEcharmUgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (allocator<char*>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((allocator<char*>*) (soff))->~G__TallocatorlEcharmUgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_88_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   allocator<char*>* dest = (allocator<char*>*) G__getstructoffset();
   const allocator<char*>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<char*,allocator<char*> > */
static int G__vector_89_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         char*& obj = ((vector<char*,allocator<char*> >*) G__getstructoffset())->at((vector<char*,allocator<char*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = ((vector<char*,allocator<char*> >*) G__getstructoffset())->begin();
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = ((vector<char*,allocator<char*> >*) G__getstructoffset())->end();
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::reverse_iterator* pobj;
         vector<char*,allocator<char*> >::reverse_iterator xobj = ((vector<char*,allocator<char*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<char*,allocator<char*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::reverse_iterator* pobj;
         vector<char*,allocator<char*> >::reverse_iterator xobj = ((vector<char*,allocator<char*> >*) G__getstructoffset())->rend();
         pobj = new vector<char*,allocator<char*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<char*,allocator<char*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<char*,allocator<char*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char*,allocator<char*> >*) G__getstructoffset())->resize((vector<char*,allocator<char*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char*,allocator<char*> >*) G__getstructoffset())->resize((vector<char*,allocator<char*> >::size_type) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<char*,allocator<char*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<char*,allocator<char*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         char*& obj = ((vector<char*,allocator<char*> >*) G__getstructoffset())->operator[]((vector<char*,allocator<char*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<char*,allocator<char*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<char*,allocator<char*> >[n];
     } else {
       p = new((void*) gvp) vector<char*,allocator<char*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<char*,allocator<char*> >;
     } else {
       p = new((void*) gvp) vector<char*,allocator<char*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<char*,allocator<char*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<char*,allocator<char*> >((vector<char*,allocator<char*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(char**) libp->para[1].ref : *(char**) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<char*,allocator<char*> >((vector<char*,allocator<char*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(char**) libp->para[1].ref : *(char**) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<char*,allocator<char*> >((vector<char*,allocator<char*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<char*,allocator<char*> >((vector<char*,allocator<char*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<char*,allocator<char*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<char*,allocator<char*> >(*(vector<char*,allocator<char*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<char*,allocator<char*> >(*(vector<char*,allocator<char*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<char*,allocator<char*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<char*,allocator<char*> >(*((vector<char*,allocator<char*> >::const_iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<char*,allocator<char*> >(*((vector<char*,allocator<char*> >::const_iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char*,allocator<char*> >& obj = ((vector<char*,allocator<char*> >*) G__getstructoffset())->operator=(*(vector<char*,allocator<char*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char*,allocator<char*> >*) G__getstructoffset())->reserve((vector<char*,allocator<char*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         char*& obj = ((vector<char*,allocator<char*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         char*& obj = ((vector<char*,allocator<char*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char*,allocator<char*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(char**) libp->para[0].ref : *(char**) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char*,allocator<char*> >*) G__getstructoffset())->swap(*(vector<char*,allocator<char*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = ((vector<char*,allocator<char*> >*) G__getstructoffset())->insert(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(char**) libp->para[1].ref : *(char**) (&G__Mlong(libp->para[1])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char*,allocator<char*> >*) G__getstructoffset())->insert(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char*,allocator<char*> >*) G__getstructoffset())->insert(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), (vector<char*,allocator<char*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char*,allocator<char*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char*,allocator<char*> >*) G__getstructoffset())->erase(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char*,allocator<char*> >*) G__getstructoffset())->erase(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_89_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<char*,allocator<char*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<char*,allocator<char*> > G__TvectorlEcharmUcOallocatorlEcharmUgRsPgR;
static int G__vector_89_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<char*,allocator<char*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<char*,allocator<char*> >*) (soff+(sizeof(vector<char*,allocator<char*> >)*i)))->~G__TvectorlEcharmUcOallocatorlEcharmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<char*,allocator<char*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<char*,allocator<char*> >*) (soff))->~G__TvectorlEcharmUcOallocatorlEcharmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<char*,allocator<char*> >::iterator */
static int G__vector_90_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<char*,allocator<char*> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<char*,allocator<char*> >::iterator[n];
     } else {
       p = new((void*) gvp) vector<char*,allocator<char*> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<char*,allocator<char*> >::iterator;
     } else {
       p = new((void*) gvp) vector<char*,allocator<char*> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_90_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<char*,allocator<char*> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<char*,allocator<char*> >::iterator(libp->para[0].ref ? *(const vector<char*,allocator<char*> >::iterator::pointer*) libp->para[0].ref : *(const vector<char*,allocator<char*> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   } else {
     p = new((void*) gvp) vector<char*,allocator<char*> >::iterator(libp->para[0].ref ? *(const vector<char*,allocator<char*> >::iterator::pointer*) libp->para[0].ref : *(const vector<char*,allocator<char*> >::iterator::pointer*) (&G__Mlong(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_90_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator::reference obj = ((const vector<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_90_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const vector<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_90_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char*,allocator<char*> >::iterator& obj = ((vector<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_90_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = ((vector<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_90_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char*,allocator<char*> >::iterator& obj = ((vector<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_90_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = ((vector<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_90_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator::reference obj = ((const vector<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator[](*(vector<char*,allocator<char*> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_90_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char*,allocator<char*> >::iterator& obj = ((vector<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator+=(*(vector<char*,allocator<char*> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_90_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char*,allocator<char*> >::iterator* pobj;
         const vector<char*,allocator<char*> >::iterator xobj = ((const vector<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator+(*(vector<char*,allocator<char*> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_90_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char*,allocator<char*> >::iterator& obj = ((vector<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator-=(*(vector<char*,allocator<char*> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_90_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char*,allocator<char*> >::iterator* pobj;
         const vector<char*,allocator<char*> >::iterator xobj = ((const vector<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator-(*(vector<char*,allocator<char*> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_90_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char*,allocator<char*> >::iterator::pointer& obj = ((const vector<char*,allocator<char*> >::iterator*) G__getstructoffset())->base();
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_90_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = ((vector<char*,allocator<char*> >::iterator*) G__getstructoffset())->operator=(*(vector<char*,allocator<char*> >::iterator*) libp->para[0].ref);
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_90_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vector<char*,allocator<char*> >::iterator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vector<char*,allocator<char*> >::iterator(*(vector<char*,allocator<char*> >::iterator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<char*,allocator<char*> >::iterator G__TvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator;
static int G__vector_90_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<char*,allocator<char*> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<char*,allocator<char*> >::iterator*) (soff+(sizeof(vector<char*,allocator<char*> >::iterator)*i)))->~G__TvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<char*,allocator<char*> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<char*,allocator<char*> >::iterator*) (soff))->~G__TvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* reverse_iterator<vector<char*,allocator<char*> >::iterator> */
static int G__vector_91_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<char*,allocator<char*> >::iterator>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<char*,allocator<char*> >::iterator>[n];
     } else {
       p = new((void*) gvp) reverse_iterator<vector<char*,allocator<char*> >::iterator>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reverse_iterator<vector<char*,allocator<char*> >::iterator>;
     } else {
       p = new((void*) gvp) reverse_iterator<vector<char*,allocator<char*> >::iterator>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_91_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char*,allocator<char*> >::iterator* pobj;
         const vector<char*,allocator<char*> >::iterator xobj = ((const reverse_iterator<vector<char*,allocator<char*> >::iterator>*) G__getstructoffset())->base();
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_91_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<char*,allocator<char*> >::iterator>::reference obj = ((const reverse_iterator<vector<char*,allocator<char*> >::iterator>*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_91_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const reverse_iterator<vector<char*,allocator<char*> >::iterator>*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_91_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<char*,allocator<char*> >::iterator>& obj = ((reverse_iterator<vector<char*,allocator<char*> >::iterator>*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_91_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<char*,allocator<char*> >::iterator>* pobj;
         reverse_iterator<vector<char*,allocator<char*> >::iterator> xobj = ((reverse_iterator<vector<char*,allocator<char*> >::iterator>*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<char*,allocator<char*> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_91_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<char*,allocator<char*> >::iterator>& obj = ((reverse_iterator<vector<char*,allocator<char*> >::iterator>*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_91_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<char*,allocator<char*> >::iterator>* pobj;
         reverse_iterator<vector<char*,allocator<char*> >::iterator> xobj = ((reverse_iterator<vector<char*,allocator<char*> >::iterator>*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<char*,allocator<char*> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_91_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<char*,allocator<char*> >::iterator>* pobj;
         const reverse_iterator<vector<char*,allocator<char*> >::iterator> xobj = ((const reverse_iterator<vector<char*,allocator<char*> >::iterator>*) G__getstructoffset())->operator+((reverse_iterator<vector<char*,allocator<char*> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<char*,allocator<char*> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_91_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<char*,allocator<char*> >::iterator>& obj = ((reverse_iterator<vector<char*,allocator<char*> >::iterator>*) G__getstructoffset())->operator+=((reverse_iterator<vector<char*,allocator<char*> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_91_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<char*,allocator<char*> >::iterator>* pobj;
         const reverse_iterator<vector<char*,allocator<char*> >::iterator> xobj = ((const reverse_iterator<vector<char*,allocator<char*> >::iterator>*) G__getstructoffset())->operator-((reverse_iterator<vector<char*,allocator<char*> >::iterator>::difference_type) G__int(libp->para[0]));
         pobj = new reverse_iterator<vector<char*,allocator<char*> >::iterator>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_91_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const reverse_iterator<vector<char*,allocator<char*> >::iterator>& obj = ((reverse_iterator<vector<char*,allocator<char*> >::iterator>*) G__getstructoffset())->operator-=((reverse_iterator<vector<char*,allocator<char*> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector_91_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         reverse_iterator<vector<char*,allocator<char*> >::iterator>::reference obj = ((const reverse_iterator<vector<char*,allocator<char*> >::iterator>*) G__getstructoffset())->operator[]((reverse_iterator<vector<char*,allocator<char*> >::iterator>::difference_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__vector_91_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   reverse_iterator<vector<char*,allocator<char*> >::iterator>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new reverse_iterator<vector<char*,allocator<char*> >::iterator>(*(reverse_iterator<vector<char*,allocator<char*> >::iterator>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef reverse_iterator<vector<char*,allocator<char*> >::iterator> G__Treverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR;
static int G__vector_91_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (reverse_iterator<vector<char*,allocator<char*> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((reverse_iterator<vector<char*,allocator<char*> >::iterator>*) (soff+(sizeof(reverse_iterator<vector<char*,allocator<char*> >::iterator>)*i)))->~G__Treverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (reverse_iterator<vector<char*,allocator<char*> >::iterator>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((reverse_iterator<vector<char*,allocator<char*> >::iterator>*) (soff))->~G__Treverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__vector_91_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reverse_iterator<vector<char*,allocator<char*> >::iterator>* dest = (reverse_iterator<vector<char*,allocator<char*> >::iterator>*) G__getstructoffset();
   const reverse_iterator<vector<char*,allocator<char*> >::iterator>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__vector__0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<char,allocator<char> >::iterator*) libp->para[0].ref, *(vector<char,allocator<char> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<char,allocator<char> >::iterator*) libp->para[0].ref, *(vector<char,allocator<char> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<char,allocator<char> >::iterator*) libp->para[0].ref, *(vector<char,allocator<char> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<char,allocator<char> >::iterator*) libp->para[0].ref, *(vector<char,allocator<char> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<char,allocator<char> >::iterator*) libp->para[0].ref, *(vector<char,allocator<char> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<char,allocator<char> >::iterator*) libp->para[0].ref, *(vector<char,allocator<char> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) operator-(*(vector<char,allocator<char> >::iterator*) libp->para[0].ref, *(vector<char,allocator<char> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char,allocator<char> >::iterator* pobj;
         const vector<char,allocator<char> >::iterator xobj = operator+((const vector<char,allocator<char> >::iterator::difference_type) G__int(libp->para[0]), *(vector<char,allocator<char> >::iterator*) libp->para[1].ref);
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<char,allocator<char> >::reverse_iterator*) libp->para[0].ref, *(vector<char,allocator<char> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<char,allocator<char> >::reverse_iterator*) libp->para[0].ref, *(vector<char,allocator<char> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<char,allocator<char> >*) libp->para[0].ref, *(vector<char,allocator<char> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<char,allocator<char> >*) libp->para[0].ref, *(vector<char,allocator<char> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<char,allocator<char> >*) libp->para[0].ref, *(vector<char,allocator<char> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<char,allocator<char> >*) libp->para[0].ref, *(vector<char,allocator<char> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<char,allocator<char> >*) libp->para[0].ref, *(vector<char,allocator<char> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<char,allocator<char> >*) libp->para[0].ref, *(vector<char,allocator<char> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = find(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *(char*) G__Charref(&libp->para[2]));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = find_end(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = find_first_of(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = adjacent_find(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *(char*) G__Charref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = search(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = search_n(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, (vector<char,allocator<char> >::size_type) G__int(libp->para[2]), *(char*) G__Charref(&libp->para[3]));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = copy(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = copy_backward(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      swap(*(char*) G__Charref(&libp->para[0]), *(char*) G__Charref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = swap_ranges(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *(char*) G__Charref(&libp->para[2]), *(char*) G__Charref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = replace_copy(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])), *(char*) G__Charref(&libp->para[3])
, *(char*) G__Charref(&libp->para[4]));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *(char*) G__Charref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), (vector<char,allocator<char> >::size_type) G__int(libp->para[1])
, *(char*) G__Charref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_145(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = remove(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *(char*) G__Charref(&libp->para[2]));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_146(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = remove_copy(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])), *(char*) G__Charref(&libp->para[3]));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_147(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = unique(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_148(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = unique_copy(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_149(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_150(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = reverse_copy(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_151(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_152(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = rotate_copy(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_153(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_154(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_155(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_156(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_157(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = partial_sort_copy(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_158(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_159(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = lower_bound(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *(char*) G__Charref(&libp->para[2]));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_160(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = upper_bound(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *(char*) G__Charref(&libp->para[2]));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_161(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *(char*) G__Charref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_162(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = merge(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[3]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_163(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_164(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_165(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = set_union(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[3]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_166(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = set_intersection(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[3]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_167(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = set_difference(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[3]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_168(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = set_symmetric_difference(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[3]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_169(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_170(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_171(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_172(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_173(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char& obj = min(*(char*) G__Charref(&libp->para[0]), *(char*) G__Charref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_174(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char& obj = max(*(char*) G__Charref(&libp->para[0]), *(char*) G__Charref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_175(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = min_element(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_176(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char,allocator<char> >::iterator* pobj;
         vector<char,allocator<char> >::iterator xobj = max_element(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<char,allocator<char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_177(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))
, *((vector<char,allocator<char> >::iterator*) G__int(libp->para[2])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_178(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_179(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((vector<char,allocator<char> >::iterator*) G__int(libp->para[0])), *((vector<char,allocator<char> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_180(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<short,allocator<short> >::iterator*) libp->para[0].ref, *(vector<short,allocator<short> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_181(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<short,allocator<short> >::iterator*) libp->para[0].ref, *(vector<short,allocator<short> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_182(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<short,allocator<short> >::iterator*) libp->para[0].ref, *(vector<short,allocator<short> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_183(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<short,allocator<short> >::iterator*) libp->para[0].ref, *(vector<short,allocator<short> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_184(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<short,allocator<short> >::iterator*) libp->para[0].ref, *(vector<short,allocator<short> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_185(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<short,allocator<short> >::iterator*) libp->para[0].ref, *(vector<short,allocator<short> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_186(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) operator-(*(vector<short,allocator<short> >::iterator*) libp->para[0].ref, *(vector<short,allocator<short> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_187(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<short,allocator<short> >::iterator* pobj;
         const vector<short,allocator<short> >::iterator xobj = operator+((const vector<short,allocator<short> >::iterator::difference_type) G__int(libp->para[0]), *(vector<short,allocator<short> >::iterator*) libp->para[1].ref);
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_188(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<short,allocator<short> >::reverse_iterator*) libp->para[0].ref, *(vector<short,allocator<short> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_189(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<short,allocator<short> >::reverse_iterator*) libp->para[0].ref, *(vector<short,allocator<short> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_190(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<short,allocator<short> >*) libp->para[0].ref, *(vector<short,allocator<short> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_191(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<short,allocator<short> >*) libp->para[0].ref, *(vector<short,allocator<short> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_192(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<short,allocator<short> >*) libp->para[0].ref, *(vector<short,allocator<short> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_193(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<short,allocator<short> >*) libp->para[0].ref, *(vector<short,allocator<short> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_194(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<short,allocator<short> >*) libp->para[0].ref, *(vector<short,allocator<short> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_195(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<short,allocator<short> >*) libp->para[0].ref, *(vector<short,allocator<short> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_196(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = find(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *(short*) G__Shortref(&libp->para[2]));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_197(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = find_end(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_198(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = find_first_of(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_199(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = adjacent_find(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_200(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *(short*) G__Shortref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_201(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_202(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = search(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_203(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = search_n(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, (vector<short,allocator<short> >::size_type) G__int(libp->para[2]), *(short*) G__Shortref(&libp->para[3]));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_204(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = copy(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_205(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = copy_backward(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_206(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      swap(*(short*) G__Shortref(&libp->para[0]), *(short*) G__Shortref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_207(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = swap_ranges(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_208(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_209(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *(short*) G__Shortref(&libp->para[2]), *(short*) G__Shortref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_210(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = replace_copy(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])), *(short*) G__Shortref(&libp->para[3])
, *(short*) G__Shortref(&libp->para[4]));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_211(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *(short*) G__Shortref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_212(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), (vector<short,allocator<short> >::size_type) G__int(libp->para[1])
, *(short*) G__Shortref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_213(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = remove(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *(short*) G__Shortref(&libp->para[2]));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_214(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = remove_copy(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])), *(short*) G__Shortref(&libp->para[3]));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_215(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = unique(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_216(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = unique_copy(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_217(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_218(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = reverse_copy(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_219(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_220(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = rotate_copy(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_221(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_222(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_223(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_224(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_225(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = partial_sort_copy(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_226(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_227(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = lower_bound(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *(short*) G__Shortref(&libp->para[2]));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_228(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = upper_bound(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *(short*) G__Shortref(&libp->para[2]));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_229(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *(short*) G__Shortref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_230(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = merge(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[3]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_231(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_232(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_233(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = set_union(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[3]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_234(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = set_intersection(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[3]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_235(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = set_difference(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[3]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_236(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = set_symmetric_difference(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[3]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_237(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_238(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_239(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_240(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_241(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const short& obj = min(*(short*) G__Shortref(&libp->para[0]), *(short*) G__Shortref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_242(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const short& obj = max(*(short*) G__Shortref(&libp->para[0]), *(short*) G__Shortref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_243(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = min_element(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_244(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<short,allocator<short> >::iterator* pobj;
         vector<short,allocator<short> >::iterator xobj = max_element(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<short,allocator<short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_245(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))
, *((vector<short,allocator<short> >::iterator*) G__int(libp->para[2])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_246(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_247(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((vector<short,allocator<short> >::iterator*) G__int(libp->para[0])), *((vector<short,allocator<short> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_248(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<long,allocator<long> >::iterator*) libp->para[0].ref, *(vector<long,allocator<long> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_249(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<long,allocator<long> >::iterator*) libp->para[0].ref, *(vector<long,allocator<long> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_250(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<long,allocator<long> >::iterator*) libp->para[0].ref, *(vector<long,allocator<long> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_251(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<long,allocator<long> >::iterator*) libp->para[0].ref, *(vector<long,allocator<long> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_252(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<long,allocator<long> >::iterator*) libp->para[0].ref, *(vector<long,allocator<long> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_253(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<long,allocator<long> >::iterator*) libp->para[0].ref, *(vector<long,allocator<long> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_254(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) operator-(*(vector<long,allocator<long> >::iterator*) libp->para[0].ref, *(vector<long,allocator<long> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_255(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long,allocator<long> >::iterator* pobj;
         const vector<long,allocator<long> >::iterator xobj = operator+((const vector<long,allocator<long> >::iterator::difference_type) G__int(libp->para[0]), *(vector<long,allocator<long> >::iterator*) libp->para[1].ref);
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_256(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<long,allocator<long> >::reverse_iterator*) libp->para[0].ref, *(vector<long,allocator<long> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_257(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<long,allocator<long> >::reverse_iterator*) libp->para[0].ref, *(vector<long,allocator<long> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_258(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<long,allocator<long> >*) libp->para[0].ref, *(vector<long,allocator<long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_259(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<long,allocator<long> >*) libp->para[0].ref, *(vector<long,allocator<long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_260(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<long,allocator<long> >*) libp->para[0].ref, *(vector<long,allocator<long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_261(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<long,allocator<long> >*) libp->para[0].ref, *(vector<long,allocator<long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_262(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<long,allocator<long> >*) libp->para[0].ref, *(vector<long,allocator<long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_263(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<long,allocator<long> >*) libp->para[0].ref, *(vector<long,allocator<long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_264(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = find(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *(long*) G__Longref(&libp->para[2]));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_265(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = find_end(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_266(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = find_first_of(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_267(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = adjacent_find(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_268(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *(long*) G__Longref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_269(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_270(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = search(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_271(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = search_n(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, (vector<long,allocator<long> >::size_type) G__int(libp->para[2]), *(long*) G__Longref(&libp->para[3]));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_272(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = copy(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_273(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = copy_backward(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_274(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      swap(*(long*) G__Longref(&libp->para[0]), *(long*) G__Longref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_275(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = swap_ranges(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_276(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_277(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *(long*) G__Longref(&libp->para[2]), *(long*) G__Longref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_278(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = replace_copy(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])), *(long*) G__Longref(&libp->para[3])
, *(long*) G__Longref(&libp->para[4]));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_279(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *(long*) G__Longref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_280(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), (vector<long,allocator<long> >::size_type) G__int(libp->para[1])
, *(long*) G__Longref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_281(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = remove(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *(long*) G__Longref(&libp->para[2]));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_282(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = remove_copy(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])), *(long*) G__Longref(&libp->para[3]));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_283(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = unique(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_284(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = unique_copy(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_285(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_286(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = reverse_copy(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_287(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_288(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = rotate_copy(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_289(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_290(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_291(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_292(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_293(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = partial_sort_copy(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_294(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_295(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = lower_bound(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *(long*) G__Longref(&libp->para[2]));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_296(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = upper_bound(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *(long*) G__Longref(&libp->para[2]));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_297(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *(long*) G__Longref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_298(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = merge(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[3]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_299(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_300(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_301(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = set_union(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[3]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_302(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = set_intersection(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[3]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_303(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = set_difference(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[3]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_304(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = set_symmetric_difference(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[3]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_305(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_306(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_307(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_308(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_309(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = min(*(long*) G__Longref(&libp->para[0]), *(long*) G__Longref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_310(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = max(*(long*) G__Longref(&libp->para[0]), *(long*) G__Longref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_311(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = min_element(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_312(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long,allocator<long> >::iterator* pobj;
         vector<long,allocator<long> >::iterator xobj = max_element(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<long,allocator<long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_313(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))
, *((vector<long,allocator<long> >::iterator*) G__int(libp->para[2])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_314(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_315(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((vector<long,allocator<long> >::iterator*) G__int(libp->para[0])), *((vector<long,allocator<long> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_316(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<unsigned char,allocator<unsigned char> >::iterator*) libp->para[0].ref, *(vector<unsigned char,allocator<unsigned char> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_317(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<unsigned char,allocator<unsigned char> >::iterator*) libp->para[0].ref, *(vector<unsigned char,allocator<unsigned char> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_318(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<unsigned char,allocator<unsigned char> >::iterator*) libp->para[0].ref, *(vector<unsigned char,allocator<unsigned char> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_319(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<unsigned char,allocator<unsigned char> >::iterator*) libp->para[0].ref, *(vector<unsigned char,allocator<unsigned char> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_320(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<unsigned char,allocator<unsigned char> >::iterator*) libp->para[0].ref, *(vector<unsigned char,allocator<unsigned char> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_321(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<unsigned char,allocator<unsigned char> >::iterator*) libp->para[0].ref, *(vector<unsigned char,allocator<unsigned char> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_322(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) operator-(*(vector<unsigned char,allocator<unsigned char> >::iterator*) libp->para[0].ref, *(vector<unsigned char,allocator<unsigned char> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_323(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         const vector<unsigned char,allocator<unsigned char> >::iterator xobj = operator+((const vector<unsigned char,allocator<unsigned char> >::iterator::difference_type) G__int(libp->para[0]), *(vector<unsigned char,allocator<unsigned char> >::iterator*) libp->para[1].ref);
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_324(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<unsigned char,allocator<unsigned char> >::reverse_iterator*) libp->para[0].ref, *(vector<unsigned char,allocator<unsigned char> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_325(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<unsigned char,allocator<unsigned char> >::reverse_iterator*) libp->para[0].ref, *(vector<unsigned char,allocator<unsigned char> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_326(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<unsigned char,allocator<unsigned char> >*) libp->para[0].ref, *(vector<unsigned char,allocator<unsigned char> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_327(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<unsigned char,allocator<unsigned char> >*) libp->para[0].ref, *(vector<unsigned char,allocator<unsigned char> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_328(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<unsigned char,allocator<unsigned char> >*) libp->para[0].ref, *(vector<unsigned char,allocator<unsigned char> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_329(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<unsigned char,allocator<unsigned char> >*) libp->para[0].ref, *(vector<unsigned char,allocator<unsigned char> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_330(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<unsigned char,allocator<unsigned char> >*) libp->para[0].ref, *(vector<unsigned char,allocator<unsigned char> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_331(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<unsigned char,allocator<unsigned char> >*) libp->para[0].ref, *(vector<unsigned char,allocator<unsigned char> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_332(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = find(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *(unsigned char*) G__UCharref(&libp->para[2]));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_333(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = find_end(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_334(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = find_first_of(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_335(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = adjacent_find(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_336(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *(unsigned char*) G__UCharref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_337(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_338(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = search(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_339(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = search_n(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, (vector<unsigned char,allocator<unsigned char> >::size_type) G__int(libp->para[2]), *(unsigned char*) G__UCharref(&libp->para[3]));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_340(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = copy(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_341(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = copy_backward(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_342(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      swap(*(unsigned char*) G__UCharref(&libp->para[0]), *(unsigned char*) G__UCharref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_343(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = swap_ranges(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_344(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_345(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *(unsigned char*) G__UCharref(&libp->para[2]), *(unsigned char*) G__UCharref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_346(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = replace_copy(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])), *(unsigned char*) G__UCharref(&libp->para[3])
, *(unsigned char*) G__UCharref(&libp->para[4]));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_347(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *(unsigned char*) G__UCharref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_348(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), (vector<unsigned char,allocator<unsigned char> >::size_type) G__int(libp->para[1])
, *(unsigned char*) G__UCharref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_349(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = remove(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *(unsigned char*) G__UCharref(&libp->para[2]));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_350(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = remove_copy(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])), *(unsigned char*) G__UCharref(&libp->para[3]));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_351(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = unique(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_352(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = unique_copy(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_353(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_354(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = reverse_copy(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_355(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_356(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = rotate_copy(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_357(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_358(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_359(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_360(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_361(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = partial_sort_copy(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_362(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_363(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = lower_bound(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *(unsigned char*) G__UCharref(&libp->para[2]));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_364(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = upper_bound(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *(unsigned char*) G__UCharref(&libp->para[2]));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_365(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *(unsigned char*) G__UCharref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_366(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = merge(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_367(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_368(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_369(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = set_union(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_370(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = set_intersection(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_371(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = set_difference(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_372(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = set_symmetric_difference(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_373(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_374(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_375(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_376(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_377(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned char& obj = min(*(unsigned char*) G__UCharref(&libp->para[0]), *(unsigned char*) G__UCharref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_378(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned char& obj = max(*(unsigned char*) G__UCharref(&libp->para[0]), *(unsigned char*) G__UCharref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_379(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = min_element(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_380(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned char,allocator<unsigned char> >::iterator* pobj;
         vector<unsigned char,allocator<unsigned char> >::iterator xobj = max_element(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<unsigned char,allocator<unsigned char> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_381(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[2])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_382(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_383(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[0])), *((vector<unsigned char,allocator<unsigned char> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_384(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<unsigned short,allocator<unsigned short> >::iterator*) libp->para[0].ref, *(vector<unsigned short,allocator<unsigned short> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_385(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<unsigned short,allocator<unsigned short> >::iterator*) libp->para[0].ref, *(vector<unsigned short,allocator<unsigned short> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_386(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<unsigned short,allocator<unsigned short> >::iterator*) libp->para[0].ref, *(vector<unsigned short,allocator<unsigned short> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_387(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<unsigned short,allocator<unsigned short> >::iterator*) libp->para[0].ref, *(vector<unsigned short,allocator<unsigned short> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_388(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<unsigned short,allocator<unsigned short> >::iterator*) libp->para[0].ref, *(vector<unsigned short,allocator<unsigned short> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_389(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<unsigned short,allocator<unsigned short> >::iterator*) libp->para[0].ref, *(vector<unsigned short,allocator<unsigned short> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_390(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) operator-(*(vector<unsigned short,allocator<unsigned short> >::iterator*) libp->para[0].ref, *(vector<unsigned short,allocator<unsigned short> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_391(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         const vector<unsigned short,allocator<unsigned short> >::iterator xobj = operator+((const vector<unsigned short,allocator<unsigned short> >::iterator::difference_type) G__int(libp->para[0]), *(vector<unsigned short,allocator<unsigned short> >::iterator*) libp->para[1].ref);
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_392(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<unsigned short,allocator<unsigned short> >::reverse_iterator*) libp->para[0].ref, *(vector<unsigned short,allocator<unsigned short> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_393(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<unsigned short,allocator<unsigned short> >::reverse_iterator*) libp->para[0].ref, *(vector<unsigned short,allocator<unsigned short> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_394(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<unsigned short,allocator<unsigned short> >*) libp->para[0].ref, *(vector<unsigned short,allocator<unsigned short> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_395(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<unsigned short,allocator<unsigned short> >*) libp->para[0].ref, *(vector<unsigned short,allocator<unsigned short> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_396(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<unsigned short,allocator<unsigned short> >*) libp->para[0].ref, *(vector<unsigned short,allocator<unsigned short> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_397(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<unsigned short,allocator<unsigned short> >*) libp->para[0].ref, *(vector<unsigned short,allocator<unsigned short> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_398(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<unsigned short,allocator<unsigned short> >*) libp->para[0].ref, *(vector<unsigned short,allocator<unsigned short> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_399(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<unsigned short,allocator<unsigned short> >*) libp->para[0].ref, *(vector<unsigned short,allocator<unsigned short> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_400(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = find(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *(unsigned short*) G__UShortref(&libp->para[2]));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_401(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = find_end(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_402(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = find_first_of(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_403(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = adjacent_find(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_404(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *(unsigned short*) G__UShortref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_405(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_406(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = search(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_407(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = search_n(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, (vector<unsigned short,allocator<unsigned short> >::size_type) G__int(libp->para[2]), *(unsigned short*) G__UShortref(&libp->para[3]));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_408(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = copy(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_409(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = copy_backward(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_410(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      swap(*(unsigned short*) G__UShortref(&libp->para[0]), *(unsigned short*) G__UShortref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_411(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = swap_ranges(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_412(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_413(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *(unsigned short*) G__UShortref(&libp->para[2]), *(unsigned short*) G__UShortref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_414(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = replace_copy(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])), *(unsigned short*) G__UShortref(&libp->para[3])
, *(unsigned short*) G__UShortref(&libp->para[4]));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_415(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *(unsigned short*) G__UShortref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_416(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), (vector<unsigned short,allocator<unsigned short> >::size_type) G__int(libp->para[1])
, *(unsigned short*) G__UShortref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_417(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = remove(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *(unsigned short*) G__UShortref(&libp->para[2]));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_418(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = remove_copy(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])), *(unsigned short*) G__UShortref(&libp->para[3]));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_419(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = unique(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_420(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = unique_copy(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_421(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_422(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = reverse_copy(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_423(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_424(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = rotate_copy(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_425(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_426(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_427(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_428(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_429(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = partial_sort_copy(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_430(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_431(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = lower_bound(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *(unsigned short*) G__UShortref(&libp->para[2]));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_432(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = upper_bound(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *(unsigned short*) G__UShortref(&libp->para[2]));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_433(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *(unsigned short*) G__UShortref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_434(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = merge(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_435(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_436(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_437(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = set_union(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_438(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = set_intersection(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_439(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = set_difference(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_440(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = set_symmetric_difference(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_441(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_442(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_443(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_444(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_445(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned short& obj = min(*(unsigned short*) G__UShortref(&libp->para[0]), *(unsigned short*) G__UShortref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_446(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned short& obj = max(*(unsigned short*) G__UShortref(&libp->para[0]), *(unsigned short*) G__UShortref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_447(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = min_element(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_448(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short,allocator<unsigned short> >::iterator* pobj;
         vector<unsigned short,allocator<unsigned short> >::iterator xobj = max_element(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<unsigned short,allocator<unsigned short> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_449(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[2])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_450(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_451(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[0])), *((vector<unsigned short,allocator<unsigned short> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_452(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<unsigned int,allocator<unsigned int> >::iterator*) libp->para[0].ref, *(vector<unsigned int,allocator<unsigned int> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_453(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<unsigned int,allocator<unsigned int> >::iterator*) libp->para[0].ref, *(vector<unsigned int,allocator<unsigned int> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_454(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<unsigned int,allocator<unsigned int> >::iterator*) libp->para[0].ref, *(vector<unsigned int,allocator<unsigned int> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_455(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<unsigned int,allocator<unsigned int> >::iterator*) libp->para[0].ref, *(vector<unsigned int,allocator<unsigned int> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_456(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<unsigned int,allocator<unsigned int> >::iterator*) libp->para[0].ref, *(vector<unsigned int,allocator<unsigned int> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_457(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<unsigned int,allocator<unsigned int> >::iterator*) libp->para[0].ref, *(vector<unsigned int,allocator<unsigned int> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_458(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) operator-(*(vector<unsigned int,allocator<unsigned int> >::iterator*) libp->para[0].ref, *(vector<unsigned int,allocator<unsigned int> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_459(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         const vector<unsigned int,allocator<unsigned int> >::iterator xobj = operator+((const vector<unsigned int,allocator<unsigned int> >::iterator::difference_type) G__int(libp->para[0]), *(vector<unsigned int,allocator<unsigned int> >::iterator*) libp->para[1].ref);
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_460(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<unsigned int,allocator<unsigned int> >::reverse_iterator*) libp->para[0].ref, *(vector<unsigned int,allocator<unsigned int> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_461(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<unsigned int,allocator<unsigned int> >::reverse_iterator*) libp->para[0].ref, *(vector<unsigned int,allocator<unsigned int> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_462(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<unsigned int,allocator<unsigned int> >*) libp->para[0].ref, *(vector<unsigned int,allocator<unsigned int> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_463(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<unsigned int,allocator<unsigned int> >*) libp->para[0].ref, *(vector<unsigned int,allocator<unsigned int> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_464(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<unsigned int,allocator<unsigned int> >*) libp->para[0].ref, *(vector<unsigned int,allocator<unsigned int> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_465(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<unsigned int,allocator<unsigned int> >*) libp->para[0].ref, *(vector<unsigned int,allocator<unsigned int> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_466(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<unsigned int,allocator<unsigned int> >*) libp->para[0].ref, *(vector<unsigned int,allocator<unsigned int> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_467(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<unsigned int,allocator<unsigned int> >*) libp->para[0].ref, *(vector<unsigned int,allocator<unsigned int> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_468(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = find(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *(unsigned int*) G__UIntref(&libp->para[2]));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_469(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = find_end(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_470(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = find_first_of(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_471(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = adjacent_find(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_472(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *(unsigned int*) G__UIntref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_473(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_474(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = search(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_475(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = search_n(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, (vector<unsigned int,allocator<unsigned int> >::size_type) G__int(libp->para[2]), *(unsigned int*) G__UIntref(&libp->para[3]));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_476(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = copy(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_477(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = copy_backward(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_478(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      swap(*(unsigned int*) G__UIntref(&libp->para[0]), *(unsigned int*) G__UIntref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_479(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = swap_ranges(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_480(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_481(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *(unsigned int*) G__UIntref(&libp->para[2]), *(unsigned int*) G__UIntref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_482(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = replace_copy(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])), *(unsigned int*) G__UIntref(&libp->para[3])
, *(unsigned int*) G__UIntref(&libp->para[4]));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_483(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *(unsigned int*) G__UIntref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_484(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), (vector<unsigned int,allocator<unsigned int> >::size_type) G__int(libp->para[1])
, *(unsigned int*) G__UIntref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_485(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = remove(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *(unsigned int*) G__UIntref(&libp->para[2]));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_486(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = remove_copy(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])), *(unsigned int*) G__UIntref(&libp->para[3]));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_487(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = unique(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_488(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = unique_copy(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_489(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_490(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = reverse_copy(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_491(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_492(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = rotate_copy(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_493(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_494(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_495(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_496(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_497(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = partial_sort_copy(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_498(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_499(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = lower_bound(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *(unsigned int*) G__UIntref(&libp->para[2]));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_500(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = upper_bound(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *(unsigned int*) G__UIntref(&libp->para[2]));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_501(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *(unsigned int*) G__UIntref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_502(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = merge(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_503(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_504(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_505(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = set_union(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_506(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = set_intersection(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_507(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = set_difference(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_508(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = set_symmetric_difference(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_509(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_510(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_511(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_512(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_513(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned int& obj = min(*(unsigned int*) G__UIntref(&libp->para[0]), *(unsigned int*) G__UIntref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_514(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned int& obj = max(*(unsigned int*) G__UIntref(&libp->para[0]), *(unsigned int*) G__UIntref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_515(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = min_element(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_516(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned int,allocator<unsigned int> >::iterator* pobj;
         vector<unsigned int,allocator<unsigned int> >::iterator xobj = max_element(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<unsigned int,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_517(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[2])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_518(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_519(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((vector<unsigned int,allocator<unsigned int> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_520(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<unsigned long,allocator<unsigned long> >::iterator*) libp->para[0].ref, *(vector<unsigned long,allocator<unsigned long> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_521(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<unsigned long,allocator<unsigned long> >::iterator*) libp->para[0].ref, *(vector<unsigned long,allocator<unsigned long> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_522(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<unsigned long,allocator<unsigned long> >::iterator*) libp->para[0].ref, *(vector<unsigned long,allocator<unsigned long> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_523(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<unsigned long,allocator<unsigned long> >::iterator*) libp->para[0].ref, *(vector<unsigned long,allocator<unsigned long> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_524(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<unsigned long,allocator<unsigned long> >::iterator*) libp->para[0].ref, *(vector<unsigned long,allocator<unsigned long> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_525(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<unsigned long,allocator<unsigned long> >::iterator*) libp->para[0].ref, *(vector<unsigned long,allocator<unsigned long> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_526(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) operator-(*(vector<unsigned long,allocator<unsigned long> >::iterator*) libp->para[0].ref, *(vector<unsigned long,allocator<unsigned long> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_527(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         const vector<unsigned long,allocator<unsigned long> >::iterator xobj = operator+((const vector<unsigned long,allocator<unsigned long> >::iterator::difference_type) G__int(libp->para[0]), *(vector<unsigned long,allocator<unsigned long> >::iterator*) libp->para[1].ref);
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_528(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<unsigned long,allocator<unsigned long> >::reverse_iterator*) libp->para[0].ref, *(vector<unsigned long,allocator<unsigned long> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_529(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<unsigned long,allocator<unsigned long> >::reverse_iterator*) libp->para[0].ref, *(vector<unsigned long,allocator<unsigned long> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_530(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<unsigned long,allocator<unsigned long> >*) libp->para[0].ref, *(vector<unsigned long,allocator<unsigned long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_531(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<unsigned long,allocator<unsigned long> >*) libp->para[0].ref, *(vector<unsigned long,allocator<unsigned long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_532(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<unsigned long,allocator<unsigned long> >*) libp->para[0].ref, *(vector<unsigned long,allocator<unsigned long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_533(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<unsigned long,allocator<unsigned long> >*) libp->para[0].ref, *(vector<unsigned long,allocator<unsigned long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_534(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<unsigned long,allocator<unsigned long> >*) libp->para[0].ref, *(vector<unsigned long,allocator<unsigned long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_535(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<unsigned long,allocator<unsigned long> >*) libp->para[0].ref, *(vector<unsigned long,allocator<unsigned long> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_536(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = find(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *(unsigned long*) G__ULongref(&libp->para[2]));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_537(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = find_end(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_538(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = find_first_of(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_539(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = adjacent_find(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_540(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *(unsigned long*) G__ULongref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_541(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_542(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = search(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_543(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = search_n(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, (vector<unsigned long,allocator<unsigned long> >::size_type) G__int(libp->para[2]), *(unsigned long*) G__ULongref(&libp->para[3]));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_544(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = copy(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_545(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = copy_backward(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_546(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      swap(*(unsigned long*) G__ULongref(&libp->para[0]), *(unsigned long*) G__ULongref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_547(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = swap_ranges(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_548(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_549(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *(unsigned long*) G__ULongref(&libp->para[2]), *(unsigned long*) G__ULongref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_550(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = replace_copy(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])), *(unsigned long*) G__ULongref(&libp->para[3])
, *(unsigned long*) G__ULongref(&libp->para[4]));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_551(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *(unsigned long*) G__ULongref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_552(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), (vector<unsigned long,allocator<unsigned long> >::size_type) G__int(libp->para[1])
, *(unsigned long*) G__ULongref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_553(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = remove(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *(unsigned long*) G__ULongref(&libp->para[2]));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_554(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = remove_copy(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])), *(unsigned long*) G__ULongref(&libp->para[3]));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_555(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = unique(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_556(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = unique_copy(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_557(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_558(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = reverse_copy(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_559(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_560(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = rotate_copy(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_561(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_562(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_563(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_564(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_565(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = partial_sort_copy(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_566(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_567(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = lower_bound(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *(unsigned long*) G__ULongref(&libp->para[2]));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_568(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = upper_bound(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *(unsigned long*) G__ULongref(&libp->para[2]));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_569(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *(unsigned long*) G__ULongref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_570(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = merge(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_571(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_572(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_573(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = set_union(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_574(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = set_intersection(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_575(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = set_difference(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_576(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = set_symmetric_difference(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[3]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_577(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_578(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_579(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_580(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_581(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned long& obj = min(*(unsigned long*) G__ULongref(&libp->para[0]), *(unsigned long*) G__ULongref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_582(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned long& obj = max(*(unsigned long*) G__ULongref(&libp->para[0]), *(unsigned long*) G__ULongref(&libp->para[1]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_583(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = min_element(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_584(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned long,allocator<unsigned long> >::iterator* pobj;
         vector<unsigned long,allocator<unsigned long> >::iterator xobj = max_element(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<unsigned long,allocator<unsigned long> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_585(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))
, *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[2])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_586(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_587(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[0])), *((vector<unsigned long,allocator<unsigned long> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_588(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<float,allocator<float> >::iterator*) libp->para[0].ref, *(vector<float,allocator<float> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_589(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<float,allocator<float> >::iterator*) libp->para[0].ref, *(vector<float,allocator<float> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_590(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<float,allocator<float> >::iterator*) libp->para[0].ref, *(vector<float,allocator<float> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_591(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<float,allocator<float> >::iterator*) libp->para[0].ref, *(vector<float,allocator<float> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_592(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<float,allocator<float> >::iterator*) libp->para[0].ref, *(vector<float,allocator<float> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_593(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<float,allocator<float> >::iterator*) libp->para[0].ref, *(vector<float,allocator<float> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_594(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) operator-(*(vector<float,allocator<float> >::iterator*) libp->para[0].ref, *(vector<float,allocator<float> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_595(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >::iterator* pobj;
         const vector<float,allocator<float> >::iterator xobj = operator+((const vector<float,allocator<float> >::iterator::difference_type) G__int(libp->para[0]), *(vector<float,allocator<float> >::iterator*) libp->para[1].ref);
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_596(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<float,allocator<float> >::reverse_iterator*) libp->para[0].ref, *(vector<float,allocator<float> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_597(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<float,allocator<float> >::reverse_iterator*) libp->para[0].ref, *(vector<float,allocator<float> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_598(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<float,allocator<float> >*) libp->para[0].ref, *(vector<float,allocator<float> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_599(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<float,allocator<float> >*) libp->para[0].ref, *(vector<float,allocator<float> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_600(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<float,allocator<float> >*) libp->para[0].ref, *(vector<float,allocator<float> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_601(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<float,allocator<float> >*) libp->para[0].ref, *(vector<float,allocator<float> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_602(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<float,allocator<float> >*) libp->para[0].ref, *(vector<float,allocator<float> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_603(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<float,allocator<float> >*) libp->para[0].ref, *(vector<float,allocator<float> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_604(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = find(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *(float*) G__Floatref(&libp->para[2]));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_605(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = find_end(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_606(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = find_first_of(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_607(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = adjacent_find(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_608(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *(float*) G__Floatref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_609(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_610(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = search(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_611(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = search_n(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, (vector<float,allocator<float> >::size_type) G__int(libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_612(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = copy(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_613(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = copy_backward(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_614(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      swap(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_615(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = swap_ranges(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_616(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_617(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_618(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = replace_copy(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_619(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *(float*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_620(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), (vector<float,allocator<float> >::size_type) G__int(libp->para[1])
, *(float*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_621(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = remove(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *(float*) G__Floatref(&libp->para[2]));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_622(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = remove_copy(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])), *(float*) G__Floatref(&libp->para[3]));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_623(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = unique(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_624(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = unique_copy(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_625(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_626(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = reverse_copy(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_627(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_628(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = rotate_copy(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_629(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_630(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_631(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_632(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_633(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = partial_sort_copy(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_634(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_635(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = lower_bound(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *(float*) G__Floatref(&libp->para[2]));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_636(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = upper_bound(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *(float*) G__Floatref(&libp->para[2]));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_637(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *(float*) G__Floatref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_638(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = merge(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[3]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_639(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_640(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_641(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = set_union(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[3]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_642(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = set_intersection(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[3]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_643(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = set_difference(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[3]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_644(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = set_symmetric_difference(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[3]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_645(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_646(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_647(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_648(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_649(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = min(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_650(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = max(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_651(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = min_element(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_652(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float,allocator<float> >::iterator* pobj;
         vector<float,allocator<float> >::iterator xobj = max_element(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<float,allocator<float> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_653(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))
, *((vector<float,allocator<float> >::iterator*) G__int(libp->para[2])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_654(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_655(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((vector<float,allocator<float> >::iterator*) G__int(libp->para[0])), *((vector<float,allocator<float> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_656(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<double,allocator<double> >::iterator*) libp->para[0].ref, *(vector<double,allocator<double> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_657(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<double,allocator<double> >::iterator*) libp->para[0].ref, *(vector<double,allocator<double> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_658(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<double,allocator<double> >::iterator*) libp->para[0].ref, *(vector<double,allocator<double> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_659(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<double,allocator<double> >::iterator*) libp->para[0].ref, *(vector<double,allocator<double> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_660(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<double,allocator<double> >::iterator*) libp->para[0].ref, *(vector<double,allocator<double> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_661(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<double,allocator<double> >::iterator*) libp->para[0].ref, *(vector<double,allocator<double> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_662(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) operator-(*(vector<double,allocator<double> >::iterator*) libp->para[0].ref, *(vector<double,allocator<double> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_663(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >::iterator* pobj;
         const vector<double,allocator<double> >::iterator xobj = operator+((const vector<double,allocator<double> >::iterator::difference_type) G__int(libp->para[0]), *(vector<double,allocator<double> >::iterator*) libp->para[1].ref);
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_664(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<double,allocator<double> >::reverse_iterator*) libp->para[0].ref, *(vector<double,allocator<double> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_665(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<double,allocator<double> >::reverse_iterator*) libp->para[0].ref, *(vector<double,allocator<double> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_666(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<double,allocator<double> >*) libp->para[0].ref, *(vector<double,allocator<double> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_667(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<double,allocator<double> >*) libp->para[0].ref, *(vector<double,allocator<double> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_668(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<double,allocator<double> >*) libp->para[0].ref, *(vector<double,allocator<double> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_669(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<double,allocator<double> >*) libp->para[0].ref, *(vector<double,allocator<double> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_670(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<double,allocator<double> >*) libp->para[0].ref, *(vector<double,allocator<double> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_671(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<double,allocator<double> >*) libp->para[0].ref, *(vector<double,allocator<double> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_672(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = find(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *(double*) G__Doubleref(&libp->para[2]));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_673(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = find_end(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_674(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = find_first_of(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_675(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = adjacent_find(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_676(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *(double*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_677(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_678(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = search(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_679(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = search_n(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, (vector<double,allocator<double> >::size_type) G__int(libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_680(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = copy(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_681(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = copy_backward(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_682(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      swap(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_683(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = swap_ranges(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_684(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_685(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_686(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = replace_copy(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_687(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_688(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), (vector<double,allocator<double> >::size_type) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_689(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = remove(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *(double*) G__Doubleref(&libp->para[2]));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_690(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = remove_copy(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])), *(double*) G__Doubleref(&libp->para[3]));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_691(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = unique(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_692(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = unique_copy(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_693(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_694(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = reverse_copy(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_695(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_696(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = rotate_copy(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_697(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_698(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_699(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_700(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_701(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = partial_sort_copy(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_702(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_703(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = lower_bound(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *(double*) G__Doubleref(&libp->para[2]));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_704(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = upper_bound(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *(double*) G__Doubleref(&libp->para[2]));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_705(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *(double*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_706(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = merge(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[3]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_707(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_708(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_709(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = set_union(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[3]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_710(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = set_intersection(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[3]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_711(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = set_difference(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[3]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_712(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = set_symmetric_difference(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[3]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_713(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_714(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_715(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_716(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_717(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = min(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_718(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = max(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_719(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = min_element(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_720(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double,allocator<double> >::iterator* pobj;
         vector<double,allocator<double> >::iterator xobj = max_element(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<double,allocator<double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_721(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))
, *((vector<double,allocator<double> >::iterator*) G__int(libp->para[2])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_722(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_723(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((vector<double,allocator<double> >::iterator*) G__int(libp->para[0])), *((vector<double,allocator<double> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_724(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<void*,allocator<void*> >::iterator*) libp->para[0].ref, *(vector<void*,allocator<void*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_725(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<void*,allocator<void*> >::iterator*) libp->para[0].ref, *(vector<void*,allocator<void*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_726(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<void*,allocator<void*> >::iterator*) libp->para[0].ref, *(vector<void*,allocator<void*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_727(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<void*,allocator<void*> >::iterator*) libp->para[0].ref, *(vector<void*,allocator<void*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_728(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<void*,allocator<void*> >::iterator*) libp->para[0].ref, *(vector<void*,allocator<void*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_729(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<void*,allocator<void*> >::iterator*) libp->para[0].ref, *(vector<void*,allocator<void*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_730(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) operator-(*(vector<void*,allocator<void*> >::iterator*) libp->para[0].ref, *(vector<void*,allocator<void*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_731(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<void*,allocator<void*> >::iterator* pobj;
         const vector<void*,allocator<void*> >::iterator xobj = operator+((const vector<void*,allocator<void*> >::iterator::difference_type) G__int(libp->para[0]), *(vector<void*,allocator<void*> >::iterator*) libp->para[1].ref);
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_732(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<void*,allocator<void*> >::reverse_iterator*) libp->para[0].ref, *(vector<void*,allocator<void*> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_733(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<void*,allocator<void*> >::reverse_iterator*) libp->para[0].ref, *(vector<void*,allocator<void*> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_734(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<void*,allocator<void*> >*) libp->para[0].ref, *(vector<void*,allocator<void*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_735(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<void*,allocator<void*> >*) libp->para[0].ref, *(vector<void*,allocator<void*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_736(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<void*,allocator<void*> >*) libp->para[0].ref, *(vector<void*,allocator<void*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_737(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<void*,allocator<void*> >*) libp->para[0].ref, *(vector<void*,allocator<void*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_738(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<void*,allocator<void*> >*) libp->para[0].ref, *(vector<void*,allocator<void*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_739(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<void*,allocator<void*> >*) libp->para[0].ref, *(vector<void*,allocator<void*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_740(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = find(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_741(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = find_end(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_742(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = find_first_of(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_743(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = adjacent_find(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_744(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_745(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_746(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = search(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_747(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = search_n(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, (vector<void*,allocator<void*> >::size_type) G__int(libp->para[2]), libp->para[3].ref ? *(void**) libp->para[3].ref : *(void**) (&G__Mlong(libp->para[3])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_748(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = copy(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_749(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = copy_backward(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_750(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      swap(libp->para[0].ref ? *(void**) libp->para[0].ref : *(void**) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(void**) libp->para[1].ref : *(void**) (&G__Mlong(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_751(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = swap_ranges(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_752(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_753(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2])), libp->para[3].ref ? *(void**) libp->para[3].ref : *(void**) (&G__Mlong(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_754(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = replace_copy(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), libp->para[3].ref ? *(void**) libp->para[3].ref : *(void**) (&G__Mlong(libp->para[3]))
, libp->para[4].ref ? *(void**) libp->para[4].ref : *(void**) (&G__Mlong(libp->para[4])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_755(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_756(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), (vector<void*,allocator<void*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_757(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = remove(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_758(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = remove_copy(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), libp->para[3].ref ? *(void**) libp->para[3].ref : *(void**) (&G__Mlong(libp->para[3])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_759(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = unique(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_760(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = unique_copy(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_761(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_762(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = reverse_copy(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_763(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_764(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = rotate_copy(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_765(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_766(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_767(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_768(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_769(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = partial_sort_copy(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_770(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_771(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = lower_bound(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_772(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = upper_bound(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_773(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(void**) libp->para[2].ref : *(void**) (&G__Mlong(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_774(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = merge(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[3]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_775(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_776(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_777(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = set_union(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[3]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_778(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = set_intersection(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[3]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_779(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = set_difference(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[3]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_780(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = set_symmetric_difference(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[3]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_781(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_782(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_783(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_784(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_785(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         void* const& obj = min(libp->para[0].ref ? *(void**) libp->para[0].ref : *(void**) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(void**) libp->para[1].ref : *(void**) (&G__Mlong(libp->para[1])));
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_786(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         void* const& obj = max(libp->para[0].ref ? *(void**) libp->para[0].ref : *(void**) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(void**) libp->para[1].ref : *(void**) (&G__Mlong(libp->para[1])));
         result7->ref = (long) (&obj);
         G__letint(result7, 'Y', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_787(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = min_element(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_788(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<void*,allocator<void*> >::iterator* pobj;
         vector<void*,allocator<void*> >::iterator xobj = max_element(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<void*,allocator<void*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_789(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))
, *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[2])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_790(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_791(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[0])), *((vector<void*,allocator<void*> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_792(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<char*,allocator<char*> >::iterator*) libp->para[0].ref, *(vector<char*,allocator<char*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_793(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<char*,allocator<char*> >::iterator*) libp->para[0].ref, *(vector<char*,allocator<char*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_794(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<char*,allocator<char*> >::iterator*) libp->para[0].ref, *(vector<char*,allocator<char*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_795(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<char*,allocator<char*> >::iterator*) libp->para[0].ref, *(vector<char*,allocator<char*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_796(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<char*,allocator<char*> >::iterator*) libp->para[0].ref, *(vector<char*,allocator<char*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_797(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<char*,allocator<char*> >::iterator*) libp->para[0].ref, *(vector<char*,allocator<char*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_798(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) operator-(*(vector<char*,allocator<char*> >::iterator*) libp->para[0].ref, *(vector<char*,allocator<char*> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_799(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<char*,allocator<char*> >::iterator* pobj;
         const vector<char*,allocator<char*> >::iterator xobj = operator+((const vector<char*,allocator<char*> >::iterator::difference_type) G__int(libp->para[0]), *(vector<char*,allocator<char*> >::iterator*) libp->para[1].ref);
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_800(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<char*,allocator<char*> >::reverse_iterator*) libp->para[0].ref, *(vector<char*,allocator<char*> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_801(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<char*,allocator<char*> >::reverse_iterator*) libp->para[0].ref, *(vector<char*,allocator<char*> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_802(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<char*,allocator<char*> >*) libp->para[0].ref, *(vector<char*,allocator<char*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_803(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<char*,allocator<char*> >*) libp->para[0].ref, *(vector<char*,allocator<char*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_804(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<char*,allocator<char*> >*) libp->para[0].ref, *(vector<char*,allocator<char*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_805(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<char*,allocator<char*> >*) libp->para[0].ref, *(vector<char*,allocator<char*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_806(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<char*,allocator<char*> >*) libp->para[0].ref, *(vector<char*,allocator<char*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_807(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<char*,allocator<char*> >*) libp->para[0].ref, *(vector<char*,allocator<char*> >*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_808(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = find(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_809(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = find_end(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_810(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = find_first_of(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_811(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = adjacent_find(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_812(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) count(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_813(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) equal(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_814(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = search(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_815(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = search_n(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, (vector<char*,allocator<char*> >::size_type) G__int(libp->para[2]), libp->para[3].ref ? *(char**) libp->para[3].ref : *(char**) (&G__Mlong(libp->para[3])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_816(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = copy(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_817(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = copy_backward(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_818(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      swap(libp->para[0].ref ? *(char**) libp->para[0].ref : *(char**) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(char**) libp->para[1].ref : *(char**) (&G__Mlong(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_819(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = swap_ranges(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_820(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      iter_swap(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_821(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      replace(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2])), libp->para[3].ref ? *(char**) libp->para[3].ref : *(char**) (&G__Mlong(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_822(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = replace_copy(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), libp->para[3].ref ? *(char**) libp->para[3].ref : *(char**) (&G__Mlong(libp->para[3]))
, libp->para[4].ref ? *(char**) libp->para[4].ref : *(char**) (&G__Mlong(libp->para[4])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_823(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_824(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fill_n(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), (vector<char*,allocator<char*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_825(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = remove(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_826(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = remove_copy(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), libp->para[3].ref ? *(char**) libp->para[3].ref : *(char**) (&G__Mlong(libp->para[3])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_827(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = unique(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_828(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = unique_copy(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_829(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reverse(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_830(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = reverse_copy(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_831(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      rotate(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_832(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = rotate_copy(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_833(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      random_shuffle(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_834(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_835(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stable_sort(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_836(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      partial_sort(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_837(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = partial_sort_copy(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[3])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_838(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      nth_element(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_839(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = lower_bound(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_840(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = upper_bound(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_841(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) binary_search(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, libp->para[2].ref ? *(char**) libp->para[2].ref : *(char**) (&G__Mlong(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_842(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = merge(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[3]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_843(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      inplace_merge(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_844(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) includes(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_845(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = set_union(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[3]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_846(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = set_intersection(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[3]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_847(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = set_difference(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[3]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_848(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = set_symmetric_difference(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[3]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[4])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_849(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      push_heap(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_850(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop_heap(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_851(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      make_heap(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_852(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      sort_heap(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_853(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         char* const& obj = min(libp->para[0].ref ? *(char**) libp->para[0].ref : *(char**) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(char**) libp->para[1].ref : *(char**) (&G__Mlong(libp->para[1])));
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_854(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         char* const& obj = max(libp->para[0].ref ? *(char**) libp->para[0].ref : *(char**) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(char**) libp->para[1].ref : *(char**) (&G__Mlong(libp->para[1])));
         result7->ref = (long) (&obj);
         G__letint(result7, 'C', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_855(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = min_element(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_856(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<char*,allocator<char*> >::iterator* pobj;
         vector<char*,allocator<char*> >::iterator xobj = max_element(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1])));
         pobj = new vector<char*,allocator<char*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_857(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) lexicographical_compare(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))
, *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[2])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_858(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) next_permutation(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__vector__0_859(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) prev_permutation(*((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[0])), *((vector<char*,allocator<char*> >::iterator*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* allocator<char> */

/* vector<char,allocator<char> > */

/* vector<char,allocator<char> >::iterator */

/* reverse_iterator<vector<char,allocator<char> >::iterator> */

/* allocator<short> */

/* vector<short,allocator<short> > */

/* vector<short,allocator<short> >::iterator */

/* reverse_iterator<vector<short,allocator<short> >::iterator> */

/* allocator<long> */

/* vector<long,allocator<long> > */

/* vector<long,allocator<long> >::iterator */

/* reverse_iterator<vector<long,allocator<long> >::iterator> */

/* allocator<unsigned char> */

/* vector<unsigned char,allocator<unsigned char> > */

/* vector<unsigned char,allocator<unsigned char> >::iterator */

/* reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator> */

/* allocator<unsigned short> */

/* vector<unsigned short,allocator<unsigned short> > */

/* vector<unsigned short,allocator<unsigned short> >::iterator */

/* reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator> */

/* allocator<unsigned int> */

/* vector<unsigned int,allocator<unsigned int> > */

/* vector<unsigned int,allocator<unsigned int> >::iterator */

/* reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator> */

/* allocator<unsigned long> */

/* vector<unsigned long,allocator<unsigned long> > */

/* vector<unsigned long,allocator<unsigned long> >::iterator */

/* reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator> */

/* allocator<float> */

/* vector<float,allocator<float> > */

/* vector<float,allocator<float> >::iterator */

/* reverse_iterator<vector<float,allocator<float> >::iterator> */

/* allocator<double> */

/* vector<double,allocator<double> > */

/* vector<double,allocator<double> >::iterator */

/* reverse_iterator<vector<double,allocator<double> >::iterator> */

/* allocator<void*> */

/* vector<void*,allocator<void*> > */

/* vector<void*,allocator<void*> >::iterator */

/* reverse_iterator<vector<void*,allocator<void*> >::iterator> */

/* allocator<char*> */

/* vector<char*,allocator<char*> > */

/* vector<char*,allocator<char*> >::iterator */

/* reverse_iterator<vector<char*,allocator<char*> >::iterator> */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunc {
 public:
  G__Sizep2memfunc(): p(&G__Sizep2memfunc::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunc::*p)();
};

size_t G__get_sizep2memfunc()
{
  G__Sizep2memfunc a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritance() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetable() {

   /* Setting up typedef entry */
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEchargR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEchargR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",67,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEchargR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",67,-1,256,G__get_linked_tagnum(&G__LN_allocatorlEchargR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",99,-1,1,G__get_linked_tagnum(&G__LN_allocatorlEchargR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",99,-1,257,G__get_linked_tagnum(&G__LN_allocatorlEchargR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",99,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEchargR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<char>",117,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",99,-1,0,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",67,-1,0,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",67,-1,256,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",99,-1,1,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",99,-1,257,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",67,-1,0,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",67,-1,0,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",99,-1,1,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",99,-1,1,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",67,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",99,-1,1,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEshortgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEshortgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",83,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEshortgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",83,-1,256,G__get_linked_tagnum(&G__LN_allocatorlEshortgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",115,-1,1,G__get_linked_tagnum(&G__LN_allocatorlEshortgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",115,-1,257,G__get_linked_tagnum(&G__LN_allocatorlEshortgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",115,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEshortgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<short>",117,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",115,-1,0,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",83,-1,0,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",83,-1,256,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",115,-1,1,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",115,-1,257,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",83,-1,0,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",83,-1,0,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",115,-1,1,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",115,-1,1,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",83,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",115,-1,1,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",76,-1,0,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",76,-1,256,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",108,-1,1,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",108,-1,257,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<long>",117,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",76,-1,0,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",76,-1,256,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",108,-1,1,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",108,-1,257,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",76,-1,0,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",76,-1,0,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",108,-1,1,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",108,-1,1,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",76,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",108,-1,1,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPchargR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPchargR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",66,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPchargR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",66,-1,256,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPchargR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",98,-1,1,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPchargR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",98,-1,257,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPchargR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",98,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPchargR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned char>",117,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",98,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",66,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",66,-1,256,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",98,-1,1,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",98,-1,257,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",66,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",66,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",98,-1,1,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",98,-1,1,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",66,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",98,-1,1,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPshortgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPshortgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",82,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPshortgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",82,-1,256,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPshortgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",114,-1,1,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPshortgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",114,-1,257,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPshortgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",114,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPshortgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned short>",117,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",114,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",82,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",82,-1,256,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",114,-1,1,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",114,-1,257,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",82,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",82,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",114,-1,1,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",114,-1,1,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",82,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",114,-1,1,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPintgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPintgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",72,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPintgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",72,-1,256,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPintgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",104,-1,1,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPintgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",104,-1,257,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPintgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPintgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned int>",117,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",72,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",72,-1,256,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",104,-1,1,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",104,-1,257,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",72,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",72,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",104,-1,1,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",104,-1,1,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",72,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",104,-1,1,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPlonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPlonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",75,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPlonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",75,-1,256,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPlonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",107,-1,1,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPlonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",107,-1,257,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPlonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",107,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPlonggR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned long>",117,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",107,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",75,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",75,-1,256,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",107,-1,1,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",107,-1,257,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",75,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",75,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",107,-1,1,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",107,-1,1,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",75,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",107,-1,1,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEfloatgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEfloatgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",70,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEfloatgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",70,-1,256,G__get_linked_tagnum(&G__LN_allocatorlEfloatgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",102,-1,1,G__get_linked_tagnum(&G__LN_allocatorlEfloatgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",102,-1,257,G__get_linked_tagnum(&G__LN_allocatorlEfloatgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEfloatgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<float>",117,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",70,-1,0,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",70,-1,256,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",102,-1,1,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",102,-1,257,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",70,-1,0,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",70,-1,0,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",102,-1,1,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",102,-1,1,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",70,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",102,-1,1,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",68,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",68,-1,256,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",100,-1,1,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",100,-1,257,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<double>",117,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",68,-1,0,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",68,-1,256,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",100,-1,1,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",100,-1,257,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",68,-1,0,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",68,-1,0,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",100,-1,1,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",100,-1,1,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",68,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",100,-1,1,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",89,-1,2,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",89,-1,258,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",89,-1,1,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",89,-1,1025,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",89,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<void*>",117,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",89,-1,0,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",89,-1,0,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",89,-1,256,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",89,-1,1,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",89,-1,257,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",89,-1,0,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",89,-1,0,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",89,-1,1,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",89,-1,1,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",89,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",89,-1,1,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",67,-1,2,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",67,-1,258,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",67,-1,1,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",67,-1,1025,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",67,-1,0,G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<char*>",117,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",67,-1,0,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",67,-1,0,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",67,-1,256,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",67,-1,1,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",67,-1,257,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",67,-1,0,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",67,-1,0,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",67,-1,1,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",67,-1,1,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",67,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",67,-1,1,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* allocator<char> */
static void G__setup_memvarallocatorlEchargR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlEchargR));
   { allocator<char> *p; p=(allocator<char>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<char,allocator<char> > */
static void G__setup_memvarvectorlEcharcOallocatorlEchargRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   { vector<char,allocator<char> > *p; p=(vector<char,allocator<char> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<char,allocator<char> >::iterator */
static void G__setup_memvarvectorlEcharcOallocatorlEchargRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator));
   { vector<char,allocator<char> >::iterator *p; p=(vector<char,allocator<char> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* reverse_iterator<vector<char,allocator<char> >::iterator> */
static void G__setup_memvarreverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR));
   { reverse_iterator<vector<char,allocator<char> >::iterator> *p; p=(reverse_iterator<vector<char,allocator<char> >::iterator>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* allocator<short> */
static void G__setup_memvarallocatorlEshortgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlEshortgR));
   { allocator<short> *p; p=(allocator<short>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<short,allocator<short> > */
static void G__setup_memvarvectorlEshortcOallocatorlEshortgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   { vector<short,allocator<short> > *p; p=(vector<short,allocator<short> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<short,allocator<short> >::iterator */
static void G__setup_memvarvectorlEshortcOallocatorlEshortgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator));
   { vector<short,allocator<short> >::iterator *p; p=(vector<short,allocator<short> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* reverse_iterator<vector<short,allocator<short> >::iterator> */
static void G__setup_memvarreverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR));
   { reverse_iterator<vector<short,allocator<short> >::iterator> *p; p=(reverse_iterator<vector<short,allocator<short> >::iterator>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* allocator<long> */
static void G__setup_memvarallocatorlElonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   { allocator<long> *p; p=(allocator<long>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<long,allocator<long> > */
static void G__setup_memvarvectorlElongcOallocatorlElonggRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   { vector<long,allocator<long> > *p; p=(vector<long,allocator<long> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<long,allocator<long> >::iterator */
static void G__setup_memvarvectorlElongcOallocatorlElonggRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator));
   { vector<long,allocator<long> >::iterator *p; p=(vector<long,allocator<long> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* reverse_iterator<vector<long,allocator<long> >::iterator> */
static void G__setup_memvarreverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR));
   { reverse_iterator<vector<long,allocator<long> >::iterator> *p; p=(reverse_iterator<vector<long,allocator<long> >::iterator>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* allocator<unsigned char> */
static void G__setup_memvarallocatorlEunsignedsPchargR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPchargR));
   { allocator<unsigned char> *p; p=(allocator<unsigned char>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<unsigned char,allocator<unsigned char> > */
static void G__setup_memvarvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   { vector<unsigned char,allocator<unsigned char> > *p; p=(vector<unsigned char,allocator<unsigned char> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<unsigned char,allocator<unsigned char> >::iterator */
static void G__setup_memvarvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator));
   { vector<unsigned char,allocator<unsigned char> >::iterator *p; p=(vector<unsigned char,allocator<unsigned char> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator> */
static void G__setup_memvarreverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR));
   { reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator> *p; p=(reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* allocator<unsigned short> */
static void G__setup_memvarallocatorlEunsignedsPshortgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPshortgR));
   { allocator<unsigned short> *p; p=(allocator<unsigned short>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<unsigned short,allocator<unsigned short> > */
static void G__setup_memvarvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   { vector<unsigned short,allocator<unsigned short> > *p; p=(vector<unsigned short,allocator<unsigned short> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<unsigned short,allocator<unsigned short> >::iterator */
static void G__setup_memvarvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator));
   { vector<unsigned short,allocator<unsigned short> >::iterator *p; p=(vector<unsigned short,allocator<unsigned short> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator> */
static void G__setup_memvarreverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR));
   { reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator> *p; p=(reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* allocator<unsigned int> */
static void G__setup_memvarallocatorlEunsignedsPintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPintgR));
   { allocator<unsigned int> *p; p=(allocator<unsigned int>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<unsigned int,allocator<unsigned int> > */
static void G__setup_memvarvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   { vector<unsigned int,allocator<unsigned int> > *p; p=(vector<unsigned int,allocator<unsigned int> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<unsigned int,allocator<unsigned int> >::iterator */
static void G__setup_memvarvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator));
   { vector<unsigned int,allocator<unsigned int> >::iterator *p; p=(vector<unsigned int,allocator<unsigned int> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator> */
static void G__setup_memvarreverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR));
   { reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator> *p; p=(reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* allocator<unsigned long> */
static void G__setup_memvarallocatorlEunsignedsPlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPlonggR));
   { allocator<unsigned long> *p; p=(allocator<unsigned long>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<unsigned long,allocator<unsigned long> > */
static void G__setup_memvarvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   { vector<unsigned long,allocator<unsigned long> > *p; p=(vector<unsigned long,allocator<unsigned long> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<unsigned long,allocator<unsigned long> >::iterator */
static void G__setup_memvarvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator));
   { vector<unsigned long,allocator<unsigned long> >::iterator *p; p=(vector<unsigned long,allocator<unsigned long> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator> */
static void G__setup_memvarreverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR));
   { reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator> *p; p=(reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* allocator<float> */
static void G__setup_memvarallocatorlEfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlEfloatgR));
   { allocator<float> *p; p=(allocator<float>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<float,allocator<float> > */
static void G__setup_memvarvectorlEfloatcOallocatorlEfloatgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   { vector<float,allocator<float> > *p; p=(vector<float,allocator<float> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<float,allocator<float> >::iterator */
static void G__setup_memvarvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator));
   { vector<float,allocator<float> >::iterator *p; p=(vector<float,allocator<float> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* reverse_iterator<vector<float,allocator<float> >::iterator> */
static void G__setup_memvarreverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR));
   { reverse_iterator<vector<float,allocator<float> >::iterator> *p; p=(reverse_iterator<vector<float,allocator<float> >::iterator>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* allocator<double> */
static void G__setup_memvarallocatorlEdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   { allocator<double> *p; p=(allocator<double>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<double,allocator<double> > */
static void G__setup_memvarvectorlEdoublecOallocatorlEdoublegRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   { vector<double,allocator<double> > *p; p=(vector<double,allocator<double> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<double,allocator<double> >::iterator */
static void G__setup_memvarvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator));
   { vector<double,allocator<double> >::iterator *p; p=(vector<double,allocator<double> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* reverse_iterator<vector<double,allocator<double> >::iterator> */
static void G__setup_memvarreverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR));
   { reverse_iterator<vector<double,allocator<double> >::iterator> *p; p=(reverse_iterator<vector<double,allocator<double> >::iterator>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* allocator<void*> */
static void G__setup_memvarallocatorlEvoidmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   { allocator<void*> *p; p=(allocator<void*>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<void*,allocator<void*> > */
static void G__setup_memvarvectorlEvoidmUcOallocatorlEvoidmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   { vector<void*,allocator<void*> > *p; p=(vector<void*,allocator<void*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<void*,allocator<void*> >::iterator */
static void G__setup_memvarvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator));
   { vector<void*,allocator<void*> >::iterator *p; p=(vector<void*,allocator<void*> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* reverse_iterator<vector<void*,allocator<void*> >::iterator> */
static void G__setup_memvarreverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR));
   { reverse_iterator<vector<void*,allocator<void*> >::iterator> *p; p=(reverse_iterator<vector<void*,allocator<void*> >::iterator>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* allocator<char*> */
static void G__setup_memvarallocatorlEcharmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   { allocator<char*> *p; p=(allocator<char*>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<char*,allocator<char*> > */
static void G__setup_memvarvectorlEcharmUcOallocatorlEcharmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   { vector<char*,allocator<char*> > *p; p=(vector<char*,allocator<char*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<char*,allocator<char*> >::iterator */
static void G__setup_memvarvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator));
   { vector<char*,allocator<char*> >::iterator *p; p=(vector<char*,allocator<char*> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* reverse_iterator<vector<char*,allocator<char*> >::iterator> */
static void G__setup_memvarreverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR));
   { reverse_iterator<vector<char*,allocator<char*> >::iterator> *p; p=(reverse_iterator<vector<char*,allocator<char*> >::iterator>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvar() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncallocatorlEchargR(void) {
   /* allocator<char> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlEchargR));
   G__memfunc_setup("allocator<char>",1497,G__vector_48_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlEchargR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<char>",1497,G__vector_48_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlEchargR), -1, 0, 1, 1, 1, 0, "u 'allocator<char>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_48_0_3, 67, -1, G__defined_typename("allocator<char>::pointer"), 0, 1, 1, 1, 8, "c - 'allocator<char>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_48_0_4, 67, -1, G__defined_typename("allocator<char>::const_pointer"), 0, 1, 1, 1, 8, "c - 'allocator<char>::const_reference' 10 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__vector_48_0_5, 67, -1, -1, 0, 2, 1, 1, 0, 
"h - 'allocator<char>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__vector_48_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'allocator<char>::pointer' 0 - __p h - 'allocator<char>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_48_0_7, 104, -1, G__defined_typename("allocator<char>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__vector_48_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'allocator<char>::pointer' 0 - __p c - - 11 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__vector_48_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'allocator<char>::pointer' 0 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<char>", 1623, G__vector_48_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_48_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlEchargR), -1, 1, 1, 1, 1, 0, "u 'allocator<char>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEcharcOallocatorlEchargRsPgR(void) {
   /* vector<char,allocator<char> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR));
   G__memfunc_setup("at",213,G__vector_49_0_1, 99, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<char,allocator<char> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__vector_49_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__vector_49_0_3, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__vector_49_0_4, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR), G__defined_typename("vector<char,allocator<char> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__vector_49_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR), G__defined_typename("vector<char,allocator<char> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__vector_49_0_6, 104, -1, G__defined_typename("vector<char,allocator<char> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_49_0_7, 104, -1, G__defined_typename("vector<char,allocator<char> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_49_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<char,allocator<char> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_49_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'vector<char,allocator<char> >::size_type' 0 - sz c - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__vector_49_0_10, 104, -1, G__defined_typename("vector<char,allocator<char> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__vector_49_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_49_0_12, 99, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<char,allocator<char> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<char,allocator<char> >",2768,G__vector_49_0_13, 105, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<char,allocator<char> >",2768,G__vector_49_0_14, 105, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'vector<char,allocator<char> >::size_type' 0 - n c - - 11 'char()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<char,allocator<char> >",2768,G__vector_49_0_15, 105, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<char,allocator<char> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<char,allocator<char> >",2768,G__vector_49_0_16, 105, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' 'vector<char,allocator<char> >::const_iterator' 10 - first u 'vector<char,allocator<char> >::iterator' 'vector<char,allocator<char> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_49_0_17, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<char,allocator<char> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__vector_49_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<char,allocator<char> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__vector_49_0_19, 99, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__vector_49_0_20, 99, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__vector_49_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "c - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__vector_49_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<char,allocator<char> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_49_0_23, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - position c - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_49_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - position u 'vector<char,allocator<char> >::iterator' 'vector<char,allocator<char> >::const_iterator' 10 - first "
"u 'vector<char,allocator<char> >::iterator' 'vector<char,allocator<char> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_49_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - position h - 'vector<char,allocator<char> >::size_type' 0 - n "
"c - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__vector_49_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_49_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<char,allocator<char> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_49_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__vector_49_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<char,allocator<char> >", 2894, G__vector_49_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEcharcOallocatorlEchargRsPgRcLcLiterator(void) {
   /* vector<char,allocator<char> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__vector_50_0_1, 105, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__vector_50_0_2, 105, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 1, 5, 1, 0, "C - 'vector<char,allocator<char> >::iterator::pointer' 11 - __i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_50_0_3, 99, -1, G__defined_typename("vector<char,allocator<char> >::iterator::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_50_0_4, 67, -1, G__defined_typename("vector<char,allocator<char> >::iterator::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_50_0_5, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_50_0_6, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_50_0_7, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_50_0_8, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_50_0_9, 99, -1, G__defined_typename("vector<char,allocator<char> >::iterator::reference"), 1, 1, 1, 1, 8, "l - 'vector<char,allocator<char> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_50_0_10, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<char,allocator<char> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_50_0_11, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<char,allocator<char> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_50_0_12, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<char,allocator<char> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_50_0_13, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<char,allocator<char> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_50_0_14, 67, -1, G__defined_typename("vector<char,allocator<char> >::iterator::pointer"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_50_0_15, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<char,allocator<char> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("iterator", 874, G__vector_50_0_16, (int) ('i'), G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<char,allocator<char> >::iterator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__vector_50_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncreverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR(void) {
   /* reverse_iterator<vector<char,allocator<char> >::iterator> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR));
   G__memfunc_setup("reverse_iterator<vector<char,allocator<char> >::iterator>",5613,G__vector_51_0_1, 105, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_51_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_51_0_3, 99, -1, G__defined_typename("reverse_iterator<vector<char,allocator<char> >::iterator>::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_51_0_4, 67, -1, G__defined_typename("reverse_iterator<vector<char,allocator<char> >::iterator>::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_51_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_51_0_6, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_51_0_7, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_51_0_8, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_51_0_9, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<char,allocator<char> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_51_0_10, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<char,allocator<char> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_51_0_11, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<char,allocator<char> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_51_0_12, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<char,allocator<char> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_51_0_13, 99, -1, G__defined_typename("reverse_iterator<vector<char,allocator<char> >::iterator>::reference"), 1, 1, 1, 1, 8, "l - 'reverse_iterator<vector<char,allocator<char> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("reverse_iterator<vector<char,allocator<char> >::iterator>", 5613, G__vector_51_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "u 'reverse_iterator<vector<char,allocator<char> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator<vector<char,allocator<char> >::iterator>", 5739, G__vector_51_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_51_0_16, (int) ('u'), G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "u 'reverse_iterator<vector<char,allocator<char> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncallocatorlEshortgR(void) {
   /* allocator<short> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlEshortgR));
   G__memfunc_setup("allocator<short>",1643,G__vector_52_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlEshortgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<short>",1643,G__vector_52_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlEshortgR), -1, 0, 1, 1, 1, 0, "u 'allocator<short>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_52_0_3, 83, -1, G__defined_typename("allocator<short>::pointer"), 0, 1, 1, 1, 8, "s - 'allocator<short>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_52_0_4, 83, -1, G__defined_typename("allocator<short>::const_pointer"), 0, 1, 1, 1, 8, "s - 'allocator<short>::const_reference' 10 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__vector_52_0_5, 83, -1, -1, 0, 2, 1, 1, 0, 
"h - 'allocator<short>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__vector_52_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"S - 'allocator<short>::pointer' 0 - __p h - 'allocator<short>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_52_0_7, 104, -1, G__defined_typename("allocator<short>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__vector_52_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"S - 'allocator<short>::pointer' 0 - __p s - - 11 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__vector_52_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "S - 'allocator<short>::pointer' 0 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<short>", 1769, G__vector_52_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_52_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlEshortgR), -1, 1, 1, 1, 1, 0, "u 'allocator<short>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEshortcOallocatorlEshortgRsPgR(void) {
   /* vector<short,allocator<short> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__memfunc_setup("at",213,G__vector_53_0_1, 115, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<short,allocator<short> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__vector_53_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__vector_53_0_3, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__vector_53_0_4, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR), G__defined_typename("vector<short,allocator<short> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__vector_53_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR), G__defined_typename("vector<short,allocator<short> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__vector_53_0_6, 104, -1, G__defined_typename("vector<short,allocator<short> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_53_0_7, 104, -1, G__defined_typename("vector<short,allocator<short> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_53_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<short,allocator<short> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_53_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'vector<short,allocator<short> >::size_type' 0 - sz s - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__vector_53_0_10, 104, -1, G__defined_typename("vector<short,allocator<short> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__vector_53_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_53_0_12, 115, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<short,allocator<short> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<short,allocator<short> >",3060,G__vector_53_0_13, 105, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<short,allocator<short> >",3060,G__vector_53_0_14, 105, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'vector<short,allocator<short> >::size_type' 0 - n s - - 11 'short()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<short,allocator<short> >",3060,G__vector_53_0_15, 105, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<short,allocator<short> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<short,allocator<short> >",3060,G__vector_53_0_16, 105, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' 'vector<short,allocator<short> >::const_iterator' 10 - first u 'vector<short,allocator<short> >::iterator' 'vector<short,allocator<short> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_53_0_17, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<short,allocator<short> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__vector_53_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<short,allocator<short> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__vector_53_0_19, 115, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__vector_53_0_20, 115, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__vector_53_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "s - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__vector_53_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<short,allocator<short> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_53_0_23, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - position s - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_53_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - position u 'vector<short,allocator<short> >::iterator' 'vector<short,allocator<short> >::const_iterator' 10 - first "
"u 'vector<short,allocator<short> >::iterator' 'vector<short,allocator<short> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_53_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - position h - 'vector<short,allocator<short> >::size_type' 0 - n "
"s - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__vector_53_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_53_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<short,allocator<short> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_53_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__vector_53_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<short,allocator<short> >", 3186, G__vector_53_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEshortcOallocatorlEshortgRsPgRcLcLiterator(void) {
   /* vector<short,allocator<short> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__vector_54_0_1, 105, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__vector_54_0_2, 105, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 1, 5, 1, 0, "S - 'vector<short,allocator<short> >::iterator::pointer' 11 - __i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_54_0_3, 115, -1, G__defined_typename("vector<short,allocator<short> >::iterator::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_54_0_4, 83, -1, G__defined_typename("vector<short,allocator<short> >::iterator::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_54_0_5, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_54_0_6, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_54_0_7, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_54_0_8, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_54_0_9, 115, -1, G__defined_typename("vector<short,allocator<short> >::iterator::reference"), 1, 1, 1, 1, 8, "l - 'vector<short,allocator<short> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_54_0_10, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<short,allocator<short> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_54_0_11, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<short,allocator<short> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_54_0_12, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<short,allocator<short> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_54_0_13, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<short,allocator<short> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_54_0_14, 83, -1, G__defined_typename("vector<short,allocator<short> >::iterator::pointer"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_54_0_15, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<short,allocator<short> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("iterator", 874, G__vector_54_0_16, (int) ('i'), G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<short,allocator<short> >::iterator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__vector_54_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncreverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR(void) {
   /* reverse_iterator<vector<short,allocator<short> >::iterator> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR));
   G__memfunc_setup("reverse_iterator<vector<short,allocator<short> >::iterator>",5905,G__vector_55_0_1, 105, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_55_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_55_0_3, 115, -1, G__defined_typename("reverse_iterator<vector<short,allocator<short> >::iterator>::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_55_0_4, 83, -1, G__defined_typename("reverse_iterator<vector<short,allocator<short> >::iterator>::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_55_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_55_0_6, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_55_0_7, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_55_0_8, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_55_0_9, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<short,allocator<short> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_55_0_10, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<short,allocator<short> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_55_0_11, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<short,allocator<short> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_55_0_12, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<short,allocator<short> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_55_0_13, 115, -1, G__defined_typename("reverse_iterator<vector<short,allocator<short> >::iterator>::reference"), 1, 1, 1, 1, 8, "l - 'reverse_iterator<vector<short,allocator<short> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("reverse_iterator<vector<short,allocator<short> >::iterator>", 5905, G__vector_55_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "u 'reverse_iterator<vector<short,allocator<short> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator<vector<short,allocator<short> >::iterator>", 6031, G__vector_55_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_55_0_16, (int) ('u'), G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "u 'reverse_iterator<vector<short,allocator<short> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncallocatorlElonggR(void) {
   /* allocator<long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlElonggR));
   G__memfunc_setup("allocator<long>",1515,G__vector_56_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlElonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<long>",1515,G__vector_56_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlElonggR), -1, 0, 1, 1, 1, 0, "u 'allocator<long>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_56_0_3, 76, -1, G__defined_typename("allocator<long>::pointer"), 0, 1, 1, 1, 8, "l - 'allocator<long>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_56_0_4, 76, -1, G__defined_typename("allocator<long>::const_pointer"), 0, 1, 1, 1, 8, "l - 'allocator<long>::const_reference' 10 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__vector_56_0_5, 76, -1, -1, 0, 2, 1, 1, 0, 
"h - 'allocator<long>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__vector_56_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"L - 'allocator<long>::pointer' 0 - __p h - 'allocator<long>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_56_0_7, 104, -1, G__defined_typename("allocator<long>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__vector_56_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"L - 'allocator<long>::pointer' 0 - __p l - - 11 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__vector_56_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "L - 'allocator<long>::pointer' 0 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<long>", 1641, G__vector_56_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_56_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlElonggR), -1, 1, 1, 1, 1, 0, "u 'allocator<long>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElongcOallocatorlElonggRsPgR(void) {
   /* vector<long,allocator<long> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR));
   G__memfunc_setup("at",213,G__vector_57_0_1, 108, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<long,allocator<long> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__vector_57_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__vector_57_0_3, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__vector_57_0_4, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR), G__defined_typename("vector<long,allocator<long> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__vector_57_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR), G__defined_typename("vector<long,allocator<long> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__vector_57_0_6, 104, -1, G__defined_typename("vector<long,allocator<long> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_57_0_7, 104, -1, G__defined_typename("vector<long,allocator<long> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_57_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<long,allocator<long> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_57_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'vector<long,allocator<long> >::size_type' 0 - sz l - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__vector_57_0_10, 104, -1, G__defined_typename("vector<long,allocator<long> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__vector_57_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_57_0_12, 108, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<long,allocator<long> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<long,allocator<long> >",2804,G__vector_57_0_13, 105, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<long,allocator<long> >",2804,G__vector_57_0_14, 105, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'vector<long,allocator<long> >::size_type' 0 - n l - - 11 'long()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<long,allocator<long> >",2804,G__vector_57_0_15, 105, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<long,allocator<long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<long,allocator<long> >",2804,G__vector_57_0_16, 105, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' 'vector<long,allocator<long> >::const_iterator' 10 - first u 'vector<long,allocator<long> >::iterator' 'vector<long,allocator<long> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_57_0_17, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<long,allocator<long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__vector_57_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<long,allocator<long> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__vector_57_0_19, 108, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__vector_57_0_20, 108, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__vector_57_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "l - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__vector_57_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<long,allocator<long> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_57_0_23, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - position l - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_57_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - position u 'vector<long,allocator<long> >::iterator' 'vector<long,allocator<long> >::const_iterator' 10 - first "
"u 'vector<long,allocator<long> >::iterator' 'vector<long,allocator<long> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_57_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - position h - 'vector<long,allocator<long> >::size_type' 0 - n "
"l - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__vector_57_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_57_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<long,allocator<long> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_57_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__vector_57_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<long,allocator<long> >", 2930, G__vector_57_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElongcOallocatorlElonggRsPgRcLcLiterator(void) {
   /* vector<long,allocator<long> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__vector_58_0_1, 105, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__vector_58_0_2, 105, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 1, 5, 1, 0, "L - 'vector<long,allocator<long> >::iterator::pointer' 11 - __i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_58_0_3, 108, -1, G__defined_typename("vector<long,allocator<long> >::iterator::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_58_0_4, 76, -1, G__defined_typename("vector<long,allocator<long> >::iterator::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_58_0_5, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_58_0_6, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_58_0_7, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_58_0_8, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_58_0_9, 108, -1, G__defined_typename("vector<long,allocator<long> >::iterator::reference"), 1, 1, 1, 1, 8, "l - 'vector<long,allocator<long> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_58_0_10, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<long,allocator<long> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_58_0_11, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<long,allocator<long> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_58_0_12, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<long,allocator<long> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_58_0_13, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<long,allocator<long> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_58_0_14, 76, -1, G__defined_typename("vector<long,allocator<long> >::iterator::pointer"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_58_0_15, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<long,allocator<long> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("iterator", 874, G__vector_58_0_16, (int) ('i'), G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<long,allocator<long> >::iterator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__vector_58_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncreverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR(void) {
   /* reverse_iterator<vector<long,allocator<long> >::iterator> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR));
   G__memfunc_setup("reverse_iterator<vector<long,allocator<long> >::iterator>",5649,G__vector_59_0_1, 105, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_59_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_59_0_3, 108, -1, G__defined_typename("reverse_iterator<vector<long,allocator<long> >::iterator>::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_59_0_4, 76, -1, G__defined_typename("reverse_iterator<vector<long,allocator<long> >::iterator>::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_59_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_59_0_6, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_59_0_7, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_59_0_8, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_59_0_9, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<long,allocator<long> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_59_0_10, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<long,allocator<long> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_59_0_11, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<long,allocator<long> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_59_0_12, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<long,allocator<long> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_59_0_13, 108, -1, G__defined_typename("reverse_iterator<vector<long,allocator<long> >::iterator>::reference"), 1, 1, 1, 1, 8, "l - 'reverse_iterator<vector<long,allocator<long> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("reverse_iterator<vector<long,allocator<long> >::iterator>", 5649, G__vector_59_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "u 'reverse_iterator<vector<long,allocator<long> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator<vector<long,allocator<long> >::iterator>", 5775, G__vector_59_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_59_0_16, (int) ('u'), G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "u 'reverse_iterator<vector<long,allocator<long> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncallocatorlEunsignedsPchargR(void) {
   /* allocator<unsigned char> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPchargR));
   G__memfunc_setup("allocator<unsigned char>",2390,G__vector_60_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPchargR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<unsigned char>",2390,G__vector_60_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPchargR), -1, 0, 1, 1, 1, 0, "u 'allocator<unsigned char>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_60_0_3, 66, -1, G__defined_typename("allocator<unsigned char>::pointer"), 0, 1, 1, 1, 8, "b - 'allocator<unsigned char>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_60_0_4, 66, -1, G__defined_typename("allocator<unsigned char>::const_pointer"), 0, 1, 1, 1, 8, "b - 'allocator<unsigned char>::const_reference' 10 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__vector_60_0_5, 66, -1, -1, 0, 2, 1, 1, 0, 
"h - 'allocator<unsigned char>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__vector_60_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"B - 'allocator<unsigned char>::pointer' 0 - __p h - 'allocator<unsigned char>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_60_0_7, 104, -1, G__defined_typename("allocator<unsigned char>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__vector_60_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"B - 'allocator<unsigned char>::pointer' 0 - __p b - - 11 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__vector_60_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "B - 'allocator<unsigned char>::pointer' 0 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<unsigned char>", 2516, G__vector_60_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_60_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPchargR), -1, 1, 1, 1, 1, 0, "u 'allocator<unsigned char>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR(void) {
   /* vector<unsigned char,allocator<unsigned char> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR));
   G__memfunc_setup("at",213,G__vector_61_0_1, 98, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<unsigned char,allocator<unsigned char> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__vector_61_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__vector_61_0_3, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__vector_61_0_4, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR), G__defined_typename("vector<unsigned char,allocator<unsigned char> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__vector_61_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR), G__defined_typename("vector<unsigned char,allocator<unsigned char> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__vector_61_0_6, 104, -1, G__defined_typename("vector<unsigned char,allocator<unsigned char> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_61_0_7, 104, -1, G__defined_typename("vector<unsigned char,allocator<unsigned char> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_61_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<unsigned char,allocator<unsigned char> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_61_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'vector<unsigned char,allocator<unsigned char> >::size_type' 0 - sz b - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__vector_61_0_10, 104, -1, G__defined_typename("vector<unsigned char,allocator<unsigned char> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__vector_61_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_61_0_12, 98, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<unsigned char,allocator<unsigned char> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<unsigned char,allocator<unsigned char> >",4554,G__vector_61_0_13, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<unsigned char,allocator<unsigned char> >",4554,G__vector_61_0_14, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'vector<unsigned char,allocator<unsigned char> >::size_type' 0 - n b - - 11 '(unsigned char)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<unsigned char,allocator<unsigned char> >",4554,G__vector_61_0_15, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<unsigned char,allocator<unsigned char> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<unsigned char,allocator<unsigned char> >",4554,G__vector_61_0_16, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' 'vector<unsigned char,allocator<unsigned char> >::const_iterator' 10 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' 'vector<unsigned char,allocator<unsigned char> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_61_0_17, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<unsigned char,allocator<unsigned char> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__vector_61_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<unsigned char,allocator<unsigned char> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__vector_61_0_19, 98, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__vector_61_0_20, 98, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__vector_61_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "b - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__vector_61_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned char,allocator<unsigned char> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_61_0_23, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - position b - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_61_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - position u 'vector<unsigned char,allocator<unsigned char> >::iterator' 'vector<unsigned char,allocator<unsigned char> >::const_iterator' 10 - first "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' 'vector<unsigned char,allocator<unsigned char> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_61_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - position h - 'vector<unsigned char,allocator<unsigned char> >::size_type' 0 - n "
"b - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__vector_61_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_61_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_61_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__vector_61_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<unsigned char,allocator<unsigned char> >", 4680, G__vector_61_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator(void) {
   /* vector<unsigned char,allocator<unsigned char> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__vector_62_0_1, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__vector_62_0_2, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 1, 5, 1, 0, "B - 'vector<unsigned char,allocator<unsigned char> >::iterator::pointer' 11 - __i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_62_0_3, 98, -1, G__defined_typename("vector<unsigned char,allocator<unsigned char> >::iterator::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_62_0_4, 66, -1, G__defined_typename("vector<unsigned char,allocator<unsigned char> >::iterator::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_62_0_5, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_62_0_6, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_62_0_7, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_62_0_8, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_62_0_9, 98, -1, G__defined_typename("vector<unsigned char,allocator<unsigned char> >::iterator::reference"), 1, 1, 1, 1, 8, "l - 'vector<unsigned char,allocator<unsigned char> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_62_0_10, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<unsigned char,allocator<unsigned char> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_62_0_11, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<unsigned char,allocator<unsigned char> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_62_0_12, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<unsigned char,allocator<unsigned char> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_62_0_13, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<unsigned char,allocator<unsigned char> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_62_0_14, 66, -1, G__defined_typename("vector<unsigned char,allocator<unsigned char> >::iterator::pointer"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_62_0_15, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("iterator", 874, G__vector_62_0_16, (int) ('i'), G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__vector_62_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncreverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR(void) {
   /* reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR));
   G__memfunc_setup("reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>",7399,G__vector_63_0_1, 105, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_63_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_63_0_3, 98, -1, G__defined_typename("reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_63_0_4, 66, -1, G__defined_typename("reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_63_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_63_0_6, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_63_0_7, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_63_0_8, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_63_0_9, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_63_0_10, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_63_0_11, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_63_0_12, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_63_0_13, 98, -1, G__defined_typename("reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>::reference"), 1, 1, 1, 1, 8, "l - 'reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>", 7399, G__vector_63_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "u 'reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>", 7525, G__vector_63_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_63_0_16, (int) ('u'), G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "u 'reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncallocatorlEunsignedsPshortgR(void) {
   /* allocator<unsigned short> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPshortgR));
   G__memfunc_setup("allocator<unsigned short>",2536,G__vector_64_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPshortgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<unsigned short>",2536,G__vector_64_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPshortgR), -1, 0, 1, 1, 1, 0, "u 'allocator<unsigned short>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_64_0_3, 82, -1, G__defined_typename("allocator<unsigned short>::pointer"), 0, 1, 1, 1, 8, "r - 'allocator<unsigned short>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_64_0_4, 82, -1, G__defined_typename("allocator<unsigned short>::const_pointer"), 0, 1, 1, 1, 8, "r - 'allocator<unsigned short>::const_reference' 10 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__vector_64_0_5, 82, -1, -1, 0, 2, 1, 1, 0, 
"h - 'allocator<unsigned short>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__vector_64_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"R - 'allocator<unsigned short>::pointer' 0 - __p h - 'allocator<unsigned short>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_64_0_7, 104, -1, G__defined_typename("allocator<unsigned short>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__vector_64_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"R - 'allocator<unsigned short>::pointer' 0 - __p r - - 11 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__vector_64_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "R - 'allocator<unsigned short>::pointer' 0 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<unsigned short>", 2662, G__vector_64_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_64_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPshortgR), -1, 1, 1, 1, 1, 0, "u 'allocator<unsigned short>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR(void) {
   /* vector<unsigned short,allocator<unsigned short> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__memfunc_setup("at",213,G__vector_65_0_1, 114, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<unsigned short,allocator<unsigned short> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__vector_65_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__vector_65_0_3, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__vector_65_0_4, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR), G__defined_typename("vector<unsigned short,allocator<unsigned short> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__vector_65_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR), G__defined_typename("vector<unsigned short,allocator<unsigned short> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__vector_65_0_6, 104, -1, G__defined_typename("vector<unsigned short,allocator<unsigned short> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_65_0_7, 104, -1, G__defined_typename("vector<unsigned short,allocator<unsigned short> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_65_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<unsigned short,allocator<unsigned short> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_65_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'vector<unsigned short,allocator<unsigned short> >::size_type' 0 - sz r - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__vector_65_0_10, 104, -1, G__defined_typename("vector<unsigned short,allocator<unsigned short> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__vector_65_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_65_0_12, 114, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<unsigned short,allocator<unsigned short> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<unsigned short,allocator<unsigned short> >",4846,G__vector_65_0_13, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<unsigned short,allocator<unsigned short> >",4846,G__vector_65_0_14, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'vector<unsigned short,allocator<unsigned short> >::size_type' 0 - n r - - 11 '(unsigned short)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<unsigned short,allocator<unsigned short> >",4846,G__vector_65_0_15, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<unsigned short,allocator<unsigned short> >",4846,G__vector_65_0_16, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' 'vector<unsigned short,allocator<unsigned short> >::const_iterator' 10 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' 'vector<unsigned short,allocator<unsigned short> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_65_0_17, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__vector_65_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<unsigned short,allocator<unsigned short> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__vector_65_0_19, 114, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__vector_65_0_20, 114, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__vector_65_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__vector_65_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_65_0_23, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - position r - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_65_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - position u 'vector<unsigned short,allocator<unsigned short> >::iterator' 'vector<unsigned short,allocator<unsigned short> >::const_iterator' 10 - first "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' 'vector<unsigned short,allocator<unsigned short> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_65_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - position h - 'vector<unsigned short,allocator<unsigned short> >::size_type' 0 - n "
"r - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__vector_65_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_65_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_65_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__vector_65_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<unsigned short,allocator<unsigned short> >", 4972, G__vector_65_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator(void) {
   /* vector<unsigned short,allocator<unsigned short> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__vector_66_0_1, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__vector_66_0_2, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 1, 5, 1, 0, "R - 'vector<unsigned short,allocator<unsigned short> >::iterator::pointer' 11 - __i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_66_0_3, 114, -1, G__defined_typename("vector<unsigned short,allocator<unsigned short> >::iterator::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_66_0_4, 82, -1, G__defined_typename("vector<unsigned short,allocator<unsigned short> >::iterator::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_66_0_5, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_66_0_6, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_66_0_7, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_66_0_8, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_66_0_9, 114, -1, G__defined_typename("vector<unsigned short,allocator<unsigned short> >::iterator::reference"), 1, 1, 1, 1, 8, "l - 'vector<unsigned short,allocator<unsigned short> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_66_0_10, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<unsigned short,allocator<unsigned short> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_66_0_11, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<unsigned short,allocator<unsigned short> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_66_0_12, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<unsigned short,allocator<unsigned short> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_66_0_13, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<unsigned short,allocator<unsigned short> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_66_0_14, 82, -1, G__defined_typename("vector<unsigned short,allocator<unsigned short> >::iterator::pointer"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_66_0_15, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("iterator", 874, G__vector_66_0_16, (int) ('i'), G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__vector_66_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncreverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR(void) {
   /* reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR));
   G__memfunc_setup("reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>",7691,G__vector_67_0_1, 105, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_67_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_67_0_3, 114, -1, G__defined_typename("reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_67_0_4, 82, -1, G__defined_typename("reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_67_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_67_0_6, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_67_0_7, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_67_0_8, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_67_0_9, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_67_0_10, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_67_0_11, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_67_0_12, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_67_0_13, 114, -1, G__defined_typename("reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>::reference"), 1, 1, 1, 1, 8, "l - 'reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>", 7691, G__vector_67_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "u 'reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>", 7817, G__vector_67_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_67_0_16, (int) ('u'), G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "u 'reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncallocatorlEunsignedsPintgR(void) {
   /* allocator<unsigned int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPintgR));
   G__memfunc_setup("allocator<unsigned int>",2307,G__vector_68_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPintgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<unsigned int>",2307,G__vector_68_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPintgR), -1, 0, 1, 1, 1, 0, "u 'allocator<unsigned int>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_68_0_3, 72, -1, G__defined_typename("allocator<unsigned int>::pointer"), 0, 1, 1, 1, 8, "h - 'allocator<unsigned int>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_68_0_4, 72, -1, G__defined_typename("allocator<unsigned int>::const_pointer"), 0, 1, 1, 1, 8, "h - 'allocator<unsigned int>::const_reference' 10 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__vector_68_0_5, 72, -1, -1, 0, 2, 1, 1, 0, 
"h - 'allocator<unsigned int>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__vector_68_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"H - 'allocator<unsigned int>::pointer' 0 - __p h - 'allocator<unsigned int>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_68_0_7, 104, -1, G__defined_typename("allocator<unsigned int>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__vector_68_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"H - 'allocator<unsigned int>::pointer' 0 - __p h - - 11 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__vector_68_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "H - 'allocator<unsigned int>::pointer' 0 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<unsigned int>", 2433, G__vector_68_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_68_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPintgR), -1, 1, 1, 1, 1, 0, "u 'allocator<unsigned int>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR(void) {
   /* vector<unsigned int,allocator<unsigned int> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__memfunc_setup("at",213,G__vector_69_0_1, 104, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<unsigned int,allocator<unsigned int> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__vector_69_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__vector_69_0_3, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__vector_69_0_4, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR), G__defined_typename("vector<unsigned int,allocator<unsigned int> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__vector_69_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR), G__defined_typename("vector<unsigned int,allocator<unsigned int> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__vector_69_0_6, 104, -1, G__defined_typename("vector<unsigned int,allocator<unsigned int> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_69_0_7, 104, -1, G__defined_typename("vector<unsigned int,allocator<unsigned int> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_69_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<unsigned int,allocator<unsigned int> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_69_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'vector<unsigned int,allocator<unsigned int> >::size_type' 0 - sz h - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__vector_69_0_10, 104, -1, G__defined_typename("vector<unsigned int,allocator<unsigned int> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__vector_69_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_69_0_12, 104, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<unsigned int,allocator<unsigned int> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<unsigned int,allocator<unsigned int> >",4388,G__vector_69_0_13, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<unsigned int,allocator<unsigned int> >",4388,G__vector_69_0_14, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'vector<unsigned int,allocator<unsigned int> >::size_type' 0 - n h - - 11 '(unsigned int)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<unsigned int,allocator<unsigned int> >",4388,G__vector_69_0_15, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<unsigned int,allocator<unsigned int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<unsigned int,allocator<unsigned int> >",4388,G__vector_69_0_16, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' 'vector<unsigned int,allocator<unsigned int> >::const_iterator' 10 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' 'vector<unsigned int,allocator<unsigned int> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_69_0_17, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<unsigned int,allocator<unsigned int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__vector_69_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<unsigned int,allocator<unsigned int> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__vector_69_0_19, 104, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__vector_69_0_20, 104, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__vector_69_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__vector_69_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned int,allocator<unsigned int> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_69_0_23, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - position h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_69_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - position u 'vector<unsigned int,allocator<unsigned int> >::iterator' 'vector<unsigned int,allocator<unsigned int> >::const_iterator' 10 - first "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' 'vector<unsigned int,allocator<unsigned int> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_69_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - position h - 'vector<unsigned int,allocator<unsigned int> >::size_type' 0 - n "
"h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__vector_69_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_69_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_69_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__vector_69_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<unsigned int,allocator<unsigned int> >", 4514, G__vector_69_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator(void) {
   /* vector<unsigned int,allocator<unsigned int> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__vector_70_0_1, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__vector_70_0_2, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 1, 5, 1, 0, "H - 'vector<unsigned int,allocator<unsigned int> >::iterator::pointer' 11 - __i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_70_0_3, 104, -1, G__defined_typename("vector<unsigned int,allocator<unsigned int> >::iterator::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_70_0_4, 72, -1, G__defined_typename("vector<unsigned int,allocator<unsigned int> >::iterator::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_70_0_5, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_70_0_6, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_70_0_7, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_70_0_8, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_70_0_9, 104, -1, G__defined_typename("vector<unsigned int,allocator<unsigned int> >::iterator::reference"), 1, 1, 1, 1, 8, "l - 'vector<unsigned int,allocator<unsigned int> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_70_0_10, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<unsigned int,allocator<unsigned int> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_70_0_11, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<unsigned int,allocator<unsigned int> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_70_0_12, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<unsigned int,allocator<unsigned int> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_70_0_13, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<unsigned int,allocator<unsigned int> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_70_0_14, 72, -1, G__defined_typename("vector<unsigned int,allocator<unsigned int> >::iterator::pointer"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_70_0_15, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("iterator", 874, G__vector_70_0_16, (int) ('i'), G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__vector_70_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncreverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR(void) {
   /* reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR));
   G__memfunc_setup("reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>",7233,G__vector_71_0_1, 105, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_71_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_71_0_3, 104, -1, G__defined_typename("reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_71_0_4, 72, -1, G__defined_typename("reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_71_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_71_0_6, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_71_0_7, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_71_0_8, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_71_0_9, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_71_0_10, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_71_0_11, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_71_0_12, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_71_0_13, 104, -1, G__defined_typename("reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>::reference"), 1, 1, 1, 1, 8, "l - 'reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>", 7233, G__vector_71_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "u 'reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>", 7359, G__vector_71_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_71_0_16, (int) ('u'), G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "u 'reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncallocatorlEunsignedsPlonggR(void) {
   /* allocator<unsigned long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPlonggR));
   G__memfunc_setup("allocator<unsigned long>",2408,G__vector_72_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPlonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<unsigned long>",2408,G__vector_72_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPlonggR), -1, 0, 1, 1, 1, 0, "u 'allocator<unsigned long>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_72_0_3, 75, -1, G__defined_typename("allocator<unsigned long>::pointer"), 0, 1, 1, 1, 8, "k - 'allocator<unsigned long>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_72_0_4, 75, -1, G__defined_typename("allocator<unsigned long>::const_pointer"), 0, 1, 1, 1, 8, "k - 'allocator<unsigned long>::const_reference' 10 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__vector_72_0_5, 75, -1, -1, 0, 2, 1, 1, 0, 
"h - 'allocator<unsigned long>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__vector_72_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"K - 'allocator<unsigned long>::pointer' 0 - __p h - 'allocator<unsigned long>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_72_0_7, 104, -1, G__defined_typename("allocator<unsigned long>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__vector_72_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"K - 'allocator<unsigned long>::pointer' 0 - __p k - - 11 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__vector_72_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "K - 'allocator<unsigned long>::pointer' 0 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<unsigned long>", 2534, G__vector_72_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_72_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPlonggR), -1, 1, 1, 1, 1, 0, "u 'allocator<unsigned long>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR(void) {
   /* vector<unsigned long,allocator<unsigned long> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR));
   G__memfunc_setup("at",213,G__vector_73_0_1, 107, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<unsigned long,allocator<unsigned long> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__vector_73_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__vector_73_0_3, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__vector_73_0_4, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR), G__defined_typename("vector<unsigned long,allocator<unsigned long> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__vector_73_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR), G__defined_typename("vector<unsigned long,allocator<unsigned long> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__vector_73_0_6, 104, -1, G__defined_typename("vector<unsigned long,allocator<unsigned long> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_73_0_7, 104, -1, G__defined_typename("vector<unsigned long,allocator<unsigned long> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_73_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<unsigned long,allocator<unsigned long> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_73_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'vector<unsigned long,allocator<unsigned long> >::size_type' 0 - sz k - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__vector_73_0_10, 104, -1, G__defined_typename("vector<unsigned long,allocator<unsigned long> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__vector_73_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_73_0_12, 107, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<unsigned long,allocator<unsigned long> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<unsigned long,allocator<unsigned long> >",4590,G__vector_73_0_13, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<unsigned long,allocator<unsigned long> >",4590,G__vector_73_0_14, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'vector<unsigned long,allocator<unsigned long> >::size_type' 0 - n k - - 11 '(unsigned long)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<unsigned long,allocator<unsigned long> >",4590,G__vector_73_0_15, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<unsigned long,allocator<unsigned long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<unsigned long,allocator<unsigned long> >",4590,G__vector_73_0_16, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' 'vector<unsigned long,allocator<unsigned long> >::const_iterator' 10 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' 'vector<unsigned long,allocator<unsigned long> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_73_0_17, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<unsigned long,allocator<unsigned long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__vector_73_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<unsigned long,allocator<unsigned long> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__vector_73_0_19, 107, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__vector_73_0_20, 107, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__vector_73_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "k - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__vector_73_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned long,allocator<unsigned long> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_73_0_23, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - position k - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_73_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - position u 'vector<unsigned long,allocator<unsigned long> >::iterator' 'vector<unsigned long,allocator<unsigned long> >::const_iterator' 10 - first "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' 'vector<unsigned long,allocator<unsigned long> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_73_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - position h - 'vector<unsigned long,allocator<unsigned long> >::size_type' 0 - n "
"k - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__vector_73_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_73_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_73_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__vector_73_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<unsigned long,allocator<unsigned long> >", 4716, G__vector_73_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator(void) {
   /* vector<unsigned long,allocator<unsigned long> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__vector_74_0_1, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__vector_74_0_2, 105, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 1, 5, 1, 0, "K - 'vector<unsigned long,allocator<unsigned long> >::iterator::pointer' 11 - __i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_74_0_3, 107, -1, G__defined_typename("vector<unsigned long,allocator<unsigned long> >::iterator::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_74_0_4, 75, -1, G__defined_typename("vector<unsigned long,allocator<unsigned long> >::iterator::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_74_0_5, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_74_0_6, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_74_0_7, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_74_0_8, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_74_0_9, 107, -1, G__defined_typename("vector<unsigned long,allocator<unsigned long> >::iterator::reference"), 1, 1, 1, 1, 8, "l - 'vector<unsigned long,allocator<unsigned long> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_74_0_10, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<unsigned long,allocator<unsigned long> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_74_0_11, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<unsigned long,allocator<unsigned long> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_74_0_12, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<unsigned long,allocator<unsigned long> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_74_0_13, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<unsigned long,allocator<unsigned long> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_74_0_14, 75, -1, G__defined_typename("vector<unsigned long,allocator<unsigned long> >::iterator::pointer"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_74_0_15, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("iterator", 874, G__vector_74_0_16, (int) ('i'), G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__vector_74_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncreverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR(void) {
   /* reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR));
   G__memfunc_setup("reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>",7435,G__vector_75_0_1, 105, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_75_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_75_0_3, 107, -1, G__defined_typename("reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_75_0_4, 75, -1, G__defined_typename("reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_75_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_75_0_6, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_75_0_7, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_75_0_8, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_75_0_9, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_75_0_10, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_75_0_11, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_75_0_12, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_75_0_13, 107, -1, G__defined_typename("reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>::reference"), 1, 1, 1, 1, 8, "l - 'reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>", 7435, G__vector_75_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "u 'reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>", 7561, G__vector_75_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_75_0_16, (int) ('u'), G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "u 'reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncallocatorlEfloatgR(void) {
   /* allocator<float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlEfloatgR));
   G__memfunc_setup("allocator<float>",1617,G__vector_76_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlEfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<float>",1617,G__vector_76_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlEfloatgR), -1, 0, 1, 1, 1, 0, "u 'allocator<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_76_0_3, 70, -1, G__defined_typename("allocator<float>::pointer"), 0, 1, 1, 1, 8, "f - 'allocator<float>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_76_0_4, 70, -1, G__defined_typename("allocator<float>::const_pointer"), 0, 1, 1, 1, 8, "f - 'allocator<float>::const_reference' 10 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__vector_76_0_5, 70, -1, -1, 0, 2, 1, 1, 0, 
"h - 'allocator<float>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__vector_76_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"F - 'allocator<float>::pointer' 0 - __p h - 'allocator<float>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_76_0_7, 104, -1, G__defined_typename("allocator<float>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__vector_76_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"F - 'allocator<float>::pointer' 0 - __p f - - 11 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__vector_76_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'allocator<float>::pointer' 0 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<float>", 1743, G__vector_76_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_76_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'allocator<float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEfloatcOallocatorlEfloatgRsPgR(void) {
   /* vector<float,allocator<float> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__memfunc_setup("at",213,G__vector_77_0_1, 102, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<float,allocator<float> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__vector_77_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__vector_77_0_3, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__vector_77_0_4, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR), G__defined_typename("vector<float,allocator<float> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__vector_77_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR), G__defined_typename("vector<float,allocator<float> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__vector_77_0_6, 104, -1, G__defined_typename("vector<float,allocator<float> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_77_0_7, 104, -1, G__defined_typename("vector<float,allocator<float> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_77_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<float,allocator<float> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_77_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'vector<float,allocator<float> >::size_type' 0 - sz f - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__vector_77_0_10, 104, -1, G__defined_typename("vector<float,allocator<float> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__vector_77_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_77_0_12, 102, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<float,allocator<float> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<float,allocator<float> >",3008,G__vector_77_0_13, 105, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<float,allocator<float> >",3008,G__vector_77_0_14, 105, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'vector<float,allocator<float> >::size_type' 0 - n f - - 11 'float()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<float,allocator<float> >",3008,G__vector_77_0_15, 105, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<float,allocator<float> >",3008,G__vector_77_0_16, 105, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' 'vector<float,allocator<float> >::const_iterator' 10 - first u 'vector<float,allocator<float> >::iterator' 'vector<float,allocator<float> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_77_0_17, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__vector_77_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<float,allocator<float> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__vector_77_0_19, 102, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__vector_77_0_20, 102, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__vector_77_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__vector_77_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_77_0_23, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - position f - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_77_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - position u 'vector<float,allocator<float> >::iterator' 'vector<float,allocator<float> >::const_iterator' 10 - first "
"u 'vector<float,allocator<float> >::iterator' 'vector<float,allocator<float> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_77_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - position h - 'vector<float,allocator<float> >::size_type' 0 - n "
"f - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__vector_77_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_77_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_77_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__vector_77_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<float,allocator<float> >", 3134, G__vector_77_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator(void) {
   /* vector<float,allocator<float> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__vector_78_0_1, 105, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__vector_78_0_2, 105, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 1, 5, 1, 0, "F - 'vector<float,allocator<float> >::iterator::pointer' 11 - __i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_78_0_3, 102, -1, G__defined_typename("vector<float,allocator<float> >::iterator::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_78_0_4, 70, -1, G__defined_typename("vector<float,allocator<float> >::iterator::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_78_0_5, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_78_0_6, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_78_0_7, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_78_0_8, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_78_0_9, 102, -1, G__defined_typename("vector<float,allocator<float> >::iterator::reference"), 1, 1, 1, 1, 8, "l - 'vector<float,allocator<float> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_78_0_10, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<float,allocator<float> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_78_0_11, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<float,allocator<float> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_78_0_12, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<float,allocator<float> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_78_0_13, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<float,allocator<float> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_78_0_14, 70, -1, G__defined_typename("vector<float,allocator<float> >::iterator::pointer"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_78_0_15, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("iterator", 874, G__vector_78_0_16, (int) ('i'), G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >::iterator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__vector_78_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncreverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR(void) {
   /* reverse_iterator<vector<float,allocator<float> >::iterator> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR));
   G__memfunc_setup("reverse_iterator<vector<float,allocator<float> >::iterator>",5853,G__vector_79_0_1, 105, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_79_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_79_0_3, 102, -1, G__defined_typename("reverse_iterator<vector<float,allocator<float> >::iterator>::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_79_0_4, 70, -1, G__defined_typename("reverse_iterator<vector<float,allocator<float> >::iterator>::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_79_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_79_0_6, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_79_0_7, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_79_0_8, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_79_0_9, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<float,allocator<float> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_79_0_10, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<float,allocator<float> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_79_0_11, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<float,allocator<float> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_79_0_12, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<float,allocator<float> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_79_0_13, 102, -1, G__defined_typename("reverse_iterator<vector<float,allocator<float> >::iterator>::reference"), 1, 1, 1, 1, 8, "l - 'reverse_iterator<vector<float,allocator<float> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("reverse_iterator<vector<float,allocator<float> >::iterator>", 5853, G__vector_79_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "u 'reverse_iterator<vector<float,allocator<float> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator<vector<float,allocator<float> >::iterator>", 5979, G__vector_79_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_79_0_16, (int) ('u'), G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "u 'reverse_iterator<vector<float,allocator<float> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncallocatorlEdoublegR(void) {
   /* allocator<double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlEdoublegR));
   G__memfunc_setup("allocator<double>",1718,G__vector_80_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlEdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<double>",1718,G__vector_80_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlEdoublegR), -1, 0, 1, 1, 1, 0, "u 'allocator<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_80_0_3, 68, -1, G__defined_typename("allocator<double>::pointer"), 0, 1, 1, 1, 8, "d - 'allocator<double>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_80_0_4, 68, -1, G__defined_typename("allocator<double>::const_pointer"), 0, 1, 1, 1, 8, "d - 'allocator<double>::const_reference' 10 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__vector_80_0_5, 68, -1, -1, 0, 2, 1, 1, 0, 
"h - 'allocator<double>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__vector_80_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'allocator<double>::pointer' 0 - __p h - 'allocator<double>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_80_0_7, 104, -1, G__defined_typename("allocator<double>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__vector_80_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'allocator<double>::pointer' 0 - __p d - - 11 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__vector_80_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'allocator<double>::pointer' 0 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<double>", 1844, G__vector_80_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_80_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'allocator<double>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEdoublecOallocatorlEdoublegRsPgR(void) {
   /* vector<double,allocator<double> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__memfunc_setup("at",213,G__vector_81_0_1, 100, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<double,allocator<double> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__vector_81_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__vector_81_0_3, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__vector_81_0_4, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR), G__defined_typename("vector<double,allocator<double> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__vector_81_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR), G__defined_typename("vector<double,allocator<double> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__vector_81_0_6, 104, -1, G__defined_typename("vector<double,allocator<double> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_81_0_7, 104, -1, G__defined_typename("vector<double,allocator<double> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_81_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<double,allocator<double> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_81_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'vector<double,allocator<double> >::size_type' 0 - sz d - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__vector_81_0_10, 104, -1, G__defined_typename("vector<double,allocator<double> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__vector_81_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_81_0_12, 100, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<double,allocator<double> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<double,allocator<double> >",3210,G__vector_81_0_13, 105, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<double,allocator<double> >",3210,G__vector_81_0_14, 105, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'vector<double,allocator<double> >::size_type' 0 - n d - - 11 'double()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<double,allocator<double> >",3210,G__vector_81_0_15, 105, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<double,allocator<double> >",3210,G__vector_81_0_16, 105, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' 'vector<double,allocator<double> >::const_iterator' 10 - first u 'vector<double,allocator<double> >::iterator' 'vector<double,allocator<double> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_81_0_17, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__vector_81_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<double,allocator<double> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__vector_81_0_19, 100, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__vector_81_0_20, 100, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__vector_81_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__vector_81_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_81_0_23, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - position d - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_81_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - position u 'vector<double,allocator<double> >::iterator' 'vector<double,allocator<double> >::const_iterator' 10 - first "
"u 'vector<double,allocator<double> >::iterator' 'vector<double,allocator<double> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_81_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - position h - 'vector<double,allocator<double> >::size_type' 0 - n "
"d - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__vector_81_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_81_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_81_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__vector_81_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<double,allocator<double> >", 3336, G__vector_81_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator(void) {
   /* vector<double,allocator<double> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__vector_82_0_1, 105, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__vector_82_0_2, 105, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 1, 5, 1, 0, "D - 'vector<double,allocator<double> >::iterator::pointer' 11 - __i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_82_0_3, 100, -1, G__defined_typename("vector<double,allocator<double> >::iterator::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_82_0_4, 68, -1, G__defined_typename("vector<double,allocator<double> >::iterator::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_82_0_5, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_82_0_6, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_82_0_7, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_82_0_8, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_82_0_9, 100, -1, G__defined_typename("vector<double,allocator<double> >::iterator::reference"), 1, 1, 1, 1, 8, "l - 'vector<double,allocator<double> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_82_0_10, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<double,allocator<double> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_82_0_11, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<double,allocator<double> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_82_0_12, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<double,allocator<double> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_82_0_13, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<double,allocator<double> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_82_0_14, 68, -1, G__defined_typename("vector<double,allocator<double> >::iterator::pointer"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_82_0_15, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("iterator", 874, G__vector_82_0_16, (int) ('i'), G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >::iterator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__vector_82_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncreverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR(void) {
   /* reverse_iterator<vector<double,allocator<double> >::iterator> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR));
   G__memfunc_setup("reverse_iterator<vector<double,allocator<double> >::iterator>",6055,G__vector_83_0_1, 105, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_83_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_83_0_3, 100, -1, G__defined_typename("reverse_iterator<vector<double,allocator<double> >::iterator>::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_83_0_4, 68, -1, G__defined_typename("reverse_iterator<vector<double,allocator<double> >::iterator>::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_83_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_83_0_6, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_83_0_7, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_83_0_8, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_83_0_9, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<double,allocator<double> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_83_0_10, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<double,allocator<double> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_83_0_11, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<double,allocator<double> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_83_0_12, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<double,allocator<double> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_83_0_13, 100, -1, G__defined_typename("reverse_iterator<vector<double,allocator<double> >::iterator>::reference"), 1, 1, 1, 1, 8, "l - 'reverse_iterator<vector<double,allocator<double> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("reverse_iterator<vector<double,allocator<double> >::iterator>", 6055, G__vector_83_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "u 'reverse_iterator<vector<double,allocator<double> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator<vector<double,allocator<double> >::iterator>", 6181, G__vector_83_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_83_0_16, (int) ('u'), G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "u 'reverse_iterator<vector<double,allocator<double> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncallocatorlEvoidmUgR(void) {
   /* allocator<void*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR));
   G__memfunc_setup("allocator<void*>",1559,G__vector_84_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<void*>",1559,G__vector_84_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR), -1, 0, 1, 1, 1, 0, "u 'allocator<void*>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_84_0_3, 89, -1, G__defined_typename("allocator<void*>::pointer"), 2, 1, 1, 1, 8, "Y - 'allocator<void*>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_84_0_4, 89, -1, G__defined_typename("allocator<void*>::const_pointer"), 2, 1, 1, 1, 8, "Y - 'allocator<void*>::const_reference' 40 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__vector_84_0_5, 89, -1, -1, 2, 2, 1, 1, 0, 
"h - 'allocator<void*>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__vector_84_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"Y - 'allocator<void*>::pointer' 2 - __p h - 'allocator<void*>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_84_0_7, 104, -1, G__defined_typename("allocator<void*>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__vector_84_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"Y - 'allocator<void*>::pointer' 2 - __p Y - - 41 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__vector_84_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "Y - 'allocator<void*>::pointer' 2 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<void*>", 1685, G__vector_84_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_84_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR), -1, 1, 1, 1, 1, 0, "u 'allocator<void*>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvoidmUcOallocatorlEvoidmUgRsPgR(void) {
   /* vector<void*,allocator<void*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR));
   G__memfunc_setup("at",213,G__vector_85_0_1, 89, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<void*,allocator<void*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__vector_85_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__vector_85_0_3, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__vector_85_0_4, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<void*,allocator<void*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__vector_85_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<void*,allocator<void*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__vector_85_0_6, 104, -1, G__defined_typename("vector<void*,allocator<void*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_85_0_7, 104, -1, G__defined_typename("vector<void*,allocator<void*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_85_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<void*,allocator<void*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_85_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'vector<void*,allocator<void*> >::size_type' 0 - sz Y - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__vector_85_0_10, 104, -1, G__defined_typename("vector<void*,allocator<void*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__vector_85_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_85_0_12, 89, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<void*,allocator<void*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<void*,allocator<void*> >",2892,G__vector_85_0_13, 105, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<void*,allocator<void*> >",2892,G__vector_85_0_14, 105, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'vector<void*,allocator<void*> >::size_type' 0 - n Y - - 41 '(void*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<void*,allocator<void*> >",2892,G__vector_85_0_15, 105, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<void*,allocator<void*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<void*,allocator<void*> >",2892,G__vector_85_0_16, 105, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' 'vector<void*,allocator<void*> >::const_iterator' 10 - first u 'vector<void*,allocator<void*> >::iterator' 'vector<void*,allocator<void*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_85_0_17, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<void*,allocator<void*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__vector_85_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<void*,allocator<void*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__vector_85_0_19, 89, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__vector_85_0_20, 89, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__vector_85_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__vector_85_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<void*,allocator<void*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_85_0_23, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - position Y - - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_85_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - position u 'vector<void*,allocator<void*> >::iterator' 'vector<void*,allocator<void*> >::const_iterator' 10 - first "
"u 'vector<void*,allocator<void*> >::iterator' 'vector<void*,allocator<void*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_85_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - position h - 'vector<void*,allocator<void*> >::size_type' 0 - n "
"Y - - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__vector_85_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_85_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<void*,allocator<void*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_85_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__vector_85_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<void*,allocator<void*> >", 3018, G__vector_85_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator(void) {
   /* vector<void*,allocator<void*> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__vector_86_0_1, 105, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__vector_86_0_2, 105, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 1, 5, 1, 0, "Y - 'vector<void*,allocator<void*> >::iterator::pointer' 11 - __i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_86_0_3, 89, -1, G__defined_typename("vector<void*,allocator<void*> >::iterator::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_86_0_4, 89, -1, G__defined_typename("vector<void*,allocator<void*> >::iterator::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_86_0_5, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_86_0_6, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_86_0_7, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_86_0_8, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_86_0_9, 89, -1, G__defined_typename("vector<void*,allocator<void*> >::iterator::reference"), 1, 1, 1, 1, 8, "l - 'vector<void*,allocator<void*> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_86_0_10, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<void*,allocator<void*> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_86_0_11, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<void*,allocator<void*> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_86_0_12, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<void*,allocator<void*> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_86_0_13, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<void*,allocator<void*> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_86_0_14, 89, -1, G__defined_typename("vector<void*,allocator<void*> >::iterator::pointer"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_86_0_15, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<void*,allocator<void*> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("iterator", 874, G__vector_86_0_16, (int) ('i'), G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<void*,allocator<void*> >::iterator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__vector_86_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncreverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR(void) {
   /* reverse_iterator<vector<void*,allocator<void*> >::iterator> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR));
   G__memfunc_setup("reverse_iterator<vector<void*,allocator<void*> >::iterator>",5737,G__vector_87_0_1, 105, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_87_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_87_0_3, 89, -1, G__defined_typename("reverse_iterator<vector<void*,allocator<void*> >::iterator>::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_87_0_4, 89, -1, G__defined_typename("reverse_iterator<vector<void*,allocator<void*> >::iterator>::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_87_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_87_0_6, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_87_0_7, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_87_0_8, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_87_0_9, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<void*,allocator<void*> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_87_0_10, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<void*,allocator<void*> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_87_0_11, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<void*,allocator<void*> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_87_0_12, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<void*,allocator<void*> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_87_0_13, 89, -1, G__defined_typename("reverse_iterator<vector<void*,allocator<void*> >::iterator>::reference"), 1, 1, 1, 1, 8, "l - 'reverse_iterator<vector<void*,allocator<void*> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("reverse_iterator<vector<void*,allocator<void*> >::iterator>", 5737, G__vector_87_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "u 'reverse_iterator<vector<void*,allocator<void*> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator<vector<void*,allocator<void*> >::iterator>", 5863, G__vector_87_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_87_0_16, (int) ('u'), G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "u 'reverse_iterator<vector<void*,allocator<void*> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncallocatorlEcharmUgR(void) {
   /* allocator<char*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR));
   G__memfunc_setup("allocator<char*>",1539,G__vector_88_0_1, 105, G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocator<char*>",1539,G__vector_88_0_2, 105, G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR), -1, 0, 1, 1, 1, 0, "u 'allocator<char*>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_88_0_3, 67, -1, G__defined_typename("allocator<char*>::pointer"), 2, 1, 1, 1, 8, "C - 'allocator<char*>::reference' 0 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("address",742,G__vector_88_0_4, 67, -1, G__defined_typename("allocator<char*>::const_pointer"), 2, 1, 1, 1, 8, "C - 'allocator<char*>::const_reference' 40 - __x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allocate",837,G__vector_88_0_5, 67, -1, -1, 2, 2, 1, 1, 0, 
"h - 'allocator<char*>::size_type' 0 - __n Y - - 10 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deallocate",1038,G__vector_88_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'allocator<char*>::pointer' 2 - __p h - 'allocator<char*>::size_type' 0 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_88_0_7, 104, -1, G__defined_typename("allocator<char*>::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("construct",997,G__vector_88_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'allocator<char*>::pointer' 2 - __p C - - 41 - __val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroy",778,G__vector_88_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'allocator<char*>::pointer' 2 - __p", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~allocator<char*>", 1665, G__vector_88_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_88_0_11, (int) ('u'), G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR), -1, 1, 1, 1, 1, 0, "u 'allocator<char*>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEcharmUcOallocatorlEcharmUgRsPgR(void) {
   /* vector<char*,allocator<char*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR));
   G__memfunc_setup("at",213,G__vector_89_0_1, 67, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<char*,allocator<char*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__vector_89_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__vector_89_0_3, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__vector_89_0_4, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<char*,allocator<char*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__vector_89_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<char*,allocator<char*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__vector_89_0_6, 104, -1, G__defined_typename("vector<char*,allocator<char*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__vector_89_0_7, 104, -1, G__defined_typename("vector<char*,allocator<char*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_89_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<char*,allocator<char*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__vector_89_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'vector<char*,allocator<char*> >::size_type' 0 - sz C - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__vector_89_0_10, 104, -1, G__defined_typename("vector<char*,allocator<char*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__vector_89_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_89_0_12, 67, -1, -1, 1, 1, 1, 1, 0, "h - 'vector<char*,allocator<char*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<char*,allocator<char*> >",2852,G__vector_89_0_13, 105, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<char*,allocator<char*> >",2852,G__vector_89_0_14, 105, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'vector<char*,allocator<char*> >::size_type' 0 - n C - - 41 '(char*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<char*,allocator<char*> >",2852,G__vector_89_0_15, 105, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<char*,allocator<char*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<char*,allocator<char*> >",2852,G__vector_89_0_16, 105, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' 'vector<char*,allocator<char*> >::const_iterator' 10 - first u 'vector<char*,allocator<char*> >::iterator' 'vector<char*,allocator<char*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_89_0_17, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<char*,allocator<char*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__vector_89_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<char*,allocator<char*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__vector_89_0_19, 67, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__vector_89_0_20, 67, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__vector_89_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__vector_89_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<char*,allocator<char*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_89_0_23, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - position C - - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_89_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - position u 'vector<char*,allocator<char*> >::iterator' 'vector<char*,allocator<char*> >::const_iterator' 10 - first "
"u 'vector<char*,allocator<char*> >::iterator' 'vector<char*,allocator<char*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__vector_89_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - position h - 'vector<char*,allocator<char*> >::size_type' 0 - n "
"C - - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__vector_89_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_89_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<char*,allocator<char*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__vector_89_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__vector_89_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<char*,allocator<char*> >", 2978, G__vector_89_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator(void) {
   /* vector<char*,allocator<char*> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__vector_90_0_1, 105, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__vector_90_0_2, 105, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 1, 5, 1, 0, "C - 'vector<char*,allocator<char*> >::iterator::pointer' 11 - __i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_90_0_3, 67, -1, G__defined_typename("vector<char*,allocator<char*> >::iterator::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_90_0_4, 67, -1, G__defined_typename("vector<char*,allocator<char*> >::iterator::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_90_0_5, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_90_0_6, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_90_0_7, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_90_0_8, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_90_0_9, 67, -1, G__defined_typename("vector<char*,allocator<char*> >::iterator::reference"), 1, 1, 1, 1, 8, "l - 'vector<char*,allocator<char*> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_90_0_10, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<char*,allocator<char*> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_90_0_11, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<char*,allocator<char*> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_90_0_12, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<char*,allocator<char*> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_90_0_13, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<char*,allocator<char*> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_90_0_14, 67, -1, G__defined_typename("vector<char*,allocator<char*> >::iterator::pointer"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__vector_90_0_15, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<char*,allocator<char*> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("iterator", 874, G__vector_90_0_16, (int) ('i'), G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<char*,allocator<char*> >::iterator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__vector_90_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncreverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR(void) {
   /* reverse_iterator<vector<char*,allocator<char*> >::iterator> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR));
   G__memfunc_setup("reverse_iterator<vector<char*,allocator<char*> >::iterator>",5697,G__vector_91_0_1, 105, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__vector_91_0_2, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__vector_91_0_3, 67, -1, G__defined_typename("reverse_iterator<vector<char*,allocator<char*> >::iterator>::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__vector_91_0_4, 67, -1, G__defined_typename("reverse_iterator<vector<char*,allocator<char*> >::iterator>::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_91_0_5, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__vector_91_0_6, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_91_0_7, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__vector_91_0_8, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__vector_91_0_9, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<char*,allocator<char*> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__vector_91_0_10, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<char*,allocator<char*> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__vector_91_0_11, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 8, "l - 'reverse_iterator<vector<char*,allocator<char*> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__vector_91_0_12, 117, G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "l - 'reverse_iterator<vector<char*,allocator<char*> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__vector_91_0_13, 67, -1, G__defined_typename("reverse_iterator<vector<char*,allocator<char*> >::iterator>::reference"), 1, 1, 1, 1, 8, "l - 'reverse_iterator<vector<char*,allocator<char*> >::iterator>::difference_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("reverse_iterator<vector<char*,allocator<char*> >::iterator>", 5697, G__vector_91_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR), -1, 0, 1, 1, 1, 0, "u 'reverse_iterator<vector<char*,allocator<char*> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator<vector<char*,allocator<char*> >::iterator>", 5823, G__vector_91_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__vector_91_0_16, (int) ('u'), G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR), -1, 1, 1, 1, 1, 0, "u 'reverse_iterator<vector<char*,allocator<char*> >::iterator>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunc() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__GNUC__=3",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__GNUC_MINOR__=4",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"G__VECTOR_DLL=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"G__VECTOR_HAS_CLASS_ITERATOR=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"INCLUDE_CINTDICTVERSION=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"G__CINTDICTVERSION=20090608",1,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_global() {
  G__cpp_setup_global0();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
   G__memfunc_setup("operator==", 998, G__vector__0_112, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<char,allocator<char> >::iterator' - 11 - x u 'vector<char,allocator<char> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_113, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<char,allocator<char> >::iterator' - 11 - x u 'vector<char,allocator<char> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_114, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<char,allocator<char> >::iterator' - 11 - x u 'vector<char,allocator<char> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_115, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<char,allocator<char> >::iterator' - 11 - x u 'vector<char,allocator<char> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_116, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<char,allocator<char> >::iterator' - 11 - x u 'vector<char,allocator<char> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_117, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<char,allocator<char> >::iterator' - 11 - x u 'vector<char,allocator<char> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__vector__0_118, 108, -1, G__defined_typename("difference_type"), 0, 2, 1, 1, 8, 
"u 'vector<char,allocator<char> >::iterator' - 11 - x u 'vector<char,allocator<char> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__vector__0_119, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 2, 1, 1, 8, 
"l - 'difference_type' 10 - x u 'vector<char,allocator<char> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_120, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<char,allocator<char> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<char,allocator<char> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_121, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<char,allocator<char> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<char,allocator<char> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_122, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >' - 11 - x u 'vector<char,allocator<char> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_123, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >' - 11 - x u 'vector<char,allocator<char> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_124, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >' - 11 - x u 'vector<char,allocator<char> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_125, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >' - 11 - x u 'vector<char,allocator<char> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_126, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >' - 11 - x u 'vector<char,allocator<char> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_127, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >' - 11 - x u 'vector<char,allocator<char> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__vector__0_128, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last "
"c - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__vector__0_129, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first1 u 'vector<char,allocator<char> >::iterator' - 0 - last1 "
"u 'vector<char,allocator<char> >::iterator' - 0 - first2 u 'vector<char,allocator<char> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__vector__0_130, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first1 u 'vector<char,allocator<char> >::iterator' - 0 - last1 "
"u 'vector<char,allocator<char> >::iterator' - 0 - first2 u 'vector<char,allocator<char> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__vector__0_131, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__vector__0_132, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last "
"c - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__vector__0_133, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first1 u 'vector<char,allocator<char> >::iterator' - 0 - last1 "
"u 'vector<char,allocator<char> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__vector__0_134, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first1 u 'vector<char,allocator<char> >::iterator' - 0 - last1 "
"u 'vector<char,allocator<char> >::iterator' - 0 - first2 u 'vector<char,allocator<char> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search_n", 835, G__vector__0_135, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last "
"h - 'size_type' 0 - count c - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__vector__0_136, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last "
"u 'vector<char,allocator<char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__vector__0_137, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last "
"u 'vector<char,allocator<char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap", 443, G__vector__0_138, 121, -1, -1, 0, 2, 1, 1, 0, 
"c - - 1 - a c - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__vector__0_139, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first1 u 'vector<char,allocator<char> >::iterator' - 0 - last1 "
"u 'vector<char,allocator<char> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__vector__0_140, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - a u 'vector<char,allocator<char> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace", 732, G__vector__0_141, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last "
"c - - 11 - old_value c - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__vector__0_142, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last "
"u 'vector<char,allocator<char> >::iterator' - 0 - result c - - 11 - old_value "
"c - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__vector__0_143, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last "
"c - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__vector__0_144, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first h - 'size_type' 0 - n "
"c - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__vector__0_145, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last "
"c - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__vector__0_146, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last "
"u 'vector<char,allocator<char> >::iterator' - 0 - result c - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__vector__0_147, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__vector__0_148, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last "
"u 'vector<char,allocator<char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__vector__0_149, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__vector__0_150, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last "
"u 'vector<char,allocator<char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__vector__0_151, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - mid "
"u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__vector__0_152, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - mid "
"u 'vector<char,allocator<char> >::iterator' - 0 - last u 'vector<char,allocator<char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__vector__0_153, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__vector__0_154, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__vector__0_155, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__vector__0_156, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - mid "
"u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__vector__0_157, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last "
"u 'vector<char,allocator<char> >::iterator' - 0 - result_first u 'vector<char,allocator<char> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__vector__0_158, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - nth "
"u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__vector__0_159, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last "
"c - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__vector__0_160, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last "
"c - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__vector__0_161, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last "
"c - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__vector__0_162, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first1 u 'vector<char,allocator<char> >::iterator' - 0 - last1 "
"u 'vector<char,allocator<char> >::iterator' - 0 - first2 u 'vector<char,allocator<char> >::iterator' - 0 - last2 "
"u 'vector<char,allocator<char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__vector__0_163, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - middle "
"u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__vector__0_164, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first1 u 'vector<char,allocator<char> >::iterator' - 0 - last1 "
"u 'vector<char,allocator<char> >::iterator' - 0 - first2 u 'vector<char,allocator<char> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__vector__0_165, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first1 u 'vector<char,allocator<char> >::iterator' - 0 - last1 "
"u 'vector<char,allocator<char> >::iterator' - 0 - first2 u 'vector<char,allocator<char> >::iterator' - 0 - last2 "
"u 'vector<char,allocator<char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__vector__0_166, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first1 u 'vector<char,allocator<char> >::iterator' - 0 - last1 "
"u 'vector<char,allocator<char> >::iterator' - 0 - first2 u 'vector<char,allocator<char> >::iterator' - 0 - last2 "
"u 'vector<char,allocator<char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__vector__0_167, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first1 u 'vector<char,allocator<char> >::iterator' - 0 - last1 "
"u 'vector<char,allocator<char> >::iterator' - 0 - first2 u 'vector<char,allocator<char> >::iterator' - 0 - last2 "
"u 'vector<char,allocator<char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__vector__0_168, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first1 u 'vector<char,allocator<char> >::iterator' - 0 - last1 "
"u 'vector<char,allocator<char> >::iterator' - 0 - first2 u 'vector<char,allocator<char> >::iterator' - 0 - last2 "
"u 'vector<char,allocator<char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("push_heap", 957, G__vector__0_169, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__vector__0_170, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__vector__0_171, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__vector__0_172, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__vector__0_173, 99, -1, -1, 1, 2, 1, 1, 1, 
"c - - 11 - a c - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__vector__0_174, 99, -1, -1, 1, 2, 1, 1, 1, 
"c - - 11 - a c - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min_element", 1165, G__vector__0_175, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max_element", 1167, G__vector__0_176, 117, G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__vector__0_177, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first1 u 'vector<char,allocator<char> >::iterator' - 0 - last1 "
"u 'vector<char,allocator<char> >::iterator' - 0 - first2 u 'vector<char,allocator<char> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__vector__0_178, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__vector__0_179, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >::iterator' - 0 - first u 'vector<char,allocator<char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_180, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<short,allocator<short> >::iterator' - 11 - x u 'vector<short,allocator<short> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_181, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<short,allocator<short> >::iterator' - 11 - x u 'vector<short,allocator<short> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_182, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<short,allocator<short> >::iterator' - 11 - x u 'vector<short,allocator<short> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_183, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<short,allocator<short> >::iterator' - 11 - x u 'vector<short,allocator<short> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_184, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<short,allocator<short> >::iterator' - 11 - x u 'vector<short,allocator<short> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_185, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<short,allocator<short> >::iterator' - 11 - x u 'vector<short,allocator<short> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__vector__0_186, 108, -1, G__defined_typename("difference_type"), 0, 2, 1, 1, 8, 
"u 'vector<short,allocator<short> >::iterator' - 11 - x u 'vector<short,allocator<short> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__vector__0_187, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 8, 
"l - 'difference_type' 10 - x u 'vector<short,allocator<short> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_188, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<short,allocator<short> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<short,allocator<short> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_189, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<short,allocator<short> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<short,allocator<short> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_190, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >' - 11 - x u 'vector<short,allocator<short> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_191, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >' - 11 - x u 'vector<short,allocator<short> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_192, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >' - 11 - x u 'vector<short,allocator<short> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_193, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >' - 11 - x u 'vector<short,allocator<short> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_194, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >' - 11 - x u 'vector<short,allocator<short> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_195, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >' - 11 - x u 'vector<short,allocator<short> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__vector__0_196, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last "
"s - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__vector__0_197, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first1 u 'vector<short,allocator<short> >::iterator' - 0 - last1 "
"u 'vector<short,allocator<short> >::iterator' - 0 - first2 u 'vector<short,allocator<short> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__vector__0_198, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first1 u 'vector<short,allocator<short> >::iterator' - 0 - last1 "
"u 'vector<short,allocator<short> >::iterator' - 0 - first2 u 'vector<short,allocator<short> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__vector__0_199, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__vector__0_200, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last "
"s - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__vector__0_201, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first1 u 'vector<short,allocator<short> >::iterator' - 0 - last1 "
"u 'vector<short,allocator<short> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__vector__0_202, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first1 u 'vector<short,allocator<short> >::iterator' - 0 - last1 "
"u 'vector<short,allocator<short> >::iterator' - 0 - first2 u 'vector<short,allocator<short> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func2() {
   G__memfunc_setup("search_n", 835, G__vector__0_203, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last "
"h - 'size_type' 0 - count s - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__vector__0_204, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last "
"u 'vector<short,allocator<short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__vector__0_205, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last "
"u 'vector<short,allocator<short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap", 443, G__vector__0_206, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - - 1 - a s - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__vector__0_207, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first1 u 'vector<short,allocator<short> >::iterator' - 0 - last1 "
"u 'vector<short,allocator<short> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__vector__0_208, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - a u 'vector<short,allocator<short> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace", 732, G__vector__0_209, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last "
"s - - 11 - old_value s - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__vector__0_210, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last "
"u 'vector<short,allocator<short> >::iterator' - 0 - result s - - 11 - old_value "
"s - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__vector__0_211, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last "
"s - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__vector__0_212, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first h - 'size_type' 0 - n "
"s - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__vector__0_213, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last "
"s - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__vector__0_214, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last "
"u 'vector<short,allocator<short> >::iterator' - 0 - result s - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__vector__0_215, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__vector__0_216, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last "
"u 'vector<short,allocator<short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__vector__0_217, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__vector__0_218, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last "
"u 'vector<short,allocator<short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__vector__0_219, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - mid "
"u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__vector__0_220, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - mid "
"u 'vector<short,allocator<short> >::iterator' - 0 - last u 'vector<short,allocator<short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__vector__0_221, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__vector__0_222, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__vector__0_223, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__vector__0_224, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - mid "
"u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__vector__0_225, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last "
"u 'vector<short,allocator<short> >::iterator' - 0 - result_first u 'vector<short,allocator<short> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__vector__0_226, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - nth "
"u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__vector__0_227, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last "
"s - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__vector__0_228, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last "
"s - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__vector__0_229, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last "
"s - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__vector__0_230, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first1 u 'vector<short,allocator<short> >::iterator' - 0 - last1 "
"u 'vector<short,allocator<short> >::iterator' - 0 - first2 u 'vector<short,allocator<short> >::iterator' - 0 - last2 "
"u 'vector<short,allocator<short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__vector__0_231, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - middle "
"u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__vector__0_232, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first1 u 'vector<short,allocator<short> >::iterator' - 0 - last1 "
"u 'vector<short,allocator<short> >::iterator' - 0 - first2 u 'vector<short,allocator<short> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__vector__0_233, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first1 u 'vector<short,allocator<short> >::iterator' - 0 - last1 "
"u 'vector<short,allocator<short> >::iterator' - 0 - first2 u 'vector<short,allocator<short> >::iterator' - 0 - last2 "
"u 'vector<short,allocator<short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__vector__0_234, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first1 u 'vector<short,allocator<short> >::iterator' - 0 - last1 "
"u 'vector<short,allocator<short> >::iterator' - 0 - first2 u 'vector<short,allocator<short> >::iterator' - 0 - last2 "
"u 'vector<short,allocator<short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__vector__0_235, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first1 u 'vector<short,allocator<short> >::iterator' - 0 - last1 "
"u 'vector<short,allocator<short> >::iterator' - 0 - first2 u 'vector<short,allocator<short> >::iterator' - 0 - last2 "
"u 'vector<short,allocator<short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__vector__0_236, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first1 u 'vector<short,allocator<short> >::iterator' - 0 - last1 "
"u 'vector<short,allocator<short> >::iterator' - 0 - first2 u 'vector<short,allocator<short> >::iterator' - 0 - last2 "
"u 'vector<short,allocator<short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("push_heap", 957, G__vector__0_237, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__vector__0_238, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__vector__0_239, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__vector__0_240, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__vector__0_241, 115, -1, -1, 1, 2, 1, 1, 1, 
"s - - 11 - a s - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__vector__0_242, 115, -1, -1, 1, 2, 1, 1, 1, 
"s - - 11 - a s - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min_element", 1165, G__vector__0_243, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max_element", 1167, G__vector__0_244, 117, G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__vector__0_245, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first1 u 'vector<short,allocator<short> >::iterator' - 0 - last1 "
"u 'vector<short,allocator<short> >::iterator' - 0 - first2 u 'vector<short,allocator<short> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__vector__0_246, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__vector__0_247, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >::iterator' - 0 - first u 'vector<short,allocator<short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_248, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<long,allocator<long> >::iterator' - 11 - x u 'vector<long,allocator<long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_249, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<long,allocator<long> >::iterator' - 11 - x u 'vector<long,allocator<long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_250, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<long,allocator<long> >::iterator' - 11 - x u 'vector<long,allocator<long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_251, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<long,allocator<long> >::iterator' - 11 - x u 'vector<long,allocator<long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_252, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<long,allocator<long> >::iterator' - 11 - x u 'vector<long,allocator<long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_253, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<long,allocator<long> >::iterator' - 11 - x u 'vector<long,allocator<long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__vector__0_254, 108, -1, G__defined_typename("difference_type"), 0, 2, 1, 1, 8, 
"u 'vector<long,allocator<long> >::iterator' - 11 - x u 'vector<long,allocator<long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__vector__0_255, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 8, 
"l - 'difference_type' 10 - x u 'vector<long,allocator<long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_256, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<long,allocator<long> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<long,allocator<long> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_257, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<long,allocator<long> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<long,allocator<long> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_258, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >' - 11 - x u 'vector<long,allocator<long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_259, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >' - 11 - x u 'vector<long,allocator<long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_260, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >' - 11 - x u 'vector<long,allocator<long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_261, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >' - 11 - x u 'vector<long,allocator<long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_262, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >' - 11 - x u 'vector<long,allocator<long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_263, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >' - 11 - x u 'vector<long,allocator<long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__vector__0_264, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last "
"l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__vector__0_265, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first1 u 'vector<long,allocator<long> >::iterator' - 0 - last1 "
"u 'vector<long,allocator<long> >::iterator' - 0 - first2 u 'vector<long,allocator<long> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__vector__0_266, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first1 u 'vector<long,allocator<long> >::iterator' - 0 - last1 "
"u 'vector<long,allocator<long> >::iterator' - 0 - first2 u 'vector<long,allocator<long> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__vector__0_267, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__vector__0_268, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last "
"l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__vector__0_269, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first1 u 'vector<long,allocator<long> >::iterator' - 0 - last1 "
"u 'vector<long,allocator<long> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__vector__0_270, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first1 u 'vector<long,allocator<long> >::iterator' - 0 - last1 "
"u 'vector<long,allocator<long> >::iterator' - 0 - first2 u 'vector<long,allocator<long> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search_n", 835, G__vector__0_271, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last "
"h - 'size_type' 0 - count l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__vector__0_272, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last "
"u 'vector<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__vector__0_273, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last "
"u 'vector<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap", 443, G__vector__0_274, 121, -1, -1, 0, 2, 1, 1, 0, 
"l - - 1 - a l - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__vector__0_275, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first1 u 'vector<long,allocator<long> >::iterator' - 0 - last1 "
"u 'vector<long,allocator<long> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__vector__0_276, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - a u 'vector<long,allocator<long> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace", 732, G__vector__0_277, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last "
"l - - 11 - old_value l - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__vector__0_278, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last "
"u 'vector<long,allocator<long> >::iterator' - 0 - result l - - 11 - old_value "
"l - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__vector__0_279, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last "
"l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__vector__0_280, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first h - 'size_type' 0 - n "
"l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__vector__0_281, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last "
"l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__vector__0_282, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last "
"u 'vector<long,allocator<long> >::iterator' - 0 - result l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__vector__0_283, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__vector__0_284, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last "
"u 'vector<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__vector__0_285, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__vector__0_286, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last "
"u 'vector<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__vector__0_287, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - mid "
"u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__vector__0_288, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - mid "
"u 'vector<long,allocator<long> >::iterator' - 0 - last u 'vector<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__vector__0_289, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__vector__0_290, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__vector__0_291, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__vector__0_292, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - mid "
"u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__vector__0_293, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last "
"u 'vector<long,allocator<long> >::iterator' - 0 - result_first u 'vector<long,allocator<long> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__vector__0_294, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - nth "
"u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__vector__0_295, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last "
"l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__vector__0_296, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last "
"l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__vector__0_297, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last "
"l - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__vector__0_298, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first1 u 'vector<long,allocator<long> >::iterator' - 0 - last1 "
"u 'vector<long,allocator<long> >::iterator' - 0 - first2 u 'vector<long,allocator<long> >::iterator' - 0 - last2 "
"u 'vector<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__vector__0_299, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - middle "
"u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__vector__0_300, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first1 u 'vector<long,allocator<long> >::iterator' - 0 - last1 "
"u 'vector<long,allocator<long> >::iterator' - 0 - first2 u 'vector<long,allocator<long> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__vector__0_301, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first1 u 'vector<long,allocator<long> >::iterator' - 0 - last1 "
"u 'vector<long,allocator<long> >::iterator' - 0 - first2 u 'vector<long,allocator<long> >::iterator' - 0 - last2 "
"u 'vector<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__vector__0_302, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first1 u 'vector<long,allocator<long> >::iterator' - 0 - last1 "
"u 'vector<long,allocator<long> >::iterator' - 0 - first2 u 'vector<long,allocator<long> >::iterator' - 0 - last2 "
"u 'vector<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__vector__0_303, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first1 u 'vector<long,allocator<long> >::iterator' - 0 - last1 "
"u 'vector<long,allocator<long> >::iterator' - 0 - first2 u 'vector<long,allocator<long> >::iterator' - 0 - last2 "
"u 'vector<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__vector__0_304, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first1 u 'vector<long,allocator<long> >::iterator' - 0 - last1 "
"u 'vector<long,allocator<long> >::iterator' - 0 - first2 u 'vector<long,allocator<long> >::iterator' - 0 - last2 "
"u 'vector<long,allocator<long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func3() {
   G__memfunc_setup("push_heap", 957, G__vector__0_305, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__vector__0_306, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__vector__0_307, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__vector__0_308, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__vector__0_309, 108, -1, -1, 1, 2, 1, 1, 1, 
"l - - 11 - a l - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__vector__0_310, 108, -1, -1, 1, 2, 1, 1, 1, 
"l - - 11 - a l - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min_element", 1165, G__vector__0_311, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max_element", 1167, G__vector__0_312, 117, G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__vector__0_313, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first1 u 'vector<long,allocator<long> >::iterator' - 0 - last1 "
"u 'vector<long,allocator<long> >::iterator' - 0 - first2 u 'vector<long,allocator<long> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__vector__0_314, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__vector__0_315, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >::iterator' - 0 - first u 'vector<long,allocator<long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_316, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - x u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_317, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - x u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_318, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - x u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_319, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - x u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_320, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - x u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_321, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - x u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__vector__0_322, 108, -1, G__defined_typename("difference_type"), 0, 2, 1, 1, 8, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - x u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__vector__0_323, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 2, 1, 1, 8, 
"l - 'difference_type' 10 - x u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_324, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_325, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_326, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >' - 11 - x u 'vector<unsigned char,allocator<unsigned char> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_327, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >' - 11 - x u 'vector<unsigned char,allocator<unsigned char> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_328, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >' - 11 - x u 'vector<unsigned char,allocator<unsigned char> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_329, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >' - 11 - x u 'vector<unsigned char,allocator<unsigned char> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_330, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >' - 11 - x u 'vector<unsigned char,allocator<unsigned char> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_331, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >' - 11 - x u 'vector<unsigned char,allocator<unsigned char> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__vector__0_332, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last "
"b - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__vector__0_333, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first1 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last1 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first2 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__vector__0_334, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first1 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last1 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first2 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__vector__0_335, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__vector__0_336, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last "
"b - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__vector__0_337, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first1 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last1 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__vector__0_338, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first1 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last1 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first2 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search_n", 835, G__vector__0_339, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last "
"h - 'size_type' 0 - count b - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__vector__0_340, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__vector__0_341, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap", 443, G__vector__0_342, 121, -1, -1, 0, 2, 1, 1, 0, 
"b - - 1 - a b - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__vector__0_343, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first1 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last1 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__vector__0_344, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - a u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace", 732, G__vector__0_345, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last "
"b - - 11 - old_value b - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__vector__0_346, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - result b - - 11 - old_value "
"b - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__vector__0_347, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last "
"b - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__vector__0_348, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first h - 'size_type' 0 - n "
"b - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__vector__0_349, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last "
"b - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__vector__0_350, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - result b - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__vector__0_351, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__vector__0_352, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__vector__0_353, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__vector__0_354, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__vector__0_355, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - mid "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__vector__0_356, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - mid "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__vector__0_357, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__vector__0_358, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__vector__0_359, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__vector__0_360, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - mid "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__vector__0_361, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - result_first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__vector__0_362, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - nth "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__vector__0_363, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last "
"b - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__vector__0_364, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last "
"b - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__vector__0_365, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last "
"b - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__vector__0_366, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first1 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last1 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first2 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last2 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__vector__0_367, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - middle "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__vector__0_368, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first1 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last1 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first2 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__vector__0_369, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first1 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last1 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first2 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last2 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__vector__0_370, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first1 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last1 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first2 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last2 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__vector__0_371, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first1 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last1 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first2 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last2 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__vector__0_372, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first1 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last1 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first2 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last2 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("push_heap", 957, G__vector__0_373, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__vector__0_374, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__vector__0_375, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__vector__0_376, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__vector__0_377, 98, -1, -1, 1, 2, 1, 1, 1, 
"b - - 11 - a b - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__vector__0_378, 98, -1, -1, 1, 2, 1, 1, 1, 
"b - - 11 - a b - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min_element", 1165, G__vector__0_379, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max_element", 1167, G__vector__0_380, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__vector__0_381, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first1 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last1 "
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first2 u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__vector__0_382, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__vector__0_383, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - first u 'vector<unsigned char,allocator<unsigned char> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_384, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - x u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_385, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - x u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_386, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - x u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_387, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - x u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_388, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - x u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_389, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - x u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__vector__0_390, 108, -1, G__defined_typename("difference_type"), 0, 2, 1, 1, 8, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - x u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__vector__0_391, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 8, 
"l - 'difference_type' 10 - x u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_392, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_393, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_394, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x u 'vector<unsigned short,allocator<unsigned short> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_395, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x u 'vector<unsigned short,allocator<unsigned short> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_396, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x u 'vector<unsigned short,allocator<unsigned short> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_397, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x u 'vector<unsigned short,allocator<unsigned short> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_398, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x u 'vector<unsigned short,allocator<unsigned short> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_399, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x u 'vector<unsigned short,allocator<unsigned short> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__vector__0_400, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last "
"r - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__vector__0_401, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first1 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last1 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first2 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__vector__0_402, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first1 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last1 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first2 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__vector__0_403, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__vector__0_404, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last "
"r - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__vector__0_405, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first1 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last1 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__vector__0_406, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first1 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last1 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first2 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func4() {
   G__memfunc_setup("search_n", 835, G__vector__0_407, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last "
"h - 'size_type' 0 - count r - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__vector__0_408, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__vector__0_409, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap", 443, G__vector__0_410, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - - 1 - a r - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__vector__0_411, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first1 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last1 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__vector__0_412, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - a u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace", 732, G__vector__0_413, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last "
"r - - 11 - old_value r - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__vector__0_414, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - result r - - 11 - old_value "
"r - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__vector__0_415, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last "
"r - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__vector__0_416, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first h - 'size_type' 0 - n "
"r - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__vector__0_417, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last "
"r - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__vector__0_418, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - result r - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__vector__0_419, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__vector__0_420, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__vector__0_421, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__vector__0_422, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__vector__0_423, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - mid "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__vector__0_424, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - mid "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__vector__0_425, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__vector__0_426, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__vector__0_427, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__vector__0_428, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - mid "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__vector__0_429, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - result_first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__vector__0_430, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - nth "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__vector__0_431, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last "
"r - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__vector__0_432, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last "
"r - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__vector__0_433, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last "
"r - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__vector__0_434, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first1 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last1 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first2 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last2 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__vector__0_435, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - middle "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__vector__0_436, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first1 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last1 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first2 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__vector__0_437, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first1 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last1 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first2 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last2 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__vector__0_438, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first1 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last1 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first2 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last2 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__vector__0_439, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first1 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last1 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first2 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last2 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__vector__0_440, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first1 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last1 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first2 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last2 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("push_heap", 957, G__vector__0_441, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__vector__0_442, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__vector__0_443, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__vector__0_444, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__vector__0_445, 114, -1, -1, 1, 2, 1, 1, 1, 
"r - - 11 - a r - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__vector__0_446, 114, -1, -1, 1, 2, 1, 1, 1, 
"r - - 11 - a r - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min_element", 1165, G__vector__0_447, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max_element", 1167, G__vector__0_448, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__vector__0_449, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first1 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last1 "
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first2 u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__vector__0_450, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__vector__0_451, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - first u 'vector<unsigned short,allocator<unsigned short> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_452, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - x u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_453, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - x u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_454, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - x u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_455, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - x u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_456, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - x u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_457, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - x u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__vector__0_458, 108, -1, G__defined_typename("difference_type"), 0, 2, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - x u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__vector__0_459, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 8, 
"l - 'difference_type' 10 - x u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_460, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_461, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_462, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' - 11 - x u 'vector<unsigned int,allocator<unsigned int> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_463, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' - 11 - x u 'vector<unsigned int,allocator<unsigned int> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_464, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' - 11 - x u 'vector<unsigned int,allocator<unsigned int> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_465, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' - 11 - x u 'vector<unsigned int,allocator<unsigned int> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_466, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' - 11 - x u 'vector<unsigned int,allocator<unsigned int> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_467, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' - 11 - x u 'vector<unsigned int,allocator<unsigned int> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__vector__0_468, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last "
"h - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__vector__0_469, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first1 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last1 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first2 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__vector__0_470, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first1 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last1 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first2 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__vector__0_471, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__vector__0_472, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last "
"h - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__vector__0_473, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first1 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last1 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__vector__0_474, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first1 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last1 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first2 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search_n", 835, G__vector__0_475, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last "
"h - 'size_type' 0 - count h - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__vector__0_476, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__vector__0_477, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap", 443, G__vector__0_478, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - - 1 - a h - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__vector__0_479, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first1 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last1 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__vector__0_480, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - a u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace", 732, G__vector__0_481, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last "
"h - - 11 - old_value h - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__vector__0_482, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - result h - - 11 - old_value "
"h - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__vector__0_483, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last "
"h - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__vector__0_484, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first h - 'size_type' 0 - n "
"h - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__vector__0_485, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last "
"h - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__vector__0_486, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - result h - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__vector__0_487, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__vector__0_488, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__vector__0_489, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__vector__0_490, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__vector__0_491, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - mid "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__vector__0_492, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - mid "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__vector__0_493, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__vector__0_494, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__vector__0_495, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__vector__0_496, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - mid "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__vector__0_497, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - result_first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__vector__0_498, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - nth "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__vector__0_499, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last "
"h - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__vector__0_500, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last "
"h - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__vector__0_501, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last "
"h - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__vector__0_502, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first1 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last1 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first2 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last2 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__vector__0_503, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - middle "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__vector__0_504, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first1 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last1 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first2 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__vector__0_505, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first1 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last1 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first2 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last2 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__vector__0_506, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first1 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last1 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first2 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last2 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__vector__0_507, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first1 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last1 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first2 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last2 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__vector__0_508, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first1 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last1 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first2 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last2 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func5() {
   G__memfunc_setup("push_heap", 957, G__vector__0_509, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__vector__0_510, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__vector__0_511, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__vector__0_512, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__vector__0_513, 104, -1, -1, 1, 2, 1, 1, 1, 
"h - - 11 - a h - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__vector__0_514, 104, -1, -1, 1, 2, 1, 1, 1, 
"h - - 11 - a h - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min_element", 1165, G__vector__0_515, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max_element", 1167, G__vector__0_516, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__vector__0_517, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first1 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last1 "
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first2 u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__vector__0_518, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__vector__0_519, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - first u 'vector<unsigned int,allocator<unsigned int> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_520, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - x u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_521, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - x u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_522, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - x u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_523, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - x u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_524, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - x u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_525, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - x u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__vector__0_526, 108, -1, G__defined_typename("difference_type"), 0, 2, 1, 1, 8, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - x u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__vector__0_527, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 8, 
"l - 'difference_type' 10 - x u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_528, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_529, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_530, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >' - 11 - x u 'vector<unsigned long,allocator<unsigned long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_531, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >' - 11 - x u 'vector<unsigned long,allocator<unsigned long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_532, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >' - 11 - x u 'vector<unsigned long,allocator<unsigned long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_533, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >' - 11 - x u 'vector<unsigned long,allocator<unsigned long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_534, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >' - 11 - x u 'vector<unsigned long,allocator<unsigned long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_535, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >' - 11 - x u 'vector<unsigned long,allocator<unsigned long> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__vector__0_536, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last "
"k - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__vector__0_537, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first1 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last1 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first2 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__vector__0_538, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first1 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last1 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first2 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__vector__0_539, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__vector__0_540, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last "
"k - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__vector__0_541, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first1 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last1 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__vector__0_542, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first1 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last1 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first2 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search_n", 835, G__vector__0_543, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last "
"h - 'size_type' 0 - count k - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__vector__0_544, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__vector__0_545, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap", 443, G__vector__0_546, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - - 1 - a k - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__vector__0_547, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first1 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last1 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__vector__0_548, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - a u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace", 732, G__vector__0_549, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last "
"k - - 11 - old_value k - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__vector__0_550, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - result k - - 11 - old_value "
"k - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__vector__0_551, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last "
"k - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__vector__0_552, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first h - 'size_type' 0 - n "
"k - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__vector__0_553, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last "
"k - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__vector__0_554, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - result k - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__vector__0_555, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__vector__0_556, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__vector__0_557, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__vector__0_558, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__vector__0_559, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - mid "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__vector__0_560, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - mid "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__vector__0_561, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__vector__0_562, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__vector__0_563, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__vector__0_564, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - mid "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__vector__0_565, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - result_first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__vector__0_566, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - nth "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__vector__0_567, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last "
"k - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__vector__0_568, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last "
"k - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__vector__0_569, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last "
"k - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__vector__0_570, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first1 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last1 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first2 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last2 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__vector__0_571, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - middle "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__vector__0_572, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first1 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last1 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first2 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__vector__0_573, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first1 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last1 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first2 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last2 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__vector__0_574, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first1 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last1 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first2 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last2 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__vector__0_575, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first1 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last1 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first2 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last2 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__vector__0_576, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first1 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last1 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first2 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last2 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("push_heap", 957, G__vector__0_577, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__vector__0_578, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__vector__0_579, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__vector__0_580, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__vector__0_581, 107, -1, -1, 1, 2, 1, 1, 1, 
"k - - 11 - a k - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__vector__0_582, 107, -1, -1, 1, 2, 1, 1, 1, 
"k - - 11 - a k - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min_element", 1165, G__vector__0_583, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max_element", 1167, G__vector__0_584, 117, G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__vector__0_585, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first1 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last1 "
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first2 u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__vector__0_586, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__vector__0_587, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - first u 'vector<unsigned long,allocator<unsigned long> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_588, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<float,allocator<float> >::iterator' - 11 - x u 'vector<float,allocator<float> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_589, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<float,allocator<float> >::iterator' - 11 - x u 'vector<float,allocator<float> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_590, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<float,allocator<float> >::iterator' - 11 - x u 'vector<float,allocator<float> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_591, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<float,allocator<float> >::iterator' - 11 - x u 'vector<float,allocator<float> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_592, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<float,allocator<float> >::iterator' - 11 - x u 'vector<float,allocator<float> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_593, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<float,allocator<float> >::iterator' - 11 - x u 'vector<float,allocator<float> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__vector__0_594, 108, -1, G__defined_typename("difference_type"), 0, 2, 1, 1, 8, 
"u 'vector<float,allocator<float> >::iterator' - 11 - x u 'vector<float,allocator<float> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__vector__0_595, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 8, 
"l - 'difference_type' 10 - x u 'vector<float,allocator<float> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_596, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<float,allocator<float> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<float,allocator<float> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_597, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<float,allocator<float> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<float,allocator<float> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_598, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >' - 11 - x u 'vector<float,allocator<float> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_599, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >' - 11 - x u 'vector<float,allocator<float> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_600, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >' - 11 - x u 'vector<float,allocator<float> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_601, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >' - 11 - x u 'vector<float,allocator<float> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_602, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >' - 11 - x u 'vector<float,allocator<float> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_603, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >' - 11 - x u 'vector<float,allocator<float> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__vector__0_604, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last "
"f - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__vector__0_605, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first1 u 'vector<float,allocator<float> >::iterator' - 0 - last1 "
"u 'vector<float,allocator<float> >::iterator' - 0 - first2 u 'vector<float,allocator<float> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__vector__0_606, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first1 u 'vector<float,allocator<float> >::iterator' - 0 - last1 "
"u 'vector<float,allocator<float> >::iterator' - 0 - first2 u 'vector<float,allocator<float> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__vector__0_607, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__vector__0_608, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last "
"f - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__vector__0_609, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first1 u 'vector<float,allocator<float> >::iterator' - 0 - last1 "
"u 'vector<float,allocator<float> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__vector__0_610, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first1 u 'vector<float,allocator<float> >::iterator' - 0 - last1 "
"u 'vector<float,allocator<float> >::iterator' - 0 - first2 u 'vector<float,allocator<float> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func6() {
   G__memfunc_setup("search_n", 835, G__vector__0_611, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last "
"h - 'size_type' 0 - count f - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__vector__0_612, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last "
"u 'vector<float,allocator<float> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__vector__0_613, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last "
"u 'vector<float,allocator<float> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap", 443, G__vector__0_614, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 1 - a f - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__vector__0_615, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first1 u 'vector<float,allocator<float> >::iterator' - 0 - last1 "
"u 'vector<float,allocator<float> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__vector__0_616, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - a u 'vector<float,allocator<float> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace", 732, G__vector__0_617, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last "
"f - - 11 - old_value f - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__vector__0_618, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last "
"u 'vector<float,allocator<float> >::iterator' - 0 - result f - - 11 - old_value "
"f - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__vector__0_619, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last "
"f - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__vector__0_620, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first h - 'size_type' 0 - n "
"f - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__vector__0_621, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last "
"f - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__vector__0_622, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last "
"u 'vector<float,allocator<float> >::iterator' - 0 - result f - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__vector__0_623, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__vector__0_624, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last "
"u 'vector<float,allocator<float> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__vector__0_625, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__vector__0_626, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last "
"u 'vector<float,allocator<float> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__vector__0_627, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - mid "
"u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__vector__0_628, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - mid "
"u 'vector<float,allocator<float> >::iterator' - 0 - last u 'vector<float,allocator<float> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__vector__0_629, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__vector__0_630, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__vector__0_631, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__vector__0_632, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - mid "
"u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__vector__0_633, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last "
"u 'vector<float,allocator<float> >::iterator' - 0 - result_first u 'vector<float,allocator<float> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__vector__0_634, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - nth "
"u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__vector__0_635, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last "
"f - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__vector__0_636, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last "
"f - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__vector__0_637, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last "
"f - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__vector__0_638, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first1 u 'vector<float,allocator<float> >::iterator' - 0 - last1 "
"u 'vector<float,allocator<float> >::iterator' - 0 - first2 u 'vector<float,allocator<float> >::iterator' - 0 - last2 "
"u 'vector<float,allocator<float> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__vector__0_639, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - middle "
"u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__vector__0_640, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first1 u 'vector<float,allocator<float> >::iterator' - 0 - last1 "
"u 'vector<float,allocator<float> >::iterator' - 0 - first2 u 'vector<float,allocator<float> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__vector__0_641, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first1 u 'vector<float,allocator<float> >::iterator' - 0 - last1 "
"u 'vector<float,allocator<float> >::iterator' - 0 - first2 u 'vector<float,allocator<float> >::iterator' - 0 - last2 "
"u 'vector<float,allocator<float> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__vector__0_642, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first1 u 'vector<float,allocator<float> >::iterator' - 0 - last1 "
"u 'vector<float,allocator<float> >::iterator' - 0 - first2 u 'vector<float,allocator<float> >::iterator' - 0 - last2 "
"u 'vector<float,allocator<float> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__vector__0_643, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first1 u 'vector<float,allocator<float> >::iterator' - 0 - last1 "
"u 'vector<float,allocator<float> >::iterator' - 0 - first2 u 'vector<float,allocator<float> >::iterator' - 0 - last2 "
"u 'vector<float,allocator<float> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__vector__0_644, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first1 u 'vector<float,allocator<float> >::iterator' - 0 - last1 "
"u 'vector<float,allocator<float> >::iterator' - 0 - first2 u 'vector<float,allocator<float> >::iterator' - 0 - last2 "
"u 'vector<float,allocator<float> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("push_heap", 957, G__vector__0_645, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__vector__0_646, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__vector__0_647, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__vector__0_648, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__vector__0_649, 102, -1, -1, 1, 2, 1, 1, 1, 
"f - - 11 - a f - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__vector__0_650, 102, -1, -1, 1, 2, 1, 1, 1, 
"f - - 11 - a f - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min_element", 1165, G__vector__0_651, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max_element", 1167, G__vector__0_652, 117, G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__vector__0_653, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first1 u 'vector<float,allocator<float> >::iterator' - 0 - last1 "
"u 'vector<float,allocator<float> >::iterator' - 0 - first2 u 'vector<float,allocator<float> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__vector__0_654, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__vector__0_655, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >::iterator' - 0 - first u 'vector<float,allocator<float> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_656, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<double,allocator<double> >::iterator' - 11 - x u 'vector<double,allocator<double> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_657, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<double,allocator<double> >::iterator' - 11 - x u 'vector<double,allocator<double> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_658, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<double,allocator<double> >::iterator' - 11 - x u 'vector<double,allocator<double> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_659, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<double,allocator<double> >::iterator' - 11 - x u 'vector<double,allocator<double> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_660, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<double,allocator<double> >::iterator' - 11 - x u 'vector<double,allocator<double> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_661, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<double,allocator<double> >::iterator' - 11 - x u 'vector<double,allocator<double> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__vector__0_662, 108, -1, G__defined_typename("difference_type"), 0, 2, 1, 1, 8, 
"u 'vector<double,allocator<double> >::iterator' - 11 - x u 'vector<double,allocator<double> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__vector__0_663, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 8, 
"l - 'difference_type' 10 - x u 'vector<double,allocator<double> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_664, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<double,allocator<double> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<double,allocator<double> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_665, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<double,allocator<double> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<double,allocator<double> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_666, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' - 11 - x u 'vector<double,allocator<double> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_667, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' - 11 - x u 'vector<double,allocator<double> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_668, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' - 11 - x u 'vector<double,allocator<double> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_669, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' - 11 - x u 'vector<double,allocator<double> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_670, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' - 11 - x u 'vector<double,allocator<double> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_671, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' - 11 - x u 'vector<double,allocator<double> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__vector__0_672, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last "
"d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__vector__0_673, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first1 u 'vector<double,allocator<double> >::iterator' - 0 - last1 "
"u 'vector<double,allocator<double> >::iterator' - 0 - first2 u 'vector<double,allocator<double> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__vector__0_674, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first1 u 'vector<double,allocator<double> >::iterator' - 0 - last1 "
"u 'vector<double,allocator<double> >::iterator' - 0 - first2 u 'vector<double,allocator<double> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__vector__0_675, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__vector__0_676, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last "
"d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__vector__0_677, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first1 u 'vector<double,allocator<double> >::iterator' - 0 - last1 "
"u 'vector<double,allocator<double> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__vector__0_678, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first1 u 'vector<double,allocator<double> >::iterator' - 0 - last1 "
"u 'vector<double,allocator<double> >::iterator' - 0 - first2 u 'vector<double,allocator<double> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search_n", 835, G__vector__0_679, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last "
"h - 'size_type' 0 - count d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__vector__0_680, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last "
"u 'vector<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__vector__0_681, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last "
"u 'vector<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap", 443, G__vector__0_682, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 1 - a d - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__vector__0_683, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first1 u 'vector<double,allocator<double> >::iterator' - 0 - last1 "
"u 'vector<double,allocator<double> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__vector__0_684, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - a u 'vector<double,allocator<double> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace", 732, G__vector__0_685, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last "
"d - - 11 - old_value d - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__vector__0_686, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last "
"u 'vector<double,allocator<double> >::iterator' - 0 - result d - - 11 - old_value "
"d - - 11 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__vector__0_687, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last "
"d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__vector__0_688, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first h - 'size_type' 0 - n "
"d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__vector__0_689, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last "
"d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__vector__0_690, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last "
"u 'vector<double,allocator<double> >::iterator' - 0 - result d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__vector__0_691, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__vector__0_692, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last "
"u 'vector<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__vector__0_693, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__vector__0_694, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last "
"u 'vector<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__vector__0_695, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - mid "
"u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__vector__0_696, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - mid "
"u 'vector<double,allocator<double> >::iterator' - 0 - last u 'vector<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__vector__0_697, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__vector__0_698, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__vector__0_699, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__vector__0_700, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - mid "
"u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__vector__0_701, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last "
"u 'vector<double,allocator<double> >::iterator' - 0 - result_first u 'vector<double,allocator<double> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__vector__0_702, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - nth "
"u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__vector__0_703, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last "
"d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__vector__0_704, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last "
"d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__vector__0_705, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last "
"d - - 11 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__vector__0_706, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first1 u 'vector<double,allocator<double> >::iterator' - 0 - last1 "
"u 'vector<double,allocator<double> >::iterator' - 0 - first2 u 'vector<double,allocator<double> >::iterator' - 0 - last2 "
"u 'vector<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__vector__0_707, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - middle "
"u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__vector__0_708, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first1 u 'vector<double,allocator<double> >::iterator' - 0 - last1 "
"u 'vector<double,allocator<double> >::iterator' - 0 - first2 u 'vector<double,allocator<double> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__vector__0_709, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first1 u 'vector<double,allocator<double> >::iterator' - 0 - last1 "
"u 'vector<double,allocator<double> >::iterator' - 0 - first2 u 'vector<double,allocator<double> >::iterator' - 0 - last2 "
"u 'vector<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__vector__0_710, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first1 u 'vector<double,allocator<double> >::iterator' - 0 - last1 "
"u 'vector<double,allocator<double> >::iterator' - 0 - first2 u 'vector<double,allocator<double> >::iterator' - 0 - last2 "
"u 'vector<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__vector__0_711, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first1 u 'vector<double,allocator<double> >::iterator' - 0 - last1 "
"u 'vector<double,allocator<double> >::iterator' - 0 - first2 u 'vector<double,allocator<double> >::iterator' - 0 - last2 "
"u 'vector<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__vector__0_712, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first1 u 'vector<double,allocator<double> >::iterator' - 0 - last1 "
"u 'vector<double,allocator<double> >::iterator' - 0 - first2 u 'vector<double,allocator<double> >::iterator' - 0 - last2 "
"u 'vector<double,allocator<double> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func7() {
   G__memfunc_setup("push_heap", 957, G__vector__0_713, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__vector__0_714, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__vector__0_715, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__vector__0_716, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__vector__0_717, 100, -1, -1, 1, 2, 1, 1, 1, 
"d - - 11 - a d - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__vector__0_718, 100, -1, -1, 1, 2, 1, 1, 1, 
"d - - 11 - a d - - 11 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min_element", 1165, G__vector__0_719, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max_element", 1167, G__vector__0_720, 117, G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__vector__0_721, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first1 u 'vector<double,allocator<double> >::iterator' - 0 - last1 "
"u 'vector<double,allocator<double> >::iterator' - 0 - first2 u 'vector<double,allocator<double> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__vector__0_722, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__vector__0_723, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >::iterator' - 0 - first u 'vector<double,allocator<double> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_724, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<void*,allocator<void*> >::iterator' - 11 - x u 'vector<void*,allocator<void*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_725, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<void*,allocator<void*> >::iterator' - 11 - x u 'vector<void*,allocator<void*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_726, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<void*,allocator<void*> >::iterator' - 11 - x u 'vector<void*,allocator<void*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_727, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<void*,allocator<void*> >::iterator' - 11 - x u 'vector<void*,allocator<void*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_728, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<void*,allocator<void*> >::iterator' - 11 - x u 'vector<void*,allocator<void*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_729, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<void*,allocator<void*> >::iterator' - 11 - x u 'vector<void*,allocator<void*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__vector__0_730, 108, -1, G__defined_typename("difference_type"), 0, 2, 1, 1, 8, 
"u 'vector<void*,allocator<void*> >::iterator' - 11 - x u 'vector<void*,allocator<void*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__vector__0_731, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 8, 
"l - 'difference_type' 10 - x u 'vector<void*,allocator<void*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_732, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<void*,allocator<void*> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<void*,allocator<void*> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_733, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<void*,allocator<void*> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<void*,allocator<void*> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_734, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >' - 11 - x u 'vector<void*,allocator<void*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_735, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >' - 11 - x u 'vector<void*,allocator<void*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_736, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >' - 11 - x u 'vector<void*,allocator<void*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_737, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >' - 11 - x u 'vector<void*,allocator<void*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_738, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >' - 11 - x u 'vector<void*,allocator<void*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_739, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >' - 11 - x u 'vector<void*,allocator<void*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__vector__0_740, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last "
"Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__vector__0_741, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first1 u 'vector<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first2 u 'vector<void*,allocator<void*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__vector__0_742, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first1 u 'vector<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first2 u 'vector<void*,allocator<void*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__vector__0_743, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__vector__0_744, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last "
"Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__vector__0_745, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first1 u 'vector<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__vector__0_746, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first1 u 'vector<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first2 u 'vector<void*,allocator<void*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search_n", 835, G__vector__0_747, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last "
"h - 'size_type' 0 - count Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__vector__0_748, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__vector__0_749, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap", 443, G__vector__0_750, 121, -1, -1, 0, 2, 1, 1, 0, 
"Y - - 1 - a Y - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__vector__0_751, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first1 u 'vector<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__vector__0_752, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - a u 'vector<void*,allocator<void*> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace", 732, G__vector__0_753, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last "
"Y - - 41 - old_value Y - - 41 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__vector__0_754, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - result Y - - 41 - old_value "
"Y - - 41 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__vector__0_755, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last "
"Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__vector__0_756, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first h - 'size_type' 0 - n "
"Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__vector__0_757, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last "
"Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__vector__0_758, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - result Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__vector__0_759, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__vector__0_760, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__vector__0_761, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__vector__0_762, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__vector__0_763, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - mid "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__vector__0_764, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - mid "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - last u 'vector<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__vector__0_765, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__vector__0_766, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__vector__0_767, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__vector__0_768, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - mid "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__vector__0_769, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - result_first u 'vector<void*,allocator<void*> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__vector__0_770, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - nth "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__vector__0_771, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last "
"Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__vector__0_772, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last "
"Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__vector__0_773, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last "
"Y - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__vector__0_774, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first1 u 'vector<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first2 u 'vector<void*,allocator<void*> >::iterator' - 0 - last2 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__vector__0_775, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - middle "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__vector__0_776, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first1 u 'vector<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first2 u 'vector<void*,allocator<void*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__vector__0_777, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first1 u 'vector<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first2 u 'vector<void*,allocator<void*> >::iterator' - 0 - last2 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__vector__0_778, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first1 u 'vector<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first2 u 'vector<void*,allocator<void*> >::iterator' - 0 - last2 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__vector__0_779, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first1 u 'vector<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first2 u 'vector<void*,allocator<void*> >::iterator' - 0 - last2 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__vector__0_780, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first1 u 'vector<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first2 u 'vector<void*,allocator<void*> >::iterator' - 0 - last2 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("push_heap", 957, G__vector__0_781, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__vector__0_782, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__vector__0_783, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__vector__0_784, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__vector__0_785, 89, -1, -1, 1, 2, 1, 1, 4, 
"Y - - 41 - a Y - - 41 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__vector__0_786, 89, -1, -1, 1, 2, 1, 1, 4, 
"Y - - 41 - a Y - - 41 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min_element", 1165, G__vector__0_787, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max_element", 1167, G__vector__0_788, 117, G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__vector__0_789, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first1 u 'vector<void*,allocator<void*> >::iterator' - 0 - last1 "
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first2 u 'vector<void*,allocator<void*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__vector__0_790, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__vector__0_791, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<void*,allocator<void*> >::iterator' - 0 - first u 'vector<void*,allocator<void*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_792, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<char*,allocator<char*> >::iterator' - 11 - x u 'vector<char*,allocator<char*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_793, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<char*,allocator<char*> >::iterator' - 11 - x u 'vector<char*,allocator<char*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_794, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<char*,allocator<char*> >::iterator' - 11 - x u 'vector<char*,allocator<char*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_795, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<char*,allocator<char*> >::iterator' - 11 - x u 'vector<char*,allocator<char*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_796, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<char*,allocator<char*> >::iterator' - 11 - x u 'vector<char*,allocator<char*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_797, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<char*,allocator<char*> >::iterator' - 11 - x u 'vector<char*,allocator<char*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__vector__0_798, 108, -1, G__defined_typename("difference_type"), 0, 2, 1, 1, 8, 
"u 'vector<char*,allocator<char*> >::iterator' - 11 - x u 'vector<char*,allocator<char*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__vector__0_799, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 8, 
"l - 'difference_type' 10 - x u 'vector<char*,allocator<char*> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_800, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<char*,allocator<char*> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<char*,allocator<char*> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_801, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<char*,allocator<char*> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<char*,allocator<char*> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__vector__0_802, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >' - 11 - x u 'vector<char*,allocator<char*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__vector__0_803, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >' - 11 - x u 'vector<char*,allocator<char*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__vector__0_804, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >' - 11 - x u 'vector<char*,allocator<char*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__vector__0_805, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >' - 11 - x u 'vector<char*,allocator<char*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__vector__0_806, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >' - 11 - x u 'vector<char*,allocator<char*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__vector__0_807, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >' - 11 - x u 'vector<char*,allocator<char*> >' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find", 417, G__vector__0_808, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last "
"C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_end", 823, G__vector__0_809, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first1 u 'vector<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first2 u 'vector<char*,allocator<char*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("find_first_of", 1372, G__vector__0_810, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first1 u 'vector<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first2 u 'vector<char*,allocator<char*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("adjacent_find", 1338, G__vector__0_811, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("count", 553, G__vector__0_812, 108, -1, G__defined_typename("difference_type"), 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last "
"C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("equal", 536, G__vector__0_813, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first1 u 'vector<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("search", 630, G__vector__0_814, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first1 u 'vector<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first2 u 'vector<char*,allocator<char*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func8() {
   G__memfunc_setup("search_n", 835, G__vector__0_815, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last "
"h - 'size_type' 0 - count C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy", 443, G__vector__0_816, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("copy_backward", 1369, G__vector__0_817, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap", 443, G__vector__0_818, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 1 - a C - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("swap_ranges", 1178, G__vector__0_819, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first1 u 'vector<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("iter_swap", 974, G__vector__0_820, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - a u 'vector<char*,allocator<char*> >::iterator' - 0 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace", 732, G__vector__0_821, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last "
"C - - 41 - old_value C - - 41 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("replace_copy", 1270, G__vector__0_822, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - result C - - 41 - old_value "
"C - - 41 - new_value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill", 423, G__vector__0_823, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last "
"C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fill_n", 628, G__vector__0_824, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first h - 'size_type' 0 - n "
"C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove", 654, G__vector__0_825, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last "
"C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("remove_copy", 1192, G__vector__0_826, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - result C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique", 663, G__vector__0_827, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("unique_copy", 1201, G__vector__0_828, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse", 764, G__vector__0_829, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("reverse_copy", 1302, G__vector__0_830, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate", 655, G__vector__0_831, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - mid "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rotate_copy", 1193, G__vector__0_832, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - mid "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - last u 'vector<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("random_shuffle", 1485, G__vector__0_833, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort", 456, G__vector__0_834, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stable_sort", 1186, G__vector__0_835, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort", 1300, G__vector__0_836, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - mid "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("partial_sort_copy", 1838, G__vector__0_837, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 4, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - result_first u 'vector<char*,allocator<char*> >::iterator' - 0 - result_last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nth_element", 1171, G__vector__0_838, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - nth "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lower_bound", 1184, G__vector__0_839, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last "
"C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("upper_bound", 1187, G__vector__0_840, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last "
"C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("binary_search", 1370, G__vector__0_841, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last "
"C - - 41 - value", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("merge", 528, G__vector__0_842, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first1 u 'vector<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first2 u 'vector<char*,allocator<char*> >::iterator' - 0 - last2 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("inplace_merge", 1355, G__vector__0_843, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - middle "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("includes", 855, G__vector__0_844, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first1 u 'vector<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first2 u 'vector<char*,allocator<char*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_union", 980, G__vector__0_845, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first1 u 'vector<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first2 u 'vector<char*,allocator<char*> >::iterator' - 0 - last2 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_intersection", 1730, G__vector__0_846, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first1 u 'vector<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first2 u 'vector<char*,allocator<char*> >::iterator' - 0 - last2 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_difference", 1462, G__vector__0_847, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first1 u 'vector<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first2 u 'vector<char*,allocator<char*> >::iterator' - 0 - last2 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("set_symmetric_difference", 2546, G__vector__0_848, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 5, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first1 u 'vector<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first2 u 'vector<char*,allocator<char*> >::iterator' - 0 - last2 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - result", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("push_heap", 957, G__vector__0_849, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop_heap", 844, G__vector__0_850, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("make_heap", 923, G__vector__0_851, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("sort_heap", 965, G__vector__0_852, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min", 324, G__vector__0_853, 67, -1, -1, 1, 2, 1, 1, 4, 
"C - - 41 - a C - - 41 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max", 326, G__vector__0_854, 67, -1, -1, 1, 2, 1, 1, 4, 
"C - - 41 - a C - - 41 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("min_element", 1165, G__vector__0_855, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("max_element", 1167, G__vector__0_856, 117, G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lexicographical_compare", 2421, G__vector__0_857, 103, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first1 u 'vector<char*,allocator<char*> >::iterator' - 0 - last1 "
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first2 u 'vector<char*,allocator<char*> >::iterator' - 0 - last2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next_permutation", 1750, G__vector__0_858, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("prev_permutation", 1748, G__vector__0_859, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char*,allocator<char*> >::iterator' - 0 - first u 'vector<char*,allocator<char*> >::iterator' - 0 - last", (char*) NULL
, (void*) NULL, 0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_func() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__LN_allocatorlEchargR = { "allocator<char>" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEcharcOallocatorlEchargRsPgR = { "vector<char,allocator<char> >" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator = { "vector<char,allocator<char> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR = { "reverse_iterator<vector<char,allocator<char> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LN_allocatorlEshortgR = { "allocator<short>" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator = { "vector<short,allocator<short> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<short,allocator<short> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LN_allocatorlElonggR = { "allocator<long>" , 99 , -1 };
G__linked_taginfo G__LN_vectorlElongcOallocatorlElonggRsPgR = { "vector<long,allocator<long> >" , 99 , -1 };
G__linked_taginfo G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator = { "vector<long,allocator<long> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR = { "reverse_iterator<vector<long,allocator<long> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LN_allocatorlEunsignedsPchargR = { "allocator<unsigned char>" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR = { "vector<unsigned char,allocator<unsigned char> >" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator = { "vector<unsigned char,allocator<unsigned char> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LN_allocatorlEunsignedsPshortgR = { "allocator<unsigned short>" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator = { "vector<unsigned short,allocator<unsigned short> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LN_allocatorlEunsignedsPintgR = { "allocator<unsigned int>" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator = { "vector<unsigned int,allocator<unsigned int> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LN_allocatorlEunsignedsPlonggR = { "allocator<unsigned long>" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR = { "vector<unsigned long,allocator<unsigned long> >" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator = { "vector<unsigned long,allocator<unsigned long> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LN_allocatorlEfloatgR = { "allocator<float>" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator = { "vector<float,allocator<float> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<float,allocator<float> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LN_allocatorlEdoublegR = { "allocator<double>" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator = { "vector<double,allocator<double> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<double,allocator<double> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LN_allocatorlEvoidmUgR = { "allocator<void*>" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR = { "vector<void*,allocator<void*> >" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator = { "vector<void*,allocator<void*> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<void*,allocator<void*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LN_allocatorlEcharmUgR = { "allocator<char*>" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR = { "vector<char*,allocator<char*> >" , 99 , -1 };
G__linked_taginfo G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator = { "vector<char*,allocator<char*> >::iterator" , 99 , -1 };
G__linked_taginfo G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<char*,allocator<char*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtable() {
  G__LN_allocatorlEchargR.tagnum = -1 ;
  G__LN_vectorlEcharcOallocatorlEchargRsPgR.tagnum = -1 ;
  G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LN_allocatorlEshortgR.tagnum = -1 ;
  G__LN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LN_allocatorlElonggR.tagnum = -1 ;
  G__LN_vectorlElongcOallocatorlElonggRsPgR.tagnum = -1 ;
  G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LN_allocatorlEunsignedsPchargR.tagnum = -1 ;
  G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR.tagnum = -1 ;
  G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LN_allocatorlEunsignedsPshortgR.tagnum = -1 ;
  G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LN_allocatorlEunsignedsPintgR.tagnum = -1 ;
  G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LN_allocatorlEunsignedsPlonggR.tagnum = -1 ;
  G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR.tagnum = -1 ;
  G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LN_allocatorlEfloatgR.tagnum = -1 ;
  G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LN_allocatorlEdoublegR.tagnum = -1 ;
  G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LN_allocatorlEvoidmUgR.tagnum = -1 ;
  G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR.tagnum = -1 ;
  G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LN_allocatorlEcharmUgR.tagnum = -1 ;
  G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR.tagnum = -1 ;
  G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtable() {

   /* Setting up class,struct,union tag entry */
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlEchargR),sizeof(allocator<char>),-1,1792,(char*)NULL,G__setup_memvarallocatorlEchargR,G__setup_memfuncallocatorlEchargR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgR),sizeof(vector<char,allocator<char> >),-1,36608,(char*)NULL,G__setup_memvarvectorlEcharcOallocatorlEchargRsPgR,G__setup_memfuncvectorlEcharcOallocatorlEchargRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator),sizeof(vector<char,allocator<char> >::iterator),-1,35072,(char*)NULL,G__setup_memvarvectorlEcharcOallocatorlEchargRsPgRcLcLiterator,G__setup_memfuncvectorlEcharcOallocatorlEchargRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR),sizeof(reverse_iterator<vector<char,allocator<char> >::iterator>),-1,256,(char*)NULL,G__setup_memvarreverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR,G__setup_memfuncreverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlEshortgR),sizeof(allocator<short>),-1,1792,(char*)NULL,G__setup_memvarallocatorlEshortgR,G__setup_memfuncallocatorlEshortgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgR),sizeof(vector<short,allocator<short> >),-1,36608,(char*)NULL,G__setup_memvarvectorlEshortcOallocatorlEshortgRsPgR,G__setup_memfuncvectorlEshortcOallocatorlEshortgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator),sizeof(vector<short,allocator<short> >::iterator),-1,35072,(char*)NULL,G__setup_memvarvectorlEshortcOallocatorlEshortgRsPgRcLcLiterator,G__setup_memfuncvectorlEshortcOallocatorlEshortgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR),sizeof(reverse_iterator<vector<short,allocator<short> >::iterator>),-1,256,(char*)NULL,G__setup_memvarreverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR,G__setup_memfuncreverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlElonggR),sizeof(allocator<long>),-1,1792,(char*)NULL,G__setup_memvarallocatorlElonggR,G__setup_memfuncallocatorlElonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgR),sizeof(vector<long,allocator<long> >),-1,36608,(char*)NULL,G__setup_memvarvectorlElongcOallocatorlElonggRsPgR,G__setup_memfuncvectorlElongcOallocatorlElonggRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlElongcOallocatorlElonggRsPgRcLcLiterator),sizeof(vector<long,allocator<long> >::iterator),-1,35072,(char*)NULL,G__setup_memvarvectorlElongcOallocatorlElonggRsPgRcLcLiterator,G__setup_memfuncvectorlElongcOallocatorlElonggRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR),sizeof(reverse_iterator<vector<long,allocator<long> >::iterator>),-1,256,(char*)NULL,G__setup_memvarreverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR,G__setup_memfuncreverse_iteratorlEvectorlElongcOallocatorlElonggRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPchargR),sizeof(allocator<unsigned char>),-1,1792,(char*)NULL,G__setup_memvarallocatorlEunsignedsPchargR,G__setup_memfuncallocatorlEunsignedsPchargR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR),sizeof(vector<unsigned char,allocator<unsigned char> >),-1,36608,(char*)NULL,G__setup_memvarvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR,G__setup_memfuncvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator),sizeof(vector<unsigned char,allocator<unsigned char> >::iterator),-1,35072,(char*)NULL,G__setup_memvarvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator,G__setup_memfuncvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR),sizeof(reverse_iterator<vector<unsigned char,allocator<unsigned char> >::iterator>),-1,256,(char*)NULL,G__setup_memvarreverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR,G__setup_memfuncreverse_iteratorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPshortgR),sizeof(allocator<unsigned short>),-1,1792,(char*)NULL,G__setup_memvarallocatorlEunsignedsPshortgR,G__setup_memfuncallocatorlEunsignedsPshortgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),sizeof(vector<unsigned short,allocator<unsigned short> >),-1,36608,(char*)NULL,G__setup_memvarvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR,G__setup_memfuncvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator),sizeof(vector<unsigned short,allocator<unsigned short> >::iterator),-1,35072,(char*)NULL,G__setup_memvarvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator,G__setup_memfuncvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR),sizeof(reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>),-1,256,(char*)NULL,G__setup_memvarreverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR,G__setup_memfuncreverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPintgR),sizeof(allocator<unsigned int>),-1,1792,(char*)NULL,G__setup_memvarallocatorlEunsignedsPintgR,G__setup_memfuncallocatorlEunsignedsPintgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),sizeof(vector<unsigned int,allocator<unsigned int> >),-1,36608,(char*)NULL,G__setup_memvarvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR,G__setup_memfuncvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator),sizeof(vector<unsigned int,allocator<unsigned int> >::iterator),-1,35072,(char*)NULL,G__setup_memvarvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator,G__setup_memfuncvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),sizeof(reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>),-1,256,(char*)NULL,G__setup_memvarreverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR,G__setup_memfuncreverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlEunsignedsPlonggR),sizeof(allocator<unsigned long>),-1,1792,(char*)NULL,G__setup_memvarallocatorlEunsignedsPlonggR,G__setup_memfuncallocatorlEunsignedsPlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),sizeof(vector<unsigned long,allocator<unsigned long> >),-1,36608,(char*)NULL,G__setup_memvarvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR,G__setup_memfuncvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator),sizeof(vector<unsigned long,allocator<unsigned long> >::iterator),-1,35072,(char*)NULL,G__setup_memvarvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator,G__setup_memfuncvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR),sizeof(reverse_iterator<vector<unsigned long,allocator<unsigned long> >::iterator>),-1,256,(char*)NULL,G__setup_memvarreverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR,G__setup_memfuncreverse_iteratorlEvectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlEfloatgR),sizeof(allocator<float>),-1,1792,(char*)NULL,G__setup_memvarallocatorlEfloatgR,G__setup_memfuncallocatorlEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgR),sizeof(vector<float,allocator<float> >),-1,36608,(char*)NULL,G__setup_memvarvectorlEfloatcOallocatorlEfloatgRsPgR,G__setup_memfuncvectorlEfloatcOallocatorlEfloatgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator),sizeof(vector<float,allocator<float> >::iterator),-1,35072,(char*)NULL,G__setup_memvarvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator,G__setup_memfuncvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),sizeof(reverse_iterator<vector<float,allocator<float> >::iterator>),-1,256,(char*)NULL,G__setup_memvarreverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR,G__setup_memfuncreverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlEdoublegR),sizeof(allocator<double>),-1,1792,(char*)NULL,G__setup_memvarallocatorlEdoublegR,G__setup_memfuncallocatorlEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgR),sizeof(vector<double,allocator<double> >),-1,36608,(char*)NULL,G__setup_memvarvectorlEdoublecOallocatorlEdoublegRsPgR,G__setup_memfuncvectorlEdoublecOallocatorlEdoublegRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator),sizeof(vector<double,allocator<double> >::iterator),-1,35072,(char*)NULL,G__setup_memvarvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator,G__setup_memfuncvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),sizeof(reverse_iterator<vector<double,allocator<double> >::iterator>),-1,256,(char*)NULL,G__setup_memvarreverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR,G__setup_memfuncreverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlEvoidmUgR),sizeof(allocator<void*>),-1,1792,(char*)NULL,G__setup_memvarallocatorlEvoidmUgR,G__setup_memfuncallocatorlEvoidmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR),sizeof(vector<void*,allocator<void*> >),-1,36608,(char*)NULL,G__setup_memvarvectorlEvoidmUcOallocatorlEvoidmUgRsPgR,G__setup_memfuncvectorlEvoidmUcOallocatorlEvoidmUgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator),sizeof(vector<void*,allocator<void*> >::iterator),-1,35072,(char*)NULL,G__setup_memvarvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator,G__setup_memfuncvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR),sizeof(reverse_iterator<vector<void*,allocator<void*> >::iterator>),-1,256,(char*)NULL,G__setup_memvarreverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR,G__setup_memfuncreverse_iteratorlEvectorlEvoidmUcOallocatorlEvoidmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_allocatorlEcharmUgR),sizeof(allocator<char*>),-1,1792,(char*)NULL,G__setup_memvarallocatorlEcharmUgR,G__setup_memfuncallocatorlEcharmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgR),sizeof(vector<char*,allocator<char*> >),-1,36608,(char*)NULL,G__setup_memvarvectorlEcharmUcOallocatorlEcharmUgRsPgR,G__setup_memfuncvectorlEcharmUcOallocatorlEcharmUgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_vectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator),sizeof(vector<char*,allocator<char*> >::iterator),-1,35072,(char*)NULL,G__setup_memvarvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator,G__setup_memfuncvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum(&G__LN_reverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR),sizeof(reverse_iterator<vector<char*,allocator<char*> >::iterator>),-1,256,(char*)NULL,G__setup_memvarreverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR,G__setup_memfuncreverse_iteratorlEvectorlEcharmUcOallocatorlEcharmUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setup(void) {
  G__check_setup_version(30051515,"G__cpp_setup()");
  G__set_cpp_environment();
  G__cpp_setup_tagtable();

  G__cpp_setup_inheritance();

  G__cpp_setup_typetable();

  G__cpp_setup_memvar();

  G__cpp_setup_memfunc();
  G__cpp_setup_global();
  G__cpp_setup_func();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunc();
  return;
}
class G__cpp_setup_init {
  public:
    G__cpp_setup_init() { G__add_setup_func("G__Default",(G__incsetup)(&G__cpp_setup)); }
   ~G__cpp_setup_init() { G__remove_setup_func("G__Default"); }
};
G__cpp_setup_init G__cpp_setup_initializer;

