/********************************************************************
* cint/cint/lib/dll_stl/G__cpp_climits.h
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************************/
#ifdef __CINT__
#error cint/cint/lib/dll_stl/G__cpp_climits.h/C is only for compilation. Abort cint.
#endif
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#define G__ANSIHEADER
#define G__DICTIONARY
#define G__PRIVATE_GVALUE
#include "G__ci.h"
extern "C" {
extern void G__cpp_setup_tagtable();
extern void G__cpp_setup_inheritance();
extern void G__cpp_setup_typetable();
extern void G__cpp_setup_memvar();
extern void G__cpp_setup_global();
extern void G__cpp_setup_memfunc();
extern void G__cpp_setup_func();
extern void G__set_cpp_environment();
}


#include "cint/cint/lib/dll_stl/clim.h"
#include "cint/cint/inc/cintdictversion.h"
#include <algorithm>
namespace std { }
using namespace std;

#ifndef G__MEMFUNCBODY
#endif

extern G__linked_taginfo G__LN_float_round_style;
extern G__linked_taginfo G__LN_float_denorm_style;
extern G__linked_taginfo G__LN_numeric_limitslEboolgR;
extern G__linked_taginfo G__LN_numeric_limitslEchargR;
extern G__linked_taginfo G__LN_numeric_limitslEsignedsPchargR;
extern G__linked_taginfo G__LN_numeric_limitslEunsignedsPchargR;
extern G__linked_taginfo G__LN_numeric_limitslEunsignedsPintgR;
extern G__linked_taginfo G__LN_numeric_limitslEshortgR;
extern G__linked_taginfo G__LN_numeric_limitslEintgR;
extern G__linked_taginfo G__LN_numeric_limitslElonggR;
extern G__linked_taginfo G__LN_numeric_limitslEunsignedsPshortgR;
extern G__linked_taginfo G__LN_numeric_limitslEunsignedsPlonggR;
extern G__linked_taginfo G__LN_numeric_limitslEfloatgR;
extern G__linked_taginfo G__LN_numeric_limitslEdoublegR;
extern G__linked_taginfo G__LN_numeric_limitslElongsPdoublegR;

/* STUB derived class for protected member access */
typedef numeric_limits<bool> G__numeric_limitslEboolgR;
typedef numeric_limits<char> G__numeric_limitslEchargR;
typedef numeric_limits<signed char> G__numeric_limitslEsignedsPchargR;
typedef numeric_limits<unsigned char> G__numeric_limitslEunsignedsPchargR;
typedef numeric_limits<unsigned int> G__numeric_limitslEunsignedsPintgR;
typedef numeric_limits<short> G__numeric_limitslEshortgR;
typedef numeric_limits<int> G__numeric_limitslEintgR;
typedef numeric_limits<long> G__numeric_limitslElonggR;
typedef numeric_limits<unsigned short> G__numeric_limitslEunsignedsPshortgR;
typedef numeric_limits<unsigned long> G__numeric_limitslEunsignedsPlonggR;
typedef numeric_limits<float> G__numeric_limitslEfloatgR;
typedef numeric_limits<double> G__numeric_limitslEdoublegR;
typedef numeric_limits<long double> G__numeric_limitslElongsPdoublegR;
