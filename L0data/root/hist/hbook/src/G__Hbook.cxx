//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:50:31 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__Hbook.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void THbookBranch_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_THbookBranch(void *p = 0);
   static void *newArray_THbookBranch(Long_t size, void *p);
   static void delete_THbookBranch(void *p);
   static void deleteArray_THbookBranch(void *p);
   static void destruct_THbookBranch(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THbookBranch*)
   {
      ::THbookBranch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THbookBranch >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THbookBranch", ::THbookBranch::Class_Version(), "include/THbookBranch.h", 28,
                  typeid(::THbookBranch), DefineBehavior(ptr, ptr),
                  &::THbookBranch::Dictionary, isa_proxy, 4,
                  sizeof(::THbookBranch) );
      instance.SetNew(&new_THbookBranch);
      instance.SetNewArray(&newArray_THbookBranch);
      instance.SetDelete(&delete_THbookBranch);
      instance.SetDeleteArray(&deleteArray_THbookBranch);
      instance.SetDestructor(&destruct_THbookBranch);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THbookBranch*)
   {
      return GenerateInitInstanceLocal((::THbookBranch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THbookBranch*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void THbookFile_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_THbookFile(void *p = 0);
   static void *newArray_THbookFile(Long_t size, void *p);
   static void delete_THbookFile(void *p);
   static void deleteArray_THbookFile(void *p);
   static void destruct_THbookFile(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THbookFile*)
   {
      ::THbookFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THbookFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THbookFile", ::THbookFile::Class_Version(), "include/THbookFile.h", 31,
                  typeid(::THbookFile), DefineBehavior(ptr, ptr),
                  &::THbookFile::Dictionary, isa_proxy, 4,
                  sizeof(::THbookFile) );
      instance.SetNew(&new_THbookFile);
      instance.SetNewArray(&newArray_THbookFile);
      instance.SetDelete(&delete_THbookFile);
      instance.SetDeleteArray(&deleteArray_THbookFile);
      instance.SetDestructor(&destruct_THbookFile);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THbookFile*)
   {
      return GenerateInitInstanceLocal((::THbookFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THbookFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void THbookKey_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_THbookKey(void *p = 0);
   static void *newArray_THbookKey(Long_t size, void *p);
   static void delete_THbookKey(void *p);
   static void deleteArray_THbookKey(void *p);
   static void destruct_THbookKey(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THbookKey*)
   {
      ::THbookKey *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THbookKey >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THbookKey", ::THbookKey::Class_Version(), "include/THbookKey.h", 28,
                  typeid(::THbookKey), DefineBehavior(ptr, ptr),
                  &::THbookKey::Dictionary, isa_proxy, 4,
                  sizeof(::THbookKey) );
      instance.SetNew(&new_THbookKey);
      instance.SetNewArray(&newArray_THbookKey);
      instance.SetDelete(&delete_THbookKey);
      instance.SetDeleteArray(&deleteArray_THbookKey);
      instance.SetDestructor(&destruct_THbookKey);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THbookKey*)
   {
      return GenerateInitInstanceLocal((::THbookKey*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THbookKey*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void THbookTree_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_THbookTree(void *p = 0);
   static void *newArray_THbookTree(Long_t size, void *p);
   static void delete_THbookTree(void *p);
   static void deleteArray_THbookTree(void *p);
   static void destruct_THbookTree(void *p);
   static void directoryAutoAdd_THbookTree(void *p, TDirectory *dir);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THbookTree*)
   {
      ::THbookTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THbookTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THbookTree", ::THbookTree::Class_Version(), "include/THbookTree.h", 34,
                  typeid(::THbookTree), DefineBehavior(ptr, ptr),
                  &::THbookTree::Dictionary, isa_proxy, 4,
                  sizeof(::THbookTree) );
      instance.SetNew(&new_THbookTree);
      instance.SetNewArray(&newArray_THbookTree);
      instance.SetDelete(&delete_THbookTree);
      instance.SetDeleteArray(&deleteArray_THbookTree);
      instance.SetDestructor(&destruct_THbookTree);
      instance.SetDirectoryAutoAdd(&directoryAutoAdd_THbookTree);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THbookTree*)
   {
      return GenerateInitInstanceLocal((::THbookTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THbookTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *THbookBranch::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THbookBranch::Class_Name()
{
   return "THbookBranch";
}

//______________________________________________________________________________
const char *THbookBranch::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THbookBranch*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THbookBranch::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THbookBranch*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THbookBranch::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THbookBranch*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THbookBranch::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THbookBranch*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THbookFile::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THbookFile::Class_Name()
{
   return "THbookFile";
}

//______________________________________________________________________________
const char *THbookFile::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THbookFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THbookFile::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THbookFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THbookFile::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THbookFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THbookFile::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THbookFile*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THbookKey::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THbookKey::Class_Name()
{
   return "THbookKey";
}

//______________________________________________________________________________
const char *THbookKey::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THbookKey*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THbookKey::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THbookKey*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THbookKey::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THbookKey*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THbookKey::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THbookKey*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THbookTree::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THbookTree::Class_Name()
{
   return "THbookTree";
}

//______________________________________________________________________________
const char *THbookTree::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THbookTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THbookTree::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THbookTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THbookTree::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THbookTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THbookTree::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THbookTree*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void THbookFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class THbookFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THbookFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(THbookFile::Class(),this);
   }
}

//______________________________________________________________________________
void THbookFile::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THbookFile.
      TClass *R__cl = ::THbookFile::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fLun", &fLun);
      R__insp.Inspect(R__cl, R__parent, "fLrecl", &fLrecl);
      R__insp.Inspect(R__cl, R__parent, "*fList", &fList);
      R__insp.Inspect(R__cl, R__parent, "*fKeys", &fKeys);
      R__insp.Inspect(R__cl, R__parent, "fCurDir", &fCurDir);
      fCurDir.ShowMembers(R__insp, strcat(R__parent,"fCurDir.")); R__parent[R__ncp] = 0;
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_THbookFile(void *p) {
      return  p ? new(p) ::THbookFile : new ::THbookFile;
   }
   static void *newArray_THbookFile(Long_t nElements, void *p) {
      return p ? new(p) ::THbookFile[nElements] : new ::THbookFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_THbookFile(void *p) {
      delete ((::THbookFile*)p);
   }
   static void deleteArray_THbookFile(void *p) {
      delete [] ((::THbookFile*)p);
   }
   static void destruct_THbookFile(void *p) {
      typedef ::THbookFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THbookFile

//______________________________________________________________________________
void THbookTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class THbookTree.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THbookTree::Class(),this);
   } else {
      R__b.WriteClassBuffer(THbookTree::Class(),this);
   }
}

//______________________________________________________________________________
void THbookTree::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THbookTree.
      TClass *R__cl = ::THbookTree::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fID", &fID);
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      R__insp.Inspect(R__cl, R__parent, "*fX", &fX);
      R__insp.Inspect(R__cl, R__parent, "fInit", &fInit);
      R__insp.Inspect(R__cl, R__parent, "*fFile", &fFile);
      TTree::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_THbookTree(void *p) {
      return  p ? new(p) ::THbookTree : new ::THbookTree;
   }
   static void *newArray_THbookTree(Long_t nElements, void *p) {
      return p ? new(p) ::THbookTree[nElements] : new ::THbookTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_THbookTree(void *p) {
      delete ((::THbookTree*)p);
   }
   static void deleteArray_THbookTree(void *p) {
      delete [] ((::THbookTree*)p);
   }
   static void destruct_THbookTree(void *p) {
      typedef ::THbookTree current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the directory auto add.
   static void directoryAutoAdd_THbookTree(void *p, TDirectory *dir) {
      ((::THbookTree*)p)->DirectoryAutoAdd(dir);
   }
} // end of namespace ROOT for class ::THbookTree

//______________________________________________________________________________
void THbookBranch::Streamer(TBuffer &R__b)
{
   // Stream an object of class THbookBranch.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THbookBranch::Class(),this);
   } else {
      R__b.WriteClassBuffer(THbookBranch::Class(),this);
   }
}

//______________________________________________________________________________
void THbookBranch::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THbookBranch.
      TClass *R__cl = ::THbookBranch::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fBlockName", &fBlockName);
      fBlockName.ShowMembers(R__insp, strcat(R__parent,"fBlockName.")); R__parent[R__ncp] = 0;
      TBranch::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_THbookBranch(void *p) {
      return  p ? new(p) ::THbookBranch : new ::THbookBranch;
   }
   static void *newArray_THbookBranch(Long_t nElements, void *p) {
      return p ? new(p) ::THbookBranch[nElements] : new ::THbookBranch[nElements];
   }
   // Wrapper around operator delete
   static void delete_THbookBranch(void *p) {
      delete ((::THbookBranch*)p);
   }
   static void deleteArray_THbookBranch(void *p) {
      delete [] ((::THbookBranch*)p);
   }
   static void destruct_THbookBranch(void *p) {
      typedef ::THbookBranch current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THbookBranch

//______________________________________________________________________________
void THbookKey::Streamer(TBuffer &R__b)
{
   // Stream an object of class THbookKey.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THbookKey::Class(),this);
   } else {
      R__b.WriteClassBuffer(THbookKey::Class(),this);
   }
}

//______________________________________________________________________________
void THbookKey::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THbookKey.
      TClass *R__cl = ::THbookKey::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fDirectory", &fDirectory);
      R__insp.Inspect(R__cl, R__parent, "fID", &fID);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_THbookKey(void *p) {
      return  p ? new(p) ::THbookKey : new ::THbookKey;
   }
   static void *newArray_THbookKey(Long_t nElements, void *p) {
      return p ? new(p) ::THbookKey[nElements] : new ::THbookKey[nElements];
   }
   // Wrapper around operator delete
   static void delete_THbookKey(void *p) {
      delete ((::THbookKey*)p);
   }
   static void deleteArray_THbookKey(void *p) {
      delete [] ((::THbookKey*)p);
   }
   static void destruct_THbookKey(void *p) {
      typedef ::THbookKey current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THbookKey

/********************************************************
* hist/hbook/src/G__Hbook.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__Hbook();

extern "C" void G__set_cpp_environmentG__Hbook() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("THbookBranch.h");
  G__add_compiledheader("THbookFile.h");
  G__add_compiledheader("THbookKey.h");
  G__add_compiledheader("THbookTree.h");
  G__cpp_reset_tagtableG__Hbook();
}
#include <new>
extern "C" int G__cpp_dllrevG__Hbook() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* THbookBranch */
static int G__G__Hbook_121_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THbookBranch* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THbookBranch[n];
     } else {
       p = new((void*) gvp) THbookBranch[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THbookBranch;
     } else {
       p = new((void*) gvp) THbookBranch;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HbookLN_THbookBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_121_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THbookBranch* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THbookBranch(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) THbookBranch(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THbookBranch(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) THbookBranch(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THbookBranch(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) THbookBranch(
(TTree*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HbookLN_THbookBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_121_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THbookBranch* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THbookBranch(
(TBranch*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) THbookBranch(
(TBranch*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THbookBranch(
(TBranch*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) THbookBranch(
(TBranch*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THbookBranch(
(TBranch*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) THbookBranch(
(TBranch*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HbookLN_THbookBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_121_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const THbookBranch*) G__getstructoffset())->GetBlockName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_121_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THbookBranch*) G__getstructoffset())->SetBlockName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_121_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THbookBranch::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_121_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THbookBranch::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_121_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THbookBranch::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_121_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THbookBranch::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_121_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THbookBranch*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_121_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THbookBranch::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_121_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THbookBranch::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_121_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THbookBranch::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_121_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THbookBranch::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THbookBranch G__TTHbookBranch;
static int G__G__Hbook_121_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THbookBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THbookBranch*) (soff+(sizeof(THbookBranch)*i)))->~G__TTHbookBranch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THbookBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THbookBranch*) (soff))->~G__TTHbookBranch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THbookFile */
static int G__G__Hbook_156_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THbookFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THbookFile[n];
     } else {
       p = new((void*) gvp) THbookFile[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THbookFile;
     } else {
       p = new((void*) gvp) THbookFile;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HbookLN_THbookFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THbookFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THbookFile((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THbookFile((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THbookFile((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) THbookFile((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HbookLN_THbookFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((THbookFile*) G__getstructoffset())->cd((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((THbookFile*) G__getstructoffset())->cd());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((THbookFile*) G__getstructoffset())->Close((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((THbookFile*) G__getstructoffset())->Close();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((THbookFile*) G__getstructoffset())->Convert2root((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((THbookFile*) G__getstructoffset())->Convert2root((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((THbookFile*) G__getstructoffset())->Convert2root((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((THbookFile*) G__getstructoffset())->Convert2root());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THbookFile*) G__getstructoffset())->ConvertCWN((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THbookFile*) G__getstructoffset())->ConvertRWN((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THbookFile*) G__getstructoffset())->ConvertProfile((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THbookFile*) G__getstructoffset())->Convert1D((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THbookFile*) G__getstructoffset())->Convert2D((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THbookFile*) G__getstructoffset())->DeleteID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THbookFile*) G__getstructoffset())->Get((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const THbookFile*) G__getstructoffset())->GetCurDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THbookFile*) G__getstructoffset())->GetEntry((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THbookFile*) G__getstructoffset())->GetEntryBranch((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const THbookFile*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THbookFile*) G__getstructoffset())->GetList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THbookFile*) G__getstructoffset())->GetListOfKeys());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THbookFile*) G__getstructoffset())->InitLeaves((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TTreeFormula*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THbookFile*) G__getstructoffset())->IsOpen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THbookFile*) G__getstructoffset())->SetBranchAddress((Int_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THbookFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THbookFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THbookFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THbookFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THbookFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THbookFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THbookFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THbookFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_156_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THbookFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Hbook_156_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THbookFile* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THbookFile(*(THbookFile*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HbookLN_THbookFile));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THbookFile G__TTHbookFile;
static int G__G__Hbook_156_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THbookFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THbookFile*) (soff+(sizeof(THbookFile)*i)))->~G__TTHbookFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THbookFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THbookFile*) (soff))->~G__TTHbookFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Hbook_156_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THbookFile* dest = (THbookFile*) G__getstructoffset();
   *dest = *(THbookFile*) libp->para[0].ref;
   const THbookFile& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THbookKey */
static int G__G__Hbook_157_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THbookKey* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THbookKey[n];
     } else {
       p = new((void*) gvp) THbookKey[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THbookKey;
     } else {
       p = new((void*) gvp) THbookKey;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HbookLN_THbookKey));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_157_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THbookKey* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THbookKey((Int_t) G__int(libp->para[0]), (THbookFile*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) THbookKey((Int_t) G__int(libp->para[0]), (THbookFile*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HbookLN_THbookKey));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_157_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THbookKey::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_157_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THbookKey::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_157_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THbookKey::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_157_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THbookKey::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_157_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THbookKey*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_157_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THbookKey::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_157_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THbookKey::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_157_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THbookKey::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_157_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THbookKey::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Hbook_157_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THbookKey* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THbookKey(*(THbookKey*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HbookLN_THbookKey));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THbookKey G__TTHbookKey;
static int G__G__Hbook_157_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THbookKey*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THbookKey*) (soff+(sizeof(THbookKey)*i)))->~G__TTHbookKey();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THbookKey*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THbookKey*) (soff))->~G__TTHbookKey();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Hbook_157_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THbookKey* dest = (THbookKey*) G__getstructoffset();
   *dest = *(THbookKey*) libp->para[0].ref;
   const THbookKey& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THbookTree */
static int G__G__Hbook_210_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THbookTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THbookTree[n];
     } else {
       p = new((void*) gvp) THbookTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THbookTree;
     } else {
       p = new((void*) gvp) THbookTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HbookLN_THbookTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THbookTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THbookTree((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) THbookTree((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HbookLN_THbookTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THbookTree*) G__getstructoffset())->GetHbookFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THbookTree*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THbookTree*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((THbookTree*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THbookTree*) G__getstructoffset())->InitBranches((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((THbookTree*) G__getstructoffset())->MakeX((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THbookTree*) G__getstructoffset())->SetHbookFile((THbookFile*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THbookTree*) G__getstructoffset())->SetType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THbookTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THbookTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THbookTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THbookTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THbookTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THbookTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THbookTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THbookTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Hbook_210_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THbookTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THbookTree G__TTHbookTree;
static int G__G__Hbook_210_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THbookTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THbookTree*) (soff+(sizeof(THbookTree)*i)))->~G__TTHbookTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THbookTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THbookTree*) (soff))->~G__TTHbookTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* THbookBranch */

/* THbookFile */

/* THbookKey */

/* THbookTree */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Hbook {
 public:
  G__Sizep2memfuncG__Hbook(): p(&G__Sizep2memfuncG__Hbook::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Hbook::*p)();
};

size_t G__get_sizep2memfuncG__Hbook()
{
  G__Sizep2memfuncG__Hbook a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Hbook() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HbookLN_THbookBranch))) {
     THbookBranch *G__Lderived;
     G__Lderived=(THbookBranch*)0x1000;
     {
       TBranch *G__Lpbase=(TBranch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookBranch),G__get_linked_tagnum(&G__G__HbookLN_TBranch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookBranch),G__get_linked_tagnum(&G__G__HbookLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookBranch),G__get_linked_tagnum(&G__G__HbookLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookBranch),G__get_linked_tagnum(&G__G__HbookLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HbookLN_THbookFile))) {
     THbookFile *G__Lderived;
     G__Lderived=(THbookFile*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookFile),G__get_linked_tagnum(&G__G__HbookLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookFile),G__get_linked_tagnum(&G__G__HbookLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HbookLN_THbookKey))) {
     THbookKey *G__Lderived;
     G__Lderived=(THbookKey*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookKey),G__get_linked_tagnum(&G__G__HbookLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookKey),G__get_linked_tagnum(&G__G__HbookLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HbookLN_THbookTree))) {
     THbookTree *G__Lderived;
     G__Lderived=(THbookTree*)0x1000;
     {
       TTree *G__Lpbase=(TTree*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookTree),G__get_linked_tagnum(&G__G__HbookLN_TTree),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookTree),G__get_linked_tagnum(&G__G__HbookLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookTree),G__get_linked_tagnum(&G__G__HbookLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookTree),G__get_linked_tagnum(&G__G__HbookLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookTree),G__get_linked_tagnum(&G__G__HbookLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookTree),G__get_linked_tagnum(&G__G__HbookLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Hbook() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__HbookLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__HbookLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__HbookLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__HbookLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__HbookLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__HbookLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__HbookLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__HbookLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__HbookLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__HbookLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__HbookLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__HbookLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__HbookLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* THbookBranch */
static void G__setup_memvarTHbookBranch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookBranch));
   { THbookBranch *p; p=(THbookBranch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HbookLN_TString),-1,-1,2,"fBlockName=",0,"Hbook block name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HbookLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THbookFile */
static void G__setup_memvarTHbookFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookFile));
   { THbookFile *p; p=(THbookFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLun=",0,"Fortran logical unit for this file");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLrecl=",0,"Record length in Hbook machine words");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HbookLN_TList),-1,-1,2,"fList=",0,"list of objects in memory");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HbookLN_TList),-1,-1,2,"fKeys=",0,"list of Hbook keys (Ids) on disk");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HbookLN_TString),-1,-1,2,"fCurDir=",0,"name of current directory");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,2,"fgPawInit=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-2,2,"fgLuns=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HbookLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THbookKey */
static void G__setup_memvarTHbookKey(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookKey));
   { THbookKey *p; p=(THbookKey*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HbookLN_THbookFile),-1,-1,2,"fDirectory=",0,"!pointer to the Hbook file");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fID=",0,"hbook identifier");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HbookLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THbookTree */
static void G__setup_memvarTHbookTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookTree));
   { THbookTree *p; p=(THbookTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fID=",0,"Hbook identifier");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fType=",0,"RWN (0) or CWN (1)");
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,2,"fX=",0,"storage area for RWN");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fInit=",0,"flag to know if branches computed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HbookLN_THbookFile),-1,-1,2,"fFile=",0,"pointer to Hbook file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HbookLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Hbook() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTHbookBranch(void) {
   /* THbookBranch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookBranch));
   G__memfunc_setup("THbookBranch",1173,G__G__Hbook_121_0_1, 105, G__get_linked_tagnum(&G__G__HbookLN_THbookBranch), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THbookBranch",1173,G__G__Hbook_121_0_2, 105, G__get_linked_tagnum(&G__G__HbookLN_THbookBranch), -1, 0, 6, 1, 1, 0, 
"U 'TTree' - 0 - tree C - - 10 - name "
"Y - - 0 - address C - - 10 - leaflist "
"i - 'Int_t' 0 '32000' basketsize i - 'Int_t' 0 '-1' compress", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THbookBranch",1173,G__G__Hbook_121_0_3, 105, G__get_linked_tagnum(&G__G__HbookLN_THbookBranch), -1, 0, 6, 1, 1, 0, 
"U 'TBranch' - 0 - branch C - - 10 - name "
"Y - - 0 - address C - - 10 - leaflist "
"i - 'Int_t' 0 '32000' basketsize i - 'Int_t' 0 '-1' compress", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntry",818,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 '0' entry i - 'Int_t' 0 '0' getall", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBlockName",1164,G__G__Hbook_121_0_6, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAddress",1010,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - addobj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBlockName",1176,G__G__Hbook_121_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEntries",1030,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Hbook_121_0_10, 85, G__get_linked_tagnum(&G__G__HbookLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THbookBranch::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Hbook_121_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THbookBranch::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Hbook_121_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THbookBranch::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Hbook_121_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THbookBranch::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HbookLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Hbook_121_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Hbook_121_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THbookBranch::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Hbook_121_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THbookBranch::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Hbook_121_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THbookBranch::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Hbook_121_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THbookBranch::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THbookBranch", 1299, G__G__Hbook_121_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHbookFile(void) {
   /* THbookFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookFile));
   G__memfunc_setup("THbookFile",967,G__G__Hbook_156_0_1, 105, G__get_linked_tagnum(&G__G__HbookLN_THbookFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THbookFile",967,G__G__Hbook_156_0_2, 105, G__get_linked_tagnum(&G__G__HbookLN_THbookFile), -1, 0, 2, 1, 1, 0, 
"C - - 10 - fname i - 'Int_t' 0 '1024' lrecl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cd",199,G__G__Hbook_156_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 '\"\"' dirname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Close",502,G__G__Hbook_156_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Convert2root",1239,G__G__Hbook_156_0_6, 85, G__get_linked_tagnum(&G__G__HbookLN_TFile), -1, 0, 3, 1, 1, 0, 
"C - - 10 '\"\"' rootname i - 'Int_t' 0 '0' lrecl "
"C - 'Option_t' 10 '\"\"' option", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("ConvertCWN",969,G__G__Hbook_156_0_7, 85, G__get_linked_tagnum(&G__G__HbookLN_TObject), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ConvertRWN",984,G__G__Hbook_156_0_8, 85, G__get_linked_tagnum(&G__G__HbookLN_TObject), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ConvertProfile",1458,G__G__Hbook_156_0_9, 85, G__get_linked_tagnum(&G__G__HbookLN_TObject), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Convert1D",854,G__G__Hbook_156_0_10, 85, G__get_linked_tagnum(&G__G__HbookLN_TObject), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Convert2D",855,G__G__Hbook_156_0_11, 85, G__get_linked_tagnum(&G__G__HbookLN_TObject), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeleteID",736,G__G__Hbook_156_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindObject",984,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HbookLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindObject",984,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HbookLN_TObject), -1, 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Get",288,G__G__Hbook_156_0_15, 85, G__get_linked_tagnum(&G__G__HbookLN_TObject), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurDir",873,G__G__Hbook_156_0_16, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntry",818,G__G__Hbook_156_0_17, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - entry i - 'Int_t' 0 - id "
"i - 'Int_t' 0 - atype F - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntryBranch",1408,G__G__Hbook_156_0_18, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - entry i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__G__Hbook_156_0_19, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetList",700,G__G__Hbook_156_0_20, 85, G__get_linked_tagnum(&G__G__HbookLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfKeys",1293,G__G__Hbook_156_0_21, 85, G__get_linked_tagnum(&G__G__HbookLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitLeaves",1012,G__G__Hbook_156_0_22, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - id i - 'Int_t' 0 - var "
"U 'TTreeFormula' - 0 - formula", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsOpen",590,G__G__Hbook_156_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - - 10 '\"\"' path", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBranchAddress",1600,G__G__Hbook_156_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - id C - - 10 - bname "
"Y - - 0 - add", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Hbook_156_0_27, 85, G__get_linked_tagnum(&G__G__HbookLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THbookFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Hbook_156_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THbookFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Hbook_156_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THbookFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Hbook_156_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THbookFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HbookLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Hbook_156_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Hbook_156_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THbookFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Hbook_156_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THbookFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Hbook_156_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THbookFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Hbook_156_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THbookFile::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THbookFile", 967, G__G__Hbook_156_0_39, (int) ('i'), G__get_linked_tagnum(&G__G__HbookLN_THbookFile), -1, 0, 1, 1, 1, 0, "u 'THbookFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THbookFile", 1093, G__G__Hbook_156_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Hbook_156_0_41, (int) ('u'), G__get_linked_tagnum(&G__G__HbookLN_THbookFile), -1, 1, 1, 1, 1, 0, "u 'THbookFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHbookKey(void) {
   /* THbookKey */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookKey));
   G__memfunc_setup("THbookKey",880,G__G__Hbook_157_0_1, 105, G__get_linked_tagnum(&G__G__HbookLN_THbookKey), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THbookKey",880,G__G__Hbook_157_0_2, 105, G__get_linked_tagnum(&G__G__HbookLN_THbookKey), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - id U 'THbookFile' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Hbook_157_0_5, 85, G__get_linked_tagnum(&G__G__HbookLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THbookKey::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Hbook_157_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THbookKey::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Hbook_157_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THbookKey::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Hbook_157_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THbookKey::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HbookLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Hbook_157_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Hbook_157_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THbookKey::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Hbook_157_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THbookKey::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Hbook_157_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THbookKey::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Hbook_157_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THbookKey::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THbookKey", 880, G__G__Hbook_157_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__HbookLN_THbookKey), -1, 0, 1, 1, 1, 0, "u 'THbookKey' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THbookKey", 1006, G__G__Hbook_157_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Hbook_157_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__HbookLN_THbookKey), -1, 1, 1, 1, 1, 0, "u 'THbookKey' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHbookTree(void) {
   /* THbookTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookTree));
   G__memfunc_setup("THbookTree",983,G__G__Hbook_210_0_1, 105, G__get_linked_tagnum(&G__G__HbookLN_THbookTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THbookTree",983,G__G__Hbook_210_0_2, 105, G__get_linked_tagnum(&G__G__HbookLN_THbookTree), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntry",818,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 '0' entry i - 'Int_t' 0 '0' getall", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHbookFile",1171,G__G__Hbook_210_0_4, 85, G__get_linked_tagnum(&G__G__HbookLN_THbookFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__G__Hbook_210_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__G__Hbook_210_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetX",376,G__G__Hbook_210_0_7, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitBranches",1210,G__G__Hbook_210_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeX",470,G__G__Hbook_210_0_9, 67, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nvars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEntries",1030,(G__InterfaceMethod) NULL,110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 '-1' n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHbookFile",1183,G__G__Hbook_210_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'THbookFile' - 0 - file", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetType",718,G__G__Hbook_210_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - atype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Hbook_210_0_14, 85, G__get_linked_tagnum(&G__G__HbookLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THbookTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Hbook_210_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THbookTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Hbook_210_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THbookTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Hbook_210_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THbookTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HbookLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Hbook_210_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Hbook_210_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THbookTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Hbook_210_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THbookTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Hbook_210_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THbookTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Hbook_210_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THbookTree::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THbookTree", 1109, G__G__Hbook_210_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Hbook() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Hbook() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Hbook() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__HbookLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_TBrowser = { "TBrowser" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__HbookLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_THbookBranch = { "THbookBranch" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_TTreeFormula = { "TTreeFormula" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_THbookFile = { "THbookFile" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_THbookKey = { "THbookKey" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__HbookLN_THbookTree = { "THbookTree" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Hbook() {
  G__G__HbookLN_TClass.tagnum = -1 ;
  G__G__HbookLN_TBuffer.tagnum = -1 ;
  G__G__HbookLN_TMemberInspector.tagnum = -1 ;
  G__G__HbookLN_TObject.tagnum = -1 ;
  G__G__HbookLN_TNamed.tagnum = -1 ;
  G__G__HbookLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__HbookLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__HbookLN_TList.tagnum = -1 ;
  G__G__HbookLN_TBrowser.tagnum = -1 ;
  G__G__HbookLN_TString.tagnum = -1 ;
  G__G__HbookLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__HbookLN_TAttFill.tagnum = -1 ;
  G__G__HbookLN_TTree.tagnum = -1 ;
  G__G__HbookLN_TFile.tagnum = -1 ;
  G__G__HbookLN_TBranch.tagnum = -1 ;
  G__G__HbookLN_THbookBranch.tagnum = -1 ;
  G__G__HbookLN_TTreeFormula.tagnum = -1 ;
  G__G__HbookLN_THbookFile.tagnum = -1 ;
  G__G__HbookLN_THbookKey.tagnum = -1 ;
  G__G__HbookLN_TAttLine.tagnum = -1 ;
  G__G__HbookLN_TAttMarker.tagnum = -1 ;
  G__G__HbookLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__HbookLN_THbookTree.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Hbook() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__HbookLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_TList);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_TBrowser);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_TString);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_TTree);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_TBranch);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookBranch),sizeof(THbookBranch),-1,324864,"A branch for a THbookTree",G__setup_memvarTHbookBranch,G__setup_memfuncTHbookBranch);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_TTreeFormula);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookFile),sizeof(THbookFile),-1,324864,"ROOT interface to Hbook/PAW files",G__setup_memvarTHbookFile,G__setup_memfuncTHbookFile);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookKey),sizeof(THbookKey),-1,324864,"Hbook id descriptor",G__setup_memvarTHbookKey,G__setup_memfuncTHbookKey);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__G__HbookLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HbookLN_THbookTree),sizeof(THbookTree),-1,324864,"A wrapper class supporting Hbook ntuples (CWN and RWN)",G__setup_memvarTHbookTree,G__setup_memfuncTHbookTree);
}
extern "C" void G__cpp_setupG__Hbook(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Hbook()");
  G__set_cpp_environmentG__Hbook();
  G__cpp_setup_tagtableG__Hbook();

  G__cpp_setup_inheritanceG__Hbook();

  G__cpp_setup_typetableG__Hbook();

  G__cpp_setup_memvarG__Hbook();

  G__cpp_setup_memfuncG__Hbook();
  G__cpp_setup_globalG__Hbook();
  G__cpp_setup_funcG__Hbook();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Hbook();
  return;
}
class G__cpp_setup_initG__Hbook {
  public:
    G__cpp_setup_initG__Hbook() { G__add_setup_func("G__Hbook",(G__incsetup)(&G__cpp_setupG__Hbook)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Hbook() { G__remove_setup_func("G__Hbook"); }
};
G__cpp_setup_initG__Hbook G__cpp_setup_initializerG__Hbook;

