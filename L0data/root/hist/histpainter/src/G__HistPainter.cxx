//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:44:05 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__HistPainter.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TGraph2DPainter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TGraph2DPainter(void *p = 0);
   static void *newArray_TGraph2DPainter(Long_t size, void *p);
   static void delete_TGraph2DPainter(void *p);
   static void deleteArray_TGraph2DPainter(void *p);
   static void destruct_TGraph2DPainter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGraph2DPainter*)
   {
      ::TGraph2DPainter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGraph2DPainter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGraph2DPainter", ::TGraph2DPainter::Class_Version(), "include/TGraph2DPainter.h", 32,
                  typeid(::TGraph2DPainter), DefineBehavior(ptr, ptr),
                  &::TGraph2DPainter::Dictionary, isa_proxy, 0,
                  sizeof(::TGraph2DPainter) );
      instance.SetNew(&new_TGraph2DPainter);
      instance.SetNewArray(&newArray_TGraph2DPainter);
      instance.SetDelete(&delete_TGraph2DPainter);
      instance.SetDeleteArray(&deleteArray_TGraph2DPainter);
      instance.SetDestructor(&destruct_TGraph2DPainter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGraph2DPainter*)
   {
      return GenerateInitInstanceLocal((::TGraph2DPainter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGraph2DPainter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TGraphPainter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TGraphPainter(void *p = 0);
   static void *newArray_TGraphPainter(Long_t size, void *p);
   static void delete_TGraphPainter(void *p);
   static void deleteArray_TGraphPainter(void *p);
   static void destruct_TGraphPainter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGraphPainter*)
   {
      ::TGraphPainter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGraphPainter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGraphPainter", ::TGraphPainter::Class_Version(), "include/TGraphPainter.h", 31,
                  typeid(::TGraphPainter), DefineBehavior(ptr, ptr),
                  &::TGraphPainter::Dictionary, isa_proxy, 0,
                  sizeof(::TGraphPainter) );
      instance.SetNew(&new_TGraphPainter);
      instance.SetNewArray(&newArray_TGraphPainter);
      instance.SetDelete(&delete_TGraphPainter);
      instance.SetDeleteArray(&deleteArray_TGraphPainter);
      instance.SetDestructor(&destruct_TGraphPainter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGraphPainter*)
   {
      return GenerateInitInstanceLocal((::TGraphPainter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGraphPainter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPainter3dAlgorithms_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TPainter3dAlgorithms(void *p = 0);
   static void *newArray_TPainter3dAlgorithms(Long_t size, void *p);
   static void delete_TPainter3dAlgorithms(void *p);
   static void deleteArray_TPainter3dAlgorithms(void *p);
   static void destruct_TPainter3dAlgorithms(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPainter3dAlgorithms*)
   {
      ::TPainter3dAlgorithms *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPainter3dAlgorithms >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPainter3dAlgorithms", ::TPainter3dAlgorithms::Class_Version(), "include/TPainter3dAlgorithms.h", 44,
                  typeid(::TPainter3dAlgorithms), DefineBehavior(ptr, ptr),
                  &::TPainter3dAlgorithms::Dictionary, isa_proxy, 0,
                  sizeof(::TPainter3dAlgorithms) );
      instance.SetNew(&new_TPainter3dAlgorithms);
      instance.SetNewArray(&newArray_TPainter3dAlgorithms);
      instance.SetDelete(&delete_TPainter3dAlgorithms);
      instance.SetDeleteArray(&deleteArray_TPainter3dAlgorithms);
      instance.SetDestructor(&destruct_TPainter3dAlgorithms);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPainter3dAlgorithms*)
   {
      return GenerateInitInstanceLocal((::TPainter3dAlgorithms*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPainter3dAlgorithms*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void THistPainter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_THistPainter(void *p = 0);
   static void *newArray_THistPainter(Long_t size, void *p);
   static void delete_THistPainter(void *p);
   static void deleteArray_THistPainter(void *p);
   static void destruct_THistPainter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THistPainter*)
   {
      ::THistPainter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THistPainter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THistPainter", ::THistPainter::Class_Version(), "include/THistPainter.h", 41,
                  typeid(::THistPainter), DefineBehavior(ptr, ptr),
                  &::THistPainter::Dictionary, isa_proxy, 0,
                  sizeof(::THistPainter) );
      instance.SetNew(&new_THistPainter);
      instance.SetNewArray(&newArray_THistPainter);
      instance.SetDelete(&delete_THistPainter);
      instance.SetDeleteArray(&deleteArray_THistPainter);
      instance.SetDestructor(&destruct_THistPainter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THistPainter*)
   {
      return GenerateInitInstanceLocal((::THistPainter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THistPainter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPaletteAxis_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TPaletteAxis(void *p = 0);
   static void *newArray_TPaletteAxis(Long_t size, void *p);
   static void delete_TPaletteAxis(void *p);
   static void deleteArray_TPaletteAxis(void *p);
   static void destruct_TPaletteAxis(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPaletteAxis*)
   {
      ::TPaletteAxis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPaletteAxis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPaletteAxis", ::TPaletteAxis::Class_Version(), "include/TPaletteAxis.h", 33,
                  typeid(::TPaletteAxis), DefineBehavior(ptr, ptr),
                  &::TPaletteAxis::Dictionary, isa_proxy, 4,
                  sizeof(::TPaletteAxis) );
      instance.SetNew(&new_TPaletteAxis);
      instance.SetNewArray(&newArray_TPaletteAxis);
      instance.SetDelete(&delete_TPaletteAxis);
      instance.SetDeleteArray(&deleteArray_TPaletteAxis);
      instance.SetDestructor(&destruct_TPaletteAxis);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPaletteAxis*)
   {
      return GenerateInitInstanceLocal((::TPaletteAxis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPaletteAxis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TGraph2DPainter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGraph2DPainter::Class_Name()
{
   return "TGraph2DPainter";
}

//______________________________________________________________________________
const char *TGraph2DPainter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGraph2DPainter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGraph2DPainter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGraph2DPainter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGraph2DPainter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGraph2DPainter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGraph2DPainter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGraph2DPainter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGraphPainter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGraphPainter::Class_Name()
{
   return "TGraphPainter";
}

//______________________________________________________________________________
const char *TGraphPainter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGraphPainter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGraphPainter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGraphPainter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGraphPainter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGraphPainter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGraphPainter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGraphPainter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPainter3dAlgorithms::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPainter3dAlgorithms::Class_Name()
{
   return "TPainter3dAlgorithms";
}

//______________________________________________________________________________
const char *TPainter3dAlgorithms::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPainter3dAlgorithms*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPainter3dAlgorithms::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPainter3dAlgorithms*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPainter3dAlgorithms::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPainter3dAlgorithms*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPainter3dAlgorithms::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPainter3dAlgorithms*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THistPainter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THistPainter::Class_Name()
{
   return "THistPainter";
}

//______________________________________________________________________________
const char *THistPainter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THistPainter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THistPainter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THistPainter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THistPainter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THistPainter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THistPainter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THistPainter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPaletteAxis::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPaletteAxis::Class_Name()
{
   return "TPaletteAxis";
}

//______________________________________________________________________________
const char *TPaletteAxis::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPaletteAxis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPaletteAxis::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPaletteAxis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPaletteAxis::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPaletteAxis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPaletteAxis::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPaletteAxis*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TPainter3dAlgorithms::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPainter3dAlgorithms.

   TObject::Streamer(R__b);
   TAttLine::Streamer(R__b);
   TAttFill::Streamer(R__b);
}

//______________________________________________________________________________
void TPainter3dAlgorithms::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPainter3dAlgorithms.
      TClass *R__cl = ::TPainter3dAlgorithms::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fX0", &fX0);
      R__insp.Inspect(R__cl, R__parent, "fDX", &fDX);
      R__insp.Inspect(R__cl, R__parent, "fRmin[3]", fRmin);
      R__insp.Inspect(R__cl, R__parent, "fRmax[3]", fRmax);
      R__insp.Inspect(R__cl, R__parent, "fU[2000]", fU);
      R__insp.Inspect(R__cl, R__parent, "fD[2000]", fD);
      R__insp.Inspect(R__cl, R__parent, "fT[200]", fT);
      R__insp.Inspect(R__cl, R__parent, "fFunLevel[257]", fFunLevel);
      R__insp.Inspect(R__cl, R__parent, "fPlines[1200]", fPlines);
      R__insp.Inspect(R__cl, R__parent, "fAphi[183]", fAphi);
      R__insp.Inspect(R__cl, R__parent, "fYdl", &fYdl);
      R__insp.Inspect(R__cl, R__parent, "fYls[4]", fYls);
      R__insp.Inspect(R__cl, R__parent, "fVls[12]", fVls);
      R__insp.Inspect(R__cl, R__parent, "fQA", &fQA);
      R__insp.Inspect(R__cl, R__parent, "fQD", &fQD);
      R__insp.Inspect(R__cl, R__parent, "fQS", &fQS);
      R__insp.Inspect(R__cl, R__parent, "fXrast", &fXrast);
      R__insp.Inspect(R__cl, R__parent, "fYrast", &fYrast);
      R__insp.Inspect(R__cl, R__parent, "fDXrast", &fDXrast);
      R__insp.Inspect(R__cl, R__parent, "fDYrast", &fDYrast);
      R__insp.Inspect(R__cl, R__parent, "fSystem", &fSystem);
      R__insp.Inspect(R__cl, R__parent, "fNT", &fNT);
      R__insp.Inspect(R__cl, R__parent, "fNlevel", &fNlevel);
      R__insp.Inspect(R__cl, R__parent, "fColorLevel[258]", fColorLevel);
      R__insp.Inspect(R__cl, R__parent, "*fColorMain", &fColorMain);
      R__insp.Inspect(R__cl, R__parent, "*fColorDark", &fColorDark);
      R__insp.Inspect(R__cl, R__parent, "fColorTop", &fColorTop);
      R__insp.Inspect(R__cl, R__parent, "fColorBottom", &fColorBottom);
      R__insp.Inspect(R__cl, R__parent, "fMesh", &fMesh);
      R__insp.Inspect(R__cl, R__parent, "fNlines", &fNlines);
      R__insp.Inspect(R__cl, R__parent, "fLevelLine[200]", fLevelLine);
      R__insp.Inspect(R__cl, R__parent, "fLoff", &fLoff);
      R__insp.Inspect(R__cl, R__parent, "fNqs", &fNqs);
      R__insp.Inspect(R__cl, R__parent, "fNStack", &fNStack);
      R__insp.Inspect(R__cl, R__parent, "fNxrast", &fNxrast);
      R__insp.Inspect(R__cl, R__parent, "fNyrast", &fNyrast);
      R__insp.Inspect(R__cl, R__parent, "fIfrast", &fIfrast);
      R__insp.Inspect(R__cl, R__parent, "*fRaster", &fRaster);
      R__insp.Inspect(R__cl, R__parent, "fJmask[30]", fJmask);
      R__insp.Inspect(R__cl, R__parent, "fMask[465]", fMask);
      R__insp.Inspect(R__cl, R__parent, "fP8[8][3]", fP8);
      R__insp.Inspect(R__cl, R__parent, "fF8[8]", fF8);
      R__insp.Inspect(R__cl, R__parent, "fG8[8][3]", fG8);
      R__insp.Inspect(R__cl, R__parent, "fFmin", &fFmin);
      R__insp.Inspect(R__cl, R__parent, "fFmax", &fFmax);
      R__insp.Inspect(R__cl, R__parent, "fNcolor", &fNcolor);
      R__insp.Inspect(R__cl, R__parent, "fIc1", &fIc1);
      R__insp.Inspect(R__cl, R__parent, "fIc2", &fIc2);
      R__insp.Inspect(R__cl, R__parent, "fIc3", &fIc3);
      R__insp.Inspect(R__cl, R__parent, "fDrawFace", &fDrawFace);
      R__insp.Inspect(R__cl, R__parent, "fLegoFunction", &fLegoFunction);
      R__insp.Inspect(R__cl, R__parent, "fSurfaceFunction", &fSurfaceFunction);
      TObject::ShowMembers(R__insp, R__parent);
      TAttLine::ShowMembers(R__insp, R__parent);
      TAttFill::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPainter3dAlgorithms(void *p) {
      return  p ? new(p) ::TPainter3dAlgorithms : new ::TPainter3dAlgorithms;
   }
   static void *newArray_TPainter3dAlgorithms(Long_t nElements, void *p) {
      return p ? new(p) ::TPainter3dAlgorithms[nElements] : new ::TPainter3dAlgorithms[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPainter3dAlgorithms(void *p) {
      delete ((::TPainter3dAlgorithms*)p);
   }
   static void deleteArray_TPainter3dAlgorithms(void *p) {
      delete [] ((::TPainter3dAlgorithms*)p);
   }
   static void destruct_TPainter3dAlgorithms(void *p) {
      typedef ::TPainter3dAlgorithms current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPainter3dAlgorithms

//______________________________________________________________________________
void TGraph2DPainter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGraph2DPainter.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TGraph2DPainter::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGraph2DPainter.
      TClass *R__cl = ::TGraph2DPainter::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fX", &fX);
      R__insp.Inspect(R__cl, R__parent, "*fY", &fY);
      R__insp.Inspect(R__cl, R__parent, "*fZ", &fZ);
      R__insp.Inspect(R__cl, R__parent, "*fXN", &fXN);
      R__insp.Inspect(R__cl, R__parent, "*fYN", &fYN);
      R__insp.Inspect(R__cl, R__parent, "fXNmin", &fXNmin);
      R__insp.Inspect(R__cl, R__parent, "fXNmax", &fXNmax);
      R__insp.Inspect(R__cl, R__parent, "fYNmin", &fYNmin);
      R__insp.Inspect(R__cl, R__parent, "fYNmax", &fYNmax);
      R__insp.Inspect(R__cl, R__parent, "fXmin", &fXmin);
      R__insp.Inspect(R__cl, R__parent, "fXmax", &fXmax);
      R__insp.Inspect(R__cl, R__parent, "fYmin", &fYmin);
      R__insp.Inspect(R__cl, R__parent, "fYmax", &fYmax);
      R__insp.Inspect(R__cl, R__parent, "fZmin", &fZmin);
      R__insp.Inspect(R__cl, R__parent, "fZmax", &fZmax);
      R__insp.Inspect(R__cl, R__parent, "fNpoints", &fNpoints);
      R__insp.Inspect(R__cl, R__parent, "fNdt", &fNdt);
      R__insp.Inspect(R__cl, R__parent, "*fPTried", &fPTried);
      R__insp.Inspect(R__cl, R__parent, "*fNTried", &fNTried);
      R__insp.Inspect(R__cl, R__parent, "*fMTried", &fMTried);
      R__insp.Inspect(R__cl, R__parent, "*fDelaunay", &fDelaunay);
      R__insp.Inspect(R__cl, R__parent, "*fGraph2D", &fGraph2D);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TGraph2DPainter(void *p) {
      return  p ? new(p) ::TGraph2DPainter : new ::TGraph2DPainter;
   }
   static void *newArray_TGraph2DPainter(Long_t nElements, void *p) {
      return p ? new(p) ::TGraph2DPainter[nElements] : new ::TGraph2DPainter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGraph2DPainter(void *p) {
      delete ((::TGraph2DPainter*)p);
   }
   static void deleteArray_TGraph2DPainter(void *p) {
      delete [] ((::TGraph2DPainter*)p);
   }
   static void destruct_TGraph2DPainter(void *p) {
      typedef ::TGraph2DPainter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGraph2DPainter

//______________________________________________________________________________
void TGraphPainter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGraphPainter.

   TVirtualGraphPainter::Streamer(R__b);
}

//______________________________________________________________________________
void TGraphPainter::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGraphPainter.
      TClass *R__cl = ::TGraphPainter::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TVirtualGraphPainter::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TGraphPainter(void *p) {
      return  p ? new(p) ::TGraphPainter : new ::TGraphPainter;
   }
   static void *newArray_TGraphPainter(Long_t nElements, void *p) {
      return p ? new(p) ::TGraphPainter[nElements] : new ::TGraphPainter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGraphPainter(void *p) {
      delete ((::TGraphPainter*)p);
   }
   static void deleteArray_TGraphPainter(void *p) {
      delete [] ((::TGraphPainter*)p);
   }
   static void destruct_TGraphPainter(void *p) {
      typedef ::TGraphPainter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGraphPainter

//______________________________________________________________________________
void THistPainter::Streamer(TBuffer &R__b)
{
   // Stream an object of class THistPainter.

   TVirtualHistPainter::Streamer(R__b);
}

//______________________________________________________________________________
void THistPainter::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THistPainter.
      TClass *R__cl = ::THistPainter::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fH", &fH);
      R__insp.Inspect(R__cl, R__parent, "*fXaxis", &fXaxis);
      R__insp.Inspect(R__cl, R__parent, "*fYaxis", &fYaxis);
      R__insp.Inspect(R__cl, R__parent, "*fZaxis", &fZaxis);
      R__insp.Inspect(R__cl, R__parent, "*fFunctions", &fFunctions);
      R__insp.Inspect(R__cl, R__parent, "*fLego", &fLego);
      R__insp.Inspect(R__cl, R__parent, "*fGraph2DPainter", &fGraph2DPainter);
      R__insp.Inspect(R__cl, R__parent, "*fPie", &fPie);
      R__insp.Inspect(R__cl, R__parent, "*fXbuf", &fXbuf);
      R__insp.Inspect(R__cl, R__parent, "*fYbuf", &fYbuf);
      R__insp.Inspect(R__cl, R__parent, "fNcuts", &fNcuts);
      R__insp.Inspect(R__cl, R__parent, "fCutsOpt[16]", fCutsOpt);
      R__insp.Inspect(R__cl, R__parent, "*fCuts[16]", &fCuts);
      R__insp.Inspect(R__cl, R__parent, "*fStack", &fStack);
      R__insp.Inspect(R__cl, R__parent, "fShowProjection", &fShowProjection);
      R__insp.Inspect(R__cl, R__parent, "fShowOption", &fShowOption);
      fShowOption.ShowMembers(R__insp, strcat(R__parent,"fShowOption.")); R__parent[R__ncp] = 0;
      TVirtualHistPainter::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_THistPainter(void *p) {
      return  p ? new(p) ::THistPainter : new ::THistPainter;
   }
   static void *newArray_THistPainter(Long_t nElements, void *p) {
      return p ? new(p) ::THistPainter[nElements] : new ::THistPainter[nElements];
   }
   // Wrapper around operator delete
   static void delete_THistPainter(void *p) {
      delete ((::THistPainter*)p);
   }
   static void deleteArray_THistPainter(void *p) {
      delete [] ((::THistPainter*)p);
   }
   static void destruct_THistPainter(void *p) {
      typedef ::THistPainter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THistPainter

//______________________________________________________________________________
void TPaletteAxis::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPaletteAxis.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPaletteAxis::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPaletteAxis::Class(),this);
   }
}

//______________________________________________________________________________
void TPaletteAxis::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPaletteAxis.
      TClass *R__cl = ::TPaletteAxis::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fAxis", &fAxis);
      fAxis.ShowMembers(R__insp, strcat(R__parent,"fAxis.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fH", &fH);
      R__insp.Inspect(R__cl, R__parent, "fName", &fName);
      fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      TPave::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPaletteAxis(void *p) {
      return  p ? new(p) ::TPaletteAxis : new ::TPaletteAxis;
   }
   static void *newArray_TPaletteAxis(Long_t nElements, void *p) {
      return p ? new(p) ::TPaletteAxis[nElements] : new ::TPaletteAxis[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPaletteAxis(void *p) {
      delete ((::TPaletteAxis*)p);
   }
   static void deleteArray_TPaletteAxis(void *p) {
      delete [] ((::TPaletteAxis*)p);
   }
   static void destruct_TPaletteAxis(void *p) {
      typedef ::TPaletteAxis current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPaletteAxis

/********************************************************
* hist/histpainter/src/G__HistPainter.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__HistPainter();

extern "C" void G__set_cpp_environmentG__HistPainter() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TGraph2DPainter.h");
  G__add_compiledheader("TGraphPainter.h");
  G__add_compiledheader("THistPainter.h");
  G__add_compiledheader("TLego.h");
  G__add_compiledheader("TPainter3dAlgorithms.h");
  G__add_compiledheader("TPaletteAxis.h");
  G__cpp_reset_tagtableG__HistPainter();
}
#include <new>
extern "C" int G__cpp_dllrevG__HistPainter() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TGraph2DPainter */
static int G__G__HistPainter_97_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGraph2DPainter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGraph2DPainter[n];
     } else {
       p = new((void*) gvp) TGraph2DPainter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGraph2DPainter;
     } else {
       p = new((void*) gvp) TGraph2DPainter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HistPainterLN_TGraph2DPainter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_97_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGraph2DPainter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TGraph2DPainter((TGraphDelaunay*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TGraph2DPainter((TGraphDelaunay*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HistPainterLN_TGraph2DPainter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_97_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TGraph2DPainter*) G__getstructoffset())->GetContourList((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_97_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraph2DPainter*) G__getstructoffset())->PaintTriangles((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_97_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraph2DPainter*) G__getstructoffset())->PaintPolyMarker((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_97_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraph2DPainter*) G__getstructoffset())->PaintPolyLine((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_97_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraph2DPainter*) G__getstructoffset())->PaintContour((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_97_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGraph2DPainter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_97_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGraph2DPainter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_97_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGraph2DPainter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_97_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGraph2DPainter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_97_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraph2DPainter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_97_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGraph2DPainter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_97_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGraph2DPainter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_97_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGraph2DPainter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_97_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGraph2DPainter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__HistPainter_97_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TGraph2DPainter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TGraph2DPainter(*(TGraph2DPainter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HistPainterLN_TGraph2DPainter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGraph2DPainter G__TTGraph2DPainter;
static int G__G__HistPainter_97_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGraph2DPainter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGraph2DPainter*) (soff+(sizeof(TGraph2DPainter)*i)))->~G__TTGraph2DPainter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGraph2DPainter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGraph2DPainter*) (soff))->~G__TTGraph2DPainter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__HistPainter_97_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGraph2DPainter* dest = (TGraph2DPainter*) G__getstructoffset();
   *dest = *(TGraph2DPainter*) libp->para[0].ref;
   const TGraph2DPainter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGraphPainter */
static int G__G__HistPainter_101_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGraphPainter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGraphPainter[n];
     } else {
       p = new((void*) gvp) TGraphPainter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGraphPainter;
     } else {
       p = new((void*) gvp) TGraphPainter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HistPainterLN_TGraphPainter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraphPainter*) G__getstructoffset())->ComputeLogs((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraphPainter*) G__getstructoffset())->PaintGraphAsymmErrors((TGraph*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraphPainter*) G__getstructoffset())->PaintGraphBentErrors((TGraph*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraphPainter*) G__getstructoffset())->PaintGraphErrors((TGraph*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraphPainter*) G__getstructoffset())->PaintGraphPolar((TGraph*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraphPainter*) G__getstructoffset())->PaintGraphQQ((TGraph*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraphPainter*) G__getstructoffset())->PaintGraphSimple((TGraph*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraphPainter*) G__getstructoffset())->PaintPolyLineHatches((TGraph*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Double_t*) G__int(libp->para[2]), (const Double_t*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraphPainter*) G__getstructoffset())->Smooth((TGraph*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGraphPainter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGraphPainter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGraphPainter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGraphPainter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraphPainter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGraphPainter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGraphPainter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGraphPainter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_101_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGraphPainter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__HistPainter_101_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TGraphPainter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TGraphPainter(*(TGraphPainter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HistPainterLN_TGraphPainter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGraphPainter G__TTGraphPainter;
static int G__G__HistPainter_101_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGraphPainter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGraphPainter*) (soff+(sizeof(TGraphPainter)*i)))->~G__TTGraphPainter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGraphPainter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGraphPainter*) (soff))->~G__TTGraphPainter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__HistPainter_101_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGraphPainter* dest = (TGraphPainter*) G__getstructoffset();
   *dest = *(TGraphPainter*) libp->para[0].ref;
   const TGraphPainter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPainter3dAlgorithms */
static int G__G__HistPainter_118_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPainter3dAlgorithms* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPainter3dAlgorithms[n];
     } else {
       p = new((void*) gvp) TPainter3dAlgorithms[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPainter3dAlgorithms;
     } else {
       p = new((void*) gvp) TPainter3dAlgorithms;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPainter3dAlgorithms* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPainter3dAlgorithms(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TPainter3dAlgorithms(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPainter3dAlgorithms((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TPainter3dAlgorithms((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->BackBox((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->ClearRaster();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->ColorFunction((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t*) G__int(libp->para[2]), *(Int_t*) G__Intref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->DefineGridLevels((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp1 { Double_t a[1][3]; }* G__Ap1 = (struct G__aRyp1*) G__int(libp->para[1]);
      ((TPainter3dAlgorithms*) G__getstructoffset())->DrawFaceGouraudShaded((Int_t*) G__int(libp->para[0]), G__Ap1->a
, (Int_t) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->DrawFaceMode1((Int_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->DrawFaceMode2((Int_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->DrawFaceMode3((Int_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->DrawFaceMove1((Int_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->DrawFaceMove2((Int_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->DrawFaceMove3((Int_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->DrawFaceRaster1((Int_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->DrawFaceRaster2((Int_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->FillPolygon((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->FillPolygonBorder((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->FindLevelLines((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->FindPartEdge(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, *(Int_t*) G__Intref(&libp->para[6]), (Double_t*) G__int(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->FindVisibleLine((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])
, (Double_t*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->FindVisibleDraw((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->FrontBox((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->GouraudFunction((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->ImplicitFunction((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->IsoSurface(
(Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t*) G__int(libp->para[6]), (Double_t*) G__int(libp->para[7])
, (const char*) G__int(libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->InitMoveScreen((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->InitRaster((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->LegoCartesian((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->LegoFunction((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->LegoPolar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->LegoCylindrical((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->LegoSpherical((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->LightSource((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), *(Int_t*) G__Intref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->Luminosity((Double_t*) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp1 { Double_t a[1][3]; }* G__Ap1 = (struct G__aRyp1*) G__int(libp->para[1]);
  struct G__aRyp3 { Double_t a[1][3]; }* G__Ap3 = (struct G__aRyp3*) G__int(libp->para[3]);
  struct G__aRyp6 { Double_t a[1][3]; }* G__Ap6 = (struct G__aRyp6*) G__int(libp->para[6]);
  struct G__aRyp7 { Double_t a[1][3]; }* G__Ap7 = (struct G__aRyp7*) G__int(libp->para[7]);
  struct G__aRyp8 { Int_t a[1][3]; }* G__Ap8 = (struct G__aRyp8*) G__int(libp->para[8]);
      ((TPainter3dAlgorithms*) G__getstructoffset())->MarchingCube(
(Double_t) G__double(libp->para[0]), G__Ap1->a
, (Double_t*) G__int(libp->para[2]), G__Ap3->a
, *(Int_t*) G__Intref(&libp->para[4]), *(Int_t*) G__Intref(&libp->para[5])
, G__Ap6->a, G__Ap7->a
, G__Ap8->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp8 { Double_t a[1][3]; }* G__Ap8 = (struct G__aRyp8*) G__int(libp->para[8]);
  struct G__aRyp9 { Double_t a[1][3]; }* G__Ap9 = (struct G__aRyp9*) G__int(libp->para[9]);
  struct G__aRyp10 { Int_t a[1][3]; }* G__Ap10 = (struct G__aRyp10*) G__int(libp->para[10]);
      ((TPainter3dAlgorithms*) G__getstructoffset())->MarchingCubeCase00(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, *(Int_t*) G__Intref(&libp->para[6]), *(Int_t*) G__Intref(&libp->para[7])
, G__Ap8->a, G__Ap9->a
, G__Ap10->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp2 { Double_t a[1][3]; }* G__Ap2 = (struct G__aRyp2*) G__int(libp->para[2]);
  struct G__aRyp3 { Double_t a[1][3]; }* G__Ap3 = (struct G__aRyp3*) G__int(libp->para[3]);
  struct G__aRyp4 { Int_t a[1][3]; }* G__Ap4 = (struct G__aRyp4*) G__int(libp->para[4]);
      ((TPainter3dAlgorithms*) G__getstructoffset())->MarchingCubeCase03(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, G__Ap2->a, G__Ap3->a
, G__Ap4->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp2 { Double_t a[1][3]; }* G__Ap2 = (struct G__aRyp2*) G__int(libp->para[2]);
  struct G__aRyp3 { Double_t a[1][3]; }* G__Ap3 = (struct G__aRyp3*) G__int(libp->para[3]);
  struct G__aRyp4 { Int_t a[1][3]; }* G__Ap4 = (struct G__aRyp4*) G__int(libp->para[4]);
      ((TPainter3dAlgorithms*) G__getstructoffset())->MarchingCubeCase04(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, G__Ap2->a, G__Ap3->a
, G__Ap4->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp2 { Double_t a[1][3]; }* G__Ap2 = (struct G__aRyp2*) G__int(libp->para[2]);
  struct G__aRyp3 { Double_t a[1][3]; }* G__Ap3 = (struct G__aRyp3*) G__int(libp->para[3]);
  struct G__aRyp4 { Int_t a[1][3]; }* G__Ap4 = (struct G__aRyp4*) G__int(libp->para[4]);
      ((TPainter3dAlgorithms*) G__getstructoffset())->MarchingCubeCase06(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, G__Ap2->a, G__Ap3->a
, G__Ap4->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp2 { Double_t a[1][3]; }* G__Ap2 = (struct G__aRyp2*) G__int(libp->para[2]);
  struct G__aRyp3 { Double_t a[1][3]; }* G__Ap3 = (struct G__aRyp3*) G__int(libp->para[3]);
  struct G__aRyp4 { Int_t a[1][3]; }* G__Ap4 = (struct G__aRyp4*) G__int(libp->para[4]);
      ((TPainter3dAlgorithms*) G__getstructoffset())->MarchingCubeCase07(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, G__Ap2->a, G__Ap3->a
, G__Ap4->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp2 { Double_t a[1][3]; }* G__Ap2 = (struct G__aRyp2*) G__int(libp->para[2]);
  struct G__aRyp3 { Double_t a[1][3]; }* G__Ap3 = (struct G__aRyp3*) G__int(libp->para[3]);
  struct G__aRyp4 { Int_t a[1][3]; }* G__Ap4 = (struct G__aRyp4*) G__int(libp->para[4]);
      ((TPainter3dAlgorithms*) G__getstructoffset())->MarchingCubeCase10(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, G__Ap2->a, G__Ap3->a
, G__Ap4->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp2 { Double_t a[1][3]; }* G__Ap2 = (struct G__aRyp2*) G__int(libp->para[2]);
  struct G__aRyp3 { Double_t a[1][3]; }* G__Ap3 = (struct G__aRyp3*) G__int(libp->para[3]);
  struct G__aRyp4 { Int_t a[1][3]; }* G__Ap4 = (struct G__aRyp4*) G__int(libp->para[4]);
      ((TPainter3dAlgorithms*) G__getstructoffset())->MarchingCubeCase12(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, G__Ap2->a, G__Ap3->a
, G__Ap4->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp2 { Double_t a[1][3]; }* G__Ap2 = (struct G__aRyp2*) G__int(libp->para[2]);
  struct G__aRyp3 { Double_t a[1][3]; }* G__Ap3 = (struct G__aRyp3*) G__int(libp->para[3]);
  struct G__aRyp4 { Int_t a[1][3]; }* G__Ap4 = (struct G__aRyp4*) G__int(libp->para[4]);
      ((TPainter3dAlgorithms*) G__getstructoffset())->MarchingCubeCase13(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, G__Ap2->a, G__Ap3->a
, G__Ap4->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp1 { Int_t a[1][3]; }* G__Ap1 = (struct G__aRyp1*) G__int(libp->para[1]);
  struct G__aRyp2 { Int_t a[1][3]; }* G__Ap2 = (struct G__aRyp2*) G__int(libp->para[2]);
      ((TPainter3dAlgorithms*) G__getstructoffset())->MarchingCubeSetTriangles((Int_t) G__int(libp->para[0]), G__Ap1->a
, G__Ap2->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp1 { Double_t a[1][3]; }* G__Ap1 = (struct G__aRyp1*) G__int(libp->para[1]);
  struct G__aRyp2 { Double_t a[1][3]; }* G__Ap2 = (struct G__aRyp2*) G__int(libp->para[2]);
  struct G__aRyp3 { Int_t a[1][3]; }* G__Ap3 = (struct G__aRyp3*) G__int(libp->para[3]);
      ((TPainter3dAlgorithms*) G__getstructoffset())->MarchingCubeMiddlePoint((Int_t) G__int(libp->para[0]), G__Ap1->a
, G__Ap2->a, G__Ap3->a
, (Double_t*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->MarchingCubeSurfacePenetration(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *(Int_t*) G__Intref(&libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp2 { Double_t a[1][3]; }* G__Ap2 = (struct G__aRyp2*) G__int(libp->para[2]);
  struct G__aRyp3 { Double_t a[1][3]; }* G__Ap3 = (struct G__aRyp3*) G__int(libp->para[3]);
      ((TPainter3dAlgorithms*) G__getstructoffset())->MarchingCubeFindNodes((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, G__Ap2->a, G__Ap3->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->ModifyScreen((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->SetDrawFace(*(TPainter3dAlgorithms::DrawFaceFunc_t *) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->SetIsoSurfaceParameters((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->SetLegoFunction(*(TPainter3dAlgorithms::LegoFunc_t *) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TPainter3dAlgorithms*) G__getstructoffset())->SetMesh((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TPainter3dAlgorithms*) G__getstructoffset())->SetMesh();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->SetSurfaceFunction(*(TPainter3dAlgorithms::SurfaceFunc_t *) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TPainter3dAlgorithms*) G__getstructoffset())->SetColorDark((Color_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TPainter3dAlgorithms*) G__getstructoffset())->SetColorDark((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TPainter3dAlgorithms*) G__getstructoffset())->SetColorMain((Color_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TPainter3dAlgorithms*) G__getstructoffset())->SetColorMain((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->SideVisibilityDecode(
(Double_t) G__double(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]), *(Int_t*) G__Intref(&libp->para[5])
, *(Int_t*) G__Intref(&libp->para[6]), *(Int_t*) G__Intref(&libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->SideVisibilityEncode((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->Spectrum((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), *(Int_t*) G__Intref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->SurfaceCartesian((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->SurfacePolar((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->SurfaceCylindrical((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->SurfaceFunction((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->SurfaceSpherical((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->SurfaceProperty((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp1 { Double_t a[1][3]; }* G__Ap1 = (struct G__aRyp1*) G__int(libp->para[1]);
      ((TPainter3dAlgorithms*) G__getstructoffset())->TestEdge(
(Double_t) G__double(libp->para[0]), G__Ap1->a
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t*) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, *(Int_t*) G__Intref(&libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { Double_t a[1][3]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
  struct G__aRyp2 { Int_t a[1][3]; }* G__Ap2 = (struct G__aRyp2*) G__int(libp->para[2]);
  struct G__aRyp3 { Double_t a[1][6]; }* G__Ap3 = (struct G__aRyp3*) G__int(libp->para[3]);
  struct G__aRyp4 { Double_t a[1][4]; }* G__Ap4 = (struct G__aRyp4*) G__int(libp->para[4]);
      ((TPainter3dAlgorithms*) G__getstructoffset())->ZDepth(G__Ap0->a, *(Int_t*) G__Intref(&libp->para[1])
, G__Ap2->a, G__Ap3->a
, G__Ap4->a, (Int_t*) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPainter3dAlgorithms::SetF3((TF3*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPainter3dAlgorithms::SetF3ClippingBoxOff();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPainter3dAlgorithms::SetF3ClippingBoxOn((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPainter3dAlgorithms::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPainter3dAlgorithms::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPainter3dAlgorithms::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPainter3dAlgorithms::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPainter3dAlgorithms*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPainter3dAlgorithms::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPainter3dAlgorithms::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPainter3dAlgorithms::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_118_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPainter3dAlgorithms::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__HistPainter_118_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TPainter3dAlgorithms* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TPainter3dAlgorithms(*(TPainter3dAlgorithms*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPainter3dAlgorithms G__TTPainter3dAlgorithms;
static int G__G__HistPainter_118_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPainter3dAlgorithms*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPainter3dAlgorithms*) (soff+(sizeof(TPainter3dAlgorithms)*i)))->~G__TTPainter3dAlgorithms();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPainter3dAlgorithms*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPainter3dAlgorithms*) (soff))->~G__TTPainter3dAlgorithms();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__HistPainter_118_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPainter3dAlgorithms* dest = (TPainter3dAlgorithms*) G__getstructoffset();
   *dest = *(TPainter3dAlgorithms*) libp->para[0].ref;
   const TPainter3dAlgorithms& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THistPainter */
static int G__G__HistPainter_120_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THistPainter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THistPainter[n];
     } else {
       p = new((void*) gvp) THistPainter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THistPainter;
     } else {
       p = new((void*) gvp) THistPainter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HistPainterLN_THistPainter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->DefineColorLevels((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THistPainter*) G__getstructoffset())->MakeChopt((Option_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintArrows((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((THistPainter*) G__getstructoffset())->PaintAxis((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((THistPainter*) G__getstructoffset())->PaintAxis();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintBar((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintBarH((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintBoxes((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintColorLevels((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintContour((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THistPainter*) G__getstructoffset())->PaintContourLine(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t*) G__int(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Int_t*) G__int(libp->para[10]), (Double_t*) G__int(libp->para[11])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintErrors((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->Paint2DErrors((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintFrame();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintFunction((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintHist((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((THistPainter*) G__getstructoffset())->PaintH3((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((THistPainter*) G__getstructoffset())->PaintH3();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintH3Iso();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THistPainter*) G__getstructoffset())->PaintInit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THistPainter*) G__getstructoffset())->PaintInitH());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintLego((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintLegoAxis((TGaxis*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintPalette();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintScatterPlot((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintStat2((Int_t) G__int(libp->para[0]), (TF1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintStat3((Int_t) G__int(libp->para[0]), (TF1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintSurface((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintTriangles((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintTable((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintText((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintTitle();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->PaintTF3();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THistPainter::ProjectAitoff2xy((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THistPainter::ProjectMercator2xy((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THistPainter::ProjectSinusoidal2xy((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THistPainter::ProjectParabolic2xy((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->RecalculateRange();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->ShowProjectionX((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->ShowProjectionY((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->ShowProjection3((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THistPainter*) G__getstructoffset())->TableInit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THistPainter::GetBestFormat((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THistPainter::PaintSpecialObjects((const TObject*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THistPainter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THistPainter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THistPainter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THistPainter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THistPainter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THistPainter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THistPainter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THistPainter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_120_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THistPainter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__HistPainter_120_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THistPainter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THistPainter(*(THistPainter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HistPainterLN_THistPainter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THistPainter G__TTHistPainter;
static int G__G__HistPainter_120_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THistPainter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THistPainter*) (soff+(sizeof(THistPainter)*i)))->~G__TTHistPainter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THistPainter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THistPainter*) (soff))->~G__TTHistPainter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__HistPainter_120_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THistPainter* dest = (THistPainter*) G__getstructoffset();
   *dest = *(THistPainter*) libp->para[0].ref;
   const THistPainter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPaletteAxis */
static int G__G__HistPainter_132_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPaletteAxis* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPaletteAxis[n];
     } else {
       p = new((void*) gvp) TPaletteAxis[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPaletteAxis;
     } else {
       p = new((void*) gvp) TPaletteAxis;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HistPainterLN_TPaletteAxis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPaletteAxis* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TPaletteAxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (TH1*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) TPaletteAxis(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (TH1*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HistPainterLN_TPaletteAxis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPaletteAxis* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TPaletteAxis(*(TPaletteAxis*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TPaletteAxis(*(TPaletteAxis*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__HistPainterLN_TPaletteAxis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPaletteAxis*) G__getstructoffset())->GetAxis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TPaletteAxis*) G__getstructoffset())->GetBinColor((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TPaletteAxis*) G__getstructoffset())->GetValueColor((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPaletteAxis*) G__getstructoffset())->SetLabelColor((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPaletteAxis*) G__getstructoffset())->SetLabelFont((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPaletteAxis*) G__getstructoffset())->SetLabelOffset((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPaletteAxis*) G__getstructoffset())->SetLabelSize((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TPaletteAxis*) G__getstructoffset())->SetTitleOffset((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TPaletteAxis*) G__getstructoffset())->SetTitleOffset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPaletteAxis*) G__getstructoffset())->SetTitleSize((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPaletteAxis*) G__getstructoffset())->UnZoom();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPaletteAxis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPaletteAxis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPaletteAxis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPaletteAxis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPaletteAxis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPaletteAxis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPaletteAxis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPaletteAxis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__HistPainter_132_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPaletteAxis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPaletteAxis G__TTPaletteAxis;
static int G__G__HistPainter_132_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPaletteAxis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPaletteAxis*) (soff+(sizeof(TPaletteAxis)*i)))->~G__TTPaletteAxis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPaletteAxis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPaletteAxis*) (soff))->~G__TTPaletteAxis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TGraph2DPainter */

/* TGraphPainter */

/* TPainter3dAlgorithms */

/* THistPainter */

/* TPaletteAxis */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__HistPainter {
 public:
  G__Sizep2memfuncG__HistPainter(): p(&G__Sizep2memfuncG__HistPainter::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__HistPainter::*p)();
};

size_t G__get_sizep2memfuncG__HistPainter()
{
  G__Sizep2memfuncG__HistPainter a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__HistPainter() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HistPainterLN_TGraph2DPainter))) {
     TGraph2DPainter *G__Lderived;
     G__Lderived=(TGraph2DPainter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TGraph2DPainter),G__get_linked_tagnum(&G__G__HistPainterLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HistPainterLN_TGraphPainter))) {
     TGraphPainter *G__Lderived;
     G__Lderived=(TGraphPainter*)0x1000;
     {
       TVirtualGraphPainter *G__Lpbase=(TVirtualGraphPainter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TGraphPainter),G__get_linked_tagnum(&G__G__HistPainterLN_TVirtualGraphPainter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TGraphPainter),G__get_linked_tagnum(&G__G__HistPainterLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms))) {
     TPainter3dAlgorithms *G__Lderived;
     G__Lderived=(TPainter3dAlgorithms*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms),G__get_linked_tagnum(&G__G__HistPainterLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms),G__get_linked_tagnum(&G__G__HistPainterLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms),G__get_linked_tagnum(&G__G__HistPainterLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HistPainterLN_THistPainter))) {
     THistPainter *G__Lderived;
     G__Lderived=(THistPainter*)0x1000;
     {
       TVirtualHistPainter *G__Lpbase=(TVirtualHistPainter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HistPainterLN_THistPainter),G__get_linked_tagnum(&G__G__HistPainterLN_TVirtualHistPainter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HistPainterLN_THistPainter),G__get_linked_tagnum(&G__G__HistPainterLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__HistPainterLN_TPaletteAxis))) {
     TPaletteAxis *G__Lderived;
     G__Lderived=(TPaletteAxis*)0x1000;
     {
       TPave *G__Lpbase=(TPave*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TPaletteAxis),G__get_linked_tagnum(&G__G__HistPainterLN_TPave),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TBox *G__Lpbase=(TBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TPaletteAxis),G__get_linked_tagnum(&G__G__HistPainterLN_TBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TPaletteAxis),G__get_linked_tagnum(&G__G__HistPainterLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TPaletteAxis),G__get_linked_tagnum(&G__G__HistPainterLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TPaletteAxis),G__get_linked_tagnum(&G__G__HistPainterLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__HistPainter() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Color_t",115,-1,0,-1);
   G__setnewtype(-1,"Color number (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__HistPainterLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__HistPainterLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__HistPainterLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__HistPainterLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__HistPainterLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__HistPainterLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("DrawFaceFunc_t",97,-1,0,G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms));
   G__setnewtype(-1,"void (TPainter3dAlgorithms::*DrawFaceFunc_t)(Int_t *, Double_t *, Int_t, Int_t *, Double_t *);",0);
   G__search_typename2("LegoFunc_t",97,-1,0,G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms));
   G__setnewtype(-1,"void (TPainter3dAlgorithms::*LegoFunc_t)(Int_t,Int_t,Int_t&,Double_t*,Double_t*,Double_t*);",0);
   G__search_typename2("SurfaceFunc_t",97,-1,0,G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms));
   G__setnewtype(-1,"void (TPainter3dAlgorithms::*SurfaceFunc_t)(Int_t,Int_t,Double_t*,Double_t*);",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TGraph2DPainter */
static void G__setup_memvarTGraph2DPainter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TGraph2DPainter));
   { TGraph2DPainter *p; p=(TGraph2DPainter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fX=",0,"!Pointer to fGraph2D->fX");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fY=",0,"!Pointer to fGraph2D->fY");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZ=",0,"!Pointer to fGraph2D->fZ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXN=",0,"!Pointer to fDelaunay->fXN");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYN=",0,"!Pointer to fDelaunay->fYN");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXNmin=",0,"!Equal to fDelaunay->fXNmin");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXNmax=",0,"!Equal to fDelaunay->fXNmax");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYNmin=",0,"!Equal to fDelaunay->fYNmin");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYNmax=",0,"!Equal to fDelaunay->fYNmax");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXmin=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXmax=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYmin=",0,"! fGraph2D->fHistogram limits");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYmax=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZmin=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZmax=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNpoints=",0,"!Equal to fGraph2D->fNpoints");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdt=",0,"!Equal to fDelaunay->fNdt");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPTried=",0,"!Pointer to fDelaunay->fPTried");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNTried=",0,"!Pointer to fDelaunay->fNTried");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMTried=",0,"!Pointer to fDelaunay->fMTried");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TGraphDelaunay),-1,-1,2,"fDelaunay=",0,"Pointer to the TGraphDelaunay to be painted");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TGraph2D),-1,-1,2,"fGraph2D=",0,"Pointer to the TGraph2D in fDelaunay");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGraphPainter */
static void G__setup_memvarTGraphPainter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TGraphPainter));
   { TGraphPainter *p; p=(TGraphPainter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPainter3dAlgorithms */
static void G__setup_memvarTPainter3dAlgorithms(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms));
   { TPainter3dAlgorithms *p; p=(TPainter3dAlgorithms*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRmin[3]=",0,"Lower limits of lego");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRmax[3]=",0,"Upper limits of lego");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fU[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fD[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fT[200]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFunLevel[257]=",0,"Function levels corresponding to colors");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPlines[1200]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAphi[183]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYdl=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYls[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fVls[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQD=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQS=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXrast=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYrast=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDXrast=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDYrast=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSystem=",0,"Coordinate system");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNT=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNlevel=",0,"Number of color levels");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fColorLevel[258]=",0,"Color levels corresponding to functions");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fColorMain=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fColorDark=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fColorTop=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fColorBottom=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMesh=",0,"(=1 if mesh to draw, o otherwise)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNlines=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLevelLine[200]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLoff=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNqs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNStack=",0,"Number of histograms in the stack to be painted");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNxrast=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNyrast=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIfrast=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRaster=",0,"pointer to raster buffer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fJmask[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMask[465]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fP8[8][3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fF8[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fG8[8][3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFmin=",0,"IsoSurface minimum function value");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFmax=",0,"IsoSurface maximum function value");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNcolor=",0,"Number of colours per Iso surface");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIc1=",0,"Base colour for the 1st Iso Surface");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIc2=",0,"Base colour for the 2nd Iso Surface");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIc3=",0,"Base colour for the 3rd Iso Surface");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"fgF3Clipping=",0,"Clipping box is off (0) or on (1)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-2,4,"fgF3XClip=",0,"Clipping plne along X");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-2,4,"fgF3YClip=",0,"Clipping plne along Y");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-2,4,"fgF3ZClip=",0,"Clipping plne along Y");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TF3),-1,-2,4,"fgCurrentF3=",0,"Pointer to the 3D function to be paint.");
   G__memvar_setup((void*)0,97,0,0,-1,G__defined_typename("DrawFaceFunc_t"),-1,4,"fDrawFace=",0,"pointer to face drawing function");
   G__memvar_setup((void*)0,97,0,0,-1,G__defined_typename("LegoFunc_t"),-1,4,"fLegoFunction=",0,"pointer to lego function");
   G__memvar_setup((void*)0,97,0,0,-1,G__defined_typename("SurfaceFunc_t"),-1,4,"fSurfaceFunction=",0,"pointer to surface function");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THistPainter */
static void G__setup_memvarTHistPainter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HistPainterLN_THistPainter));
   { THistPainter *p; p=(THistPainter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TH1),-1,-1,2,"fH=",0,"pointer to histogram to paint");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TAxis),-1,-1,2,"fXaxis=",0,"pointer to X axis");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TAxis),-1,-1,2,"fYaxis=",0,"pointer to Y axis");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TAxis),-1,-1,2,"fZaxis=",0,"pointer to Z axis");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TList),-1,-1,2,"fFunctions=",0,"pointer to histogram list of functions");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms),-1,-1,2,"fLego=",0,"pointer to a TPainter3dAlgorithms object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TGraph2DPainter),-1,-1,2,"fGraph2DPainter=",0,"pointer to a TGraph2DPainter object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TPie),-1,-1,2,"fPie=",0,"pointer to a TPie in case of option PIE");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXbuf=",0,"X buffer coordinates");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYbuf=",0,"Y buffer coordinates");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNcuts=",0,"Number of graphical cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCutsOpt[16]=",0,"sign of each cut");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TCutG),-1,-1,2,"fCuts[16]=",0,"Pointers to graphical cuts");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TList),-1,-1,2,"fStack=",0,"Pointer to stack of histograms (if any)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fShowProjection=",0,"True if a projection must be drawn");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TString),-1,-1,2,"fShowOption=",0,"Option to draw the projection");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPaletteAxis */
static void G__setup_memvarTPaletteAxis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TPaletteAxis));
   { TPaletteAxis *p; p=(TPaletteAxis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TGaxis),-1,-1,2,"fAxis=",0,"palette axis");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TH1),-1,-1,2,"fH=",0,"pointer to parent histogram");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TString),-1,-1,2,"fName=",0,"Pave name");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__HistPainterLN_TPaletteAxiscLcLdA),-1,-2,1,"kHasView=2048",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__HistPainterLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__HistPainter() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTGraph2DPainter(void) {
   /* TGraph2DPainter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TGraph2DPainter));
   G__memfunc_setup("FindTriangles",1322,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintLevels",1127,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 0, 
"I - 'Int_t' 0 - T D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y i - 'Int_t' 0 '0' nblev "
"D - 'Double_t' 0 '0' glev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintPolyMarker0",1586,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGraph2DPainter",1423,G__G__HistPainter_97_0_4, 105, G__get_linked_tagnum(&G__G__HistPainterLN_TGraph2DPainter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGraph2DPainter",1423,G__G__HistPainter_97_0_5, 105, G__get_linked_tagnum(&G__G__HistPainterLN_TGraph2DPainter), -1, 0, 1, 1, 1, 0, "U 'TGraphDelaunay' - 0 - gd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetContourList",1446,G__G__HistPainter_97_0_6, 85, G__get_linked_tagnum(&G__G__HistPainterLN_TList), -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - contour", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintTriangles",1445,G__G__HistPainter_97_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintPolyMarker",1538,G__G__HistPainter_97_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintPolyLine",1320,G__G__HistPainter_97_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintContour",1254,G__G__HistPainter_97_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__HistPainter_97_0_12, 85, G__get_linked_tagnum(&G__G__HistPainterLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGraph2DPainter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__HistPainter_97_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGraph2DPainter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__HistPainter_97_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGraph2DPainter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__HistPainter_97_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGraph2DPainter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HistPainterLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__HistPainter_97_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__HistPainter_97_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGraph2DPainter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__HistPainter_97_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGraph2DPainter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__HistPainter_97_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGraph2DPainter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__HistPainter_97_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGraph2DPainter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TGraph2DPainter", 1423, G__G__HistPainter_97_0_24, (int) ('i'), G__get_linked_tagnum(&G__G__HistPainterLN_TGraph2DPainter), -1, 0, 1, 1, 1, 0, "u 'TGraph2DPainter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TGraph2DPainter", 1549, G__G__HistPainter_97_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__HistPainter_97_0_26, (int) ('u'), G__get_linked_tagnum(&G__G__HistPainterLN_TGraph2DPainter), -1, 1, 1, 1, 1, 0, "u 'TGraph2DPainter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGraphPainter(void) {
   /* TGraphPainter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TGraphPainter));
   G__memfunc_setup("TGraphPainter",1305,G__G__HistPainter_101_0_1, 105, G__get_linked_tagnum(&G__G__HistPainterLN_TGraphPainter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeLogs",1138,G__G__HistPainter_101_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - npoints i - 'Int_t' 0 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DistancetoPrimitiveHelper",2599,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'TGraph' - 0 - theGraph i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawPanelHelper",1502,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TGraph' - 0 - theGraph", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEventHelper",1845,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TGraph' - 0 - theGraph i - 'Int_t' 0 - event "
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObjectInfoHelper",1891,(G__InterfaceMethod) NULL,67, -1, -1, 0, 3, 1, 1, 8, 
"U 'TGraph' - 0 - theGraph i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintHelper",1116,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGraph' - 0 - theGraph C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintGraph",1006,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TGraph' - 0 - theGraph i - 'Int_t' 0 - npoints "
"D - 'Double_t' 10 - x D - 'Double_t' 10 - y "
"C - 'Option_t' 10 - chopt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintGrapHist",1310,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TGraph' - 0 - theGraph i - 'Int_t' 0 - npoints "
"D - 'Double_t' 10 - x D - 'Double_t' 10 - y "
"C - 'Option_t' 10 - chopt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintGraphAsymmErrors",2162,G__G__HistPainter_101_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGraph' - 0 - theGraph C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintGraphBentErrors",2036,G__G__HistPainter_101_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGraph' - 0 - theGraph C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintGraphErrors",1643,G__G__HistPainter_101_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGraph' - 0 - theGraph C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintGraphPolar",1516,G__G__HistPainter_101_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGraph' - 0 - theGraph C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintGraphQQ",1168,G__G__HistPainter_101_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGraph' - 0 - theGraph C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintGraphSimple",1624,G__G__HistPainter_101_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGraph' - 0 - theGraph C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintPolyLineHatches",2024,G__G__HistPainter_101_0_16, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TGraph' - 0 - theGraph i - 'Int_t' 0 - n "
"D - 'Double_t' 10 - x D - 'Double_t' 10 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PaintStats",1035,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGraph' - 0 - theGraph U 'TF1' - 0 - fit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Smooth",634,G__G__HistPainter_101_0_18, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TGraph' - 0 - theGraph i - 'Int_t' 0 - npoints "
"D - 'Double_t' 0 - x D - 'Double_t' 0 - y "
"i - 'Int_t' 0 - drawtype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__HistPainter_101_0_19, 85, G__get_linked_tagnum(&G__G__HistPainterLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGraphPainter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__HistPainter_101_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGraphPainter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__HistPainter_101_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGraphPainter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__HistPainter_101_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGraphPainter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HistPainterLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__HistPainter_101_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__HistPainter_101_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGraphPainter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__HistPainter_101_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGraphPainter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__HistPainter_101_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGraphPainter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__HistPainter_101_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGraphPainter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TGraphPainter", 1305, G__G__HistPainter_101_0_31, (int) ('i'), G__get_linked_tagnum(&G__G__HistPainterLN_TGraphPainter), -1, 0, 1, 1, 1, 0, "u 'TGraphPainter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TGraphPainter", 1431, G__G__HistPainter_101_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__HistPainter_101_0_33, (int) ('u'), G__get_linked_tagnum(&G__G__HistPainterLN_TGraphPainter), -1, 1, 1, 1, 1, 0, "u 'TGraphPainter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPainter3dAlgorithms(void) {
   /* TPainter3dAlgorithms */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms));
   G__memfunc_setup("TPainter3dAlgorithms",2008,G__G__HistPainter_118_0_1, 105, G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPainter3dAlgorithms",2008,G__G__HistPainter_118_0_2, 105, G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms), -1, 0, 3, 1, 1, 0, 
"D - 'Double_t' 0 - rmin D - 'Double_t' 0 - rmax "
"i - 'Int_t' 0 '1' system", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BackBox",666,G__G__HistPainter_118_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ang", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearRaster",1112,G__G__HistPainter_118_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ColorFunction",1349,G__G__HistPainter_118_0_5, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - nl D - 'Double_t' 0 - fl "
"I - 'Int_t' 0 - icl i - 'Int_t' 1 - irep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefineGridLevels",1596,G__G__HistPainter_118_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ndivz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFaceGouraudShaded",2077,G__G__HistPainter_118_0_7, 121, -1, -1, 0, 5, 1, 1, 0, 
"I - 'Int_t' 0 - icodes D - 'Double_t' 2 - xyz "
"i - 'Int_t' 0 - np I - 'Int_t' 0 - iface "
"D - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFaceMode1",1203,G__G__HistPainter_118_0_8, 121, -1, -1, 0, 5, 1, 1, 0, 
"I - 'Int_t' 0 - icodes D - 'Double_t' 0 - xyz "
"i - 'Int_t' 0 - np I - 'Int_t' 0 - iface "
"D - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFaceMode2",1204,G__G__HistPainter_118_0_9, 121, -1, -1, 0, 5, 1, 1, 0, 
"I - 'Int_t' 0 - icodes D - 'Double_t' 0 - xyz "
"i - 'Int_t' 0 - np I - 'Int_t' 0 - iface "
"D - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFaceMode3",1205,G__G__HistPainter_118_0_10, 121, -1, -1, 0, 5, 1, 1, 0, 
"I - 'Int_t' 0 - icodes D - 'Double_t' 0 - xyz "
"i - 'Int_t' 0 - np I - 'Int_t' 0 - iface "
"D - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFaceMove1",1221,G__G__HistPainter_118_0_11, 121, -1, -1, 0, 5, 1, 1, 0, 
"I - 'Int_t' 0 - icodes D - 'Double_t' 0 - xyz "
"i - 'Int_t' 0 - np I - 'Int_t' 0 - iface "
"D - 'Double_t' 0 - tt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFaceMove2",1222,G__G__HistPainter_118_0_12, 121, -1, -1, 0, 5, 1, 1, 0, 
"I - 'Int_t' 0 - icodes D - 'Double_t' 0 - xyz "
"i - 'Int_t' 0 - np I - 'Int_t' 0 - iface "
"D - 'Double_t' 0 - tt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFaceMove3",1223,G__G__HistPainter_118_0_13, 121, -1, -1, 0, 5, 1, 1, 0, 
"I - 'Int_t' 0 - icodes D - 'Double_t' 0 - xyz "
"i - 'Int_t' 0 - np I - 'Int_t' 0 - iface "
"D - 'Double_t' 0 - tt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFaceRaster1",1439,G__G__HistPainter_118_0_14, 121, -1, -1, 0, 5, 1, 1, 0, 
"I - 'Int_t' 0 - icodes D - 'Double_t' 0 - xyz "
"i - 'Int_t' 0 - np I - 'Int_t' 0 - iface "
"D - 'Double_t' 0 - tt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFaceRaster2",1440,G__G__HistPainter_118_0_15, 121, -1, -1, 0, 5, 1, 1, 0, 
"I - 'Int_t' 0 - icodes D - 'Double_t' 0 - xyz "
"i - 'Int_t' 0 - np I - 'Int_t' 0 - iface "
"D - 'Double_t' 0 - tt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillPolygon",1135,G__G__HistPainter_118_0_16, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 0 - p "
"D - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillPolygonBorder",1741,G__G__HistPainter_118_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - nn D - 'Double_t' 0 - xy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindLevelLines",1396,G__G__HistPainter_118_0_18, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - np D - 'Double_t' 0 - f "
"D - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPartEdge",1165,G__G__HistPainter_118_0_19, 121, -1, -1, 0, 8, 1, 1, 0, 
"D - 'Double_t' 0 - p1 D - 'Double_t' 0 - p2 "
"d - 'Double_t' 0 - f1 d - 'Double_t' 0 - f2 "
"d - 'Double_t' 0 - fmin d - 'Double_t' 0 - fmax "
"i - 'Int_t' 1 - kpp D - 'Double_t' 0 - pp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindVisibleLine",1495,G__G__HistPainter_118_0_20, 121, -1, -1, 0, 5, 1, 1, 0, 
"D - 'Double_t' 0 - p1 D - 'Double_t' 0 - p2 "
"i - 'Int_t' 0 - ntmax i - 'Int_t' 1 - nt "
"D - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindVisibleDraw",1501,G__G__HistPainter_118_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - r1 D - 'Double_t' 0 - r2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FrontBox",818,G__G__HistPainter_118_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ang", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GouraudFunction",1565,G__G__HistPainter_118_0_23, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - ia i - 'Int_t' 0 - ib "
"D - 'Double_t' 0 - f D - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ImplicitFunction",1665,G__G__HistPainter_118_0_24, 121, -1, -1, 0, 6, 1, 1, 0, 
"D - 'Double_t' 0 - rmin D - 'Double_t' 0 - rmax "
"i - 'Int_t' 0 - nx i - 'Int_t' 0 - ny "
"i - 'Int_t' 0 - nz C - - 10 - chopt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsoSurface",1012,G__G__HistPainter_118_0_25, 121, -1, -1, 0, 9, 1, 1, 0, 
"i - 'Int_t' 0 - ns D - 'Double_t' 0 - s "
"i - 'Int_t' 0 - nx i - 'Int_t' 0 - ny "
"i - 'Int_t' 0 - nz D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y D - 'Double_t' 0 - z "
"C - - 10 - chopt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitMoveScreen",1419,G__G__HistPainter_118_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - xmin d - 'Double_t' 0 - xmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRaster",1029,G__G__HistPainter_118_0_27, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - xmin d - 'Double_t' 0 - ymin "
"d - 'Double_t' 0 - xmax d - 'Double_t' 0 - ymax "
"i - 'Int_t' 0 - nx i - 'Int_t' 0 - ny", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LegoCartesian",1313,G__G__HistPainter_118_0_28, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - ang i - 'Int_t' 0 - nx "
"i - 'Int_t' 0 - ny C - - 10 - chopt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LegoFunction",1229,G__G__HistPainter_118_0_29, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - ia i - 'Int_t' 0 - ib "
"i - 'Int_t' 1 - nv D - 'Double_t' 0 - ab "
"D - 'Double_t' 0 - vv D - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LegoPolar",901,G__G__HistPainter_118_0_30, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - iordr i - 'Int_t' 0 - na "
"i - 'Int_t' 0 - nb C - - 10 - chopt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LegoCylindrical",1525,G__G__HistPainter_118_0_31, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - iordr i - 'Int_t' 0 - na "
"i - 'Int_t' 0 - nb C - - 10 - chopt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LegoSpherical",1314,G__G__HistPainter_118_0_32, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - ipsdr i - 'Int_t' 0 - iordr "
"i - 'Int_t' 0 - na i - 'Int_t' 0 - nb "
"C - - 10 - chopt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LightSource",1129,G__G__HistPainter_118_0_33, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - nl d - 'Double_t' 0 - yl "
"d - 'Double_t' 0 - xscr d - 'Double_t' 0 - yscr "
"d - 'Double_t' 0 - zscr i - 'Int_t' 1 - irep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Luminosity",1085,G__G__HistPainter_118_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - anorm d - 'Double_t' 1 - flum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarchingCube",1192,G__G__HistPainter_118_0_35, 121, -1, -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - fiso D - 'Double_t' 2 - p "
"D - 'Double_t' 0 - f D - 'Double_t' 2 - g "
"i - 'Int_t' 1 - nnod i - 'Int_t' 1 - ntria "
"D - 'Double_t' 2 - xyz D - 'Double_t' 2 - grad "
"I - 'Int_t' 2 - itria", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarchingCubeCase00",1668,G__G__HistPainter_118_0_36, 121, -1, -1, 0, 11, 1, 1, 0, 
"i - 'Int_t' 0 - k1 i - 'Int_t' 0 - k2 "
"i - 'Int_t' 0 - k3 i - 'Int_t' 0 - k4 "
"i - 'Int_t' 0 - k5 i - 'Int_t' 0 - k6 "
"i - 'Int_t' 1 - nnod i - 'Int_t' 1 - ntria "
"D - 'Double_t' 2 - xyz D - 'Double_t' 2 - grad "
"I - 'Int_t' 2 - itria", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarchingCubeCase03",1671,G__G__HistPainter_118_0_37, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - nnod i - 'Int_t' 1 - ntria "
"D - 'Double_t' 2 - xyz D - 'Double_t' 2 - grad "
"I - 'Int_t' 2 - itria", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarchingCubeCase04",1672,G__G__HistPainter_118_0_38, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - nnod i - 'Int_t' 1 - ntria "
"D - 'Double_t' 2 - xyz D - 'Double_t' 2 - grad "
"I - 'Int_t' 2 - itria", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarchingCubeCase06",1674,G__G__HistPainter_118_0_39, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - nnod i - 'Int_t' 1 - ntria "
"D - 'Double_t' 2 - xyz D - 'Double_t' 2 - grad "
"I - 'Int_t' 2 - itria", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarchingCubeCase07",1675,G__G__HistPainter_118_0_40, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - nnod i - 'Int_t' 1 - ntria "
"D - 'Double_t' 2 - xyz D - 'Double_t' 2 - grad "
"I - 'Int_t' 2 - itria", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarchingCubeCase10",1669,G__G__HistPainter_118_0_41, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - nnod i - 'Int_t' 1 - ntria "
"D - 'Double_t' 2 - xyz D - 'Double_t' 2 - grad "
"I - 'Int_t' 2 - itria", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarchingCubeCase12",1671,G__G__HistPainter_118_0_42, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - nnod i - 'Int_t' 1 - ntria "
"D - 'Double_t' 2 - xyz D - 'Double_t' 2 - grad "
"I - 'Int_t' 2 - itria", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarchingCubeCase13",1672,G__G__HistPainter_118_0_43, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - nnod i - 'Int_t' 1 - ntria "
"D - 'Double_t' 2 - xyz D - 'Double_t' 2 - grad "
"I - 'Int_t' 2 - itria", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarchingCubeSetTriangles",2429,G__G__HistPainter_118_0_44, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ntria I - 'Int_t' 2 - it "
"I - 'Int_t' 2 - itria", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarchingCubeMiddlePoint",2305,G__G__HistPainter_118_0_45, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - nnod D - 'Double_t' 2 - xyz "
"D - 'Double_t' 2 - grad I - 'Int_t' 2 - it "
"D - 'Double_t' 0 - pxyz D - 'Double_t' 0 - pgrad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarchingCubeSurfacePenetration",3066,G__G__HistPainter_118_0_46, 121, -1, -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - a00 d - 'Double_t' 0 - a10 "
"d - 'Double_t' 0 - a11 d - 'Double_t' 0 - a01 "
"d - 'Double_t' 0 - b00 d - 'Double_t' 0 - b10 "
"d - 'Double_t' 0 - b11 d - 'Double_t' 0 - b01 "
"i - 'Int_t' 1 - irep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarchingCubeFindNodes",2082,G__G__HistPainter_118_0_47, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - nnod I - 'Int_t' 0 - ie "
"D - 'Double_t' 2 - xyz D - 'Double_t' 2 - grad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ModifyScreen",1224,G__G__HistPainter_118_0_48, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - r1 D - 'Double_t' 0 - r2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrawFace",1065,G__G__HistPainter_118_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "a - 'TPainter3dAlgorithms::DrawFaceFunc_t' 0 - pointer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsoSurfaceParameters",2356,G__G__HistPainter_118_0_50, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - fmin d - 'Double_t' 0 - fmax "
"i - 'Int_t' 0 - ncolor i - 'Int_t' 0 - ic1 "
"i - 'Int_t' 0 - ic2 i - 'Int_t' 0 - ic3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLegoFunction",1529,G__G__HistPainter_118_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "a - 'TPainter3dAlgorithms::LegoFunc_t' 0 - pointer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMesh",697,G__G__HistPainter_118_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' mesh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSurfaceFunction",1851,G__G__HistPainter_118_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "a - 'TPainter3dAlgorithms::SurfaceFunc_t' 0 - pointer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColorDark",1197,G__G__HistPainter_118_0_54, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Color_t' 0 - color i - 'Int_t' 0 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColorMain",1200,G__G__HistPainter_118_0_55, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Color_t' 0 - color i - 'Int_t' 0 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SideVisibilityDecode",2033,G__G__HistPainter_118_0_56, 121, -1, -1, 0, 8, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 1 - iv1 "
"i - 'Int_t' 1 - iv2 i - 'Int_t' 1 - iv3 "
"i - 'Int_t' 1 - iv4 i - 'Int_t' 1 - iv5 "
"i - 'Int_t' 1 - iv6 i - 'Int_t' 1 - ir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SideVisibilityEncode",2043,G__G__HistPainter_118_0_57, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - iopt d - 'Double_t' 0 - phi1 "
"d - 'Double_t' 0 - phi2 d - 'Double_t' 1 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spectrum",851,G__G__HistPainter_118_0_58, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - nl d - 'Double_t' 0 - fmin "
"d - 'Double_t' 0 - fmax i - 'Int_t' 0 - ic "
"i - 'Int_t' 0 - idc i - 'Int_t' 1 - irep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SurfaceCartesian",1635,G__G__HistPainter_118_0_59, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - ang i - 'Int_t' 0 - nx "
"i - 'Int_t' 0 - ny C - - 10 - chopt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SurfacePolar",1223,G__G__HistPainter_118_0_60, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - iordr i - 'Int_t' 0 - na "
"i - 'Int_t' 0 - nb C - - 10 - chopt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SurfaceCylindrical",1847,G__G__HistPainter_118_0_61, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - iordr i - 'Int_t' 0 - na "
"i - 'Int_t' 0 - nb C - - 10 - chopt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SurfaceFunction",1551,G__G__HistPainter_118_0_62, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - ia i - 'Int_t' 0 - ib "
"D - 'Double_t' 0 - f D - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SurfaceSpherical",1636,G__G__HistPainter_118_0_63, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - ipsdr i - 'Int_t' 0 - iordr "
"i - 'Int_t' 0 - na i - 'Int_t' 0 - nb "
"C - - 10 - chopt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SurfaceProperty",1582,G__G__HistPainter_118_0_64, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - qqa d - 'Double_t' 0 - qqd "
"d - 'Double_t' 0 - qqs i - 'Int_t' 0 - nnqs "
"i - 'Int_t' 1 - irep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TestEdge",789,G__G__HistPainter_118_0_65, 121, -1, -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - del D - 'Double_t' 2 - xyz "
"i - 'Int_t' 0 - i1 i - 'Int_t' 0 - i2 "
"I - 'Int_t' 0 - iface D - 'Double_t' 0 - abcd "
"i - 'Int_t' 1 - irep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZDepth",591,G__G__HistPainter_118_0_66, 121, -1, -1, 0, 6, 1, 1, 0, 
"D - 'Double_t' 2 - xyz i - 'Int_t' 1 - nface "
"I - 'Int_t' 2 - iface D - 'Double_t' 2 - dface "
"D - 'Double_t' 2 - abcd I - 'Int_t' 0 - iorder", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetF3",421,G__G__HistPainter_118_0_67, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TF3' - 0 - f3", (char*)NULL, (void*) G__func2void( (void (*)(TF3*))(&TPainter3dAlgorithms::SetF3) ), 0);
   G__memfunc_setup("SetF3ClippingBoxOff",1823,G__G__HistPainter_118_0_68, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPainter3dAlgorithms::SetF3ClippingBoxOff) ), 0);
   G__memfunc_setup("SetF3ClippingBoxOn",1729,G__G__HistPainter_118_0_69, 121, -1, -1, 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - xclip d - 'Double_t' 0 - yclip "
"d - 'Double_t' 0 - zclip", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Double_t, Double_t))(&TPainter3dAlgorithms::SetF3ClippingBoxOn) ), 0);
   G__memfunc_setup("Class",502,G__G__HistPainter_118_0_70, 85, G__get_linked_tagnum(&G__G__HistPainterLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPainter3dAlgorithms::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__HistPainter_118_0_71, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPainter3dAlgorithms::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__HistPainter_118_0_72, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPainter3dAlgorithms::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__HistPainter_118_0_73, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPainter3dAlgorithms::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HistPainterLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__HistPainter_118_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__HistPainter_118_0_78, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPainter3dAlgorithms::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__HistPainter_118_0_79, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPainter3dAlgorithms::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__HistPainter_118_0_80, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPainter3dAlgorithms::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__HistPainter_118_0_81, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPainter3dAlgorithms::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TPainter3dAlgorithms", 2008, G__G__HistPainter_118_0_82, (int) ('i'), G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms), -1, 0, 1, 1, 1, 0, "u 'TPainter3dAlgorithms' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPainter3dAlgorithms", 2134, G__G__HistPainter_118_0_83, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__HistPainter_118_0_84, (int) ('u'), G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms), -1, 1, 1, 1, 1, 0, "u 'TPainter3dAlgorithms' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHistPainter(void) {
   /* THistPainter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HistPainterLN_THistPainter));
   G__memfunc_setup("THistPainter",1215,G__G__HistPainter_120_0_1, 105, G__get_linked_tagnum(&G__G__HistPainterLN_THistPainter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefineColorLevels",1717,G__G__HistPainter_120_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ndivz", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawPanel",894,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetContourList",1446,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HistPainterLN_TList), -1, 0, 1, 1, 1, 8, "d - 'Double_t' 0 - contour", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObjectInfo",1283,(G__InterfaceMethod) NULL,67, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStack",790,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HistPainterLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInside",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInside",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeChopt",892,G__G__HistPainter_120_0_11, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeCuts",797,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 0 - cutsopt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintArrows",1146,G__G__HistPainter_120_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintAxis",913,G__G__HistPainter_120_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' drawGridOnly", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintBar",785,G__G__HistPainter_120_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintBarH",857,G__G__HistPainter_120_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintBoxes",1021,G__G__HistPainter_120_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintColorLevels",1638,G__G__HistPainter_120_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintContour",1254,G__G__HistPainter_120_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintContourLine",1646,G__G__HistPainter_120_0_21, 105, -1, G__defined_typename("Int_t"), 0, 12, 1, 1, 0, 
"d - 'Double_t' 0 - elev1 i - 'Int_t' 0 - icont1 "
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - elev2 i - 'Int_t' 0 - icont2 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2 "
"D - 'Double_t' 0 - xarr D - 'Double_t' 0 - yarr "
"I - 'Int_t' 0 - itarr D - 'Double_t' 0 - levels", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintErrors",1145,G__G__HistPainter_120_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint2DErrors",1263,G__G__HistPainter_120_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintFrame",999,G__G__HistPainter_120_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintFunction",1346,G__G__HistPainter_120_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintHist",916,G__G__HistPainter_120_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintH3",631,G__G__HistPainter_120_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintH3Iso",930,G__G__HistPainter_120_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintInit",912,G__G__HistPainter_120_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintInitH",984,G__G__HistPainter_120_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintLego",899,G__G__HistPainter_120_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintLegoAxis",1304,G__G__HistPainter_120_0_32, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGaxis' - 0 - axis d - 'Double_t' 0 - ang", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintPalette",1227,G__G__HistPainter_120_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintScatterPlot",1649,G__G__HistPainter_120_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintStat",920,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - dostat U 'TF1' - 0 - fit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintStat2",970,G__G__HistPainter_120_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - dostat U 'TF1' - 0 - fit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintStat3",971,G__G__HistPainter_120_0_37, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - dostat U 'TF1' - 0 - fit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintSurface",1221,G__G__HistPainter_120_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintTriangles",1445,G__G__HistPainter_120_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintTable",996,G__G__HistPainter_120_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintText",929,G__G__HistPainter_120_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintTitle",1022,G__G__HistPainter_120_0_42, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintTF3",713,G__G__HistPainter_120_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessMessage",1444,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - mess U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProjectAitoff2xy",1619,G__G__HistPainter_120_0_45, 105, -1, G__defined_typename("Int_t"), 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - l d - 'Double_t' 0 - b "
"d - 'Double_t' 1 - Al d - 'Double_t' 1 - Ab", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t, Double_t, Double_t&, Double_t&))(&THistPainter::ProjectAitoff2xy) ), 0);
   G__memfunc_setup("ProjectMercator2xy",1847,G__G__HistPainter_120_0_46, 105, -1, G__defined_typename("Int_t"), 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - l d - 'Double_t' 0 - b "
"d - 'Double_t' 1 - Al d - 'Double_t' 1 - Ab", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t, Double_t, Double_t&, Double_t&))(&THistPainter::ProjectMercator2xy) ), 0);
   G__memfunc_setup("ProjectSinusoidal2xy",2069,G__G__HistPainter_120_0_47, 105, -1, G__defined_typename("Int_t"), 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - l d - 'Double_t' 0 - b "
"d - 'Double_t' 1 - Al d - 'Double_t' 1 - Ab", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t, Double_t, Double_t&, Double_t&))(&THistPainter::ProjectSinusoidal2xy) ), 0);
   G__memfunc_setup("ProjectParabolic2xy",1927,G__G__HistPainter_120_0_48, 105, -1, G__defined_typename("Int_t"), 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - l d - 'Double_t' 0 - b "
"d - 'Double_t' 1 - Al d - 'Double_t' 1 - Ab", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t, Double_t, Double_t&, Double_t&))(&THistPainter::ProjectParabolic2xy) ), 0);
   G__memfunc_setup("RecalculateRange",1618,G__G__HistPainter_120_0_49, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RecursiveRemove",1574,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHistogram",1242,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1' - 0 - h", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetStack",802,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - stack", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetShowProjection",1770,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - option i - 'Int_t' 0 - nbins", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowProjectionX",1558,G__G__HistPainter_120_0_54, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowProjectionY",1559,G__G__HistPainter_120_0_55, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowProjection3",1521,G__G__HistPainter_120_0_56, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TableInit",892,G__G__HistPainter_120_0_57, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBestFormat",1303,G__G__HistPainter_120_0_58, 67, -1, -1, 0, 3, 3, 1, 1, 
"d - 'Double_t' 0 - v d - 'Double_t' 0 - e "
"C - - 10 - f", (char*)NULL, (void*) G__func2void( (const char* (*)(Double_t, Double_t, const char*))(&THistPainter::GetBestFormat) ), 0);
   G__memfunc_setup("PaintSpecialObjects",1927,G__G__HistPainter_120_0_59, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TObject' - 10 - obj C - 'Option_t' 10 - option", (char*)NULL, (void*) G__func2void( (void (*)(const TObject*, Option_t*))(&THistPainter::PaintSpecialObjects) ), 0);
   G__memfunc_setup("Class",502,G__G__HistPainter_120_0_60, 85, G__get_linked_tagnum(&G__G__HistPainterLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THistPainter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__HistPainter_120_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THistPainter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__HistPainter_120_0_62, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THistPainter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__HistPainter_120_0_63, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THistPainter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HistPainterLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__HistPainter_120_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__HistPainter_120_0_68, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THistPainter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__HistPainter_120_0_69, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THistPainter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__HistPainter_120_0_70, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THistPainter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__HistPainter_120_0_71, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THistPainter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THistPainter", 1215, G__G__HistPainter_120_0_72, (int) ('i'), G__get_linked_tagnum(&G__G__HistPainterLN_THistPainter), -1, 0, 1, 1, 1, 0, "u 'THistPainter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THistPainter", 1341, G__G__HistPainter_120_0_73, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__HistPainter_120_0_74, (int) ('u'), G__get_linked_tagnum(&G__G__HistPainterLN_THistPainter), -1, 1, 1, 1, 1, 0, "u 'THistPainter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPaletteAxis(void) {
   /* TPaletteAxis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TPaletteAxis));
   G__memfunc_setup("TPaletteAxis",1208,G__G__HistPainter_132_0_1, 105, G__get_linked_tagnum(&G__G__HistPainterLN_TPaletteAxis), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPaletteAxis",1208,G__G__HistPainter_132_0_2, 105, G__get_linked_tagnum(&G__G__HistPainterLN_TPaletteAxis), -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2 "
"U 'TH1' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPaletteAxis",1208,G__G__HistPainter_132_0_3, 105, G__get_linked_tagnum(&G__G__HistPainterLN_TPaletteAxis), -1, 0, 1, 1, 1, 0, "u 'TPaletteAxis' - 11 - palette", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - palette", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAxis",693,G__G__HistPainter_132_0_7, 85, G__get_linked_tagnum(&G__G__HistPainterLN_TGaxis), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBinColor",1080,G__G__HistPainter_132_0_8, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Option_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObjectInfo",1283,(G__InterfaceMethod) NULL,67, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetValueColor",1308,G__G__HistPainter_132_0_11, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - zc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetName",685,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' name", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetLabelColor",1291,G__G__HistPainter_132_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - labelcolor", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetLabelFont",1187,G__G__HistPainter_132_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - labelfont", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetLabelOffset",1395,G__G__HistPainter_132_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - labeloffset", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetLabelSize",1191,G__G__HistPainter_132_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - labelsize", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetTitleOffset",1429,G__G__HistPainter_132_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '1' titleoffset", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetTitleSize",1225,G__G__HistPainter_132_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - titlesize", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetLineColor",1203,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - linecolor", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetLineWidth",1204,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "s - 'Width_t' 0 - linewidth", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("UnZoom",616,G__G__HistPainter_132_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__HistPainter_132_0_24, 85, G__get_linked_tagnum(&G__G__HistPainterLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPaletteAxis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__HistPainter_132_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPaletteAxis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__HistPainter_132_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPaletteAxis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__HistPainter_132_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPaletteAxis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__HistPainterLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__HistPainter_132_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__HistPainter_132_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPaletteAxis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__HistPainter_132_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPaletteAxis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__HistPainter_132_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPaletteAxis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__HistPainter_132_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPaletteAxis::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TPaletteAxis", 1334, G__G__HistPainter_132_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__HistPainter() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__HistPainter() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__HistPainter() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__HistPainterLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TGraph2D = { "TGraph2D" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TGraphDelaunay = { "TGraphDelaunay" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TGraph2DPainter = { "TGraph2DPainter" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TVirtualGraphPainter = { "TVirtualGraphPainter" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TGraphPainter = { "TGraphPainter" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TVirtualHistPainter = { "TVirtualHistPainter" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TAxis = { "TAxis" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TCutG = { "TCutG" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TGaxis = { "TGaxis" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TPainter3dAlgorithms = { "TPainter3dAlgorithms" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TPie = { "TPie" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_THistPainter = { "THistPainter" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TF3 = { "TF3" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TBox = { "TBox" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TPave = { "TPave" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TPaletteAxis = { "TPaletteAxis" , 99 , -1 };
G__linked_taginfo G__G__HistPainterLN_TPaletteAxiscLcLdA = { "TPaletteAxis::$" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__HistPainter() {
  G__G__HistPainterLN_TClass.tagnum = -1 ;
  G__G__HistPainterLN_TBuffer.tagnum = -1 ;
  G__G__HistPainterLN_TMemberInspector.tagnum = -1 ;
  G__G__HistPainterLN_TObject.tagnum = -1 ;
  G__G__HistPainterLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__HistPainterLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__HistPainterLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__HistPainterLN_TList.tagnum = -1 ;
  G__G__HistPainterLN_TString.tagnum = -1 ;
  G__G__HistPainterLN_TGraph2D.tagnum = -1 ;
  G__G__HistPainterLN_TGraphDelaunay.tagnum = -1 ;
  G__G__HistPainterLN_TGraph2DPainter.tagnum = -1 ;
  G__G__HistPainterLN_TGraph.tagnum = -1 ;
  G__G__HistPainterLN_TF1.tagnum = -1 ;
  G__G__HistPainterLN_TVirtualGraphPainter.tagnum = -1 ;
  G__G__HistPainterLN_TGraphPainter.tagnum = -1 ;
  G__G__HistPainterLN_TH1.tagnum = -1 ;
  G__G__HistPainterLN_TVirtualHistPainter.tagnum = -1 ;
  G__G__HistPainterLN_TAxis.tagnum = -1 ;
  G__G__HistPainterLN_TCutG.tagnum = -1 ;
  G__G__HistPainterLN_TGaxis.tagnum = -1 ;
  G__G__HistPainterLN_TPainter3dAlgorithms.tagnum = -1 ;
  G__G__HistPainterLN_TPie.tagnum = -1 ;
  G__G__HistPainterLN_THistPainter.tagnum = -1 ;
  G__G__HistPainterLN_TAttLine.tagnum = -1 ;
  G__G__HistPainterLN_TAttFill.tagnum = -1 ;
  G__G__HistPainterLN_TF3.tagnum = -1 ;
  G__G__HistPainterLN_TBox.tagnum = -1 ;
  G__G__HistPainterLN_TPave.tagnum = -1 ;
  G__G__HistPainterLN_TPaletteAxis.tagnum = -1 ;
  G__G__HistPainterLN_TPaletteAxiscLcLdA.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__HistPainter() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TList);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TString);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TGraph2D);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TGraphDelaunay);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TGraph2DPainter),sizeof(TGraph2DPainter),-1,62720,"TGraph2D painter",G__setup_memvarTGraph2DPainter,G__setup_memfuncTGraph2DPainter);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TGraph);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TF1);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TVirtualGraphPainter);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TGraphPainter),sizeof(TGraphPainter),-1,29952,"TGraph painter",G__setup_memvarTGraphPainter,G__setup_memfuncTGraphPainter);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TH1);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TVirtualHistPainter);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TAxis);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TCutG);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TGaxis);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TPainter3dAlgorithms),sizeof(TPainter3dAlgorithms),-1,62720,"Hidden line removal package",G__setup_memvarTPainter3dAlgorithms,G__setup_memfuncTPainter3dAlgorithms);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TPie);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HistPainterLN_THistPainter),sizeof(THistPainter),-1,29952,"Helper class to draw histograms",G__setup_memvarTHistPainter,G__setup_memfuncTHistPainter);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TF3);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TBox);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TPave);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__HistPainterLN_TPaletteAxis),sizeof(TPaletteAxis),-1,325376,"class used to display a color palette axis for 2-d plots",G__setup_memvarTPaletteAxis,G__setup_memfuncTPaletteAxis);
   G__get_linked_tagnum_fwd(&G__G__HistPainterLN_TPaletteAxiscLcLdA);
}
extern "C" void G__cpp_setupG__HistPainter(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__HistPainter()");
  G__set_cpp_environmentG__HistPainter();
  G__cpp_setup_tagtableG__HistPainter();

  G__cpp_setup_inheritanceG__HistPainter();

  G__cpp_setup_typetableG__HistPainter();

  G__cpp_setup_memvarG__HistPainter();

  G__cpp_setup_memfuncG__HistPainter();
  G__cpp_setup_globalG__HistPainter();
  G__cpp_setup_funcG__HistPainter();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__HistPainter();
  return;
}
class G__cpp_setup_initG__HistPainter {
  public:
    G__cpp_setup_initG__HistPainter() { G__add_setup_func("G__HistPainter",(G__incsetup)(&G__cpp_setupG__HistPainter)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__HistPainter() { G__remove_setup_func("G__HistPainter"); }
};
G__cpp_setup_initG__HistPainter G__cpp_setup_initializerG__HistPainter;

