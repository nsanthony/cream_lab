//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:50:05 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__XMLParser.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TXMLParser_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TXMLParser(void *p);
   static void deleteArray_TXMLParser(void *p);
   static void destruct_TXMLParser(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TXMLParser*)
   {
      ::TXMLParser *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TXMLParser >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TXMLParser", ::TXMLParser::Class_Version(), "include/TXMLParser.h", 46,
                  typeid(::TXMLParser), DefineBehavior(ptr, ptr),
                  &::TXMLParser::Dictionary, isa_proxy, 0,
                  sizeof(::TXMLParser) );
      instance.SetDelete(&delete_TXMLParser);
      instance.SetDeleteArray(&deleteArray_TXMLParser);
      instance.SetDestructor(&destruct_TXMLParser);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TXMLParser*)
   {
      return GenerateInitInstanceLocal((::TXMLParser*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TXMLParser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TXMLNode_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TXMLNode(void *p);
   static void deleteArray_TXMLNode(void *p);
   static void destruct_TXMLNode(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TXMLNode*)
   {
      ::TXMLNode *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TXMLNode >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TXMLNode", ::TXMLNode::Class_Version(), "include/TXMLNode.h", 40,
                  typeid(::TXMLNode), DefineBehavior(ptr, ptr),
                  &::TXMLNode::Dictionary, isa_proxy, 0,
                  sizeof(::TXMLNode) );
      instance.SetDelete(&delete_TXMLNode);
      instance.SetDeleteArray(&deleteArray_TXMLNode);
      instance.SetDestructor(&destruct_TXMLNode);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TXMLNode*)
   {
      return GenerateInitInstanceLocal((::TXMLNode*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TXMLNode*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TXMLDocument_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TXMLDocument(void *p);
   static void deleteArray_TXMLDocument(void *p);
   static void destruct_TXMLDocument(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TXMLDocument*)
   {
      ::TXMLDocument *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TXMLDocument >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TXMLDocument", ::TXMLDocument::Class_Version(), "include/TXMLDocument.h", 37,
                  typeid(::TXMLDocument), DefineBehavior(ptr, ptr),
                  &::TXMLDocument::Dictionary, isa_proxy, 0,
                  sizeof(::TXMLDocument) );
      instance.SetDelete(&delete_TXMLDocument);
      instance.SetDeleteArray(&deleteArray_TXMLDocument);
      instance.SetDestructor(&destruct_TXMLDocument);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TXMLDocument*)
   {
      return GenerateInitInstanceLocal((::TXMLDocument*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TXMLDocument*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDOMParser_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TDOMParser(void *p = 0);
   static void *newArray_TDOMParser(Long_t size, void *p);
   static void delete_TDOMParser(void *p);
   static void deleteArray_TDOMParser(void *p);
   static void destruct_TDOMParser(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDOMParser*)
   {
      ::TDOMParser *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDOMParser >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDOMParser", ::TDOMParser::Class_Version(), "include/TDOMParser.h", 38,
                  typeid(::TDOMParser), DefineBehavior(ptr, ptr),
                  &::TDOMParser::Dictionary, isa_proxy, 0,
                  sizeof(::TDOMParser) );
      instance.SetNew(&new_TDOMParser);
      instance.SetNewArray(&newArray_TDOMParser);
      instance.SetDelete(&delete_TDOMParser);
      instance.SetDeleteArray(&deleteArray_TDOMParser);
      instance.SetDestructor(&destruct_TDOMParser);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDOMParser*)
   {
      return GenerateInitInstanceLocal((::TDOMParser*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDOMParser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSAXParser_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TSAXParser(void *p = 0);
   static void *newArray_TSAXParser(Long_t size, void *p);
   static void delete_TSAXParser(void *p);
   static void deleteArray_TSAXParser(void *p);
   static void destruct_TSAXParser(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSAXParser*)
   {
      ::TSAXParser *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSAXParser >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSAXParser", ::TSAXParser::Class_Version(), "include/TSAXParser.h", 44,
                  typeid(::TSAXParser), DefineBehavior(ptr, ptr),
                  &::TSAXParser::Dictionary, isa_proxy, 0,
                  sizeof(::TSAXParser) );
      instance.SetNew(&new_TSAXParser);
      instance.SetNewArray(&newArray_TSAXParser);
      instance.SetDelete(&delete_TSAXParser);
      instance.SetDeleteArray(&deleteArray_TSAXParser);
      instance.SetDestructor(&destruct_TSAXParser);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSAXParser*)
   {
      return GenerateInitInstanceLocal((::TSAXParser*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSAXParser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TXMLAttr_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TXMLAttr(void *p);
   static void deleteArray_TXMLAttr(void *p);
   static void destruct_TXMLAttr(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TXMLAttr*)
   {
      ::TXMLAttr *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TXMLAttr >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TXMLAttr", ::TXMLAttr::Class_Version(), "include/TXMLAttr.h", 29,
                  typeid(::TXMLAttr), DefineBehavior(ptr, ptr),
                  &::TXMLAttr::Dictionary, isa_proxy, 0,
                  sizeof(::TXMLAttr) );
      instance.SetDelete(&delete_TXMLAttr);
      instance.SetDeleteArray(&deleteArray_TXMLAttr);
      instance.SetDestructor(&destruct_TXMLAttr);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TXMLAttr*)
   {
      return GenerateInitInstanceLocal((::TXMLAttr*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TXMLAttr*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TXMLParser::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXMLParser::Class_Name()
{
   return "TXMLParser";
}

//______________________________________________________________________________
const char *TXMLParser::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXMLParser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXMLParser::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXMLParser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXMLParser::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXMLParser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXMLParser::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXMLParser*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TXMLNode::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXMLNode::Class_Name()
{
   return "TXMLNode";
}

//______________________________________________________________________________
const char *TXMLNode::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXMLNode*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXMLNode::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXMLNode*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXMLNode::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXMLNode*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXMLNode::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXMLNode*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TXMLDocument::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXMLDocument::Class_Name()
{
   return "TXMLDocument";
}

//______________________________________________________________________________
const char *TXMLDocument::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXMLDocument*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXMLDocument::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXMLDocument*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXMLDocument::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXMLDocument*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXMLDocument::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXMLDocument*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDOMParser::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDOMParser::Class_Name()
{
   return "TDOMParser";
}

//______________________________________________________________________________
const char *TDOMParser::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDOMParser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDOMParser::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDOMParser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDOMParser::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDOMParser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDOMParser::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDOMParser*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSAXParser::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSAXParser::Class_Name()
{
   return "TSAXParser";
}

//______________________________________________________________________________
const char *TSAXParser::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSAXParser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSAXParser::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSAXParser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSAXParser::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSAXParser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSAXParser::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSAXParser*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TXMLAttr::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXMLAttr::Class_Name()
{
   return "TXMLAttr";
}

//______________________________________________________________________________
const char *TXMLAttr::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXMLAttr*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXMLAttr::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TXMLAttr*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXMLAttr::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXMLAttr*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXMLAttr::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TXMLAttr*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TXMLParser::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXMLParser.

   TObject::Streamer(R__b);
   TQObject::Streamer(R__b);
}

//______________________________________________________________________________
void TXMLParser::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXMLParser.
      TClass *R__cl = ::TXMLParser::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fContext", &fContext);
      R__insp.Inspect(R__cl, R__parent, "fValidate", &fValidate);
      R__insp.Inspect(R__cl, R__parent, "fReplaceEntities", &fReplaceEntities);
      R__insp.Inspect(R__cl, R__parent, "fStopError", &fStopError);
      R__insp.Inspect(R__cl, R__parent, "fValidateError", &fValidateError);
      fValidateError.ShowMembers(R__insp, strcat(R__parent,"fValidateError.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fValidateWarning", &fValidateWarning);
      fValidateWarning.ShowMembers(R__insp, strcat(R__parent,"fValidateWarning.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fParseCode", &fParseCode);
      TObject::ShowMembers(R__insp, R__parent);
      TQObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TXMLParser(void *p) {
      delete ((::TXMLParser*)p);
   }
   static void deleteArray_TXMLParser(void *p) {
      delete [] ((::TXMLParser*)p);
   }
   static void destruct_TXMLParser(void *p) {
      typedef ::TXMLParser current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXMLParser

//______________________________________________________________________________
void TSAXParser::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSAXParser.

   TXMLParser::Streamer(R__b);
}

//______________________________________________________________________________
void TSAXParser::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSAXParser.
      TClass *R__cl = ::TSAXParser::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSAXHandler", &fSAXHandler);
      TXMLParser::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSAXParser(void *p) {
      return  p ? new(p) ::TSAXParser : new ::TSAXParser;
   }
   static void *newArray_TSAXParser(Long_t nElements, void *p) {
      return p ? new(p) ::TSAXParser[nElements] : new ::TSAXParser[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSAXParser(void *p) {
      delete ((::TSAXParser*)p);
   }
   static void deleteArray_TSAXParser(void *p) {
      delete [] ((::TSAXParser*)p);
   }
   static void destruct_TSAXParser(void *p) {
      typedef ::TSAXParser current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSAXParser

//______________________________________________________________________________
void TDOMParser::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDOMParser.

   TXMLParser::Streamer(R__b);
}

//______________________________________________________________________________
void TDOMParser::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDOMParser.
      TClass *R__cl = ::TDOMParser::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTXMLDoc", &fTXMLDoc);
      TXMLParser::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDOMParser(void *p) {
      return  p ? new(p) ::TDOMParser : new ::TDOMParser;
   }
   static void *newArray_TDOMParser(Long_t nElements, void *p) {
      return p ? new(p) ::TDOMParser[nElements] : new ::TDOMParser[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDOMParser(void *p) {
      delete ((::TDOMParser*)p);
   }
   static void deleteArray_TDOMParser(void *p) {
      delete [] ((::TDOMParser*)p);
   }
   static void destruct_TDOMParser(void *p) {
      typedef ::TDOMParser current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDOMParser

//______________________________________________________________________________
void TXMLAttr::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXMLAttr.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TXMLAttr::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXMLAttr.
      TClass *R__cl = ::TXMLAttr::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fKey", &fKey);
      R__insp.Inspect(R__cl, R__parent, "*fValue", &fValue);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TXMLAttr(void *p) {
      delete ((::TXMLAttr*)p);
   }
   static void deleteArray_TXMLAttr(void *p) {
      delete [] ((::TXMLAttr*)p);
   }
   static void destruct_TXMLAttr(void *p) {
      typedef ::TXMLAttr current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXMLAttr

//______________________________________________________________________________
void TXMLDocument::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXMLDocument.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TXMLDocument::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXMLDocument.
      TClass *R__cl = ::TXMLDocument::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fXMLDoc", &fXMLDoc);
      R__insp.Inspect(R__cl, R__parent, "*fRootNode", &fRootNode);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TXMLDocument(void *p) {
      delete ((::TXMLDocument*)p);
   }
   static void deleteArray_TXMLDocument(void *p) {
      delete [] ((::TXMLDocument*)p);
   }
   static void destruct_TXMLDocument(void *p) {
      typedef ::TXMLDocument current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXMLDocument

//______________________________________________________________________________
void TXMLNode::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXMLNode.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TXMLNode::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXMLNode.
      TClass *R__cl = ::TXMLNode::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fXMLNode", &fXMLNode);
      R__insp.Inspect(R__cl, R__parent, "*fParent", &fParent);
      R__insp.Inspect(R__cl, R__parent, "*fChildren", &fChildren);
      R__insp.Inspect(R__cl, R__parent, "*fNextNode", &fNextNode);
      R__insp.Inspect(R__cl, R__parent, "*fPreviousNode", &fPreviousNode);
      R__insp.Inspect(R__cl, R__parent, "*fAttrList", &fAttrList);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TXMLNode(void *p) {
      delete ((::TXMLNode*)p);
   }
   static void deleteArray_TXMLNode(void *p) {
      delete [] ((::TXMLNode*)p);
   }
   static void destruct_TXMLNode(void *p) {
      typedef ::TXMLNode current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXMLNode

/********************************************************
* io/xmlparser/src/G__XMLParser.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__XMLParser();

extern "C" void G__set_cpp_environmentG__XMLParser() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TDOMParser.h");
  G__add_compiledheader("TSAXParser.h");
  G__add_compiledheader("TXMLAttr.h");
  G__add_compiledheader("TXMLDocument.h");
  G__add_compiledheader("TXMLNode.h");
  G__add_compiledheader("TXMLParser.h");
  G__cpp_reset_tagtableG__XMLParser();
}
#include <new>
extern "C" int G__cpp_dllrevG__XMLParser() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TXMLParser */
static int G__G__XMLParser_110_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TXMLParser*) G__getstructoffset())->SetValidate((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TXMLParser*) G__getstructoffset())->SetValidate();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TXMLParser*) G__getstructoffset())->GetValidate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TXMLParser*) G__getstructoffset())->SetReplaceEntities((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TXMLParser*) G__getstructoffset())->SetReplaceEntities();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TXMLParser*) G__getstructoffset())->GetReplaceEntities());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TXMLParser*) G__getstructoffset())->ParseFile((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TXMLParser*) G__getstructoffset())->ParseBuffer((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXMLParser*) G__getstructoffset())->StopParser();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TXMLParser*) G__getstructoffset())->GetParseCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TXMLParser*) G__getstructoffset())->GetParseCodeMessage((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TXMLParser*) G__getstructoffset())->SetStopOnError((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TXMLParser*) G__getstructoffset())->SetStopOnError();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TXMLParser*) G__getstructoffset())->GetStopOnError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TXMLParser*) G__getstructoffset())->GetValidateError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TXMLParser*) G__getstructoffset())->GetValidateWarning());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TXMLParser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXMLParser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TXMLParser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TXMLParser::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXMLParser*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXMLParser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXMLParser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXMLParser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_110_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXMLParser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXMLParser G__TTXMLParser;
static int G__G__XMLParser_110_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TXMLParser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TXMLParser*) (soff+(sizeof(TXMLParser)*i)))->~G__TTXMLParser();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TXMLParser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TXMLParser*) (soff))->~G__TTXMLParser();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXMLNode */
static int G__G__XMLParser_112_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TXMLNode* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXMLNode(
(_xmlNode*) G__int(libp->para[0]), (TXMLNode*) G__int(libp->para[1])
, (TXMLNode*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TXMLNode(
(_xmlNode*) G__int(libp->para[0]), (TXMLNode*) G__int(libp->para[1])
, (TXMLNode*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXMLNode((_xmlNode*) G__int(libp->para[0]), (TXMLNode*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TXMLNode((_xmlNode*) G__int(libp->para[0]), (TXMLNode*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXMLNode((_xmlNode*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TXMLNode((_xmlNode*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TXMLNode*) G__getstructoffset())->GetNodeType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TXMLNode*) G__getstructoffset())->GetNodeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TXMLNode*) G__getstructoffset())->GetChildren());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TXMLNode*) G__getstructoffset())->GetParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TXMLNode*) G__getstructoffset())->GetNextNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TXMLNode*) G__getstructoffset())->GetPreviousNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TXMLNode*) G__getstructoffset())->GetContent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TXMLNode*) G__getstructoffset())->GetText());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TXMLNode*) G__getstructoffset())->GetAttributes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TXMLNode*) G__getstructoffset())->HasChildren());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TXMLNode*) G__getstructoffset())->HasNextNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TXMLNode*) G__getstructoffset())->HasParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TXMLNode*) G__getstructoffset())->HasPreviousNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TXMLNode*) G__getstructoffset())->HasAttributes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TXMLNode*) G__getstructoffset())->GetNamespaceHref());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TXMLNode*) G__getstructoffset())->GetNamespacePrefix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TXMLNode::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXMLNode::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TXMLNode::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TXMLNode::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXMLNode*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXMLNode::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXMLNode::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXMLNode::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_112_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXMLNode::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXMLNode G__TTXMLNode;
static int G__G__XMLParser_112_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TXMLNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TXMLNode*) (soff+(sizeof(TXMLNode)*i)))->~G__TTXMLNode();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TXMLNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TXMLNode*) (soff))->~G__TTXMLNode();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXMLDocument */
static int G__G__XMLParser_113_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TXMLDocument* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TXMLDocument((_xmlDoc*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TXMLDocument((_xmlDoc*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__XMLParserLN_TXMLDocument));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_113_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TXMLDocument*) G__getstructoffset())->GetRootNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_113_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TXMLDocument*) G__getstructoffset())->Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_113_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TXMLDocument*) G__getstructoffset())->Encoding());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_113_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TXMLDocument*) G__getstructoffset())->URL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_113_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TXMLDocument::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_113_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXMLDocument::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_113_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TXMLDocument::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_113_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TXMLDocument::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_113_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXMLDocument*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_113_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXMLDocument::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_113_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXMLDocument::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_113_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXMLDocument::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_113_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXMLDocument::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXMLDocument G__TTXMLDocument;
static int G__G__XMLParser_113_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TXMLDocument*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TXMLDocument*) (soff+(sizeof(TXMLDocument)*i)))->~G__TTXMLDocument();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TXMLDocument*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TXMLDocument*) (soff))->~G__TTXMLDocument();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDOMParser */
static int G__G__XMLParser_114_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDOMParser* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDOMParser[n];
     } else {
       p = new((void*) gvp) TDOMParser[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDOMParser;
     } else {
       p = new((void*) gvp) TDOMParser;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__XMLParserLN_TDOMParser));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_114_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TDOMParser*) G__getstructoffset())->GetXMLDocument());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_114_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDOMParser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_114_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDOMParser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_114_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDOMParser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_114_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDOMParser::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_114_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDOMParser*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_114_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDOMParser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_114_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDOMParser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_114_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDOMParser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_114_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDOMParser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDOMParser G__TTDOMParser;
static int G__G__XMLParser_114_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDOMParser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDOMParser*) (soff+(sizeof(TDOMParser)*i)))->~G__TTDOMParser();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDOMParser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDOMParser*) (soff))->~G__TTDOMParser();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSAXParser */
static int G__G__XMLParser_117_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSAXParser* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSAXParser[n];
     } else {
       p = new((void*) gvp) TSAXParser[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSAXParser;
     } else {
       p = new((void*) gvp) TSAXParser;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSAXParser*) G__getstructoffset())->OnStartDocument();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSAXParser*) G__getstructoffset())->OnEndDocument();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSAXParser*) G__getstructoffset())->OnStartElement((const char*) G__int(libp->para[0]), (const TList*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSAXParser*) G__getstructoffset())->OnEndElement((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSAXParser*) G__getstructoffset())->OnCharacters((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSAXParser*) G__getstructoffset())->OnComment((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSAXParser*) G__getstructoffset())->OnWarning((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSAXParser*) G__getstructoffset())->OnError((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSAXParser*) G__getstructoffset())->OnFatalError((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSAXParser*) G__getstructoffset())->OnCdataBlock((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSAXParser*) G__getstructoffset())->ConnectToHandler((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSAXParser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSAXParser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSAXParser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSAXParser::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSAXParser*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSAXParser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSAXParser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSAXParser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_117_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSAXParser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSAXParser G__TTSAXParser;
static int G__G__XMLParser_117_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSAXParser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSAXParser*) (soff+(sizeof(TSAXParser)*i)))->~G__TTSAXParser();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSAXParser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSAXParser*) (soff))->~G__TTSAXParser();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXMLAttr */
static int G__G__XMLParser_118_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TXMLAttr* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TXMLAttr((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TXMLAttr((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_118_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TXMLAttr*) G__getstructoffset())->Key());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_118_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TXMLAttr*) G__getstructoffset())->GetValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_118_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TXMLAttr::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_118_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXMLAttr::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_118_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TXMLAttr::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_118_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TXMLAttr::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_118_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXMLAttr*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_118_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXMLAttr::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_118_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXMLAttr::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_118_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXMLAttr::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_118_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXMLAttr::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXMLAttr G__TTXMLAttr;
static int G__G__XMLParser_118_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TXMLAttr*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TXMLAttr*) (soff+(sizeof(TXMLAttr)*i)))->~G__TTXMLAttr();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TXMLAttr*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TXMLAttr*) (soff))->~G__TTXMLAttr();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TXMLParser */

/* TXMLNode */

/* TXMLDocument */

/* TDOMParser */

/* TSAXParser */

/* TXMLAttr */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__XMLParser {
 public:
  G__Sizep2memfuncG__XMLParser(): p(&G__Sizep2memfuncG__XMLParser::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__XMLParser::*p)();
};

size_t G__get_sizep2memfuncG__XMLParser()
{
  G__Sizep2memfuncG__XMLParser a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__XMLParser() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser))) {
     TXMLParser *G__Lderived;
     G__Lderived=(TXMLParser*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser),G__get_linked_tagnum(&G__G__XMLParserLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser),G__get_linked_tagnum(&G__G__XMLParserLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode))) {
     TXMLNode *G__Lderived;
     G__Lderived=(TXMLNode*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode),G__get_linked_tagnum(&G__G__XMLParserLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLDocument))) {
     TXMLDocument *G__Lderived;
     G__Lderived=(TXMLDocument*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLDocument),G__get_linked_tagnum(&G__G__XMLParserLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__XMLParserLN_TDOMParser))) {
     TDOMParser *G__Lderived;
     G__Lderived=(TDOMParser*)0x1000;
     {
       TXMLParser *G__Lpbase=(TXMLParser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TDOMParser),G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TDOMParser),G__get_linked_tagnum(&G__G__XMLParserLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TDOMParser),G__get_linked_tagnum(&G__G__XMLParserLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser))) {
     TSAXParser *G__Lderived;
     G__Lderived=(TSAXParser*)0x1000;
     {
       TXMLParser *G__Lpbase=(TXMLParser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser),G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser),G__get_linked_tagnum(&G__G__XMLParserLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser),G__get_linked_tagnum(&G__G__XMLParserLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr))) {
     TXMLAttr *G__Lderived;
     G__Lderived=(TXMLAttr*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr),G__get_linked_tagnum(&G__G__XMLParserLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__XMLParser() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__XMLParserLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__XMLParserLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__XMLParserLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__XMLParserLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__XMLParserLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__XMLParserLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TXMLParser */
static void G__setup_memvarTXMLParser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser));
   { TXMLParser *p; p=(TXMLParser*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN__xmlParserCtxt),-1,-1,2,"fContext=",0,"parse the xml file");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fValidate=",0,"to validate the parse context");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fReplaceEntities=",0,"replace entities");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fStopError=",0,"stop when parse error occurs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TString),-1,-1,2,"fValidateError=",0,"parse error");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TString),-1,-1,2,"fValidateWarning=",0,"parse warning");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fParseCode=",0,"to keep track of the errorcodes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXMLNode */
static void G__setup_memvarTXMLNode(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode));
   { TXMLNode *p; p=(TXMLNode*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN__xmlNode),-1,-1,4,"fXMLNode=",0,"libxml node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode),-1,-1,4,"fParent=",0,"Parent node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode),-1,-1,4,"fChildren=",0,"Children node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode),-1,-1,4,"fNextNode=",0,"Next sibling node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode),-1,-1,4,"fPreviousNode=",0,"Previous sibling node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TList),-1,-1,4,"fAttrList=",0,"List of Attributes");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNodecLcLEXMLElementType),-1,-2,1,"kXMLElementNode=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNodecLcLEXMLElementType),-1,-2,1,"kXMLAttributeNode=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNodecLcLEXMLElementType),-1,-2,1,"kXMLTextNode=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNodecLcLEXMLElementType),-1,-2,1,"kXMLCommentNode=8",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXMLDocument */
static void G__setup_memvarTXMLDocument(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLDocument));
   { TXMLDocument *p; p=(TXMLDocument*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN__xmlDoc),-1,-1,4,"fXMLDoc=",0,"libxml xml doc");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode),-1,-1,4,"fRootNode=",0,"the root node ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDOMParser */
static void G__setup_memvarTDOMParser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TDOMParser));
   { TDOMParser *p; p=(TDOMParser*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TXMLDocument),-1,-1,4,"fTXMLDoc=",0,"xmlDoc");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSAXParser */
static void G__setup_memvarTSAXParser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser));
   { TSAXParser *p; p=(TSAXParser*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN__xmlSAXHandler),-1,-1,4,"fSAXHandler=",0,"libxml2 SAX handler");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXMLAttr */
static void G__setup_memvarTXMLAttr(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr));
   { TXMLAttr *p; p=(TXMLAttr*)0x1000; if (p) { }
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"fKey=",0,"XML attribute key");
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"fValue=",0,"XML attribute value");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__XMLParser() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTXMLParser(void) {
   /* TXMLParser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser));
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser), -1, 1, 1, 1, 4, 0, "u 'TXMLParser' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("InitializeContext",1783,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReleaseUnderlying",1762,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OnValidateError",1521,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'TString' - 11 - message", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OnValidateWarning",1725,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'TString' - 11 - message", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParseCode",1186,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - code", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValidate",1110,G__G__XMLParser_110_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValidate",1098,G__G__XMLParser_110_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReplaceEntities",1837,G__G__XMLParser_110_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReplaceEntities",1825,G__G__XMLParser_110_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseFile",891,G__G__XMLParser_110_0_13, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ParseBuffer",1109,G__G__XMLParser_110_0_14, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - contents i - 'Int_t' 0 - len", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("StopParser",1043,G__G__XMLParser_110_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParseCode",1174,G__G__XMLParser_110_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParseCodeMessage",1883,G__G__XMLParser_110_0_17, 67, -1, -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - parseCode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStopOnError",1433,G__G__XMLParser_110_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' stop", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStopOnError",1421,G__G__XMLParser_110_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValidateError",1620,G__G__XMLParser_110_0_20, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValidateWarning",1824,G__G__XMLParser_110_0_21, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__XMLParser_110_0_22, 85, G__get_linked_tagnum(&G__G__XMLParserLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TXMLParser::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__XMLParser_110_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXMLParser::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__XMLParser_110_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TXMLParser::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__XMLParser_110_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TXMLParser::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__XMLParserLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__XMLParser_110_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__XMLParser_110_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXMLParser::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__XMLParser_110_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXMLParser::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__XMLParser_110_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXMLParser::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__XMLParser_110_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXMLParser::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TXMLParser", 1072, G__G__XMLParser_110_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXMLNode(void) {
   /* TXMLNode */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode));
   G__memfunc_setup("TXMLNode",715,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode), -1, 0, 1, 1, 4, 0, "u 'TXMLNode' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode), -1, 1, 1, 1, 4, 0, "u 'TXMLNode' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("TXMLNode",715,G__G__XMLParser_112_0_3, 105, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode), -1, 0, 3, 1, 1, 0, 
"U '_xmlNode' - 0 - node U 'TXMLNode' - 0 '0' parent "
"U 'TXMLNode' - 0 '0' previous", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNodeType",1096,G__G__XMLParser_112_0_4, 105, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNodecLcLEXMLElementType), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNodeName",1063,G__G__XMLParser_112_0_5, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChildren",1097,G__G__XMLParser_112_0_6, 85, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParent",906,G__G__XMLParser_112_0_7, 85, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextNode",1093,G__G__XMLParser_112_0_8, 85, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPreviousNode",1539,G__G__XMLParser_112_0_9, 85, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetContent",1019,G__G__XMLParser_112_0_10, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetText",709,G__G__XMLParser_112_0_11, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAttributes",1351,G__G__XMLParser_112_0_12, 85, G__get_linked_tagnum(&G__G__XMLParserLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasChildren",1093,G__G__XMLParser_112_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasNextNode",1089,G__G__XMLParser_112_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasParent",902,G__G__XMLParser_112_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasPreviousNode",1535,G__G__XMLParser_112_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasAttributes",1347,G__G__XMLParser_112_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNamespaceHref",1586,G__G__XMLParser_112_0_18, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNamespacePrefix",1819,G__G__XMLParser_112_0_19, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__XMLParser_112_0_20, 85, G__get_linked_tagnum(&G__G__XMLParserLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TXMLNode::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__XMLParser_112_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXMLNode::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__XMLParser_112_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TXMLNode::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__XMLParser_112_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TXMLNode::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__XMLParserLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__XMLParser_112_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__XMLParser_112_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXMLNode::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__XMLParser_112_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXMLNode::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__XMLParser_112_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXMLNode::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__XMLParser_112_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXMLNode::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TXMLNode", 841, G__G__XMLParser_112_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXMLDocument(void) {
   /* TXMLDocument */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLDocument));
   G__memfunc_setup("TXMLDocument",1156,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLDocument), -1, 0, 1, 1, 4, 0, "u 'TXMLDocument' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLDocument), -1, 1, 1, 1, 4, 0, "u 'TXMLDocument' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("TXMLDocument",1156,G__G__XMLParser_113_0_3, 105, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLDocument), -1, 0, 1, 1, 1, 0, "U '_xmlDoc' - 0 - doc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRootNode",1098,G__G__XMLParser_113_0_4, 85, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Version",742,G__G__XMLParser_113_0_5, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Encoding",807,G__G__XMLParser_113_0_6, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("URL",243,G__G__XMLParser_113_0_7, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__XMLParser_113_0_8, 85, G__get_linked_tagnum(&G__G__XMLParserLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TXMLDocument::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__XMLParser_113_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXMLDocument::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__XMLParser_113_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TXMLDocument::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__XMLParser_113_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TXMLDocument::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__XMLParserLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__XMLParser_113_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__XMLParser_113_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXMLDocument::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__XMLParser_113_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXMLDocument::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__XMLParser_113_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXMLDocument::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__XMLParser_113_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXMLDocument::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TXMLDocument", 1282, G__G__XMLParser_113_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDOMParser(void) {
   /* TDOMParser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TDOMParser));
   G__memfunc_setup("TDOMParser",929,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__XMLParserLN_TDOMParser), -1, 0, 1, 1, 4, 0, "u 'TDOMParser' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__XMLParserLN_TDOMParser), -1, 1, 1, 1, 4, 0, "u 'TDOMParser' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("ParseContext",1248,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDOMParser",929,G__G__XMLParser_114_0_4, 105, G__get_linked_tagnum(&G__G__XMLParserLN_TDOMParser), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseFile",891,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ParseBuffer",1109,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - buffer i - 'Int_t' 0 - len", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReleaseUnderlying",1762,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXMLDocument",1360,G__G__XMLParser_114_0_8, 85, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLDocument), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__XMLParser_114_0_9, 85, G__get_linked_tagnum(&G__G__XMLParserLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDOMParser::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__XMLParser_114_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDOMParser::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__XMLParser_114_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDOMParser::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__XMLParser_114_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDOMParser::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__XMLParserLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__XMLParser_114_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__XMLParser_114_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDOMParser::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__XMLParser_114_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDOMParser::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__XMLParser_114_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDOMParser::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__XMLParser_114_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDOMParser::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDOMParser", 1055, G__G__XMLParser_114_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSAXParser(void) {
   /* TSAXParser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser));
   G__memfunc_setup("Parse",507,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TSAXParser",941,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser), -1, 0, 1, 1, 4, 0, "u 'TSAXParser' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser), -1, 1, 1, 1, 4, 0, "u 'TSAXParser' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("TSAXParser",941,G__G__XMLParser_117_0_4, 105, G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseFile",891,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ParseBuffer",1109,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - contents i - 'Int_t' 0 - len", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OnStartDocument",1546,G__G__XMLParser_117_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("OnEndDocument",1299,G__G__XMLParser_117_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("OnStartElement",1429,G__G__XMLParser_117_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'TList' - 10 - attr", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("OnEndElement",1182,G__G__XMLParser_117_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("OnCharacters",1213,G__G__XMLParser_117_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - characters", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("OnComment",912,G__G__XMLParser_117_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - text", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("OnWarning",915,G__G__XMLParser_117_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - text", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("OnError",711,G__G__XMLParser_117_0_14, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - text", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("OnFatalError",1199,G__G__XMLParser_117_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - text", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("OnCdataBlock",1157,G__G__XMLParser_117_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - text i - 'Int_t' 0 - len", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("ConnectToHandler",1611,G__G__XMLParser_117_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - handlerName Y - - 0 - handler", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__XMLParser_117_0_18, 85, G__get_linked_tagnum(&G__G__XMLParserLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSAXParser::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__XMLParser_117_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSAXParser::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__XMLParser_117_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSAXParser::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__XMLParser_117_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSAXParser::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__XMLParserLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__XMLParser_117_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__XMLParser_117_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSAXParser::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__XMLParser_117_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSAXParser::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__XMLParser_117_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSAXParser::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__XMLParser_117_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSAXParser::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSAXParser", 1067, G__G__XMLParser_117_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXMLAttr(void) {
   /* TXMLAttr */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr));
   G__memfunc_setup("TXMLAttr",736,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr), -1, 0, 1, 1, 4, 0, "u 'TXMLAttr' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr), -1, 1, 1, 1, 4, 0, "u 'TXMLAttr' - 11 - -", "Not implemented", (void*) NULL, 0);
   G__memfunc_setup("TXMLAttr",736,G__G__XMLParser_118_0_3, 105, G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr), -1, 0, 2, 1, 1, 0, 
"C - - 10 - key C - - 10 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Key",297,G__G__XMLParser_118_0_5, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValue",797,G__G__XMLParser_118_0_6, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__XMLParser_118_0_7, 85, G__get_linked_tagnum(&G__G__XMLParserLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TXMLAttr::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__XMLParser_118_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXMLAttr::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__XMLParser_118_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TXMLAttr::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__XMLParser_118_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TXMLAttr::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__XMLParserLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__XMLParser_118_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__XMLParser_118_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXMLAttr::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__XMLParser_118_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXMLAttr::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__XMLParser_118_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXMLAttr::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__XMLParser_118_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXMLAttr::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TXMLAttr", 862, G__G__XMLParser_118_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__XMLParser() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__XMLParser() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__XMLParser() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__XMLParserLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN__xmlParserCtxt = { "_xmlParserCtxt" , 115 , -1 };
G__linked_taginfo G__G__XMLParserLN_TXMLParser = { "TXMLParser" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN__xmlDoc = { "_xmlDoc" , 115 , -1 };
G__linked_taginfo G__G__XMLParserLN_TXMLNode = { "TXMLNode" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_TXMLDocument = { "TXMLDocument" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_TDOMParser = { "TDOMParser" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN__xmlSAXHandler = { "_xmlSAXHandler" , 115 , -1 };
G__linked_taginfo G__G__XMLParserLN_TSAXParser = { "TSAXParser" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_TXMLAttr = { "TXMLAttr" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN__xmlNode = { "_xmlNode" , 115 , -1 };
G__linked_taginfo G__G__XMLParserLN_TXMLNodecLcLEXMLElementType = { "TXMLNode::EXMLElementType" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__XMLParser() {
  G__G__XMLParserLN_TClass.tagnum = -1 ;
  G__G__XMLParserLN_TBuffer.tagnum = -1 ;
  G__G__XMLParserLN_TMemberInspector.tagnum = -1 ;
  G__G__XMLParserLN_TObject.tagnum = -1 ;
  G__G__XMLParserLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__XMLParserLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__XMLParserLN_TList.tagnum = -1 ;
  G__G__XMLParserLN_TString.tagnum = -1 ;
  G__G__XMLParserLN_TQObject.tagnum = -1 ;
  G__G__XMLParserLN__xmlParserCtxt.tagnum = -1 ;
  G__G__XMLParserLN_TXMLParser.tagnum = -1 ;
  G__G__XMLParserLN__xmlDoc.tagnum = -1 ;
  G__G__XMLParserLN_TXMLNode.tagnum = -1 ;
  G__G__XMLParserLN_TXMLDocument.tagnum = -1 ;
  G__G__XMLParserLN_TDOMParser.tagnum = -1 ;
  G__G__XMLParserLN__xmlSAXHandler.tagnum = -1 ;
  G__G__XMLParserLN_TSAXParser.tagnum = -1 ;
  G__G__XMLParserLN_TXMLAttr.tagnum = -1 ;
  G__G__XMLParserLN__xmlNode.tagnum = -1 ;
  G__G__XMLParserLN_TXMLNodecLcLEXMLElementType.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__XMLParser() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__XMLParserLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__XMLParserLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__XMLParserLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__XMLParserLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__XMLParserLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__XMLParserLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__XMLParserLN_TList);
   G__get_linked_tagnum_fwd(&G__G__XMLParserLN_TString);
   G__get_linked_tagnum_fwd(&G__G__XMLParserLN_TQObject);
   G__get_linked_tagnum_fwd(&G__G__XMLParserLN__xmlParserCtxt);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser),sizeof(TXMLParser),-1,32514,"XML SAX parser",G__setup_memvarTXMLParser,G__setup_memfuncTXMLParser);
   G__get_linked_tagnum_fwd(&G__G__XMLParserLN__xmlDoc);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLNode),sizeof(TXMLNode),-1,65024,"XML node under DOM tree",G__setup_memvarTXMLNode,G__setup_memfuncTXMLNode);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLDocument),sizeof(TXMLDocument),-1,65024,"XML document created by the DOM parser",G__setup_memvarTXMLDocument,G__setup_memfuncTXMLDocument);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TDOMParser),sizeof(TDOMParser),-1,32512,"DOM Parser",G__setup_memvarTDOMParser,G__setup_memfuncTDOMParser);
   G__get_linked_tagnum_fwd(&G__G__XMLParserLN__xmlSAXHandler);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser),sizeof(TSAXParser),-1,32512,"SAX Parser",G__setup_memvarTSAXParser,G__setup_memfuncTSAXParser);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr),sizeof(TXMLAttr),-1,65024,"XML attribute pair",G__setup_memvarTXMLAttr,G__setup_memfuncTXMLAttr);
   G__get_linked_tagnum_fwd(&G__G__XMLParserLN__xmlNode);
   G__get_linked_tagnum_fwd(&G__G__XMLParserLN_TXMLNodecLcLEXMLElementType);
}
extern "C" void G__cpp_setupG__XMLParser(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__XMLParser()");
  G__set_cpp_environmentG__XMLParser();
  G__cpp_setup_tagtableG__XMLParser();

  G__cpp_setup_inheritanceG__XMLParser();

  G__cpp_setup_typetableG__XMLParser();

  G__cpp_setup_memvarG__XMLParser();

  G__cpp_setup_memfuncG__XMLParser();
  G__cpp_setup_globalG__XMLParser();
  G__cpp_setup_funcG__XMLParser();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__XMLParser();
  return;
}
class G__cpp_setup_initG__XMLParser {
  public:
    G__cpp_setup_initG__XMLParser() { G__add_setup_func("G__XMLParser",(G__incsetup)(&G__cpp_setupG__XMLParser)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__XMLParser() { G__remove_setup_func("G__XMLParser"); }
};
G__cpp_setup_initG__XMLParser G__cpp_setup_initializerG__XMLParser;

