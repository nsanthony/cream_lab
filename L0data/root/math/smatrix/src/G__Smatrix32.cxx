//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:46:18 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__Smatrix32.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< Double32_t, 3, 3 > MatRepStdlEDouble32_tcO3cO3gR;
      #else
      class MatRepStdlEDouble32_tcO3cO3gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[9]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< Double32_t, 3, 3, ::ROOT::Math::MatRepStd< Double32_t, 3, 3 >  > SMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR;
      #else
      class SMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< Double32_t, 3, 3, ::ROOT::Math::MatRepStd< Double32_t, 3, 3 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< Double32_t, 3, 3, ::ROOT::Math::MatRepStd< Double32_t, 3, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< Double32_t, 3, 3, ::ROOT::Math::MatRepStd< Double32_t, 3, 3 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< Double32_t, 3, 3, ::ROOT::Math::MatRepStd< Double32_t, 3, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd< ::Double32_t,3,3> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< Double32_t, 3, 3 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SVector< Double32_t, 6 > SVectorlEDouble32_tcO6gR;
      #else
      class SVectorlEDouble32_tcO6gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         double fArray[6]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SVector< Double32_t, 3 > SVectorlEDouble32_tcO3gR;
      #else
      class SVectorlEDouble32_tcO3gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         double fArray[3]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< Double32_t, 4, 4 > MatRepStdlEDouble32_tcO4cO4gR;
      #else
      class MatRepStdlEDouble32_tcO4cO4gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[16]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< Double32_t, 4, 4, ::ROOT::Math::MatRepStd< Double32_t, 4, 4 >  > SMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR;
      #else
      class SMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< Double32_t, 4, 4, ::ROOT::Math::MatRepStd< Double32_t, 4, 4 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< Double32_t, 4, 4, ::ROOT::Math::MatRepStd< Double32_t, 4, 4 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< Double32_t, 4, 4, ::ROOT::Math::MatRepStd< Double32_t, 4, 4 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< Double32_t, 4, 4, ::ROOT::Math::MatRepStd< Double32_t, 4, 4 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd< ::Double32_t,4,4> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< Double32_t, 4, 4 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SVector< Double32_t, 4 > SVectorlEDouble32_tcO4gR;
      #else
      class SVectorlEDouble32_tcO4gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         double fArray[4]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< Double32_t, 5, 5 > MatRepStdlEDouble32_tcO5cO5gR;
      #else
      class MatRepStdlEDouble32_tcO5cO5gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[25]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< Double32_t, 5, 5, ::ROOT::Math::MatRepStd< Double32_t, 5, 5 >  > SMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR;
      #else
      class SMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< Double32_t, 5, 5, ::ROOT::Math::MatRepStd< Double32_t, 5, 5 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< Double32_t, 5, 5, ::ROOT::Math::MatRepStd< Double32_t, 5, 5 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< Double32_t, 5, 5, ::ROOT::Math::MatRepStd< Double32_t, 5, 5 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< Double32_t, 5, 5, ::ROOT::Math::MatRepStd< Double32_t, 5, 5 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd< ::Double32_t,5,5> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< Double32_t, 5, 5 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SVector< Double32_t, 5 > SVectorlEDouble32_tcO5gR;
      #else
      class SVectorlEDouble32_tcO5gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         double fArray[5]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< Double32_t, 6, 6 > MatRepStdlEDouble32_tcO6cO6gR;
      #else
      class MatRepStdlEDouble32_tcO6cO6gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[36]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< Double32_t, 6, 6, ::ROOT::Math::MatRepStd< Double32_t, 6, 6 >  > SMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR;
      #else
      class SMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< Double32_t, 6, 6, ::ROOT::Math::MatRepStd< Double32_t, 6, 6 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< Double32_t, 6, 6, ::ROOT::Math::MatRepStd< Double32_t, 6, 6 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< Double32_t, 6, 6, ::ROOT::Math::MatRepStd< Double32_t, 6, 6 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< Double32_t, 6, 6, ::ROOT::Math::MatRepStd< Double32_t, 6, 6 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd< ::Double32_t,6,6> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< Double32_t, 6, 6 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepSym< Double32_t, 3 > MatRepSymlEDouble32_tcO3gR;
      #else
      class MatRepSymlEDouble32_tcO3gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[6]; //
         :: ROOT::Math::RowOffsets< 3 >* fOff; //! transient
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepSym< Double32_t, 4 > MatRepSymlEDouble32_tcO4gR;
      #else
      class MatRepSymlEDouble32_tcO4gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[10]; //
         :: ROOT::Math::RowOffsets< 4 >* fOff; //! transient
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepSym< Double32_t, 5 > MatRepSymlEDouble32_tcO5gR;
      #else
      class MatRepSymlEDouble32_tcO5gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[15]; //
         :: ROOT::Math::RowOffsets< 5 >* fOff; //! transient
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepSym< Double32_t, 6 > MatRepSymlEDouble32_tcO6gR;
      #else
      class MatRepSymlEDouble32_tcO6gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[21]; //
         :: ROOT::Math::RowOffsets< 6 >* fOff; //! transient
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< Double32_t, 3, 3, ::ROOT::Math::MatRepSym< Double32_t, 3 >  > SMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR;
      #else
      class SMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< Double32_t, 3, 3, ::ROOT::Math::MatRepSym< Double32_t, 3 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< Double32_t, 3, 3, ::ROOT::Math::MatRepSym< Double32_t, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< Double32_t, 3, 3, ::ROOT::Math::MatRepSym< Double32_t, 3 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< Double32_t, 3, 3, ::ROOT::Math::MatRepSym< Double32_t, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym< ::Double32_t,3> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< Double32_t, 3 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< Double32_t, 4, 4, ::ROOT::Math::MatRepSym< Double32_t, 4 >  > SMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR;
      #else
      class SMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< Double32_t, 4, 4, ::ROOT::Math::MatRepSym< Double32_t, 4 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< Double32_t, 4, 4, ::ROOT::Math::MatRepSym< Double32_t, 4 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< Double32_t, 4, 4, ::ROOT::Math::MatRepSym< Double32_t, 4 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< Double32_t, 4, 4, ::ROOT::Math::MatRepSym< Double32_t, 4 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym< ::Double32_t,4> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< Double32_t, 4 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< Double32_t, 5, 5, ::ROOT::Math::MatRepSym< Double32_t, 5 >  > SMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR;
      #else
      class SMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< Double32_t, 5, 5, ::ROOT::Math::MatRepSym< Double32_t, 5 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< Double32_t, 5, 5, ::ROOT::Math::MatRepSym< Double32_t, 5 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< Double32_t, 5, 5, ::ROOT::Math::MatRepSym< Double32_t, 5 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< Double32_t, 5, 5, ::ROOT::Math::MatRepSym< Double32_t, 5 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym< ::Double32_t,5> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< Double32_t, 5 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< Double32_t, 6, 6, ::ROOT::Math::MatRepSym< Double32_t, 6 >  > SMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR;
      #else
      class SMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< Double32_t, 6, 6, ::ROOT::Math::MatRepSym< Double32_t, 6 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< Double32_t, 6, 6, ::ROOT::Math::MatRepSym< Double32_t, 6 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< Double32_t, 6, 6, ::ROOT::Math::MatRepSym< Double32_t, 6 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< Double32_t, 6, 6, ::ROOT::Math::MatRepSym< Double32_t, 6 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym< ::Double32_t,6> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< Double32_t, 6 > fRep; //
      };
      #endif
      } } 
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<Double32_t,3,3>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<Double32_t,3,3>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEDouble32_tcO3cO3gR));
      ::ROOT::Math::MatRepStd<Double32_t,3,3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<Double32_t,3,3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<Double32_t,3,3>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<Double32_t,3,3>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<Double32_t,3,3>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<Double32_t,3,3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<Double32_t,3,3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR));
      ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR(void *p);
   static void destruct_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SVector<Double32_t,6>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SVector<Double32_t,6>) == sizeof(::ROOT::Shadow::ROOT::Math::SVectorlEDouble32_tcO6gR));
      ::ROOT::Math::SVector<Double32_t,6> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SVector<Double32_t,6>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SVector<Double32_t,6>", "include/Math/SVector.h", 79,
                  typeid(::ROOT::Math::SVector<Double32_t,6>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR_ShowMembers, &ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SVector<Double32_t,6>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SVector<Double32_t,6>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<Double32_t,6>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR(void *p);
   static void destruct_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SVector<Double32_t,3>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SVector<Double32_t,3>) == sizeof(::ROOT::Shadow::ROOT::Math::SVectorlEDouble32_tcO3gR));
      ::ROOT::Math::SVector<Double32_t,3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SVector<Double32_t,3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SVector<Double32_t,3>", "include/Math/SVector.h", 79,
                  typeid(::ROOT::Math::SVector<Double32_t,3>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR_ShowMembers, &ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SVector<Double32_t,3>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SVector<Double32_t,3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<Double32_t,3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<Double32_t,4,4>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<Double32_t,4,4>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEDouble32_tcO4cO4gR));
      ::ROOT::Math::MatRepStd<Double32_t,4,4> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<Double32_t,4,4>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<Double32_t,4,4>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<Double32_t,4,4>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<Double32_t,4,4>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<Double32_t,4,4>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<Double32_t,4,4>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR));
      ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR(void *p);
   static void destruct_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SVector<Double32_t,4>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SVector<Double32_t,4>) == sizeof(::ROOT::Shadow::ROOT::Math::SVectorlEDouble32_tcO4gR));
      ::ROOT::Math::SVector<Double32_t,4> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SVector<Double32_t,4>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SVector<Double32_t,4>", "include/Math/SVector.h", 79,
                  typeid(::ROOT::Math::SVector<Double32_t,4>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR_ShowMembers, &ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SVector<Double32_t,4>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SVector<Double32_t,4>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<Double32_t,4>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<Double32_t,5,5>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<Double32_t,5,5>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEDouble32_tcO5cO5gR));
      ::ROOT::Math::MatRepStd<Double32_t,5,5> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<Double32_t,5,5>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<Double32_t,5,5>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<Double32_t,5,5>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<Double32_t,5,5>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<Double32_t,5,5>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<Double32_t,5,5>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR));
      ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR(void *p);
   static void destruct_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SVector<Double32_t,5>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SVector<Double32_t,5>) == sizeof(::ROOT::Shadow::ROOT::Math::SVectorlEDouble32_tcO5gR));
      ::ROOT::Math::SVector<Double32_t,5> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SVector<Double32_t,5>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SVector<Double32_t,5>", "include/Math/SVector.h", 79,
                  typeid(::ROOT::Math::SVector<Double32_t,5>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR_ShowMembers, &ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SVector<Double32_t,5>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SVector<Double32_t,5>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<Double32_t,5>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<Double32_t,6,6>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<Double32_t,6,6>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEDouble32_tcO6cO6gR));
      ::ROOT::Math::MatRepStd<Double32_t,6,6> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<Double32_t,6,6>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<Double32_t,6,6>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<Double32_t,6,6>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<Double32_t,6,6>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<Double32_t,6,6>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<Double32_t,6,6>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR));
      ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<Double32_t,3>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepSym<Double32_t,3>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepSymlEDouble32_tcO3gR));
      ::ROOT::Math::MatRepSym<Double32_t,3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<Double32_t,3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<Double32_t,3>", "include/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<Double32_t,3>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR_ShowMembers, &ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepSym<Double32_t,3>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<Double32_t,3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<Double32_t,3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<Double32_t,4>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepSym<Double32_t,4>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepSymlEDouble32_tcO4gR));
      ::ROOT::Math::MatRepSym<Double32_t,4> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<Double32_t,4>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<Double32_t,4>", "include/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<Double32_t,4>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR_ShowMembers, &ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepSym<Double32_t,4>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<Double32_t,4>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<Double32_t,4>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<Double32_t,5>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepSym<Double32_t,5>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepSymlEDouble32_tcO5gR));
      ::ROOT::Math::MatRepSym<Double32_t,5> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<Double32_t,5>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<Double32_t,5>", "include/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<Double32_t,5>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR_ShowMembers, &ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepSym<Double32_t,5>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<Double32_t,5>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<Double32_t,5>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<Double32_t,6>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepSym<Double32_t,6>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepSymlEDouble32_tcO6gR));
      ::ROOT::Math::MatRepSym<Double32_t,6> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<Double32_t,6>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<Double32_t,6>", "include/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<Double32_t,6>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR_ShowMembers, &ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepSym<Double32_t,6>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<Double32_t,6>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<Double32_t,6>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR));
      ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR));
      ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR));
      ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR));
      ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<Double32_t,3,3>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> > : new ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >[nElements] : new ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<Double32_t,4,4>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> > : new ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >[nElements] : new ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<Double32_t,5,5>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> > : new ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >[nElements] : new ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<Double32_t,6,6>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> > : new ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >[nElements] : new ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<Double32_t,3,3>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEDouble32_tcO3cO3gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<Double32_t,3,3>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[9]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<Double32_t,3,3> : new ::ROOT::Math::MatRepStd<Double32_t,3,3>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<Double32_t,3,3>[nElements] : new ::ROOT::Math::MatRepStd<Double32_t,3,3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<Double32_t,3,3>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<Double32_t,3,3>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<Double32_t,3,3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<Double32_t,3,3>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<Double32_t,4,4>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEDouble32_tcO4cO4gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<Double32_t,4,4>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[16]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<Double32_t,4,4> : new ::ROOT::Math::MatRepStd<Double32_t,4,4>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<Double32_t,4,4>[nElements] : new ::ROOT::Math::MatRepStd<Double32_t,4,4>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<Double32_t,4,4>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<Double32_t,4,4>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<Double32_t,4,4> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<Double32_t,4,4>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<Double32_t,5,5>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEDouble32_tcO5cO5gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<Double32_t,5,5>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[25]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<Double32_t,5,5> : new ::ROOT::Math::MatRepStd<Double32_t,5,5>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<Double32_t,5,5>[nElements] : new ::ROOT::Math::MatRepStd<Double32_t,5,5>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<Double32_t,5,5>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<Double32_t,5,5>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<Double32_t,5,5> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<Double32_t,5,5>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<Double32_t,6,6>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEDouble32_tcO6cO6gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<Double32_t,6,6>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[36]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<Double32_t,6,6> : new ::ROOT::Math::MatRepStd<Double32_t,6,6>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<Double32_t,6,6>[nElements] : new ::ROOT::Math::MatRepStd<Double32_t,6,6>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<Double32_t,6,6>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<Double32_t,6,6>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<Double32_t,6,6> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<Double32_t,6,6>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SVector<Double32_t,3>.
      typedef ::ROOT::Shadow::ROOT::Math::SVectorlEDouble32_tcO3gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<Double32_t,3>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[3]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<Double32_t,3> : new ::ROOT::Math::SVector<Double32_t,3>;
   }
   static void *newArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<Double32_t,3>[nElements] : new ::ROOT::Math::SVector<Double32_t,3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR(void *p) {
      delete ((::ROOT::Math::SVector<Double32_t,3>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR(void *p) {
      delete [] ((::ROOT::Math::SVector<Double32_t,3>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR(void *p) {
      typedef ::ROOT::Math::SVector<Double32_t,3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SVector<Double32_t,3>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SVector<Double32_t,4>.
      typedef ::ROOT::Shadow::ROOT::Math::SVectorlEDouble32_tcO4gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<Double32_t,4>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[4]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<Double32_t,4> : new ::ROOT::Math::SVector<Double32_t,4>;
   }
   static void *newArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<Double32_t,4>[nElements] : new ::ROOT::Math::SVector<Double32_t,4>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR(void *p) {
      delete ((::ROOT::Math::SVector<Double32_t,4>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR(void *p) {
      delete [] ((::ROOT::Math::SVector<Double32_t,4>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR(void *p) {
      typedef ::ROOT::Math::SVector<Double32_t,4> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SVector<Double32_t,4>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SVector<Double32_t,5>.
      typedef ::ROOT::Shadow::ROOT::Math::SVectorlEDouble32_tcO5gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<Double32_t,5>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[5]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<Double32_t,5> : new ::ROOT::Math::SVector<Double32_t,5>;
   }
   static void *newArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<Double32_t,5>[nElements] : new ::ROOT::Math::SVector<Double32_t,5>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR(void *p) {
      delete ((::ROOT::Math::SVector<Double32_t,5>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR(void *p) {
      delete [] ((::ROOT::Math::SVector<Double32_t,5>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR(void *p) {
      typedef ::ROOT::Math::SVector<Double32_t,5> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SVector<Double32_t,5>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SVector<Double32_t,6>.
      typedef ::ROOT::Shadow::ROOT::Math::SVectorlEDouble32_tcO6gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<Double32_t,6>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[6]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<Double32_t,6> : new ::ROOT::Math::SVector<Double32_t,6>;
   }
   static void *newArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<Double32_t,6>[nElements] : new ::ROOT::Math::SVector<Double32_t,6>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR(void *p) {
      delete ((::ROOT::Math::SVector<Double32_t,6>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR(void *p) {
      delete [] ((::ROOT::Math::SVector<Double32_t,6>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR(void *p) {
      typedef ::ROOT::Math::SVector<Double32_t,6> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SVector<Double32_t,6>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepSym<Double32_t,3>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepSymlEDouble32_tcO3gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<Double32_t,3>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[6]", sobj->fArray);
      R__insp.Inspect(R__cl, R__parent, "*fOff", &sobj->fOff);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<Double32_t,3> : new ::ROOT::Math::MatRepSym<Double32_t,3>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<Double32_t,3>[nElements] : new ::ROOT::Math::MatRepSym<Double32_t,3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<Double32_t,3>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<Double32_t,3>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<Double32_t,3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<Double32_t,3>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepSym<Double32_t,4>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepSymlEDouble32_tcO4gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<Double32_t,4>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[10]", sobj->fArray);
      R__insp.Inspect(R__cl, R__parent, "*fOff", &sobj->fOff);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<Double32_t,4> : new ::ROOT::Math::MatRepSym<Double32_t,4>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<Double32_t,4>[nElements] : new ::ROOT::Math::MatRepSym<Double32_t,4>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<Double32_t,4>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<Double32_t,4>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<Double32_t,4> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<Double32_t,4>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepSym<Double32_t,5>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepSymlEDouble32_tcO5gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<Double32_t,5>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[15]", sobj->fArray);
      R__insp.Inspect(R__cl, R__parent, "*fOff", &sobj->fOff);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<Double32_t,5> : new ::ROOT::Math::MatRepSym<Double32_t,5>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<Double32_t,5>[nElements] : new ::ROOT::Math::MatRepSym<Double32_t,5>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<Double32_t,5>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<Double32_t,5>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<Double32_t,5> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<Double32_t,5>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepSym<Double32_t,6>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepSymlEDouble32_tcO6gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<Double32_t,6>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[21]", sobj->fArray);
      R__insp.Inspect(R__cl, R__parent, "*fOff", &sobj->fOff);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<Double32_t,6> : new ::ROOT::Math::MatRepSym<Double32_t,6>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<Double32_t,6>[nElements] : new ::ROOT::Math::MatRepSym<Double32_t,6>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<Double32_t,6>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<Double32_t,6>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<Double32_t,6> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<Double32_t,6>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<Double32_t,3>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> > : new ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >[nElements] : new ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<Double32_t,4>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> > : new ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >[nElements] : new ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<Double32_t,5>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> > : new ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >[nElements] : new ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<Double32_t,6>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> > : new ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >[nElements] : new ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >

/********************************************************
* math/smatrix/src/G__Smatrix32.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__Smatrix32();

extern "C" void G__set_cpp_environmentG__Smatrix32() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Math/SMatrix.h");
  G__add_compiledheader("Math/SVector.h");
  G__add_compiledheader("Math/SMatrixDfwd.h");
  G__add_compiledheader("Math/SMatrixFfwd.h");
  G__cpp_reset_tagtableG__Smatrix32();
}
#include <new>
extern "C" int G__cpp_dllrevG__Smatrix32() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ROOT::Math::MatRepStd<Double32_t,3,3> */
static int G__G__Smatrix32_297_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::MatRepStd<Double32_t,3,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_297_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::MatRepStd<Double32_t,3,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_297_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::MatRepStd<Double32_t,3,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_297_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::MatRepStd<Double32_t,3,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_297_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepStd<Double32_t,3,3>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_297_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepStd<Double32_t,3,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_297_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepStd<Double32_t,3,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix32_297_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<Double32_t,3,3> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<Double32_t,3,3>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<Double32_t,3,3>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<Double32_t,3,3>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<Double32_t,3,3>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix32_297_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<Double32_t,3,3>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<Double32_t,3,3>(*(ROOT::Math::MatRepStd<Double32_t,3,3>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<Double32_t,3,3> G__TROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR;
static int G__G__Smatrix32_297_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<Double32_t,3,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<Double32_t,3,3>*) (soff+(sizeof(ROOT::Math::MatRepStd<Double32_t,3,3>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<Double32_t,3,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<Double32_t,3,3>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix32_297_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<Double32_t,3,3>* dest = (ROOT::Math::MatRepStd<Double32_t,3,3>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<Double32_t,3,3>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<Double32_t,3,3>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> > */
static int G__G__Smatrix32_299_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >(*(ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >(*(ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >(*(ROOT::Math::SVector<Double32_t,3*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >(*(ROOT::Math::SVector<Double32_t,3*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >(*(ROOT::Math::SVector<Double32_t,3*(3+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >(*(ROOT::Math::SVector<Double32_t,3*(3+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >(*(Double32_t*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >(*(Double32_t*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >& obj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >& obj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->operator=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->operator==(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->operator!=(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->operator>(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->operator<(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >& obj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->operator+=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >& obj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->operator-=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >& obj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->operator*=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >& obj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->operator/=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> > xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> > xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> > xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->Det(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->Det2(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3>* pobj;
         const ROOT::Math::SVector<Double32_t,3> xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<Double32_t,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3>* pobj;
         const ROOT::Math::SVector<Double32_t,3> xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<Double32_t,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3>* pobj;
         const ROOT::Math::SVector<Double32_t,3> xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<Double32_t,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3*(3+1)/2>* pobj;
         const ROOT::Math::SVector<Double32_t,3*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<Double32_t,3*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3*(3+1)/2>* pobj;
         const ROOT::Math::SVector<Double32_t,3*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<Double32_t,3*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->IsInUse((const Double32_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_299_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> > G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR;
static int G__G__Smatrix32_299_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) (soff+(sizeof(ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix32_299_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >* dest = (ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SVector<Double32_t,6> */
static int G__G__Smatrix32_300_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<Double32_t,6>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<Double32_t,6>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<Double32_t,6>;
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<Double32_t,6>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,6>(*(ROOT::Math::SVector<Double32_t,6>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,6>(*(ROOT::Math::SVector<Double32_t,6>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,6>((const Double32_t*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,6>((const Double32_t*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,6>((ROOT::Math::SVector<Double32_t,6>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<Double32_t,6>::const_iterator) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,6>((ROOT::Math::SVector<Double32_t,6>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<Double32_t,6>::const_iterator) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,6>(*(Double32_t*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,6>(*(Double32_t*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,6>(*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,6>(*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,6>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,6>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,6>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,6>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,6>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,6>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,6>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,6>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,6>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,6>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,6>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,6>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,6>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7])
, *(Double32_t*) G__Doubleref(&libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,6>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7])
, *(Double32_t*) G__Doubleref(&libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,6>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7])
, *(Double32_t*) G__Doubleref(&libp->para[8]), *(Double32_t*) G__Doubleref(&libp->para[9]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,6>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7])
, *(Double32_t*) G__Doubleref(&libp->para[8]), *(Double32_t*) G__Doubleref(&libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6>& obj = ((ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Math::SVector<Double32_t,6>::Dim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator==(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator!=(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator==(*(ROOT::Math::SVector<Double32_t,6>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator!=(*(ROOT::Math::SVector<Double32_t,6>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator>(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator<(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator>(*(ROOT::Math::SVector<Double32_t,6>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator<(*(ROOT::Math::SVector<Double32_t,6>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6>& obj = ((ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator+=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6>& obj = ((ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator-=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6>& obj = ((ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator*=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6>& obj = ((ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator/=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6>& obj = ((ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator+=(*(ROOT::Math::SVector<Double32_t,6>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6>& obj = ((ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->operator-=(*(ROOT::Math::SVector<Double32_t,6>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6>& obj = ((ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->Unit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_300_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SVector<Double32_t,6> G__TROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR;
static int G__G__Smatrix32_300_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SVector<Double32_t,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SVector<Double32_t,6>*) (soff+(sizeof(ROOT::Math::SVector<Double32_t,6>)*i)))->~G__TROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SVector<Double32_t,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SVector<Double32_t,6>*) (soff))->~G__TROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix32_300_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,6>* dest = (ROOT::Math::SVector<Double32_t,6>*) G__getstructoffset();
   *dest = *(ROOT::Math::SVector<Double32_t,6>*) libp->para[0].ref;
   const ROOT::Math::SVector<Double32_t,6>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SVector<Double32_t,3> */
static int G__G__Smatrix32_305_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<Double32_t,3>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<Double32_t,3>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<Double32_t,3>;
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<Double32_t,3>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,3>(*(ROOT::Math::SVector<Double32_t,3>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,3>(*(ROOT::Math::SVector<Double32_t,3>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,3>((const Double32_t*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,3>((const Double32_t*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,3>((ROOT::Math::SVector<Double32_t,3>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<Double32_t,3>::const_iterator) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,3>((ROOT::Math::SVector<Double32_t,3>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<Double32_t,3>::const_iterator) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,3>(*(Double32_t*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,3>(*(Double32_t*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,3>(*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,3>(*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,3>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,3>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,3>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,3>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,3>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,3>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,3>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,3>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,3>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,3>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,3>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,3>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,3>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7])
, *(Double32_t*) G__Doubleref(&libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,3>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7])
, *(Double32_t*) G__Doubleref(&libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,3>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7])
, *(Double32_t*) G__Doubleref(&libp->para[8]), *(Double32_t*) G__Doubleref(&libp->para[9]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,3>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7])
, *(Double32_t*) G__Doubleref(&libp->para[8]), *(Double32_t*) G__Doubleref(&libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3>& obj = ((ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Math::SVector<Double32_t,3>::Dim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator==(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator!=(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator==(*(ROOT::Math::SVector<Double32_t,3>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator!=(*(ROOT::Math::SVector<Double32_t,3>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator>(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator<(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator>(*(ROOT::Math::SVector<Double32_t,3>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator<(*(ROOT::Math::SVector<Double32_t,3>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3>& obj = ((ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator+=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3>& obj = ((ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator-=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3>& obj = ((ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator*=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3>& obj = ((ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator/=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3>& obj = ((ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator+=(*(ROOT::Math::SVector<Double32_t,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3>& obj = ((ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->operator-=(*(ROOT::Math::SVector<Double32_t,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3>& obj = ((ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->Unit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_305_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SVector<Double32_t,3> G__TROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR;
static int G__G__Smatrix32_305_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SVector<Double32_t,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SVector<Double32_t,3>*) (soff+(sizeof(ROOT::Math::SVector<Double32_t,3>)*i)))->~G__TROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SVector<Double32_t,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SVector<Double32_t,3>*) (soff))->~G__TROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix32_305_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,3>* dest = (ROOT::Math::SVector<Double32_t,3>*) G__getstructoffset();
   *dest = *(ROOT::Math::SVector<Double32_t,3>*) libp->para[0].ref;
   const ROOT::Math::SVector<Double32_t,3>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<Double32_t,4,4> */
static int G__G__Smatrix32_307_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::MatRepStd<Double32_t,4,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_307_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::MatRepStd<Double32_t,4,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_307_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::MatRepStd<Double32_t,4,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_307_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::MatRepStd<Double32_t,4,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_307_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepStd<Double32_t,4,4>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_307_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepStd<Double32_t,4,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_307_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepStd<Double32_t,4,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix32_307_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<Double32_t,4,4> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<Double32_t,4,4>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<Double32_t,4,4>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<Double32_t,4,4>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<Double32_t,4,4>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix32_307_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<Double32_t,4,4>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<Double32_t,4,4>(*(ROOT::Math::MatRepStd<Double32_t,4,4>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<Double32_t,4,4> G__TROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR;
static int G__G__Smatrix32_307_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<Double32_t,4,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<Double32_t,4,4>*) (soff+(sizeof(ROOT::Math::MatRepStd<Double32_t,4,4>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<Double32_t,4,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<Double32_t,4,4>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix32_307_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<Double32_t,4,4>* dest = (ROOT::Math::MatRepStd<Double32_t,4,4>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<Double32_t,4,4>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<Double32_t,4,4>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> > */
static int G__G__Smatrix32_309_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >(*(ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >(*(ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >(*(ROOT::Math::SVector<Double32_t,4*(4+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >(*(ROOT::Math::SVector<Double32_t,4*(4+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >(*(ROOT::Math::SVector<Double32_t,4*(4+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >(*(ROOT::Math::SVector<Double32_t,4*(4+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >(*(Double32_t*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >(*(Double32_t*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >& obj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >& obj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->operator=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->operator==(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->operator!=(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->operator>(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->operator<(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >& obj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->operator+=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >& obj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->operator-=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >& obj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->operator*=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >& obj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->operator/=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> > xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> > xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> > xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->Det(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->Det2(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4>* pobj;
         const ROOT::Math::SVector<Double32_t,4> xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<Double32_t,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4>* pobj;
         const ROOT::Math::SVector<Double32_t,4> xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<Double32_t,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4>* pobj;
         const ROOT::Math::SVector<Double32_t,4> xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<Double32_t,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4*(4+1)/2>* pobj;
         const ROOT::Math::SVector<Double32_t,4*(4+1)/2> xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<Double32_t,4*(4+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4*(4+1)/2>* pobj;
         const ROOT::Math::SVector<Double32_t,4*(4+1)/2> xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<Double32_t,4*(4+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->IsInUse((const Double32_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_309_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> > G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR;
static int G__G__Smatrix32_309_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) (soff+(sizeof(ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix32_309_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >* dest = (ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SVector<Double32_t,4> */
static int G__G__Smatrix32_315_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<Double32_t,4>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<Double32_t,4>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<Double32_t,4>;
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<Double32_t,4>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,4>(*(ROOT::Math::SVector<Double32_t,4>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,4>(*(ROOT::Math::SVector<Double32_t,4>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,4>((const Double32_t*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,4>((const Double32_t*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,4>((ROOT::Math::SVector<Double32_t,4>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<Double32_t,4>::const_iterator) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,4>((ROOT::Math::SVector<Double32_t,4>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<Double32_t,4>::const_iterator) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,4>(*(Double32_t*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,4>(*(Double32_t*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,4>(*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,4>(*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,4>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,4>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,4>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,4>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,4>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,4>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,4>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,4>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,4>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,4>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,4>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,4>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,4>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7])
, *(Double32_t*) G__Doubleref(&libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,4>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7])
, *(Double32_t*) G__Doubleref(&libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,4>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7])
, *(Double32_t*) G__Doubleref(&libp->para[8]), *(Double32_t*) G__Doubleref(&libp->para[9]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,4>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7])
, *(Double32_t*) G__Doubleref(&libp->para[8]), *(Double32_t*) G__Doubleref(&libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4>& obj = ((ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Math::SVector<Double32_t,4>::Dim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator==(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator!=(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator==(*(ROOT::Math::SVector<Double32_t,4>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator!=(*(ROOT::Math::SVector<Double32_t,4>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator>(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator<(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator>(*(ROOT::Math::SVector<Double32_t,4>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator<(*(ROOT::Math::SVector<Double32_t,4>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4>& obj = ((ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator+=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4>& obj = ((ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator-=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4>& obj = ((ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator*=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4>& obj = ((ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator/=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4>& obj = ((ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator+=(*(ROOT::Math::SVector<Double32_t,4>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4>& obj = ((ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->operator-=(*(ROOT::Math::SVector<Double32_t,4>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4>& obj = ((ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->Unit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_315_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SVector<Double32_t,4> G__TROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR;
static int G__G__Smatrix32_315_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SVector<Double32_t,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SVector<Double32_t,4>*) (soff+(sizeof(ROOT::Math::SVector<Double32_t,4>)*i)))->~G__TROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SVector<Double32_t,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SVector<Double32_t,4>*) (soff))->~G__TROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix32_315_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,4>* dest = (ROOT::Math::SVector<Double32_t,4>*) G__getstructoffset();
   *dest = *(ROOT::Math::SVector<Double32_t,4>*) libp->para[0].ref;
   const ROOT::Math::SVector<Double32_t,4>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<Double32_t,5,5> */
static int G__G__Smatrix32_317_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::MatRepStd<Double32_t,5,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_317_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::MatRepStd<Double32_t,5,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_317_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::MatRepStd<Double32_t,5,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_317_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::MatRepStd<Double32_t,5,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_317_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepStd<Double32_t,5,5>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_317_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepStd<Double32_t,5,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_317_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepStd<Double32_t,5,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix32_317_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<Double32_t,5,5> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<Double32_t,5,5>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<Double32_t,5,5>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<Double32_t,5,5>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<Double32_t,5,5>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix32_317_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<Double32_t,5,5>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<Double32_t,5,5>(*(ROOT::Math::MatRepStd<Double32_t,5,5>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<Double32_t,5,5> G__TROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR;
static int G__G__Smatrix32_317_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<Double32_t,5,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<Double32_t,5,5>*) (soff+(sizeof(ROOT::Math::MatRepStd<Double32_t,5,5>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<Double32_t,5,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<Double32_t,5,5>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix32_317_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<Double32_t,5,5>* dest = (ROOT::Math::MatRepStd<Double32_t,5,5>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<Double32_t,5,5>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<Double32_t,5,5>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> > */
static int G__G__Smatrix32_319_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >(*(ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >(*(ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >(*(ROOT::Math::SVector<Double32_t,5*(5+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >(*(ROOT::Math::SVector<Double32_t,5*(5+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >(*(ROOT::Math::SVector<Double32_t,5*(5+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >(*(ROOT::Math::SVector<Double32_t,5*(5+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >(*(Double32_t*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >(*(Double32_t*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >& obj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >& obj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->operator=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->operator==(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->operator!=(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->operator>(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->operator<(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >& obj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->operator+=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >& obj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->operator-=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >& obj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->operator*=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >& obj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->operator/=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> > xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> > xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> > xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->Det(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->Det2(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5>* pobj;
         const ROOT::Math::SVector<Double32_t,5> xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<Double32_t,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5>* pobj;
         const ROOT::Math::SVector<Double32_t,5> xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<Double32_t,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5>* pobj;
         const ROOT::Math::SVector<Double32_t,5> xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<Double32_t,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5*(5+1)/2>* pobj;
         const ROOT::Math::SVector<Double32_t,5*(5+1)/2> xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<Double32_t,5*(5+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5*(5+1)/2>* pobj;
         const ROOT::Math::SVector<Double32_t,5*(5+1)/2> xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<Double32_t,5*(5+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->IsInUse((const Double32_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_319_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> > G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR;
static int G__G__Smatrix32_319_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) (soff+(sizeof(ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix32_319_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >* dest = (ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SVector<Double32_t,5> */
static int G__G__Smatrix32_325_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<Double32_t,5>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<Double32_t,5>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<Double32_t,5>;
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<Double32_t,5>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,5>(*(ROOT::Math::SVector<Double32_t,5>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,5>(*(ROOT::Math::SVector<Double32_t,5>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,5>((const Double32_t*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,5>((const Double32_t*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,5>((ROOT::Math::SVector<Double32_t,5>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<Double32_t,5>::const_iterator) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,5>((ROOT::Math::SVector<Double32_t,5>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<Double32_t,5>::const_iterator) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,5>(*(Double32_t*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,5>(*(Double32_t*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,5>(*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,5>(*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,5>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,5>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,5>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,5>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,5>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,5>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,5>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,5>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,5>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,5>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,5>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,5>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,5>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7])
, *(Double32_t*) G__Doubleref(&libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,5>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7])
, *(Double32_t*) G__Doubleref(&libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<Double32_t,5>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7])
, *(Double32_t*) G__Doubleref(&libp->para[8]), *(Double32_t*) G__Doubleref(&libp->para[9]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<Double32_t,5>(
*(Double32_t*) G__Doubleref(&libp->para[0]), *(Double32_t*) G__Doubleref(&libp->para[1])
, *(Double32_t*) G__Doubleref(&libp->para[2]), *(Double32_t*) G__Doubleref(&libp->para[3])
, *(Double32_t*) G__Doubleref(&libp->para[4]), *(Double32_t*) G__Doubleref(&libp->para[5])
, *(Double32_t*) G__Doubleref(&libp->para[6]), *(Double32_t*) G__Doubleref(&libp->para[7])
, *(Double32_t*) G__Doubleref(&libp->para[8]), *(Double32_t*) G__Doubleref(&libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5>& obj = ((ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Math::SVector<Double32_t,5>::Dim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator==(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator!=(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator==(*(ROOT::Math::SVector<Double32_t,5>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator!=(*(ROOT::Math::SVector<Double32_t,5>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator>(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator<(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator>(*(ROOT::Math::SVector<Double32_t,5>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator<(*(ROOT::Math::SVector<Double32_t,5>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5>& obj = ((ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator+=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5>& obj = ((ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator-=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5>& obj = ((ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator*=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5>& obj = ((ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator/=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5>& obj = ((ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator+=(*(ROOT::Math::SVector<Double32_t,5>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5>& obj = ((ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->operator-=(*(ROOT::Math::SVector<Double32_t,5>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5>& obj = ((ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->Unit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_325_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SVector<Double32_t,5> G__TROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR;
static int G__G__Smatrix32_325_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SVector<Double32_t,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SVector<Double32_t,5>*) (soff+(sizeof(ROOT::Math::SVector<Double32_t,5>)*i)))->~G__TROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SVector<Double32_t,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SVector<Double32_t,5>*) (soff))->~G__TROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix32_325_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<Double32_t,5>* dest = (ROOT::Math::SVector<Double32_t,5>*) G__getstructoffset();
   *dest = *(ROOT::Math::SVector<Double32_t,5>*) libp->para[0].ref;
   const ROOT::Math::SVector<Double32_t,5>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<Double32_t,6,6> */
static int G__G__Smatrix32_327_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::MatRepStd<Double32_t,6,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_327_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::MatRepStd<Double32_t,6,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_327_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::MatRepStd<Double32_t,6,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_327_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::MatRepStd<Double32_t,6,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_327_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepStd<Double32_t,6,6>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_327_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepStd<Double32_t,6,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_327_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepStd<Double32_t,6,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix32_327_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<Double32_t,6,6> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<Double32_t,6,6>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<Double32_t,6,6>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<Double32_t,6,6>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<Double32_t,6,6>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix32_327_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<Double32_t,6,6>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<Double32_t,6,6>(*(ROOT::Math::MatRepStd<Double32_t,6,6>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<Double32_t,6,6> G__TROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR;
static int G__G__Smatrix32_327_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<Double32_t,6,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<Double32_t,6,6>*) (soff+(sizeof(ROOT::Math::MatRepStd<Double32_t,6,6>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<Double32_t,6,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<Double32_t,6,6>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix32_327_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<Double32_t,6,6>* dest = (ROOT::Math::MatRepStd<Double32_t,6,6>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<Double32_t,6,6>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<Double32_t,6,6>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> > */
static int G__G__Smatrix32_329_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >(*(ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >(*(ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >(*(ROOT::Math::SVector<Double32_t,6*(6+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >(*(ROOT::Math::SVector<Double32_t,6*(6+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >(*(ROOT::Math::SVector<Double32_t,6*(6+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >(*(ROOT::Math::SVector<Double32_t,6*(6+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >(*(Double32_t*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >(*(Double32_t*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >& obj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >& obj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->operator=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->operator==(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->operator!=(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->operator>(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->operator<(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >& obj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->operator+=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >& obj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->operator-=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >& obj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->operator*=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >& obj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->operator/=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> > xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> > xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> > xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->Det(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->Det2(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6>* pobj;
         const ROOT::Math::SVector<Double32_t,6> xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<Double32_t,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6>* pobj;
         const ROOT::Math::SVector<Double32_t,6> xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<Double32_t,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6>* pobj;
         const ROOT::Math::SVector<Double32_t,6> xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<Double32_t,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6*(6+1)/2>* pobj;
         const ROOT::Math::SVector<Double32_t,6*(6+1)/2> xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<Double32_t,6*(6+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6*(6+1)/2>* pobj;
         const ROOT::Math::SVector<Double32_t,6*(6+1)/2> xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<Double32_t,6*(6+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->IsInUse((const Double32_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_329_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> > G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR;
static int G__G__Smatrix32_329_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) (soff+(sizeof(ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix32_329_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >* dest = (ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<Double32_t,3> */
static int G__G__Smatrix32_335_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<Double32_t,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<Double32_t,3>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<Double32_t,3>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<Double32_t,3>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<Double32_t,3>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_335_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::MatRepSym<Double32_t,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_335_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::MatRepSym<Double32_t,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_335_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::MatRepSym<Double32_t,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_335_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::MatRepSym<Double32_t,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_335_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepSym<Double32_t,3>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_335_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepSym<Double32_t,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_335_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepSym<Double32_t,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_335_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<Double32_t,3>& obj = ((ROOT::Math::MatRepSym<Double32_t,3>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<Double32_t,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_335_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<Double32_t,3>& obj = ((ROOT::Math::MatRepSym<Double32_t,3>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<Double32_t,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_335_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<Double32_t,3>& obj = ((ROOT::Math::MatRepSym<Double32_t,3>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<Double32_t,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_335_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<Double32_t,3>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_335_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<3>& obj = ((const ROOT::Math::MatRepSym<Double32_t,3>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix32_335_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<Double32_t,3>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<Double32_t,3>(*(ROOT::Math::MatRepSym<Double32_t,3>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<Double32_t,3> G__TROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR;
static int G__G__Smatrix32_335_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<Double32_t,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<Double32_t,3>*) (soff+(sizeof(ROOT::Math::MatRepSym<Double32_t,3>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<Double32_t,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<Double32_t,3>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<Double32_t,4> */
static int G__G__Smatrix32_337_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<Double32_t,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<Double32_t,4>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<Double32_t,4>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<Double32_t,4>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<Double32_t,4>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_337_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::MatRepSym<Double32_t,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_337_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::MatRepSym<Double32_t,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_337_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::MatRepSym<Double32_t,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_337_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::MatRepSym<Double32_t,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_337_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepSym<Double32_t,4>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_337_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepSym<Double32_t,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_337_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepSym<Double32_t,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_337_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<Double32_t,4>& obj = ((ROOT::Math::MatRepSym<Double32_t,4>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<Double32_t,4>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_337_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<Double32_t,4>& obj = ((ROOT::Math::MatRepSym<Double32_t,4>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<Double32_t,4>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_337_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<Double32_t,4>& obj = ((ROOT::Math::MatRepSym<Double32_t,4>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<Double32_t,4>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_337_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<Double32_t,4>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_337_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<4>& obj = ((const ROOT::Math::MatRepSym<Double32_t,4>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix32_337_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<Double32_t,4>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<Double32_t,4>(*(ROOT::Math::MatRepSym<Double32_t,4>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<Double32_t,4> G__TROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR;
static int G__G__Smatrix32_337_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<Double32_t,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<Double32_t,4>*) (soff+(sizeof(ROOT::Math::MatRepSym<Double32_t,4>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<Double32_t,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<Double32_t,4>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<Double32_t,5> */
static int G__G__Smatrix32_339_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<Double32_t,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<Double32_t,5>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<Double32_t,5>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<Double32_t,5>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<Double32_t,5>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_339_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::MatRepSym<Double32_t,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_339_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::MatRepSym<Double32_t,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_339_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::MatRepSym<Double32_t,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_339_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::MatRepSym<Double32_t,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_339_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepSym<Double32_t,5>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_339_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepSym<Double32_t,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_339_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepSym<Double32_t,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_339_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<Double32_t,5>& obj = ((ROOT::Math::MatRepSym<Double32_t,5>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<Double32_t,5>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_339_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<Double32_t,5>& obj = ((ROOT::Math::MatRepSym<Double32_t,5>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<Double32_t,5>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_339_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<Double32_t,5>& obj = ((ROOT::Math::MatRepSym<Double32_t,5>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<Double32_t,5>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_339_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<Double32_t,5>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_339_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<5>& obj = ((const ROOT::Math::MatRepSym<Double32_t,5>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix32_339_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<Double32_t,5>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<Double32_t,5>(*(ROOT::Math::MatRepSym<Double32_t,5>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<Double32_t,5> G__TROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR;
static int G__G__Smatrix32_339_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<Double32_t,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<Double32_t,5>*) (soff+(sizeof(ROOT::Math::MatRepSym<Double32_t,5>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<Double32_t,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<Double32_t,5>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<Double32_t,6> */
static int G__G__Smatrix32_341_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<Double32_t,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<Double32_t,6>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<Double32_t,6>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<Double32_t,6>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<Double32_t,6>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_341_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::MatRepSym<Double32_t,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_341_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::MatRepSym<Double32_t,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_341_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::MatRepSym<Double32_t,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_341_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::MatRepSym<Double32_t,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_341_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepSym<Double32_t,6>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_341_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepSym<Double32_t,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_341_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepSym<Double32_t,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_341_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<Double32_t,6>& obj = ((ROOT::Math::MatRepSym<Double32_t,6>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<Double32_t,6>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_341_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<Double32_t,6>& obj = ((ROOT::Math::MatRepSym<Double32_t,6>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<Double32_t,6>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_341_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<Double32_t,6>& obj = ((ROOT::Math::MatRepSym<Double32_t,6>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<Double32_t,6>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_341_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<Double32_t,6>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_341_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<6>& obj = ((const ROOT::Math::MatRepSym<Double32_t,6>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix32_341_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<Double32_t,6>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<Double32_t,6>(*(ROOT::Math::MatRepSym<Double32_t,6>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<Double32_t,6> G__TROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR;
static int G__G__Smatrix32_341_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<Double32_t,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<Double32_t,6>*) (soff+(sizeof(ROOT::Math::MatRepSym<Double32_t,6>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<Double32_t,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<Double32_t,6>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> > */
static int G__G__Smatrix32_343_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >(*(ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >(*(ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >(*(ROOT::Math::SVector<Double32_t,3*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >(*(ROOT::Math::SVector<Double32_t,3*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >(*(ROOT::Math::SVector<Double32_t,3*(3+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >(*(ROOT::Math::SVector<Double32_t,3*(3+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >(*(Double32_t*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >(*(Double32_t*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >& obj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >& obj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->operator=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->operator==(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->operator!=(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->operator>(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->operator<(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >& obj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->operator+=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >& obj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->operator-=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >& obj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->operator*=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >& obj = ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->operator/=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> > xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> > xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> > xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->Det(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->Det2(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3>* pobj;
         const ROOT::Math::SVector<Double32_t,3> xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<Double32_t,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3>* pobj;
         const ROOT::Math::SVector<Double32_t,3> xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<Double32_t,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3>* pobj;
         const ROOT::Math::SVector<Double32_t,3> xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<Double32_t,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3*(3+1)/2>* pobj;
         const ROOT::Math::SVector<Double32_t,3*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<Double32_t,3*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,3*(3+1)/2>* pobj;
         const ROOT::Math::SVector<Double32_t,3*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<Double32_t,3*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->IsInUse((const Double32_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_343_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> > G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR;
static int G__G__Smatrix32_343_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) (soff+(sizeof(ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> > */
static int G__G__Smatrix32_347_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >(*(ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >(*(ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >(*(ROOT::Math::SVector<Double32_t,4*(4+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >(*(ROOT::Math::SVector<Double32_t,4*(4+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >(*(ROOT::Math::SVector<Double32_t,4*(4+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >(*(ROOT::Math::SVector<Double32_t,4*(4+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >(*(Double32_t*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >(*(Double32_t*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >& obj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >& obj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->operator=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->operator==(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->operator!=(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->operator>(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->operator<(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >& obj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->operator+=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >& obj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->operator-=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >& obj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->operator*=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >& obj = ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->operator/=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> > xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> > xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> > xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->Det(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->Det2(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4>* pobj;
         const ROOT::Math::SVector<Double32_t,4> xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<Double32_t,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4>* pobj;
         const ROOT::Math::SVector<Double32_t,4> xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<Double32_t,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4>* pobj;
         const ROOT::Math::SVector<Double32_t,4> xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<Double32_t,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4*(4+1)/2>* pobj;
         const ROOT::Math::SVector<Double32_t,4*(4+1)/2> xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<Double32_t,4*(4+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,4*(4+1)/2>* pobj;
         const ROOT::Math::SVector<Double32_t,4*(4+1)/2> xobj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<Double32_t,4*(4+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->IsInUse((const Double32_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_347_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> > G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR;
static int G__G__Smatrix32_347_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) (soff+(sizeof(ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> > */
static int G__G__Smatrix32_351_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >(*(ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >(*(ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >(*(ROOT::Math::SVector<Double32_t,5*(5+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >(*(ROOT::Math::SVector<Double32_t,5*(5+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >(*(ROOT::Math::SVector<Double32_t,5*(5+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >(*(ROOT::Math::SVector<Double32_t,5*(5+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >(*(Double32_t*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >(*(Double32_t*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >& obj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >& obj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->operator=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->operator==(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->operator!=(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->operator>(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->operator<(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >& obj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->operator+=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >& obj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->operator-=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >& obj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->operator*=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >& obj = ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->operator/=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> > xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> > xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> > xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->Det(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->Det2(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5>* pobj;
         const ROOT::Math::SVector<Double32_t,5> xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<Double32_t,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5>* pobj;
         const ROOT::Math::SVector<Double32_t,5> xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<Double32_t,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5>* pobj;
         const ROOT::Math::SVector<Double32_t,5> xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<Double32_t,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5*(5+1)/2>* pobj;
         const ROOT::Math::SVector<Double32_t,5*(5+1)/2> xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<Double32_t,5*(5+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,5*(5+1)/2>* pobj;
         const ROOT::Math::SVector<Double32_t,5*(5+1)/2> xobj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<Double32_t,5*(5+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->IsInUse((const Double32_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_351_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> > G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR;
static int G__G__Smatrix32_351_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) (soff+(sizeof(ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> > */
static int G__G__Smatrix32_355_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >(*(ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >(*(ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >(*(ROOT::Math::SVector<Double32_t,6*(6+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >(*(ROOT::Math::SVector<Double32_t,6*(6+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >(*(ROOT::Math::SVector<Double32_t,6*(6+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >(*(ROOT::Math::SVector<Double32_t,6*(6+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >(*(Double32_t*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >(*(Double32_t*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >& obj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >& obj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->operator=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->operator==(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->operator!=(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->operator>(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->operator<(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >& obj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->operator+=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >& obj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->operator-=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >& obj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->operator*=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >& obj = ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->operator/=(*(Double32_t*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> > xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> > xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >* pobj;
         const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> > xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->Det(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->Det2(*(Double32_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6>* pobj;
         const ROOT::Math::SVector<Double32_t,6> xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<Double32_t,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6>* pobj;
         const ROOT::Math::SVector<Double32_t,6> xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<Double32_t,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6>* pobj;
         const ROOT::Math::SVector<Double32_t,6> xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<Double32_t,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6*(6+1)/2>* pobj;
         const ROOT::Math::SVector<Double32_t,6*(6+1)/2> xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<Double32_t,6*(6+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<Double32_t,6*(6+1)/2>* pobj;
         const ROOT::Math::SVector<Double32_t,6*(6+1)/2> xobj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<Double32_t,6*(6+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->IsInUse((const Double32_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix32_355_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> > G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR;
static int G__G__Smatrix32_355_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) (soff+(sizeof(ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ROOT::Math::MatRepStd<Double32_t,3,3> */

/* ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> > */

/* ROOT::Math::SVector<Double32_t,6> */

/* ROOT::Math::SVector<Double32_t,3> */

/* ROOT::Math::MatRepStd<Double32_t,4,4> */

/* ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> > */

/* ROOT::Math::SVector<Double32_t,4> */

/* ROOT::Math::MatRepStd<Double32_t,5,5> */

/* ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> > */

/* ROOT::Math::SVector<Double32_t,5> */

/* ROOT::Math::MatRepStd<Double32_t,6,6> */

/* ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> > */

/* ROOT::Math::MatRepSym<Double32_t,3> */

/* ROOT::Math::MatRepSym<Double32_t,4> */

/* ROOT::Math::MatRepSym<Double32_t,5> */

/* ROOT::Math::MatRepSym<Double32_t,6> */

/* ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> > */

/* ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> > */

/* ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> > */

/* ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Smatrix32 {
 public:
  G__Sizep2memfuncG__Smatrix32(): p(&G__Sizep2memfuncG__Smatrix32::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Smatrix32::*p)();
};

size_t G__get_sizep2memfuncG__Smatrix32()
{
  G__Sizep2memfuncG__Smatrix32 a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Smatrix32() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Smatrix32() {

   /* Setting up typedef entry */
   G__search_typename2("Double32_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes in memory, written as a 4 bytes float",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,2,2,MatRepStd<double,2,2> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<double,2*(2+1)/2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,2,2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,3,3,MatRepStd<double,3,3> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<double,3*(3+1)/2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,3>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,3,3>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,4,4,MatRepStd<double,4,4> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<double,4*(4+1)/2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO10gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,4>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,4,4>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,5,5,MatRepStd<double,5,5> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<double,5*(5+1)/2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO15gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,5>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,5,5>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,6,6,MatRepStd<double,6,6> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<double,6*(6+1)/2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO21gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,6>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,6,6>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,7,7,MatRepStd<double,7,7> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<double,7*(7+1)/2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO28gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,7>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,7,7>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,2,2,MatRepSym<double,2> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,3,3,MatRepSym<double,3> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,4,4,MatRepSym<double,4> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,5,5,MatRepSym<double,5> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,6,6,MatRepSym<double,6> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,7,7,MatRepSym<double,7> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,2,2,MatRepStd<float,2,2> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<float,2*(2+1)/2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,2,2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,3,3,MatRepStd<float,3,3> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<float,3*(3+1)/2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,3>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,3,3>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,4,4,MatRepStd<float,4,4> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<float,4*(4+1)/2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO10gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,4>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,4,4>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,5,5,MatRepStd<float,5,5> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<float,5*(5+1)/2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO15gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,5>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,5,5>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,6,6,MatRepStd<float,6,6> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<float,6*(6+1)/2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO21gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,6>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,6,6>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,7,7,MatRepStd<float,7,7> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<float,7*(7+1)/2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO28gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,7>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,7,7>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,2,2,MatRepSym<float,2> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,3,3,MatRepSym<float,3> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,4,4,MatRepSym<float,4> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,5,5,MatRepSym<float,5> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,6,6,MatRepSym<float,6> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,7,7,MatRepSym<float,7> >",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<Double32_t,3,3>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<Double32_t,3*(3+1)/2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<Double32_t,3>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<Double32_t,4,4>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<Double32_t,4*(4+1)/2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO10gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<Double32_t,4>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<Double32_t,5,5>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<Double32_t,5*(5+1)/2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO15gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<Double32_t,5>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<Double32_t,6,6>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<Double32_t,6*(6+1)/2>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO21gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<Double32_t,6>",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR),0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ROOT::Math::MatRepStd<Double32_t,3,3> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR));
   { ROOT::Math::MatRepStd<Double32_t,3,3> *p; p=(ROOT::Math::MatRepStd<Double32_t,3,3>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRcLcLdA),-1,-2,1,"kSize=9",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fArray[9]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR));
   { ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> > *p; p=(ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgRcLcLdA),-1,-2,1,"kSize=9",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SVector<Double32_t,6> */
static void G__setup_memvarROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   { ROOT::Math::SVector<Double32_t,6> *p; p=(ROOT::Math::SVector<Double32_t,6>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gRcLcLdA),-1,-2,1,"kSize=6",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fArray[6]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SVector<Double32_t,3> */
static void G__setup_memvarROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   { ROOT::Math::SVector<Double32_t,3> *p; p=(ROOT::Math::SVector<Double32_t,3>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gRcLcLdA),-1,-2,1,"kSize=3",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fArray[3]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<Double32_t,4,4> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR));
   { ROOT::Math::MatRepStd<Double32_t,4,4> *p; p=(ROOT::Math::MatRepStd<Double32_t,4,4>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRcLcLdA),-1,-2,1,"kRows=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRcLcLdA),-1,-2,1,"kCols=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRcLcLdA),-1,-2,1,"kSize=16",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fArray[16]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR));
   { ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> > *p; p=(ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgRcLcLdA),-1,-2,1,"kRows=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgRcLcLdA),-1,-2,1,"kCols=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgRcLcLdA),-1,-2,1,"kSize=16",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SVector<Double32_t,4> */
static void G__setup_memvarROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   { ROOT::Math::SVector<Double32_t,4> *p; p=(ROOT::Math::SVector<Double32_t,4>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gRcLcLdA),-1,-2,1,"kSize=4",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fArray[4]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<Double32_t,5,5> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR));
   { ROOT::Math::MatRepStd<Double32_t,5,5> *p; p=(ROOT::Math::MatRepStd<Double32_t,5,5>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRcLcLdA),-1,-2,1,"kRows=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRcLcLdA),-1,-2,1,"kCols=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRcLcLdA),-1,-2,1,"kSize=25",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fArray[25]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR));
   { ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> > *p; p=(ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgRcLcLdA),-1,-2,1,"kRows=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgRcLcLdA),-1,-2,1,"kCols=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgRcLcLdA),-1,-2,1,"kSize=25",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SVector<Double32_t,5> */
static void G__setup_memvarROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   { ROOT::Math::SVector<Double32_t,5> *p; p=(ROOT::Math::SVector<Double32_t,5>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gRcLcLdA),-1,-2,1,"kSize=5",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fArray[5]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<Double32_t,6,6> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR));
   { ROOT::Math::MatRepStd<Double32_t,6,6> *p; p=(ROOT::Math::MatRepStd<Double32_t,6,6>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRcLcLdA),-1,-2,1,"kRows=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRcLcLdA),-1,-2,1,"kCols=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRcLcLdA),-1,-2,1,"kSize=36",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fArray[36]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR));
   { ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> > *p; p=(ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgRcLcLdA),-1,-2,1,"kRows=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgRcLcLdA),-1,-2,1,"kCols=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgRcLcLdA),-1,-2,1,"kSize=36",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<Double32_t,3> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR));
   { ROOT::Math::MatRepSym<Double32_t,3> *p; p=(ROOT::Math::MatRepSym<Double32_t,3>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRcLcLdA),-1,-2,1,"kSize=6",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fArray[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE3gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<Double32_t,4> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR));
   { ROOT::Math::MatRepSym<Double32_t,4> *p; p=(ROOT::Math::MatRepSym<Double32_t,4>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRcLcLdA),-1,-2,1,"kRows=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRcLcLdA),-1,-2,1,"kCols=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRcLcLdA),-1,-2,1,"kSize=10",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fArray[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE4gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<Double32_t,5> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR));
   { ROOT::Math::MatRepSym<Double32_t,5> *p; p=(ROOT::Math::MatRepSym<Double32_t,5>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRcLcLdA),-1,-2,1,"kRows=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRcLcLdA),-1,-2,1,"kCols=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRcLcLdA),-1,-2,1,"kSize=15",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fArray[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE5gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<Double32_t,6> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR));
   { ROOT::Math::MatRepSym<Double32_t,6> *p; p=(ROOT::Math::MatRepSym<Double32_t,6>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRcLcLdA),-1,-2,1,"kRows=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRcLcLdA),-1,-2,1,"kCols=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRcLcLdA),-1,-2,1,"kSize=21",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fArray[21]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE6gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR));
   { ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> > *p; p=(ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgRcLcLdA),-1,-2,1,"kSize=9",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR));
   { ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> > *p; p=(ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgRcLcLdA),-1,-2,1,"kRows=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgRcLcLdA),-1,-2,1,"kCols=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgRcLcLdA),-1,-2,1,"kSize=16",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR));
   { ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> > *p; p=(ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgRcLcLdA),-1,-2,1,"kRows=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgRcLcLdA),-1,-2,1,"kCols=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgRcLcLdA),-1,-2,1,"kSize=25",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR));
   { ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> > *p; p=(ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgRcLcLdA),-1,-2,1,"kRows=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgRcLcLdA),-1,-2,1,"kCols=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgRcLcLdA),-1,-2,1,"kSize=36",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Smatrix32() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR(void) {
   /* ROOT::Math::MatRepStd<Double32_t,3,3> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix32_297_0_1, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_297_0_2, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_297_0_3, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_297_0_4, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_297_0_5, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_297_0_6, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_297_0_7, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<Double32_t,3,3>", 2111, G__G__Smatrix32_297_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<Double32_t,3,3>", 2111, G__G__Smatrix32_297_0_9, (int) ('i'), 
G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<Double32_t,3,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<Double32_t,3,3>", 2237, G__G__Smatrix32_297_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix32_297_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<Double32_t,3,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR(void) {
   /* ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR));
   G__memfunc_setup("SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >",5076,G__G__Smatrix32_299_0_1, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >",5076,G__G__Smatrix32_299_0_2, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >",5076,G__G__Smatrix32_299_0_3, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >",5076,G__G__Smatrix32_299_0_4, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<Double32_t,6>' 'ROOT::Math::SVector<Double32_t,3*(3+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >",5076,G__G__Smatrix32_299_0_5, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR), -1, 0, 1, 5, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_299_0_6, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_299_0_7, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_299_0_8, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_299_0_9, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_299_0_10, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_299_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_299_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_299_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_299_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix32_299_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_299_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_299_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix32_299_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix32_299_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_299_0_20, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_299_0_21, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_299_0_22, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_299_0_23, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_299_0_24, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_299_0_25, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_299_0_26, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_299_0_27, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix32_299_0_28, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix32_299_0_29, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix32_299_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix32_299_0_31, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix32_299_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix32_299_0_33, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix32_299_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix32_299_0_35, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix32_299_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix32_299_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix32_299_0_38, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix32_299_0_39, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix32_299_0_40, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix32_299_0_41, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix32_299_0_42, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), G__defined_typename("ROOT::Math::SVector<Double32_t,3*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix32_299_0_43, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), G__defined_typename("ROOT::Math::SVector<Double32_t,3*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix32_299_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - 'Double32_t' 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix32_299_0_45, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >", 5202, G__G__Smatrix32_299_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix32_299_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR(void) {
   /* ROOT::Math::SVector<Double32_t,6> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR));
   G__memfunc_setup("SVector<Double32_t,6>",1845,G__G__Smatrix32_300_0_1, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,6>",1845,G__G__Smatrix32_300_0_2, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SVector<Double32_t,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,6>",1845,G__G__Smatrix32_300_0_3, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 2, 1, 1, 0, 
"D - 'Double32_t' 10 - a h - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,6>",1845,G__G__Smatrix32_300_0_4, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 2, 1, 1, 0, 
"D - 'ROOT::Math::SVector<Double32_t,6>::const_iterator' 10 - begin D - 'ROOT::Math::SVector<Double32_t,6>::const_iterator' 10 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,6>",1845,G__G__Smatrix32_300_0_5, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 1, 5, 1, 0, "d - 'Double32_t' 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,6>",1845,G__G__Smatrix32_300_0_6, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 2, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,6>",1845,G__G__Smatrix32_300_0_7, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 3, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,6>",1845,G__G__Smatrix32_300_0_8, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 4, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,6>",1845,G__G__Smatrix32_300_0_9, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 5, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,6>",1845,G__G__Smatrix32_300_0_10, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 6, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,6>",1845,G__G__Smatrix32_300_0_11, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 7, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6 "
"d - 'Double32_t' 11 - a7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,6>",1845,G__G__Smatrix32_300_0_12, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 8, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6 "
"d - 'Double32_t' 11 - a7 d - 'Double32_t' 11 - a8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,6>",1845,G__G__Smatrix32_300_0_13, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 9, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6 "
"d - 'Double32_t' 11 - a7 d - 'Double32_t' 11 - a8 "
"d - 'Double32_t' 11 - a9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,6>",1845,G__G__Smatrix32_300_0_14, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 10, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6 "
"d - 'Double32_t' 11 - a7 d - 'Double32_t' 11 - a8 "
"d - 'Double32_t' 11 - a9 d - 'Double32_t' 11 - a10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_300_0_15, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dim",282,G__G__Smatrix32_300_0_16, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Math::SVector<Double32_t,6>::Dim) ), 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_300_0_17, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_300_0_18, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_300_0_19, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_300_0_20, 68, -1, G__defined_typename("ROOT::Math::SVector<Double32_t,6>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_300_0_21, 68, -1, G__defined_typename("ROOT::Math::SVector<Double32_t,6>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_300_0_22, 68, -1, G__defined_typename("ROOT::Math::SVector<Double32_t,6>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_300_0_23, 68, -1, G__defined_typename("ROOT::Math::SVector<Double32_t,6>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix32_300_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_300_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix32_300_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<Double32_t,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_300_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<Double32_t,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix32_300_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix32_300_0_29, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix32_300_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<Double32_t,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix32_300_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<Double32_t,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_300_0_32, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_300_0_33, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_300_0_34, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_300_0_35, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_300_0_36, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_300_0_37, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_300_0_38, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_300_0_39, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix32_300_0_40, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix32_300_0_41, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_300_0_42, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<Double32_t,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_300_0_43, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<Double32_t,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Smatrix32_300_0_44, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix32_300_0_45, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVector<Double32_t,6>", 1971, G__G__Smatrix32_300_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix32_300_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<Double32_t,6>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR(void) {
   /* ROOT::Math::SVector<Double32_t,3> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR));
   G__memfunc_setup("SVector<Double32_t,3>",1842,G__G__Smatrix32_305_0_1, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,3>",1842,G__G__Smatrix32_305_0_2, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SVector<Double32_t,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,3>",1842,G__G__Smatrix32_305_0_3, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 2, 1, 1, 0, 
"D - 'Double32_t' 10 - a h - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,3>",1842,G__G__Smatrix32_305_0_4, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 2, 1, 1, 0, 
"D - 'ROOT::Math::SVector<Double32_t,3>::const_iterator' 10 - begin D - 'ROOT::Math::SVector<Double32_t,3>::const_iterator' 10 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,3>",1842,G__G__Smatrix32_305_0_5, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 1, 5, 1, 0, "d - 'Double32_t' 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,3>",1842,G__G__Smatrix32_305_0_6, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 2, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,3>",1842,G__G__Smatrix32_305_0_7, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 3, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,3>",1842,G__G__Smatrix32_305_0_8, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 4, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,3>",1842,G__G__Smatrix32_305_0_9, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 5, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,3>",1842,G__G__Smatrix32_305_0_10, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 6, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,3>",1842,G__G__Smatrix32_305_0_11, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 7, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6 "
"d - 'Double32_t' 11 - a7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,3>",1842,G__G__Smatrix32_305_0_12, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 8, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6 "
"d - 'Double32_t' 11 - a7 d - 'Double32_t' 11 - a8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,3>",1842,G__G__Smatrix32_305_0_13, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 9, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6 "
"d - 'Double32_t' 11 - a7 d - 'Double32_t' 11 - a8 "
"d - 'Double32_t' 11 - a9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,3>",1842,G__G__Smatrix32_305_0_14, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 10, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6 "
"d - 'Double32_t' 11 - a7 d - 'Double32_t' 11 - a8 "
"d - 'Double32_t' 11 - a9 d - 'Double32_t' 11 - a10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_305_0_15, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dim",282,G__G__Smatrix32_305_0_16, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Math::SVector<Double32_t,3>::Dim) ), 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_305_0_17, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_305_0_18, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_305_0_19, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_305_0_20, 68, -1, G__defined_typename("ROOT::Math::SVector<Double32_t,3>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_305_0_21, 68, -1, G__defined_typename("ROOT::Math::SVector<Double32_t,3>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_305_0_22, 68, -1, G__defined_typename("ROOT::Math::SVector<Double32_t,3>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_305_0_23, 68, -1, G__defined_typename("ROOT::Math::SVector<Double32_t,3>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix32_305_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_305_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix32_305_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<Double32_t,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_305_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<Double32_t,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix32_305_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix32_305_0_29, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix32_305_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<Double32_t,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix32_305_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<Double32_t,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_305_0_32, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_305_0_33, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_305_0_34, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_305_0_35, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_305_0_36, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_305_0_37, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_305_0_38, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_305_0_39, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix32_305_0_40, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix32_305_0_41, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_305_0_42, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<Double32_t,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_305_0_43, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<Double32_t,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Smatrix32_305_0_44, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix32_305_0_45, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVector<Double32_t,3>", 1968, G__G__Smatrix32_305_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix32_305_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<Double32_t,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR(void) {
   /* ROOT::Math::MatRepStd<Double32_t,4,4> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix32_307_0_1, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_307_0_2, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_307_0_3, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_307_0_4, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_307_0_5, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_307_0_6, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_307_0_7, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<Double32_t,4,4>", 2113, G__G__Smatrix32_307_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<Double32_t,4,4>", 2113, G__G__Smatrix32_307_0_9, (int) ('i'), 
G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<Double32_t,4,4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<Double32_t,4,4>", 2239, G__G__Smatrix32_307_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix32_307_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<Double32_t,4,4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR(void) {
   /* ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR));
   G__memfunc_setup("SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >",5080,G__G__Smatrix32_309_0_1, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >",5080,G__G__Smatrix32_309_0_2, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >",5080,G__G__Smatrix32_309_0_3, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >",5080,G__G__Smatrix32_309_0_4, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<Double32_t,10>' 'ROOT::Math::SVector<Double32_t,4*(4+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >",5080,G__G__Smatrix32_309_0_5, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR), -1, 0, 1, 5, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_309_0_6, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_309_0_7, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_309_0_8, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_309_0_9, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_309_0_10, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_309_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_309_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_309_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_309_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix32_309_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_309_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_309_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix32_309_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix32_309_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_309_0_20, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_309_0_21, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_309_0_22, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_309_0_23, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_309_0_24, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_309_0_25, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_309_0_26, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_309_0_27, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix32_309_0_28, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix32_309_0_29, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix32_309_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix32_309_0_31, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix32_309_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix32_309_0_33, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix32_309_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix32_309_0_35, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix32_309_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix32_309_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix32_309_0_38, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix32_309_0_39, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix32_309_0_40, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix32_309_0_41, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix32_309_0_42, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO10gR), G__defined_typename("ROOT::Math::SVector<Double32_t,4*(4+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix32_309_0_43, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO10gR), G__defined_typename("ROOT::Math::SVector<Double32_t,4*(4+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix32_309_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - 'Double32_t' 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix32_309_0_45, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >", 5206, G__G__Smatrix32_309_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix32_309_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR(void) {
   /* ROOT::Math::SVector<Double32_t,4> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR));
   G__memfunc_setup("SVector<Double32_t,4>",1843,G__G__Smatrix32_315_0_1, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,4>",1843,G__G__Smatrix32_315_0_2, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SVector<Double32_t,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,4>",1843,G__G__Smatrix32_315_0_3, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 2, 1, 1, 0, 
"D - 'Double32_t' 10 - a h - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,4>",1843,G__G__Smatrix32_315_0_4, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 2, 1, 1, 0, 
"D - 'ROOT::Math::SVector<Double32_t,4>::const_iterator' 10 - begin D - 'ROOT::Math::SVector<Double32_t,4>::const_iterator' 10 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,4>",1843,G__G__Smatrix32_315_0_5, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 1, 5, 1, 0, "d - 'Double32_t' 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,4>",1843,G__G__Smatrix32_315_0_6, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 2, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,4>",1843,G__G__Smatrix32_315_0_7, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 3, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,4>",1843,G__G__Smatrix32_315_0_8, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 4, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,4>",1843,G__G__Smatrix32_315_0_9, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 5, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,4>",1843,G__G__Smatrix32_315_0_10, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 6, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,4>",1843,G__G__Smatrix32_315_0_11, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 7, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6 "
"d - 'Double32_t' 11 - a7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,4>",1843,G__G__Smatrix32_315_0_12, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 8, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6 "
"d - 'Double32_t' 11 - a7 d - 'Double32_t' 11 - a8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,4>",1843,G__G__Smatrix32_315_0_13, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 9, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6 "
"d - 'Double32_t' 11 - a7 d - 'Double32_t' 11 - a8 "
"d - 'Double32_t' 11 - a9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,4>",1843,G__G__Smatrix32_315_0_14, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 10, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6 "
"d - 'Double32_t' 11 - a7 d - 'Double32_t' 11 - a8 "
"d - 'Double32_t' 11 - a9 d - 'Double32_t' 11 - a10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_315_0_15, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dim",282,G__G__Smatrix32_315_0_16, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Math::SVector<Double32_t,4>::Dim) ), 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_315_0_17, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_315_0_18, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_315_0_19, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_315_0_20, 68, -1, G__defined_typename("ROOT::Math::SVector<Double32_t,4>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_315_0_21, 68, -1, G__defined_typename("ROOT::Math::SVector<Double32_t,4>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_315_0_22, 68, -1, G__defined_typename("ROOT::Math::SVector<Double32_t,4>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_315_0_23, 68, -1, G__defined_typename("ROOT::Math::SVector<Double32_t,4>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix32_315_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_315_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix32_315_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<Double32_t,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_315_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<Double32_t,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix32_315_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix32_315_0_29, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix32_315_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<Double32_t,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix32_315_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<Double32_t,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_315_0_32, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_315_0_33, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_315_0_34, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_315_0_35, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_315_0_36, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_315_0_37, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_315_0_38, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_315_0_39, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix32_315_0_40, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix32_315_0_41, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_315_0_42, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<Double32_t,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_315_0_43, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<Double32_t,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Smatrix32_315_0_44, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix32_315_0_45, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVector<Double32_t,4>", 1969, G__G__Smatrix32_315_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix32_315_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<Double32_t,4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR(void) {
   /* ROOT::Math::MatRepStd<Double32_t,5,5> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix32_317_0_1, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_317_0_2, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_317_0_3, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_317_0_4, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_317_0_5, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_317_0_6, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_317_0_7, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<Double32_t,5,5>", 2115, G__G__Smatrix32_317_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<Double32_t,5,5>", 2115, G__G__Smatrix32_317_0_9, (int) ('i'), 
G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<Double32_t,5,5>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<Double32_t,5,5>", 2241, G__G__Smatrix32_317_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix32_317_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<Double32_t,5,5>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR(void) {
   /* ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR));
   G__memfunc_setup("SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >",5084,G__G__Smatrix32_319_0_1, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >",5084,G__G__Smatrix32_319_0_2, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >",5084,G__G__Smatrix32_319_0_3, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >",5084,G__G__Smatrix32_319_0_4, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<Double32_t,15>' 'ROOT::Math::SVector<Double32_t,5*(5+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >",5084,G__G__Smatrix32_319_0_5, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR), -1, 0, 1, 5, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_319_0_6, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_319_0_7, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_319_0_8, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_319_0_9, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_319_0_10, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_319_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_319_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_319_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_319_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix32_319_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_319_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_319_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix32_319_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix32_319_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_319_0_20, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_319_0_21, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_319_0_22, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_319_0_23, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_319_0_24, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_319_0_25, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_319_0_26, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_319_0_27, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix32_319_0_28, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix32_319_0_29, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix32_319_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix32_319_0_31, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix32_319_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix32_319_0_33, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix32_319_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix32_319_0_35, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix32_319_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix32_319_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix32_319_0_38, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix32_319_0_39, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix32_319_0_40, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix32_319_0_41, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix32_319_0_42, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO15gR), G__defined_typename("ROOT::Math::SVector<Double32_t,5*(5+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix32_319_0_43, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO15gR), G__defined_typename("ROOT::Math::SVector<Double32_t,5*(5+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix32_319_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - 'Double32_t' 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix32_319_0_45, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >", 5210, G__G__Smatrix32_319_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix32_319_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR(void) {
   /* ROOT::Math::SVector<Double32_t,5> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR));
   G__memfunc_setup("SVector<Double32_t,5>",1844,G__G__Smatrix32_325_0_1, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,5>",1844,G__G__Smatrix32_325_0_2, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SVector<Double32_t,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,5>",1844,G__G__Smatrix32_325_0_3, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 2, 1, 1, 0, 
"D - 'Double32_t' 10 - a h - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,5>",1844,G__G__Smatrix32_325_0_4, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 2, 1, 1, 0, 
"D - 'ROOT::Math::SVector<Double32_t,5>::const_iterator' 10 - begin D - 'ROOT::Math::SVector<Double32_t,5>::const_iterator' 10 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,5>",1844,G__G__Smatrix32_325_0_5, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 1, 5, 1, 0, "d - 'Double32_t' 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,5>",1844,G__G__Smatrix32_325_0_6, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 2, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,5>",1844,G__G__Smatrix32_325_0_7, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 3, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,5>",1844,G__G__Smatrix32_325_0_8, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 4, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,5>",1844,G__G__Smatrix32_325_0_9, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 5, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,5>",1844,G__G__Smatrix32_325_0_10, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 6, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,5>",1844,G__G__Smatrix32_325_0_11, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 7, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6 "
"d - 'Double32_t' 11 - a7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,5>",1844,G__G__Smatrix32_325_0_12, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 8, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6 "
"d - 'Double32_t' 11 - a7 d - 'Double32_t' 11 - a8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,5>",1844,G__G__Smatrix32_325_0_13, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 9, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6 "
"d - 'Double32_t' 11 - a7 d - 'Double32_t' 11 - a8 "
"d - 'Double32_t' 11 - a9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<Double32_t,5>",1844,G__G__Smatrix32_325_0_14, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 10, 1, 1, 0, 
"d - 'Double32_t' 11 - a1 d - 'Double32_t' 11 - a2 "
"d - 'Double32_t' 11 - a3 d - 'Double32_t' 11 - a4 "
"d - 'Double32_t' 11 - a5 d - 'Double32_t' 11 - a6 "
"d - 'Double32_t' 11 - a7 d - 'Double32_t' 11 - a8 "
"d - 'Double32_t' 11 - a9 d - 'Double32_t' 11 - a10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_325_0_15, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dim",282,G__G__Smatrix32_325_0_16, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Math::SVector<Double32_t,5>::Dim) ), 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_325_0_17, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_325_0_18, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_325_0_19, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_325_0_20, 68, -1, G__defined_typename("ROOT::Math::SVector<Double32_t,5>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_325_0_21, 68, -1, G__defined_typename("ROOT::Math::SVector<Double32_t,5>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_325_0_22, 68, -1, G__defined_typename("ROOT::Math::SVector<Double32_t,5>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_325_0_23, 68, -1, G__defined_typename("ROOT::Math::SVector<Double32_t,5>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix32_325_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_325_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix32_325_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<Double32_t,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_325_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<Double32_t,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix32_325_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix32_325_0_29, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix32_325_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<Double32_t,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix32_325_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<Double32_t,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_325_0_32, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_325_0_33, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_325_0_34, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_325_0_35, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_325_0_36, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_325_0_37, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_325_0_38, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_325_0_39, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix32_325_0_40, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix32_325_0_41, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_325_0_42, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<Double32_t,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_325_0_43, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<Double32_t,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Smatrix32_325_0_44, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix32_325_0_45, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVector<Double32_t,5>", 1970, G__G__Smatrix32_325_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix32_325_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<Double32_t,5>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR(void) {
   /* ROOT::Math::MatRepStd<Double32_t,6,6> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix32_327_0_1, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_327_0_2, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_327_0_3, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_327_0_4, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_327_0_5, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_327_0_6, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_327_0_7, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<Double32_t,6,6>", 2117, G__G__Smatrix32_327_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<Double32_t,6,6>", 2117, G__G__Smatrix32_327_0_9, (int) ('i'), 
G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<Double32_t,6,6>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<Double32_t,6,6>", 2243, G__G__Smatrix32_327_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix32_327_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<Double32_t,6,6>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR(void) {
   /* ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR));
   G__memfunc_setup("SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >",5088,G__G__Smatrix32_329_0_1, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >",5088,G__G__Smatrix32_329_0_2, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >",5088,G__G__Smatrix32_329_0_3, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >",5088,G__G__Smatrix32_329_0_4, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<Double32_t,21>' 'ROOT::Math::SVector<Double32_t,6*(6+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >",5088,G__G__Smatrix32_329_0_5, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR), -1, 0, 1, 5, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_329_0_6, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_329_0_7, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_329_0_8, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_329_0_9, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_329_0_10, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_329_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_329_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_329_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_329_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix32_329_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_329_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_329_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix32_329_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix32_329_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_329_0_20, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_329_0_21, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_329_0_22, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_329_0_23, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_329_0_24, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_329_0_25, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_329_0_26, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_329_0_27, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix32_329_0_28, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix32_329_0_29, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix32_329_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix32_329_0_31, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix32_329_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix32_329_0_33, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix32_329_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix32_329_0_35, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix32_329_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix32_329_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix32_329_0_38, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix32_329_0_39, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix32_329_0_40, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix32_329_0_41, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix32_329_0_42, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO21gR), G__defined_typename("ROOT::Math::SVector<Double32_t,6*(6+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix32_329_0_43, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO21gR), G__defined_typename("ROOT::Math::SVector<Double32_t,6*(6+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix32_329_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - 'Double32_t' 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix32_329_0_45, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >", 5214, G__G__Smatrix32_329_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix32_329_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR(void) {
   /* ROOT::Math::MatRepSym<Double32_t,3> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR));
   G__memfunc_setup("MatRepSym<Double32_t,3>",2030,G__G__Smatrix32_335_0_1, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_335_0_2, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_335_0_3, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_335_0_4, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_335_0_5, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_335_0_6, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_335_0_7, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_335_0_8, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_335_0_9, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<Double32_t,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_335_0_10, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<Double32_t,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_335_0_11, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<Double32_t,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__G__Smatrix32_335_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__G__Smatrix32_335_0_13, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE3gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<Double32_t,3>", 2030, G__G__Smatrix32_335_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<Double32_t,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<Double32_t,3>", 2156, G__G__Smatrix32_335_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR(void) {
   /* ROOT::Math::MatRepSym<Double32_t,4> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR));
   G__memfunc_setup("MatRepSym<Double32_t,4>",2031,G__G__Smatrix32_337_0_1, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_337_0_2, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_337_0_3, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_337_0_4, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_337_0_5, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_337_0_6, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_337_0_7, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_337_0_8, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_337_0_9, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<Double32_t,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_337_0_10, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<Double32_t,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_337_0_11, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<Double32_t,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__G__Smatrix32_337_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__G__Smatrix32_337_0_13, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE4gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<Double32_t,4>", 2031, G__G__Smatrix32_337_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<Double32_t,4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<Double32_t,4>", 2157, G__G__Smatrix32_337_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR(void) {
   /* ROOT::Math::MatRepSym<Double32_t,5> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR));
   G__memfunc_setup("MatRepSym<Double32_t,5>",2032,G__G__Smatrix32_339_0_1, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_339_0_2, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_339_0_3, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_339_0_4, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_339_0_5, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_339_0_6, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_339_0_7, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_339_0_8, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_339_0_9, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<Double32_t,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_339_0_10, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<Double32_t,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_339_0_11, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<Double32_t,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__G__Smatrix32_339_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__G__Smatrix32_339_0_13, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE5gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<Double32_t,5>", 2032, G__G__Smatrix32_339_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<Double32_t,5>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<Double32_t,5>", 2158, G__G__Smatrix32_339_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR(void) {
   /* ROOT::Math::MatRepSym<Double32_t,6> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR));
   G__memfunc_setup("MatRepSym<Double32_t,6>",2033,G__G__Smatrix32_341_0_1, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_341_0_2, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_341_0_3, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_341_0_4, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_341_0_5, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_341_0_6, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_341_0_7, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_341_0_8, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_341_0_9, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<Double32_t,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_341_0_10, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<Double32_t,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_341_0_11, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<Double32_t,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__G__Smatrix32_341_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__G__Smatrix32_341_0_13, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE6gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<Double32_t,6>", 2033, G__G__Smatrix32_341_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<Double32_t,6>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<Double32_t,6>", 2159, G__G__Smatrix32_341_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR(void) {
   /* ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR));
   G__memfunc_setup("SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >",4995,G__G__Smatrix32_343_0_1, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >",4995,G__G__Smatrix32_343_0_2, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >",4995,G__G__Smatrix32_343_0_3, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >",4995,G__G__Smatrix32_343_0_4, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<Double32_t,6>' 'ROOT::Math::SVector<Double32_t,3*(3+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >",4995,G__G__Smatrix32_343_0_5, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR), -1, 0, 1, 5, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_343_0_6, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_343_0_7, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_343_0_8, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_343_0_9, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_343_0_10, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_343_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_343_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_343_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_343_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix32_343_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_343_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_343_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix32_343_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix32_343_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_343_0_20, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_343_0_21, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_343_0_22, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_343_0_23, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_343_0_24, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_343_0_25, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_343_0_26, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_343_0_27, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix32_343_0_28, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix32_343_0_29, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix32_343_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix32_343_0_31, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix32_343_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix32_343_0_33, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix32_343_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix32_343_0_35, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix32_343_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix32_343_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix32_343_0_38, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix32_343_0_39, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix32_343_0_40, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix32_343_0_41, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix32_343_0_42, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), G__defined_typename("ROOT::Math::SVector<Double32_t,3*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix32_343_0_43, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), G__defined_typename("ROOT::Math::SVector<Double32_t,3*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix32_343_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - 'Double32_t' 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix32_343_0_45, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >", 5121, G__G__Smatrix32_343_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR(void) {
   /* ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR));
   G__memfunc_setup("SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >",4998,G__G__Smatrix32_347_0_1, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >",4998,G__G__Smatrix32_347_0_2, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >",4998,G__G__Smatrix32_347_0_3, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >",4998,G__G__Smatrix32_347_0_4, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<Double32_t,10>' 'ROOT::Math::SVector<Double32_t,4*(4+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >",4998,G__G__Smatrix32_347_0_5, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR), -1, 0, 1, 5, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_347_0_6, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_347_0_7, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_347_0_8, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_347_0_9, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_347_0_10, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_347_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_347_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_347_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_347_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix32_347_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_347_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_347_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix32_347_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix32_347_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_347_0_20, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_347_0_21, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_347_0_22, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_347_0_23, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_347_0_24, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_347_0_25, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_347_0_26, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_347_0_27, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix32_347_0_28, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix32_347_0_29, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix32_347_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix32_347_0_31, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix32_347_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix32_347_0_33, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix32_347_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix32_347_0_35, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix32_347_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix32_347_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix32_347_0_38, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix32_347_0_39, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix32_347_0_40, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix32_347_0_41, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix32_347_0_42, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO10gR), G__defined_typename("ROOT::Math::SVector<Double32_t,4*(4+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix32_347_0_43, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO10gR), G__defined_typename("ROOT::Math::SVector<Double32_t,4*(4+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix32_347_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - 'Double32_t' 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix32_347_0_45, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >", 5124, G__G__Smatrix32_347_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR(void) {
   /* ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR));
   G__memfunc_setup("SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >",5001,G__G__Smatrix32_351_0_1, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >",5001,G__G__Smatrix32_351_0_2, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >",5001,G__G__Smatrix32_351_0_3, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >",5001,G__G__Smatrix32_351_0_4, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<Double32_t,15>' 'ROOT::Math::SVector<Double32_t,5*(5+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >",5001,G__G__Smatrix32_351_0_5, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR), -1, 0, 1, 5, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_351_0_6, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_351_0_7, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_351_0_8, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_351_0_9, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_351_0_10, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_351_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_351_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_351_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_351_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix32_351_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_351_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_351_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix32_351_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix32_351_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_351_0_20, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_351_0_21, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_351_0_22, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_351_0_23, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_351_0_24, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_351_0_25, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_351_0_26, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_351_0_27, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix32_351_0_28, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix32_351_0_29, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix32_351_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix32_351_0_31, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix32_351_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix32_351_0_33, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix32_351_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix32_351_0_35, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix32_351_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix32_351_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix32_351_0_38, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix32_351_0_39, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix32_351_0_40, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix32_351_0_41, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix32_351_0_42, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO15gR), G__defined_typename("ROOT::Math::SVector<Double32_t,5*(5+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix32_351_0_43, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO15gR), G__defined_typename("ROOT::Math::SVector<Double32_t,5*(5+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix32_351_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - 'Double32_t' 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix32_351_0_45, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >", 5127, G__G__Smatrix32_351_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR(void) {
   /* ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR));
   G__memfunc_setup("SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >",5004,G__G__Smatrix32_355_0_1, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >",5004,G__G__Smatrix32_355_0_2, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >",5004,G__G__Smatrix32_355_0_3, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >",5004,G__G__Smatrix32_355_0_4, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<Double32_t,21>' 'ROOT::Math::SVector<Double32_t,6*(6+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >",5004,G__G__Smatrix32_355_0_5, 105, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR), -1, 0, 1, 5, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_355_0_6, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix32_355_0_7, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix32_355_0_8, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_355_0_9, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix32_355_0_10, 68, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_355_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_355_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix32_355_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix32_355_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix32_355_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_355_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix32_355_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix32_355_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix32_355_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_355_0_20, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix32_355_0_21, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_355_0_22, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix32_355_0_23, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_355_0_24, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix32_355_0_25, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix32_355_0_26, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix32_355_0_27, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix32_355_0_28, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix32_355_0_29, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - 'Double32_t' 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix32_355_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix32_355_0_31, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix32_355_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix32_355_0_33, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix32_355_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix32_355_0_35, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix32_355_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix32_355_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - 'Double32_t' 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix32_355_0_38, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix32_355_0_39, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix32_355_0_40, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix32_355_0_41, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix32_355_0_42, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO21gR), G__defined_typename("ROOT::Math::SVector<Double32_t,6*(6+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix32_355_0_43, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO21gR), G__defined_typename("ROOT::Math::SVector<Double32_t,6*(6+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix32_355_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - 'Double32_t' 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix32_355_0_45, 117, G__get_linked_tagnum(&G__G__Smatrix32LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >", 5130, G__G__Smatrix32_355_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Smatrix32() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Smatrix32() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Smatrix32() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__Smatrix32LN_ROOT = { "ROOT" , 110 , -1 };
G__linked_taginfo G__G__Smatrix32LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMath = { "ROOT::Math" , 110 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE3gR = { "ROOT::Math::RowOffsets<3>" , 115 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE4gR = { "ROOT::Math::RowOffsets<4>" , 115 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE5gR = { "ROOT::Math::RowOffsets<5>" , 115 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE6gR = { "ROOT::Math::RowOffsets<6>" , 115 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixIdentity = { "ROOT::Math::SMatrixIdentity" , 115 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR = { "ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR = { "ROOT::Math::SVector<double,3>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR = { "ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR = { "ROOT::Math::SVector<double,6>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR = { "ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO10gR = { "ROOT::Math::SVector<double,10>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR = { "ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO15gR = { "ROOT::Math::SVector<double,15>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR = { "ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO21gR = { "ROOT::Math::SVector<double,21>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR = { "ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO28gR = { "ROOT::Math::SVector<double,28>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR = { "ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR = { "ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR = { "ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR = { "ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR = { "ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR = { "ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR = { "ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR = { "ROOT::Math::SVector<float,3>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR = { "ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR = { "ROOT::Math::SVector<float,6>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR = { "ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO10gR = { "ROOT::Math::SVector<float,10>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR = { "ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO15gR = { "ROOT::Math::SVector<float,15>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR = { "ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO21gR = { "ROOT::Math::SVector<float,21>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR = { "ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO28gR = { "ROOT::Math::SVector<float,28>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR = { "ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR = { "ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR = { "ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR = { "ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR = { "ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR = { "ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR = { "ROOT::Math::MatRepStd<Double32_t,3,3>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRcLcLdA = { "ROOT::Math::MatRepStd<Double32_t,3,3>::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR = { "ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR = { "ROOT::Math::SVector<Double32_t,6>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gRcLcLdA = { "ROOT::Math::SVector<Double32_t,6>::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgRcLcLdA = { "ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR = { "ROOT::Math::SVector<Double32_t,3>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gRcLcLdA = { "ROOT::Math::SVector<Double32_t,3>::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR = { "ROOT::Math::MatRepStd<Double32_t,4,4>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRcLcLdA = { "ROOT::Math::MatRepStd<Double32_t,4,4>::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR = { "ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO10gR = { "ROOT::Math::SVector<Double32_t,10>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgRcLcLdA = { "ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR = { "ROOT::Math::SVector<Double32_t,4>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gRcLcLdA = { "ROOT::Math::SVector<Double32_t,4>::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR = { "ROOT::Math::MatRepStd<Double32_t,5,5>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRcLcLdA = { "ROOT::Math::MatRepStd<Double32_t,5,5>::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR = { "ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO15gR = { "ROOT::Math::SVector<Double32_t,15>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgRcLcLdA = { "ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR = { "ROOT::Math::SVector<Double32_t,5>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gRcLcLdA = { "ROOT::Math::SVector<Double32_t,5>::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR = { "ROOT::Math::MatRepStd<Double32_t,6,6>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRcLcLdA = { "ROOT::Math::MatRepStd<Double32_t,6,6>::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR = { "ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO21gR = { "ROOT::Math::SVector<Double32_t,21>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgRcLcLdA = { "ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR = { "ROOT::Math::MatRepSym<Double32_t,3>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRcLcLdA = { "ROOT::Math::MatRepSym<Double32_t,3>::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR = { "ROOT::Math::MatRepSym<Double32_t,4>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRcLcLdA = { "ROOT::Math::MatRepSym<Double32_t,4>::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR = { "ROOT::Math::MatRepSym<Double32_t,5>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRcLcLdA = { "ROOT::Math::MatRepSym<Double32_t,5>::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR = { "ROOT::Math::MatRepSym<Double32_t,6>" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRcLcLdA = { "ROOT::Math::MatRepSym<Double32_t,6>::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR = { "ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgRcLcLdA = { "ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR = { "ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgRcLcLdA = { "ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR = { "ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgRcLcLdA = { "ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR = { "ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgRcLcLdA = { "ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >::$" , 101 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >::SMatrixRow_const" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Smatrix32() {
  G__G__Smatrix32LN_ROOT.tagnum = -1 ;
  G__G__Smatrix32LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMath.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE3gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE4gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE5gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE6gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixIdentity.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO10gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO15gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO21gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO28gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO10gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO15gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO21gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO28gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO10gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO15gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO21gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgRcLcLdA.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Smatrix32() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOT);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMath);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE3gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE4gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE5gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLRowOffsetslE6gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixIdentity);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO10gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO15gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO21gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEdoublecO28gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO10gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO15gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO21gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEfloatcO28gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR),sizeof(ROOT::Math::MatRepStd<Double32_t,3,3>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR),sizeof(ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR),sizeof(ROOT::Math::SVector<Double32_t,6>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR,G__setup_memfuncROOTcLcLMathcLcLSVectorlEDouble32_tcO6gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO6gRcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgRcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgRcLcLSMatrixRow);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO3cO3gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR),sizeof(ROOT::Math::SVector<Double32_t,3>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR,G__setup_memfuncROOTcLcLMathcLcLSVectorlEDouble32_tcO3gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO3gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR),sizeof(ROOT::Math::MatRepStd<Double32_t,4,4>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR),sizeof(ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepStd<Double32_t,4,4> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO10gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgRcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgRcLcLSMatrixRow);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO4cO4gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR),sizeof(ROOT::Math::SVector<Double32_t,4>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR,G__setup_memfuncROOTcLcLMathcLcLSVectorlEDouble32_tcO4gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO4gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR),sizeof(ROOT::Math::MatRepStd<Double32_t,5,5>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR),sizeof(ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepStd<Double32_t,5,5> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO15gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgRcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgRcLcLSMatrixRow);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO5cO5gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR),sizeof(ROOT::Math::SVector<Double32_t,5>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR,G__setup_memfuncROOTcLcLMathcLcLSVectorlEDouble32_tcO5gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO5gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR),sizeof(ROOT::Math::MatRepStd<Double32_t,6,6>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR),sizeof(ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepStd<Double32_t,6,6> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSVectorlEDouble32_tcO21gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgRcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgRcLcLSMatrixRow);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepStdlEDouble32_tcO6cO6gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR),sizeof(ROOT::Math::MatRepSym<Double32_t,3>),-1,264448,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR),sizeof(ROOT::Math::MatRepSym<Double32_t,4>),-1,264448,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR),sizeof(ROOT::Math::MatRepSym<Double32_t,5>),-1,264448,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR),sizeof(ROOT::Math::MatRepSym<Double32_t,6>),-1,264448,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR),sizeof(ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepSym<Double32_t,3> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgRcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgRcLcLSMatrixRow);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO3cO3cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO3gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR),sizeof(ROOT::Math::SMatrix<Double32_t,4,4,ROOT::Math::MatRepSym<Double32_t,4> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgRcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgRcLcLSMatrixRow);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO4cO4cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO4gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR),sizeof(ROOT::Math::SMatrix<Double32_t,5,5,ROOT::Math::MatRepSym<Double32_t,5> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgRcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgRcLcLSMatrixRow);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO5cO5cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO5gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR),sizeof(ROOT::Math::SMatrix<Double32_t,6,6,ROOT::Math::MatRepSym<Double32_t,6> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgRcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgRcLcLSMatrixRow);
   G__get_linked_tagnum_fwd(&G__G__Smatrix32LN_ROOTcLcLMathcLcLSMatrixlEDouble32_tcO6cO6cOROOTcLcLMathcLcLMatRepSymlEDouble32_tcO6gRsPgRcLcLSMatrixRow_const);
}
extern "C" void G__cpp_setupG__Smatrix32(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Smatrix32()");
  G__set_cpp_environmentG__Smatrix32();
  G__cpp_setup_tagtableG__Smatrix32();

  G__cpp_setup_inheritanceG__Smatrix32();

  G__cpp_setup_typetableG__Smatrix32();

  G__cpp_setup_memvarG__Smatrix32();

  G__cpp_setup_memfuncG__Smatrix32();
  G__cpp_setup_globalG__Smatrix32();
  G__cpp_setup_funcG__Smatrix32();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Smatrix32();
  return;
}
class G__cpp_setup_initG__Smatrix32 {
  public:
    G__cpp_setup_initG__Smatrix32() { G__add_setup_func("G__Smatrix32",(G__incsetup)(&G__cpp_setupG__Smatrix32)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Smatrix32() { G__remove_setup_func("G__Smatrix32"); }
};
G__cpp_setup_initG__Smatrix32 G__cpp_setup_initializerG__Smatrix32;

