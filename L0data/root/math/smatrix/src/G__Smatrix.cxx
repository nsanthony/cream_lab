//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:46:11 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__Smatrix.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrixIdentity SMatrixIdentity;
      #else
      class SMatrixIdentity  {
         public:
         //friend XX;
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< double, 2, 2 > MatRepStdlEdoublecO2cO2gR;
      #else
      class MatRepStdlEdoublecO2cO2gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[4]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< double, 2, 2, ::ROOT::Math::MatRepStd< double, 2, 2 >  > SMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR;
      #else
      class SMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 2, 2, ::ROOT::Math::MatRepStd< double, 2, 2 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< double, 2, 2, ::ROOT::Math::MatRepStd< double, 2, 2 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 2, 2, ::ROOT::Math::MatRepStd< double, 2, 2 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< double, 2, 2, ::ROOT::Math::MatRepStd< double, 2, 2 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<double,2,2> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< double, 2, 2 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SVector< double, 3 > SVectorlEdoublecO3gR;
      #else
      class SVectorlEdoublecO3gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         double fArray[3]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SVector< double, 2 > SVectorlEdoublecO2gR;
      #else
      class SVectorlEdoublecO2gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         double fArray[2]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< double, 3, 3 > MatRepStdlEdoublecO3cO3gR;
      #else
      class MatRepStdlEdoublecO3cO3gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[9]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< double, 3, 3, ::ROOT::Math::MatRepStd< double, 3, 3 >  > SMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR;
      #else
      class SMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 3, 3, ::ROOT::Math::MatRepStd< double, 3, 3 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< double, 3, 3, ::ROOT::Math::MatRepStd< double, 3, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 3, 3, ::ROOT::Math::MatRepStd< double, 3, 3 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< double, 3, 3, ::ROOT::Math::MatRepStd< double, 3, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<double,3,3> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< double, 3, 3 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SVector< double, 6 > SVectorlEdoublecO6gR;
      #else
      class SVectorlEdoublecO6gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         double fArray[6]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< double, 4, 4 > MatRepStdlEdoublecO4cO4gR;
      #else
      class MatRepStdlEdoublecO4cO4gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[16]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< double, 4, 4, ::ROOT::Math::MatRepStd< double, 4, 4 >  > SMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR;
      #else
      class SMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 4, 4, ::ROOT::Math::MatRepStd< double, 4, 4 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< double, 4, 4, ::ROOT::Math::MatRepStd< double, 4, 4 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 4, 4, ::ROOT::Math::MatRepStd< double, 4, 4 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< double, 4, 4, ::ROOT::Math::MatRepStd< double, 4, 4 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<double,4,4> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< double, 4, 4 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SVector< double, 4 > SVectorlEdoublecO4gR;
      #else
      class SVectorlEdoublecO4gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         double fArray[4]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< double, 5, 5 > MatRepStdlEdoublecO5cO5gR;
      #else
      class MatRepStdlEdoublecO5cO5gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[25]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< double, 5, 5, ::ROOT::Math::MatRepStd< double, 5, 5 >  > SMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR;
      #else
      class SMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 5, 5, ::ROOT::Math::MatRepStd< double, 5, 5 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< double, 5, 5, ::ROOT::Math::MatRepStd< double, 5, 5 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 5, 5, ::ROOT::Math::MatRepStd< double, 5, 5 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< double, 5, 5, ::ROOT::Math::MatRepStd< double, 5, 5 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<double,5,5> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< double, 5, 5 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SVector< double, 5 > SVectorlEdoublecO5gR;
      #else
      class SVectorlEdoublecO5gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         double fArray[5]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< double, 6, 6 > MatRepStdlEdoublecO6cO6gR;
      #else
      class MatRepStdlEdoublecO6cO6gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[36]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< double, 6, 6, ::ROOT::Math::MatRepStd< double, 6, 6 >  > SMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR;
      #else
      class SMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 6, 6, ::ROOT::Math::MatRepStd< double, 6, 6 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< double, 6, 6, ::ROOT::Math::MatRepStd< double, 6, 6 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 6, 6, ::ROOT::Math::MatRepStd< double, 6, 6 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< double, 6, 6, ::ROOT::Math::MatRepStd< double, 6, 6 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<double,6,6> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< double, 6, 6 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< double, 7, 7 > MatRepStdlEdoublecO7cO7gR;
      #else
      class MatRepStdlEdoublecO7cO7gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[49]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< double, 7, 7, ::ROOT::Math::MatRepStd< double, 7, 7 >  > SMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR;
      #else
      class SMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 7, 7, ::ROOT::Math::MatRepStd< double, 7, 7 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< double, 7, 7, ::ROOT::Math::MatRepStd< double, 7, 7 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 7, 7, ::ROOT::Math::MatRepStd< double, 7, 7 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< double, 7, 7, ::ROOT::Math::MatRepStd< double, 7, 7 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<double,7,7> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< double, 7, 7 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SVector< double, 7 > SVectorlEdoublecO7gR;
      #else
      class SVectorlEdoublecO7gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         double fArray[7]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepSym< double, 2 > MatRepSymlEdoublecO2gR;
      #else
      class MatRepSymlEdoublecO2gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[3]; //
         :: ROOT::Math::RowOffsets< 2 >* fOff; //! transient
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< double, 2, 2, ::ROOT::Math::MatRepSym< double, 2 >  > SMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR;
      #else
      class SMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 2, 2, ::ROOT::Math::MatRepSym< double, 2 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< double, 2, 2, ::ROOT::Math::MatRepSym< double, 2 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 2, 2, ::ROOT::Math::MatRepSym< double, 2 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< double, 2, 2, ::ROOT::Math::MatRepSym< double, 2 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym<double,2> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< double, 2 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepSym< double, 3 > MatRepSymlEdoublecO3gR;
      #else
      class MatRepSymlEdoublecO3gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[6]; //
         :: ROOT::Math::RowOffsets< 3 >* fOff; //! transient
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< double, 3, 3, ::ROOT::Math::MatRepSym< double, 3 >  > SMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR;
      #else
      class SMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 3, 3, ::ROOT::Math::MatRepSym< double, 3 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< double, 3, 3, ::ROOT::Math::MatRepSym< double, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 3, 3, ::ROOT::Math::MatRepSym< double, 3 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< double, 3, 3, ::ROOT::Math::MatRepSym< double, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym<double,3> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< double, 3 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepSym< double, 4 > MatRepSymlEdoublecO4gR;
      #else
      class MatRepSymlEdoublecO4gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[10]; //
         :: ROOT::Math::RowOffsets< 4 >* fOff; //! transient
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< double, 4, 4, ::ROOT::Math::MatRepSym< double, 4 >  > SMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR;
      #else
      class SMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 4, 4, ::ROOT::Math::MatRepSym< double, 4 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< double, 4, 4, ::ROOT::Math::MatRepSym< double, 4 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 4, 4, ::ROOT::Math::MatRepSym< double, 4 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< double, 4, 4, ::ROOT::Math::MatRepSym< double, 4 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym<double,4> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< double, 4 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepSym< double, 5 > MatRepSymlEdoublecO5gR;
      #else
      class MatRepSymlEdoublecO5gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[15]; //
         :: ROOT::Math::RowOffsets< 5 >* fOff; //! transient
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< double, 5, 5, ::ROOT::Math::MatRepSym< double, 5 >  > SMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR;
      #else
      class SMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 5, 5, ::ROOT::Math::MatRepSym< double, 5 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< double, 5, 5, ::ROOT::Math::MatRepSym< double, 5 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 5, 5, ::ROOT::Math::MatRepSym< double, 5 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< double, 5, 5, ::ROOT::Math::MatRepSym< double, 5 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym<double,5> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< double, 5 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepSym< double, 6 > MatRepSymlEdoublecO6gR;
      #else
      class MatRepSymlEdoublecO6gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[21]; //
         :: ROOT::Math::RowOffsets< 6 >* fOff; //! transient
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< double, 6, 6, ::ROOT::Math::MatRepSym< double, 6 >  > SMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR;
      #else
      class SMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 6, 6, ::ROOT::Math::MatRepSym< double, 6 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< double, 6, 6, ::ROOT::Math::MatRepSym< double, 6 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 6, 6, ::ROOT::Math::MatRepSym< double, 6 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< double, 6, 6, ::ROOT::Math::MatRepSym< double, 6 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym<double,6> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< double, 6 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepSym< double, 7 > MatRepSymlEdoublecO7gR;
      #else
      class MatRepSymlEdoublecO7gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[28]; //
         :: ROOT::Math::RowOffsets< 7 >* fOff; //! transient
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< double, 7, 7, ::ROOT::Math::MatRepSym< double, 7 >  > SMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR;
      #else
      class SMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 7, 7, ::ROOT::Math::MatRepSym< double, 7 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< double, 7, 7, ::ROOT::Math::MatRepSym< double, 7 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 7, 7, ::ROOT::Math::MatRepSym< double, 7 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< double, 7, 7, ::ROOT::Math::MatRepSym< double, 7 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym<double,7> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< double, 7 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< float, 2, 2 > MatRepStdlEfloatcO2cO2gR;
      #else
      class MatRepStdlEfloatcO2cO2gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         float fArray[4]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< float, 2, 2, ::ROOT::Math::MatRepStd< float, 2, 2 >  > SMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR;
      #else
      class SMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 2, 2, ::ROOT::Math::MatRepStd< float, 2, 2 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< float, 2, 2, ::ROOT::Math::MatRepStd< float, 2, 2 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 2, 2, ::ROOT::Math::MatRepStd< float, 2, 2 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< float, 2, 2, ::ROOT::Math::MatRepStd< float, 2, 2 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<float,2,2> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< float, 2, 2 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SVector< float, 3 > SVectorlEfloatcO3gR;
      #else
      class SVectorlEfloatcO3gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         float fArray[3]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SVector< float, 2 > SVectorlEfloatcO2gR;
      #else
      class SVectorlEfloatcO2gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         float fArray[2]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< float, 3, 3 > MatRepStdlEfloatcO3cO3gR;
      #else
      class MatRepStdlEfloatcO3cO3gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         float fArray[9]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< float, 3, 3, ::ROOT::Math::MatRepStd< float, 3, 3 >  > SMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR;
      #else
      class SMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 3, 3, ::ROOT::Math::MatRepStd< float, 3, 3 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< float, 3, 3, ::ROOT::Math::MatRepStd< float, 3, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 3, 3, ::ROOT::Math::MatRepStd< float, 3, 3 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< float, 3, 3, ::ROOT::Math::MatRepStd< float, 3, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<float,3,3> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< float, 3, 3 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SVector< float, 6 > SVectorlEfloatcO6gR;
      #else
      class SVectorlEfloatcO6gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         float fArray[6]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< float, 4, 4 > MatRepStdlEfloatcO4cO4gR;
      #else
      class MatRepStdlEfloatcO4cO4gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         float fArray[16]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< float, 4, 4, ::ROOT::Math::MatRepStd< float, 4, 4 >  > SMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR;
      #else
      class SMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 4, 4, ::ROOT::Math::MatRepStd< float, 4, 4 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< float, 4, 4, ::ROOT::Math::MatRepStd< float, 4, 4 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 4, 4, ::ROOT::Math::MatRepStd< float, 4, 4 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< float, 4, 4, ::ROOT::Math::MatRepStd< float, 4, 4 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<float,4,4> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< float, 4, 4 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SVector< float, 4 > SVectorlEfloatcO4gR;
      #else
      class SVectorlEfloatcO4gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         float fArray[4]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< float, 5, 5 > MatRepStdlEfloatcO5cO5gR;
      #else
      class MatRepStdlEfloatcO5cO5gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         float fArray[25]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< float, 5, 5, ::ROOT::Math::MatRepStd< float, 5, 5 >  > SMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR;
      #else
      class SMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 5, 5, ::ROOT::Math::MatRepStd< float, 5, 5 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< float, 5, 5, ::ROOT::Math::MatRepStd< float, 5, 5 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 5, 5, ::ROOT::Math::MatRepStd< float, 5, 5 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< float, 5, 5, ::ROOT::Math::MatRepStd< float, 5, 5 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<float,5,5> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< float, 5, 5 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SVector< float, 5 > SVectorlEfloatcO5gR;
      #else
      class SVectorlEfloatcO5gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         float fArray[5]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< float, 6, 6 > MatRepStdlEfloatcO6cO6gR;
      #else
      class MatRepStdlEfloatcO6cO6gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         float fArray[36]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< float, 6, 6, ::ROOT::Math::MatRepStd< float, 6, 6 >  > SMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR;
      #else
      class SMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 6, 6, ::ROOT::Math::MatRepStd< float, 6, 6 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< float, 6, 6, ::ROOT::Math::MatRepStd< float, 6, 6 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 6, 6, ::ROOT::Math::MatRepStd< float, 6, 6 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< float, 6, 6, ::ROOT::Math::MatRepStd< float, 6, 6 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<float,6,6> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< float, 6, 6 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< float, 7, 7 > MatRepStdlEfloatcO7cO7gR;
      #else
      class MatRepStdlEfloatcO7cO7gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         float fArray[49]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< float, 7, 7, ::ROOT::Math::MatRepStd< float, 7, 7 >  > SMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR;
      #else
      class SMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 7, 7, ::ROOT::Math::MatRepStd< float, 7, 7 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< float, 7, 7, ::ROOT::Math::MatRepStd< float, 7, 7 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 7, 7, ::ROOT::Math::MatRepStd< float, 7, 7 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< float, 7, 7, ::ROOT::Math::MatRepStd< float, 7, 7 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<float,7,7> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< float, 7, 7 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SVector< float, 7 > SVectorlEfloatcO7gR;
      #else
      class SVectorlEfloatcO7gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         float fArray[7]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepSym< float, 2 > MatRepSymlEfloatcO2gR;
      #else
      class MatRepSymlEfloatcO2gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         float fArray[3]; //
         :: ROOT::Math::RowOffsets< 2 >* fOff; //! transient
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< float, 2, 2, ::ROOT::Math::MatRepSym< float, 2 >  > SMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR;
      #else
      class SMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 2, 2, ::ROOT::Math::MatRepSym< float, 2 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< float, 2, 2, ::ROOT::Math::MatRepSym< float, 2 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 2, 2, ::ROOT::Math::MatRepSym< float, 2 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< float, 2, 2, ::ROOT::Math::MatRepSym< float, 2 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym<float,2> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< float, 2 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepSym< float, 3 > MatRepSymlEfloatcO3gR;
      #else
      class MatRepSymlEfloatcO3gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         float fArray[6]; //
         :: ROOT::Math::RowOffsets< 3 >* fOff; //! transient
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< float, 3, 3, ::ROOT::Math::MatRepSym< float, 3 >  > SMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR;
      #else
      class SMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 3, 3, ::ROOT::Math::MatRepSym< float, 3 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< float, 3, 3, ::ROOT::Math::MatRepSym< float, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 3, 3, ::ROOT::Math::MatRepSym< float, 3 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< float, 3, 3, ::ROOT::Math::MatRepSym< float, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym<float,3> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< float, 3 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepSym< float, 4 > MatRepSymlEfloatcO4gR;
      #else
      class MatRepSymlEfloatcO4gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         float fArray[10]; //
         :: ROOT::Math::RowOffsets< 4 >* fOff; //! transient
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< float, 4, 4, ::ROOT::Math::MatRepSym< float, 4 >  > SMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR;
      #else
      class SMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 4, 4, ::ROOT::Math::MatRepSym< float, 4 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< float, 4, 4, ::ROOT::Math::MatRepSym< float, 4 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 4, 4, ::ROOT::Math::MatRepSym< float, 4 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< float, 4, 4, ::ROOT::Math::MatRepSym< float, 4 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym<float,4> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< float, 4 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepSym< float, 5 > MatRepSymlEfloatcO5gR;
      #else
      class MatRepSymlEfloatcO5gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         float fArray[15]; //
         :: ROOT::Math::RowOffsets< 5 >* fOff; //! transient
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< float, 5, 5, ::ROOT::Math::MatRepSym< float, 5 >  > SMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR;
      #else
      class SMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 5, 5, ::ROOT::Math::MatRepSym< float, 5 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< float, 5, 5, ::ROOT::Math::MatRepSym< float, 5 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 5, 5, ::ROOT::Math::MatRepSym< float, 5 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< float, 5, 5, ::ROOT::Math::MatRepSym< float, 5 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym<float,5> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< float, 5 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepSym< float, 6 > MatRepSymlEfloatcO6gR;
      #else
      class MatRepSymlEfloatcO6gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         float fArray[21]; //
         :: ROOT::Math::RowOffsets< 6 >* fOff; //! transient
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< float, 6, 6, ::ROOT::Math::MatRepSym< float, 6 >  > SMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR;
      #else
      class SMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 6, 6, ::ROOT::Math::MatRepSym< float, 6 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< float, 6, 6, ::ROOT::Math::MatRepSym< float, 6 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 6, 6, ::ROOT::Math::MatRepSym< float, 6 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< float, 6, 6, ::ROOT::Math::MatRepSym< float, 6 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym<float,6> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< float, 6 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepSym< float, 7 > MatRepSymlEfloatcO7gR;
      #else
      class MatRepSymlEfloatcO7gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         float fArray[28]; //
         :: ROOT::Math::RowOffsets< 7 >* fOff; //! transient
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< float, 7, 7, ::ROOT::Math::MatRepSym< float, 7 >  > SMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR;
      #else
      class SMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 7, 7, ::ROOT::Math::MatRepSym< float, 7 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< float, 7, 7, ::ROOT::Math::MatRepSym< float, 7 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 7, 7, ::ROOT::Math::MatRepSym< float, 7 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< float, 7, 7, ::ROOT::Math::MatRepSym< float, 7 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepSym<float,7> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepSym< float, 7 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< double, 4, 3 > MatRepStdlEdoublecO4cO3gR;
      #else
      class MatRepStdlEdoublecO4cO3gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[12]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< double, 3, 4 > MatRepStdlEdoublecO3cO4gR;
      #else
      class MatRepStdlEdoublecO3cO4gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[12]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< double, 9, 7 > MatRepStdlEdoublecO9cO7gR;
      #else
      class MatRepStdlEdoublecO9cO7gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         double fArray[63]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< double, 4, 3, ::ROOT::Math::MatRepStd< double, 4, 3 >  > SMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR;
      #else
      class SMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 4, 3, ::ROOT::Math::MatRepStd< double, 4, 3 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< double, 4, 3, ::ROOT::Math::MatRepStd< double, 4, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 4, 3, ::ROOT::Math::MatRepStd< double, 4, 3 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< double, 4, 3, ::ROOT::Math::MatRepStd< double, 4, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<double,4,3> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< double, 4, 3 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< double, 3, 4, ::ROOT::Math::MatRepStd< double, 3, 4 >  > SMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR;
      #else
      class SMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 3, 4, ::ROOT::Math::MatRepStd< double, 3, 4 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< double, 3, 4, ::ROOT::Math::MatRepStd< double, 3, 4 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 3, 4, ::ROOT::Math::MatRepStd< double, 3, 4 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< double, 3, 4, ::ROOT::Math::MatRepStd< double, 3, 4 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<double,3,4> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< double, 3, 4 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< double, 9, 7, ::ROOT::Math::MatRepStd< double, 9, 7 >  > SMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR;
      #else
      class SMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 9, 7, ::ROOT::Math::MatRepStd< double, 9, 7 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< double, 9, 7, ::ROOT::Math::MatRepStd< double, 9, 7 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< double, 9, 7, ::ROOT::Math::MatRepStd< double, 9, 7 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< double, 9, 7, ::ROOT::Math::MatRepStd< double, 9, 7 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<double,9,7> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< double, 9, 7 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< float, 4, 3 > MatRepStdlEfloatcO4cO3gR;
      #else
      class MatRepStdlEfloatcO4cO3gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         float fArray[12]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< float, 3, 4 > MatRepStdlEfloatcO3cO4gR;
      #else
      class MatRepStdlEfloatcO3cO4gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         float fArray[12]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::MatRepStd< float, 9, 7 > MatRepStdlEfloatcO9cO7gR;
      #else
      class MatRepStdlEfloatcO9cO7gR  {
         public:
         //friend XX;
         typedef void* (*value_type)() ;
         float fArray[63]; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< float, 4, 3, ::ROOT::Math::MatRepStd< float, 4, 3 >  > SMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR;
      #else
      class SMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 4, 3, ::ROOT::Math::MatRepStd< float, 4, 3 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< float, 4, 3, ::ROOT::Math::MatRepStd< float, 4, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 4, 3, ::ROOT::Math::MatRepStd< float, 4, 3 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< float, 4, 3, ::ROOT::Math::MatRepStd< float, 4, 3 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<float,4,3> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< float, 4, 3 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< float, 3, 4, ::ROOT::Math::MatRepStd< float, 3, 4 >  > SMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR;
      #else
      class SMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 3, 4, ::ROOT::Math::MatRepStd< float, 3, 4 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< float, 3, 4, ::ROOT::Math::MatRepStd< float, 3, 4 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 3, 4, ::ROOT::Math::MatRepStd< float, 3, 4 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< float, 3, 4, ::ROOT::Math::MatRepStd< float, 3, 4 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<float,3,4> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< float, 3, 4 > fRep; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Math {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Math::SMatrix< float, 9, 7, ::ROOT::Math::MatRepStd< float, 9, 7 >  > SMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR;
      #else
      class SMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 9, 7, ::ROOT::Math::MatRepStd< float, 9, 7 >  >::SMatrixRow SMatrixRow;
         #else
         class SMatrixRow  {
            public:
            //friend XX;
            ::ROOT::Math::SMatrix< float, 9, 7, ::ROOT::Math::MatRepStd< float, 9, 7 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Math::SMatrix< float, 9, 7, ::ROOT::Math::MatRepStd< float, 9, 7 >  >::SMatrixRow_const SMatrixRow_const;
         #else
         class SMatrixRow_const  {
            public:
            //friend XX;
            :: ROOT::Math::SMatrix< float, 9, 7, ::ROOT::Math::MatRepStd< float, 9, 7 >  >* fMat; //
            unsigned int fRow; //
         };
         #endif

         typedef void* (*value_type)() ;
         typedef ::ROOT::Math::MatRepStd<float,9,7> rep_type;
         typedef void* (*iterator)() ;
         typedef void* (*const_iterator)() ;
         ::ROOT::Math::MatRepStd< float, 9, 7 > fRep; //
      };
      #endif
      } } 
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
namespace Math {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void ROOTcLcLMath_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ROOT::Math", 0 /*version*/, "include/Math/SMatrixFfwd.h", 9,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &ROOTcLcLMath_Dictionary, 0);
         return &instance;
      }
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void ROOTcLcLMath_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOT {
   void ROOTcLcLMathcLcLRowOffsetslE2gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLRowOffsetslE2gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLRowOffsetslE2gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLRowOffsetslE2gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLRowOffsetslE2gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLRowOffsetslE2gR(void *p);
   static void destruct_ROOTcLcLMathcLcLRowOffsetslE2gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::RowOffsets<2>*)
   {
      ::ROOT::Math::RowOffsets<2> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::RowOffsets<2>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::RowOffsets<2>", "include/Math/MatrixRepresentationsStatic.h", 170,
                  typeid(::ROOT::Math::RowOffsets<2>), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLRowOffsetslE2gR_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::RowOffsets<2>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLRowOffsetslE2gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLRowOffsetslE2gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLRowOffsetslE2gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLRowOffsetslE2gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLRowOffsetslE2gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::RowOffsets<2>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::RowOffsets<2>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::RowOffsets<2>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLRowOffsetslE2gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::RowOffsets<2>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLRowOffsetslE3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLRowOffsetslE3gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLRowOffsetslE3gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLRowOffsetslE3gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLRowOffsetslE3gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLRowOffsetslE3gR(void *p);
   static void destruct_ROOTcLcLMathcLcLRowOffsetslE3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::RowOffsets<3>*)
   {
      ::ROOT::Math::RowOffsets<3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::RowOffsets<3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::RowOffsets<3>", "include/Math/MatrixRepresentationsStatic.h", 177,
                  typeid(::ROOT::Math::RowOffsets<3>), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLRowOffsetslE3gR_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::RowOffsets<3>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLRowOffsetslE3gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLRowOffsetslE3gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLRowOffsetslE3gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLRowOffsetslE3gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLRowOffsetslE3gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::RowOffsets<3>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::RowOffsets<3>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::RowOffsets<3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLRowOffsetslE3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::RowOffsets<3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLRowOffsetslE4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLRowOffsetslE4gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLRowOffsetslE4gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLRowOffsetslE4gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLRowOffsetslE4gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLRowOffsetslE4gR(void *p);
   static void destruct_ROOTcLcLMathcLcLRowOffsetslE4gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::RowOffsets<4>*)
   {
      ::ROOT::Math::RowOffsets<4> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::RowOffsets<4>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::RowOffsets<4>", "include/Math/MatrixRepresentationsStatic.h", 184,
                  typeid(::ROOT::Math::RowOffsets<4>), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLRowOffsetslE4gR_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::RowOffsets<4>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLRowOffsetslE4gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLRowOffsetslE4gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLRowOffsetslE4gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLRowOffsetslE4gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLRowOffsetslE4gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::RowOffsets<4>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::RowOffsets<4>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::RowOffsets<4>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLRowOffsetslE4gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::RowOffsets<4>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLRowOffsetslE5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLRowOffsetslE5gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLRowOffsetslE5gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLRowOffsetslE5gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLRowOffsetslE5gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLRowOffsetslE5gR(void *p);
   static void destruct_ROOTcLcLMathcLcLRowOffsetslE5gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::RowOffsets<5>*)
   {
      ::ROOT::Math::RowOffsets<5> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::RowOffsets<5>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::RowOffsets<5>", "include/Math/MatrixRepresentationsStatic.h", 191,
                  typeid(::ROOT::Math::RowOffsets<5>), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLRowOffsetslE5gR_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::RowOffsets<5>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLRowOffsetslE5gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLRowOffsetslE5gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLRowOffsetslE5gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLRowOffsetslE5gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLRowOffsetslE5gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::RowOffsets<5>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::RowOffsets<5>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::RowOffsets<5>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLRowOffsetslE5gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::RowOffsets<5>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLRowOffsetslE6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLRowOffsetslE6gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLRowOffsetslE6gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLRowOffsetslE6gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLRowOffsetslE6gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLRowOffsetslE6gR(void *p);
   static void destruct_ROOTcLcLMathcLcLRowOffsetslE6gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::RowOffsets<6>*)
   {
      ::ROOT::Math::RowOffsets<6> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::RowOffsets<6>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::RowOffsets<6>", "include/Math/MatrixRepresentationsStatic.h", 202,
                  typeid(::ROOT::Math::RowOffsets<6>), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLRowOffsetslE6gR_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::RowOffsets<6>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLRowOffsetslE6gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLRowOffsetslE6gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLRowOffsetslE6gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLRowOffsetslE6gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLRowOffsetslE6gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::RowOffsets<6>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::RowOffsets<6>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::RowOffsets<6>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLRowOffsetslE6gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::RowOffsets<6>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLRowOffsetslE7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLRowOffsetslE7gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLRowOffsetslE7gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLRowOffsetslE7gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLRowOffsetslE7gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLRowOffsetslE7gR(void *p);
   static void destruct_ROOTcLcLMathcLcLRowOffsetslE7gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::RowOffsets<7>*)
   {
      ::ROOT::Math::RowOffsets<7> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::RowOffsets<7>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::RowOffsets<7>", "include/Math/MatrixRepresentationsStatic.h", 209,
                  typeid(::ROOT::Math::RowOffsets<7>), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLRowOffsetslE7gR_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::RowOffsets<7>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLRowOffsetslE7gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLRowOffsetslE7gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLRowOffsetslE7gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLRowOffsetslE7gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLRowOffsetslE7gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::RowOffsets<7>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::RowOffsets<7>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::RowOffsets<7>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLRowOffsetslE7gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::RowOffsets<7>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixIdentity_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixIdentity_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixIdentity(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixIdentity(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixIdentity(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixIdentity(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixIdentity(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrixIdentity*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrixIdentity) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixIdentity));
      ::ROOT::Math::SMatrixIdentity *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrixIdentity),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrixIdentity", "include/Math/SMatrix.h", 99,
                  typeid(::ROOT::Math::SMatrixIdentity), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixIdentity_ShowMembers, &ROOTcLcLMathcLcLSMatrixIdentity_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrixIdentity) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixIdentity);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixIdentity);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixIdentity);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixIdentity);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixIdentity);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrixIdentity*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrixIdentity*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrixIdentity*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixIdentity_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrixIdentity*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<double,2,2>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<double,2,2>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO2cO2gR));
      ::ROOT::Math::MatRepStd<double,2,2> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<double,2,2>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<double,2,2>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<double,2,2>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<double,2,2>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<double,2,2>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<double,2,2>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,2,2>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,2,2>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR));
      ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEdoublecO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSVectorlEdoublecO3gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSVectorlEdoublecO3gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSVectorlEdoublecO3gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSVectorlEdoublecO3gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO3gR(void *p);
   static void destruct_ROOTcLcLMathcLcLSVectorlEdoublecO3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SVector<double,3>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SVector<double,3>) == sizeof(::ROOT::Shadow::ROOT::Math::SVectorlEdoublecO3gR));
      ::ROOT::Math::SVector<double,3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SVector<double,3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SVector<double,3>", "include/Math/SVector.h", 79,
                  typeid(::ROOT::Math::SVector<double,3>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSVectorlEdoublecO3gR_ShowMembers, &ROOTcLcLMathcLcLSVectorlEdoublecO3gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SVector<double,3>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSVectorlEdoublecO3gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSVectorlEdoublecO3gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSVectorlEdoublecO3gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO3gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSVectorlEdoublecO3gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SVector<double,3>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SVector<double,3>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSVectorlEdoublecO3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEdoublecO2gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSVectorlEdoublecO2gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSVectorlEdoublecO2gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSVectorlEdoublecO2gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSVectorlEdoublecO2gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO2gR(void *p);
   static void destruct_ROOTcLcLMathcLcLSVectorlEdoublecO2gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SVector<double,2>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SVector<double,2>) == sizeof(::ROOT::Shadow::ROOT::Math::SVectorlEdoublecO2gR));
      ::ROOT::Math::SVector<double,2> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SVector<double,2>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SVector<double,2>", "include/Math/SVector.h", 79,
                  typeid(::ROOT::Math::SVector<double,2>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSVectorlEdoublecO2gR_ShowMembers, &ROOTcLcLMathcLcLSVectorlEdoublecO2gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SVector<double,2>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSVectorlEdoublecO2gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSVectorlEdoublecO2gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSVectorlEdoublecO2gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO2gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSVectorlEdoublecO2gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SVector<double,2>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SVector<double,2>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,2>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSVectorlEdoublecO2gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,2>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<double,3,3>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<double,3,3>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO3cO3gR));
      ::ROOT::Math::MatRepStd<double,3,3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<double,3,3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<double,3,3>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<double,3,3>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<double,3,3>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<double,3,3>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<double,3,3>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,3,3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,3,3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR));
      ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEdoublecO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSVectorlEdoublecO6gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSVectorlEdoublecO6gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSVectorlEdoublecO6gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSVectorlEdoublecO6gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO6gR(void *p);
   static void destruct_ROOTcLcLMathcLcLSVectorlEdoublecO6gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SVector<double,6>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SVector<double,6>) == sizeof(::ROOT::Shadow::ROOT::Math::SVectorlEdoublecO6gR));
      ::ROOT::Math::SVector<double,6> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SVector<double,6>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SVector<double,6>", "include/Math/SVector.h", 79,
                  typeid(::ROOT::Math::SVector<double,6>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSVectorlEdoublecO6gR_ShowMembers, &ROOTcLcLMathcLcLSVectorlEdoublecO6gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SVector<double,6>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSVectorlEdoublecO6gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSVectorlEdoublecO6gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSVectorlEdoublecO6gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO6gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSVectorlEdoublecO6gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SVector<double,6>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SVector<double,6>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,6>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSVectorlEdoublecO6gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,6>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<double,4,4>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<double,4,4>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO4cO4gR));
      ::ROOT::Math::MatRepStd<double,4,4> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<double,4,4>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<double,4,4>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<double,4,4>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<double,4,4>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<double,4,4>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<double,4,4>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,4,4>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,4,4>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR));
      ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEdoublecO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSVectorlEdoublecO4gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSVectorlEdoublecO4gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSVectorlEdoublecO4gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSVectorlEdoublecO4gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO4gR(void *p);
   static void destruct_ROOTcLcLMathcLcLSVectorlEdoublecO4gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SVector<double,4>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SVector<double,4>) == sizeof(::ROOT::Shadow::ROOT::Math::SVectorlEdoublecO4gR));
      ::ROOT::Math::SVector<double,4> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SVector<double,4>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SVector<double,4>", "include/Math/SVector.h", 79,
                  typeid(::ROOT::Math::SVector<double,4>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSVectorlEdoublecO4gR_ShowMembers, &ROOTcLcLMathcLcLSVectorlEdoublecO4gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SVector<double,4>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSVectorlEdoublecO4gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSVectorlEdoublecO4gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSVectorlEdoublecO4gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO4gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSVectorlEdoublecO4gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SVector<double,4>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SVector<double,4>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,4>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSVectorlEdoublecO4gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,4>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<double,5,5>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<double,5,5>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO5cO5gR));
      ::ROOT::Math::MatRepStd<double,5,5> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<double,5,5>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<double,5,5>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<double,5,5>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<double,5,5>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<double,5,5>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<double,5,5>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,5,5>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,5,5>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR));
      ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEdoublecO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSVectorlEdoublecO5gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSVectorlEdoublecO5gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSVectorlEdoublecO5gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSVectorlEdoublecO5gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO5gR(void *p);
   static void destruct_ROOTcLcLMathcLcLSVectorlEdoublecO5gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SVector<double,5>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SVector<double,5>) == sizeof(::ROOT::Shadow::ROOT::Math::SVectorlEdoublecO5gR));
      ::ROOT::Math::SVector<double,5> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SVector<double,5>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SVector<double,5>", "include/Math/SVector.h", 79,
                  typeid(::ROOT::Math::SVector<double,5>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSVectorlEdoublecO5gR_ShowMembers, &ROOTcLcLMathcLcLSVectorlEdoublecO5gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SVector<double,5>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSVectorlEdoublecO5gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSVectorlEdoublecO5gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSVectorlEdoublecO5gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO5gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSVectorlEdoublecO5gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SVector<double,5>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SVector<double,5>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,5>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSVectorlEdoublecO5gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,5>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<double,6,6>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<double,6,6>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO6cO6gR));
      ::ROOT::Math::MatRepStd<double,6,6> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<double,6,6>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<double,6,6>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<double,6,6>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<double,6,6>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<double,6,6>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<double,6,6>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,6,6>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,6,6>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR));
      ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<double,7,7>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<double,7,7>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO7cO7gR));
      ::ROOT::Math::MatRepStd<double,7,7> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<double,7,7>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<double,7,7>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<double,7,7>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<double,7,7>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<double,7,7>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<double,7,7>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,7,7>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,7,7>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR));
      ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEdoublecO7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSVectorlEdoublecO7gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSVectorlEdoublecO7gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSVectorlEdoublecO7gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSVectorlEdoublecO7gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO7gR(void *p);
   static void destruct_ROOTcLcLMathcLcLSVectorlEdoublecO7gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SVector<double,7>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SVector<double,7>) == sizeof(::ROOT::Shadow::ROOT::Math::SVectorlEdoublecO7gR));
      ::ROOT::Math::SVector<double,7> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SVector<double,7>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SVector<double,7>", "include/Math/SVector.h", 79,
                  typeid(::ROOT::Math::SVector<double,7>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSVectorlEdoublecO7gR_ShowMembers, &ROOTcLcLMathcLcLSVectorlEdoublecO7gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SVector<double,7>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSVectorlEdoublecO7gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSVectorlEdoublecO7gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSVectorlEdoublecO7gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO7gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSVectorlEdoublecO7gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SVector<double,7>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SVector<double,7>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,7>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSVectorlEdoublecO7gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,7>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<double,2>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepSym<double,2>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepSymlEdoublecO2gR));
      ::ROOT::Math::MatRepSym<double,2> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<double,2>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<double,2>", "include/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<double,2>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR_ShowMembers, &ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepSym<double,2>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepSym<double,2>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepSym<double,2>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,2>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,2>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR));
      ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<double,3>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepSym<double,3>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepSymlEdoublecO3gR));
      ::ROOT::Math::MatRepSym<double,3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<double,3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<double,3>", "include/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<double,3>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR_ShowMembers, &ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepSym<double,3>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepSym<double,3>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepSym<double,3>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
      ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<double,4>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepSym<double,4>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepSymlEdoublecO4gR));
      ::ROOT::Math::MatRepSym<double,4> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<double,4>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<double,4>", "include/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<double,4>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR_ShowMembers, &ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepSym<double,4>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepSym<double,4>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepSym<double,4>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,4>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,4>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR));
      ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<double,5>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepSym<double,5>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepSymlEdoublecO5gR));
      ::ROOT::Math::MatRepSym<double,5> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<double,5>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<double,5>", "include/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<double,5>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR_ShowMembers, &ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepSym<double,5>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepSym<double,5>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepSym<double,5>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,5>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,5>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR));
      ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<double,6>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepSym<double,6>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepSymlEdoublecO6gR));
      ::ROOT::Math::MatRepSym<double,6> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<double,6>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<double,6>", "include/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<double,6>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR_ShowMembers, &ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepSym<double,6>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepSym<double,6>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepSym<double,6>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,6>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,6>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR));
      ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<double,7>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepSym<double,7>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepSymlEdoublecO7gR));
      ::ROOT::Math::MatRepSym<double,7> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<double,7>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<double,7>", "include/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<double,7>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR_ShowMembers, &ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepSym<double,7>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepSym<double,7>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepSym<double,7>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,7>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,7>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR));
      ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<float,2,2>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<float,2,2>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO2cO2gR));
      ::ROOT::Math::MatRepStd<float,2,2> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<float,2,2>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<float,2,2>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<float,2,2>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<float,2,2>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<float,2,2>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<float,2,2>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,2,2>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,2,2>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR));
      ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEfloatcO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSVectorlEfloatcO3gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSVectorlEfloatcO3gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSVectorlEfloatcO3gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSVectorlEfloatcO3gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO3gR(void *p);
   static void destruct_ROOTcLcLMathcLcLSVectorlEfloatcO3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SVector<float,3>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SVector<float,3>) == sizeof(::ROOT::Shadow::ROOT::Math::SVectorlEfloatcO3gR));
      ::ROOT::Math::SVector<float,3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SVector<float,3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SVector<float,3>", "include/Math/SVector.h", 79,
                  typeid(::ROOT::Math::SVector<float,3>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSVectorlEfloatcO3gR_ShowMembers, &ROOTcLcLMathcLcLSVectorlEfloatcO3gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SVector<float,3>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSVectorlEfloatcO3gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSVectorlEfloatcO3gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSVectorlEfloatcO3gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO3gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSVectorlEfloatcO3gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SVector<float,3>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SVector<float,3>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSVectorlEfloatcO3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEfloatcO2gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSVectorlEfloatcO2gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSVectorlEfloatcO2gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSVectorlEfloatcO2gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSVectorlEfloatcO2gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO2gR(void *p);
   static void destruct_ROOTcLcLMathcLcLSVectorlEfloatcO2gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SVector<float,2>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SVector<float,2>) == sizeof(::ROOT::Shadow::ROOT::Math::SVectorlEfloatcO2gR));
      ::ROOT::Math::SVector<float,2> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SVector<float,2>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SVector<float,2>", "include/Math/SVector.h", 79,
                  typeid(::ROOT::Math::SVector<float,2>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSVectorlEfloatcO2gR_ShowMembers, &ROOTcLcLMathcLcLSVectorlEfloatcO2gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SVector<float,2>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSVectorlEfloatcO2gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSVectorlEfloatcO2gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSVectorlEfloatcO2gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO2gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSVectorlEfloatcO2gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SVector<float,2>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SVector<float,2>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,2>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSVectorlEfloatcO2gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,2>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<float,3,3>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<float,3,3>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO3cO3gR));
      ::ROOT::Math::MatRepStd<float,3,3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<float,3,3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<float,3,3>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<float,3,3>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<float,3,3>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<float,3,3>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<float,3,3>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,3,3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,3,3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR));
      ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEfloatcO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSVectorlEfloatcO6gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSVectorlEfloatcO6gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSVectorlEfloatcO6gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSVectorlEfloatcO6gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO6gR(void *p);
   static void destruct_ROOTcLcLMathcLcLSVectorlEfloatcO6gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SVector<float,6>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SVector<float,6>) == sizeof(::ROOT::Shadow::ROOT::Math::SVectorlEfloatcO6gR));
      ::ROOT::Math::SVector<float,6> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SVector<float,6>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SVector<float,6>", "include/Math/SVector.h", 79,
                  typeid(::ROOT::Math::SVector<float,6>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSVectorlEfloatcO6gR_ShowMembers, &ROOTcLcLMathcLcLSVectorlEfloatcO6gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SVector<float,6>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSVectorlEfloatcO6gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSVectorlEfloatcO6gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSVectorlEfloatcO6gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO6gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSVectorlEfloatcO6gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SVector<float,6>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SVector<float,6>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,6>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSVectorlEfloatcO6gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,6>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<float,4,4>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<float,4,4>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO4cO4gR));
      ::ROOT::Math::MatRepStd<float,4,4> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<float,4,4>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<float,4,4>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<float,4,4>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<float,4,4>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<float,4,4>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<float,4,4>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,4,4>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,4,4>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR));
      ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEfloatcO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSVectorlEfloatcO4gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSVectorlEfloatcO4gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSVectorlEfloatcO4gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSVectorlEfloatcO4gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO4gR(void *p);
   static void destruct_ROOTcLcLMathcLcLSVectorlEfloatcO4gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SVector<float,4>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SVector<float,4>) == sizeof(::ROOT::Shadow::ROOT::Math::SVectorlEfloatcO4gR));
      ::ROOT::Math::SVector<float,4> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SVector<float,4>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SVector<float,4>", "include/Math/SVector.h", 79,
                  typeid(::ROOT::Math::SVector<float,4>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSVectorlEfloatcO4gR_ShowMembers, &ROOTcLcLMathcLcLSVectorlEfloatcO4gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SVector<float,4>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSVectorlEfloatcO4gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSVectorlEfloatcO4gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSVectorlEfloatcO4gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO4gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSVectorlEfloatcO4gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SVector<float,4>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SVector<float,4>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,4>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSVectorlEfloatcO4gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,4>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<float,5,5>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<float,5,5>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO5cO5gR));
      ::ROOT::Math::MatRepStd<float,5,5> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<float,5,5>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<float,5,5>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<float,5,5>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<float,5,5>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<float,5,5>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<float,5,5>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,5,5>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,5,5>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR));
      ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEfloatcO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSVectorlEfloatcO5gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSVectorlEfloatcO5gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSVectorlEfloatcO5gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSVectorlEfloatcO5gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO5gR(void *p);
   static void destruct_ROOTcLcLMathcLcLSVectorlEfloatcO5gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SVector<float,5>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SVector<float,5>) == sizeof(::ROOT::Shadow::ROOT::Math::SVectorlEfloatcO5gR));
      ::ROOT::Math::SVector<float,5> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SVector<float,5>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SVector<float,5>", "include/Math/SVector.h", 79,
                  typeid(::ROOT::Math::SVector<float,5>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSVectorlEfloatcO5gR_ShowMembers, &ROOTcLcLMathcLcLSVectorlEfloatcO5gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SVector<float,5>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSVectorlEfloatcO5gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSVectorlEfloatcO5gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSVectorlEfloatcO5gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO5gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSVectorlEfloatcO5gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SVector<float,5>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SVector<float,5>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,5>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSVectorlEfloatcO5gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,5>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<float,6,6>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<float,6,6>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO6cO6gR));
      ::ROOT::Math::MatRepStd<float,6,6> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<float,6,6>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<float,6,6>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<float,6,6>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<float,6,6>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<float,6,6>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<float,6,6>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,6,6>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,6,6>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR));
      ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<float,7,7>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<float,7,7>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO7cO7gR));
      ::ROOT::Math::MatRepStd<float,7,7> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<float,7,7>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<float,7,7>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<float,7,7>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<float,7,7>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<float,7,7>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<float,7,7>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,7,7>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,7,7>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR));
      ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEfloatcO7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSVectorlEfloatcO7gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSVectorlEfloatcO7gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSVectorlEfloatcO7gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSVectorlEfloatcO7gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO7gR(void *p);
   static void destruct_ROOTcLcLMathcLcLSVectorlEfloatcO7gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SVector<float,7>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SVector<float,7>) == sizeof(::ROOT::Shadow::ROOT::Math::SVectorlEfloatcO7gR));
      ::ROOT::Math::SVector<float,7> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SVector<float,7>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SVector<float,7>", "include/Math/SVector.h", 79,
                  typeid(::ROOT::Math::SVector<float,7>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSVectorlEfloatcO7gR_ShowMembers, &ROOTcLcLMathcLcLSVectorlEfloatcO7gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SVector<float,7>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSVectorlEfloatcO7gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSVectorlEfloatcO7gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSVectorlEfloatcO7gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO7gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSVectorlEfloatcO7gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SVector<float,7>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SVector<float,7>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,7>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSVectorlEfloatcO7gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,7>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<float,2>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepSym<float,2>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepSymlEfloatcO2gR));
      ::ROOT::Math::MatRepSym<float,2> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<float,2>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<float,2>", "include/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<float,2>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR_ShowMembers, &ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepSym<float,2>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepSym<float,2>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepSym<float,2>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,2>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,2>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR));
      ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<float,3>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepSym<float,3>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepSymlEfloatcO3gR));
      ::ROOT::Math::MatRepSym<float,3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<float,3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<float,3>", "include/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<float,3>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR_ShowMembers, &ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepSym<float,3>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepSym<float,3>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepSym<float,3>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR));
      ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<float,4>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepSym<float,4>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepSymlEfloatcO4gR));
      ::ROOT::Math::MatRepSym<float,4> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<float,4>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<float,4>", "include/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<float,4>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR_ShowMembers, &ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepSym<float,4>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepSym<float,4>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepSym<float,4>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,4>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,4>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR));
      ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<float,5>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepSym<float,5>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepSymlEfloatcO5gR));
      ::ROOT::Math::MatRepSym<float,5> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<float,5>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<float,5>", "include/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<float,5>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR_ShowMembers, &ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepSym<float,5>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepSym<float,5>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepSym<float,5>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,5>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,5>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR));
      ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<float,6>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepSym<float,6>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepSymlEfloatcO6gR));
      ::ROOT::Math::MatRepSym<float,6> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<float,6>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<float,6>", "include/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<float,6>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR_ShowMembers, &ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepSym<float,6>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepSym<float,6>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepSym<float,6>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,6>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,6>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR));
      ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepSym<float,7>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepSym<float,7>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepSymlEfloatcO7gR));
      ::ROOT::Math::MatRepSym<float,7> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepSym<float,7>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepSym<float,7>", "include/Math/MatrixRepresentationsStatic.h", 256,
                  typeid(::ROOT::Math::MatRepSym<float,7>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR_ShowMembers, &ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepSym<float,7>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepSym<float,7>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepSym<float,7>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,7>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,7>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR));
      ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<double,4,3>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<double,4,3>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO4cO3gR));
      ::ROOT::Math::MatRepStd<double,4,3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<double,4,3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<double,4,3>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<double,4,3>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<double,4,3>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<double,4,3>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<double,4,3>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,4,3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,4,3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<double,3,4>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<double,3,4>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO3cO4gR));
      ::ROOT::Math::MatRepStd<double,3,4> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<double,3,4>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<double,3,4>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<double,3,4>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<double,3,4>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<double,3,4>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<double,3,4>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,3,4>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,3,4>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<double,9,7>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<double,9,7>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO9cO7gR));
      ::ROOT::Math::MatRepStd<double,9,7> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<double,9,7>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<double,9,7>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<double,9,7>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<double,9,7>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<double,9,7>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<double,9,7>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,9,7>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,9,7>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR));
      ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR));
      ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR));
      ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<float,4,3>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<float,4,3>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO4cO3gR));
      ::ROOT::Math::MatRepStd<float,4,3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<float,4,3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<float,4,3>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<float,4,3>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<float,4,3>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<float,4,3>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<float,4,3>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,4,3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,4,3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<float,3,4>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<float,3,4>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO3cO4gR));
      ::ROOT::Math::MatRepStd<float,3,4> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<float,3,4>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<float,3,4>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<float,3,4>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<float,3,4>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<float,3,4>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<float,3,4>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,3,4>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,3,4>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR_Dictionary();
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR(void *p);
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::MatRepStd<float,9,7>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::MatRepStd<float,9,7>) == sizeof(::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO9cO7gR));
      ::ROOT::Math::MatRepStd<float,9,7> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::MatRepStd<float,9,7>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::MatRepStd<float,9,7>", "include/Math/MatrixRepresentationsStatic.h", 50,
                  typeid(::ROOT::Math::MatRepStd<float,9,7>), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR_ShowMembers, &ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::MatRepStd<float,9,7>) );
      instance.SetNew(&new_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::MatRepStd<float,9,7>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::MatRepStd<float,9,7>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,9,7>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,9,7>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR));
      ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR));
      ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR_Dictionary();
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR(void *p = 0);
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR(Long_t size, void *p);
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >) == sizeof(::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR));
      ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >", "include/Math/SMatrix.h", 127,
                  typeid(::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR_ShowMembers, &ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >) );
      instance.SetNew(&new_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR);
      instance.SetNewArray(&newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR);
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow*)
   {
      ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow", "include/Math/SMatrix.h", 324,
                  typeid(::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const_Dictionary();
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const(void *p);
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const(void *p);
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const*)
   {
      ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const", "include/Math/SMatrix.h", 335,
                  typeid(::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const) );
      instance.SetDelete(&delete_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const);
      instance.SetDestructor(&destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const*)
   {
      return GenerateInitInstanceLocal((::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixIdentity_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrixIdentity.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixIdentity ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrixIdentity*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixIdentity(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrixIdentity : new ::ROOT::Math::SMatrixIdentity;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixIdentity(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrixIdentity[nElements] : new ::ROOT::Math::SMatrixIdentity[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixIdentity(void *p) {
      delete ((::ROOT::Math::SMatrixIdentity*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixIdentity(void *p) {
      delete [] ((::ROOT::Math::SMatrixIdentity*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixIdentity(void *p) {
      typedef ::ROOT::Math::SMatrixIdentity current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrixIdentity

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEdoublecO2gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SVector<double,2>.
      typedef ::ROOT::Shadow::ROOT::Math::SVectorlEdoublecO2gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,2>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[2]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSVectorlEdoublecO2gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<double,2> : new ::ROOT::Math::SVector<double,2>;
   }
   static void *newArray_ROOTcLcLMathcLcLSVectorlEdoublecO2gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<double,2>[nElements] : new ::ROOT::Math::SVector<double,2>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSVectorlEdoublecO2gR(void *p) {
      delete ((::ROOT::Math::SVector<double,2>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO2gR(void *p) {
      delete [] ((::ROOT::Math::SVector<double,2>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSVectorlEdoublecO2gR(void *p) {
      typedef ::ROOT::Math::SVector<double,2> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SVector<double,2>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEdoublecO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SVector<double,3>.
      typedef ::ROOT::Shadow::ROOT::Math::SVectorlEdoublecO3gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,3>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[3]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSVectorlEdoublecO3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<double,3> : new ::ROOT::Math::SVector<double,3>;
   }
   static void *newArray_ROOTcLcLMathcLcLSVectorlEdoublecO3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<double,3>[nElements] : new ::ROOT::Math::SVector<double,3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSVectorlEdoublecO3gR(void *p) {
      delete ((::ROOT::Math::SVector<double,3>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO3gR(void *p) {
      delete [] ((::ROOT::Math::SVector<double,3>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSVectorlEdoublecO3gR(void *p) {
      typedef ::ROOT::Math::SVector<double,3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SVector<double,3>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEdoublecO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SVector<double,4>.
      typedef ::ROOT::Shadow::ROOT::Math::SVectorlEdoublecO4gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,4>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[4]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSVectorlEdoublecO4gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<double,4> : new ::ROOT::Math::SVector<double,4>;
   }
   static void *newArray_ROOTcLcLMathcLcLSVectorlEdoublecO4gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<double,4>[nElements] : new ::ROOT::Math::SVector<double,4>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSVectorlEdoublecO4gR(void *p) {
      delete ((::ROOT::Math::SVector<double,4>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO4gR(void *p) {
      delete [] ((::ROOT::Math::SVector<double,4>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSVectorlEdoublecO4gR(void *p) {
      typedef ::ROOT::Math::SVector<double,4> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SVector<double,4>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEdoublecO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SVector<double,5>.
      typedef ::ROOT::Shadow::ROOT::Math::SVectorlEdoublecO5gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,5>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[5]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSVectorlEdoublecO5gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<double,5> : new ::ROOT::Math::SVector<double,5>;
   }
   static void *newArray_ROOTcLcLMathcLcLSVectorlEdoublecO5gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<double,5>[nElements] : new ::ROOT::Math::SVector<double,5>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSVectorlEdoublecO5gR(void *p) {
      delete ((::ROOT::Math::SVector<double,5>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO5gR(void *p) {
      delete [] ((::ROOT::Math::SVector<double,5>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSVectorlEdoublecO5gR(void *p) {
      typedef ::ROOT::Math::SVector<double,5> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SVector<double,5>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEdoublecO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SVector<double,6>.
      typedef ::ROOT::Shadow::ROOT::Math::SVectorlEdoublecO6gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,6>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[6]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSVectorlEdoublecO6gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<double,6> : new ::ROOT::Math::SVector<double,6>;
   }
   static void *newArray_ROOTcLcLMathcLcLSVectorlEdoublecO6gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<double,6>[nElements] : new ::ROOT::Math::SVector<double,6>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSVectorlEdoublecO6gR(void *p) {
      delete ((::ROOT::Math::SVector<double,6>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO6gR(void *p) {
      delete [] ((::ROOT::Math::SVector<double,6>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSVectorlEdoublecO6gR(void *p) {
      typedef ::ROOT::Math::SVector<double,6> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SVector<double,6>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEdoublecO7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SVector<double,7>.
      typedef ::ROOT::Shadow::ROOT::Math::SVectorlEdoublecO7gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<double,7>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[7]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSVectorlEdoublecO7gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<double,7> : new ::ROOT::Math::SVector<double,7>;
   }
   static void *newArray_ROOTcLcLMathcLcLSVectorlEdoublecO7gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<double,7>[nElements] : new ::ROOT::Math::SVector<double,7>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSVectorlEdoublecO7gR(void *p) {
      delete ((::ROOT::Math::SVector<double,7>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEdoublecO7gR(void *p) {
      delete [] ((::ROOT::Math::SVector<double,7>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSVectorlEdoublecO7gR(void *p) {
      typedef ::ROOT::Math::SVector<double,7> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SVector<double,7>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<double,2,2>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO2cO2gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,2,2>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[4]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,2,2> : new ::ROOT::Math::MatRepStd<double,2,2>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,2,2>[nElements] : new ::ROOT::Math::MatRepStd<double,2,2>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<double,2,2>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<double,2,2>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<double,2,2> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<double,2,2>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<double,3,3>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO3cO3gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,3,3>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[9]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,3,3> : new ::ROOT::Math::MatRepStd<double,3,3>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,3,3>[nElements] : new ::ROOT::Math::MatRepStd<double,3,3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<double,3,3>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<double,3,3>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<double,3,3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<double,3,3>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<double,4,4>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO4cO4gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,4,4>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[16]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,4,4> : new ::ROOT::Math::MatRepStd<double,4,4>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,4,4>[nElements] : new ::ROOT::Math::MatRepStd<double,4,4>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<double,4,4>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<double,4,4>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<double,4,4> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<double,4,4>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<double,5,5>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO5cO5gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,5,5>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[25]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,5,5> : new ::ROOT::Math::MatRepStd<double,5,5>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,5,5>[nElements] : new ::ROOT::Math::MatRepStd<double,5,5>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<double,5,5>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<double,5,5>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<double,5,5> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<double,5,5>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<double,6,6>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO6cO6gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,6,6>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[36]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,6,6> : new ::ROOT::Math::MatRepStd<double,6,6>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,6,6>[nElements] : new ::ROOT::Math::MatRepStd<double,6,6>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<double,6,6>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<double,6,6>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<double,6,6> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<double,6,6>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<double,7,7>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO7cO7gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,7,7>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[49]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,7,7> : new ::ROOT::Math::MatRepStd<double,7,7>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,7,7>[nElements] : new ::ROOT::Math::MatRepStd<double,7,7>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<double,7,7>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<double,7,7>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<double,7,7> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<double,7,7>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<double,4,3>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO4cO3gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,4,3>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[12]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,4,3> : new ::ROOT::Math::MatRepStd<double,4,3>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,4,3>[nElements] : new ::ROOT::Math::MatRepStd<double,4,3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<double,4,3>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<double,4,3>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<double,4,3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<double,4,3>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<double,3,4>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO3cO4gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,3,4>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[12]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,3,4> : new ::ROOT::Math::MatRepStd<double,3,4>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,3,4>[nElements] : new ::ROOT::Math::MatRepStd<double,3,4>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<double,3,4>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<double,3,4>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<double,3,4> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<double,3,4>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<double,9,7>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEdoublecO9cO7gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<double,9,7>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[63]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,9,7> : new ::ROOT::Math::MatRepStd<double,9,7>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<double,9,7>[nElements] : new ::ROOT::Math::MatRepStd<double,9,7>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<double,9,7>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<double,9,7>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<double,9,7> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<double,9,7>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<double,2,2>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> > : new ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >[nElements] : new ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<double,3,3>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> > : new ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >[nElements] : new ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<double,4,4>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> > : new ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >[nElements] : new ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<double,5,5>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> > : new ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >[nElements] : new ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<double,6,6>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> > : new ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >[nElements] : new ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<double,7,7>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> > : new ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >[nElements] : new ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<double,4,3>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> > : new ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >[nElements] : new ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<double,3,4>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> > : new ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >[nElements] : new ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<double,9,7>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> > : new ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >[nElements] : new ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepSym<double,2>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepSymlEdoublecO2gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,2>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[3]", sobj->fArray);
      R__insp.Inspect(R__cl, R__parent, "*fOff", &sobj->fOff);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<double,2> : new ::ROOT::Math::MatRepSym<double,2>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<double,2>[nElements] : new ::ROOT::Math::MatRepSym<double,2>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<double,2>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<double,2>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<double,2> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<double,2>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepSym<double,3>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepSymlEdoublecO3gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,3>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[6]", sobj->fArray);
      R__insp.Inspect(R__cl, R__parent, "*fOff", &sobj->fOff);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<double,3> : new ::ROOT::Math::MatRepSym<double,3>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<double,3>[nElements] : new ::ROOT::Math::MatRepSym<double,3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<double,3>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<double,3>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<double,3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<double,3>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepSym<double,4>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepSymlEdoublecO4gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,4>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[10]", sobj->fArray);
      R__insp.Inspect(R__cl, R__parent, "*fOff", &sobj->fOff);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<double,4> : new ::ROOT::Math::MatRepSym<double,4>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<double,4>[nElements] : new ::ROOT::Math::MatRepSym<double,4>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<double,4>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<double,4>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<double,4> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<double,4>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepSym<double,5>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepSymlEdoublecO5gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,5>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[15]", sobj->fArray);
      R__insp.Inspect(R__cl, R__parent, "*fOff", &sobj->fOff);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<double,5> : new ::ROOT::Math::MatRepSym<double,5>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<double,5>[nElements] : new ::ROOT::Math::MatRepSym<double,5>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<double,5>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<double,5>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<double,5> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<double,5>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepSym<double,6>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepSymlEdoublecO6gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,6>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[21]", sobj->fArray);
      R__insp.Inspect(R__cl, R__parent, "*fOff", &sobj->fOff);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<double,6> : new ::ROOT::Math::MatRepSym<double,6>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<double,6>[nElements] : new ::ROOT::Math::MatRepSym<double,6>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<double,6>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<double,6>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<double,6> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<double,6>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepSym<double,7>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepSymlEdoublecO7gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<double,7>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[28]", sobj->fArray);
      R__insp.Inspect(R__cl, R__parent, "*fOff", &sobj->fOff);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<double,7> : new ::ROOT::Math::MatRepSym<double,7>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<double,7>[nElements] : new ::ROOT::Math::MatRepSym<double,7>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<double,7>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<double,7>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<double,7> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<double,7>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<double,2>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> > : new ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >[nElements] : new ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<double,3>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > : new ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >[nElements] : new ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<double,4>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> > : new ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >[nElements] : new ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<double,5>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > : new ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >[nElements] : new ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<double,6>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> > : new ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >[nElements] : new ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<double,7>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> > : new ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >[nElements] : new ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEfloatcO2gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SVector<float,2>.
      typedef ::ROOT::Shadow::ROOT::Math::SVectorlEfloatcO2gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,2>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[2]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSVectorlEfloatcO2gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<float,2> : new ::ROOT::Math::SVector<float,2>;
   }
   static void *newArray_ROOTcLcLMathcLcLSVectorlEfloatcO2gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<float,2>[nElements] : new ::ROOT::Math::SVector<float,2>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSVectorlEfloatcO2gR(void *p) {
      delete ((::ROOT::Math::SVector<float,2>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO2gR(void *p) {
      delete [] ((::ROOT::Math::SVector<float,2>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSVectorlEfloatcO2gR(void *p) {
      typedef ::ROOT::Math::SVector<float,2> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SVector<float,2>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEfloatcO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SVector<float,3>.
      typedef ::ROOT::Shadow::ROOT::Math::SVectorlEfloatcO3gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,3>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[3]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSVectorlEfloatcO3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<float,3> : new ::ROOT::Math::SVector<float,3>;
   }
   static void *newArray_ROOTcLcLMathcLcLSVectorlEfloatcO3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<float,3>[nElements] : new ::ROOT::Math::SVector<float,3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSVectorlEfloatcO3gR(void *p) {
      delete ((::ROOT::Math::SVector<float,3>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO3gR(void *p) {
      delete [] ((::ROOT::Math::SVector<float,3>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSVectorlEfloatcO3gR(void *p) {
      typedef ::ROOT::Math::SVector<float,3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SVector<float,3>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEfloatcO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SVector<float,4>.
      typedef ::ROOT::Shadow::ROOT::Math::SVectorlEfloatcO4gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,4>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[4]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSVectorlEfloatcO4gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<float,4> : new ::ROOT::Math::SVector<float,4>;
   }
   static void *newArray_ROOTcLcLMathcLcLSVectorlEfloatcO4gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<float,4>[nElements] : new ::ROOT::Math::SVector<float,4>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSVectorlEfloatcO4gR(void *p) {
      delete ((::ROOT::Math::SVector<float,4>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO4gR(void *p) {
      delete [] ((::ROOT::Math::SVector<float,4>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSVectorlEfloatcO4gR(void *p) {
      typedef ::ROOT::Math::SVector<float,4> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SVector<float,4>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEfloatcO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SVector<float,5>.
      typedef ::ROOT::Shadow::ROOT::Math::SVectorlEfloatcO5gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,5>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[5]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSVectorlEfloatcO5gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<float,5> : new ::ROOT::Math::SVector<float,5>;
   }
   static void *newArray_ROOTcLcLMathcLcLSVectorlEfloatcO5gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<float,5>[nElements] : new ::ROOT::Math::SVector<float,5>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSVectorlEfloatcO5gR(void *p) {
      delete ((::ROOT::Math::SVector<float,5>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO5gR(void *p) {
      delete [] ((::ROOT::Math::SVector<float,5>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSVectorlEfloatcO5gR(void *p) {
      typedef ::ROOT::Math::SVector<float,5> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SVector<float,5>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEfloatcO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SVector<float,6>.
      typedef ::ROOT::Shadow::ROOT::Math::SVectorlEfloatcO6gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,6>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[6]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSVectorlEfloatcO6gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<float,6> : new ::ROOT::Math::SVector<float,6>;
   }
   static void *newArray_ROOTcLcLMathcLcLSVectorlEfloatcO6gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<float,6>[nElements] : new ::ROOT::Math::SVector<float,6>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSVectorlEfloatcO6gR(void *p) {
      delete ((::ROOT::Math::SVector<float,6>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO6gR(void *p) {
      delete [] ((::ROOT::Math::SVector<float,6>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSVectorlEfloatcO6gR(void *p) {
      typedef ::ROOT::Math::SVector<float,6> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SVector<float,6>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSVectorlEfloatcO7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SVector<float,7>.
      typedef ::ROOT::Shadow::ROOT::Math::SVectorlEfloatcO7gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SVector<float,7>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[7]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSVectorlEfloatcO7gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<float,7> : new ::ROOT::Math::SVector<float,7>;
   }
   static void *newArray_ROOTcLcLMathcLcLSVectorlEfloatcO7gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SVector<float,7>[nElements] : new ::ROOT::Math::SVector<float,7>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSVectorlEfloatcO7gR(void *p) {
      delete ((::ROOT::Math::SVector<float,7>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSVectorlEfloatcO7gR(void *p) {
      delete [] ((::ROOT::Math::SVector<float,7>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSVectorlEfloatcO7gR(void *p) {
      typedef ::ROOT::Math::SVector<float,7> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SVector<float,7>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<float,2,2>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO2cO2gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,2,2>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[4]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,2,2> : new ::ROOT::Math::MatRepStd<float,2,2>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,2,2>[nElements] : new ::ROOT::Math::MatRepStd<float,2,2>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<float,2,2>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<float,2,2>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<float,2,2> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<float,2,2>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<float,3,3>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO3cO3gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,3,3>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[9]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,3,3> : new ::ROOT::Math::MatRepStd<float,3,3>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,3,3>[nElements] : new ::ROOT::Math::MatRepStd<float,3,3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<float,3,3>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<float,3,3>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<float,3,3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<float,3,3>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<float,4,4>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO4cO4gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,4,4>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[16]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,4,4> : new ::ROOT::Math::MatRepStd<float,4,4>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,4,4>[nElements] : new ::ROOT::Math::MatRepStd<float,4,4>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<float,4,4>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<float,4,4>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<float,4,4> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<float,4,4>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<float,5,5>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO5cO5gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,5,5>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[25]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,5,5> : new ::ROOT::Math::MatRepStd<float,5,5>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,5,5>[nElements] : new ::ROOT::Math::MatRepStd<float,5,5>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<float,5,5>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<float,5,5>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<float,5,5> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<float,5,5>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<float,6,6>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO6cO6gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,6,6>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[36]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,6,6> : new ::ROOT::Math::MatRepStd<float,6,6>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,6,6>[nElements] : new ::ROOT::Math::MatRepStd<float,6,6>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<float,6,6>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<float,6,6>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<float,6,6> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<float,6,6>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<float,7,7>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO7cO7gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,7,7>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[49]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,7,7> : new ::ROOT::Math::MatRepStd<float,7,7>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,7,7>[nElements] : new ::ROOT::Math::MatRepStd<float,7,7>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<float,7,7>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<float,7,7>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<float,7,7> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<float,7,7>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<float,4,3>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO4cO3gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,4,3>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[12]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,4,3> : new ::ROOT::Math::MatRepStd<float,4,3>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,4,3>[nElements] : new ::ROOT::Math::MatRepStd<float,4,3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<float,4,3>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<float,4,3>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<float,4,3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<float,4,3>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<float,3,4>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO3cO4gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,3,4>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[12]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,3,4> : new ::ROOT::Math::MatRepStd<float,3,4>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,3,4>[nElements] : new ::ROOT::Math::MatRepStd<float,3,4>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<float,3,4>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<float,3,4>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<float,3,4> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<float,3,4>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepStd<float,9,7>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepStdlEfloatcO9cO7gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepStd<float,9,7>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[63]", sobj->fArray);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,9,7> : new ::ROOT::Math::MatRepStd<float,9,7>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepStd<float,9,7>[nElements] : new ::ROOT::Math::MatRepStd<float,9,7>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR(void *p) {
      delete ((::ROOT::Math::MatRepStd<float,9,7>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR(void *p) {
      delete [] ((::ROOT::Math::MatRepStd<float,9,7>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR(void *p) {
      typedef ::ROOT::Math::MatRepStd<float,9,7> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepStd<float,9,7>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<float,2,2>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> > : new ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >[nElements] : new ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<float,3,3>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> > : new ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >[nElements] : new ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<float,4,4>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> > : new ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >[nElements] : new ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<float,5,5>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> > : new ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >[nElements] : new ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<float,6,6>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> > : new ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >[nElements] : new ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<float,7,7>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> > : new ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >[nElements] : new ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<float,4,3>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> > : new ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >[nElements] : new ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<float,3,4>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> > : new ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >[nElements] : new ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepStd<float,9,7>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> > : new ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >[nElements] : new ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepSym<float,2>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepSymlEfloatcO2gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,2>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[3]", sobj->fArray);
      R__insp.Inspect(R__cl, R__parent, "*fOff", &sobj->fOff);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<float,2> : new ::ROOT::Math::MatRepSym<float,2>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<float,2>[nElements] : new ::ROOT::Math::MatRepSym<float,2>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<float,2>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<float,2>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<float,2> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<float,2>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepSym<float,3>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepSymlEfloatcO3gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,3>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[6]", sobj->fArray);
      R__insp.Inspect(R__cl, R__parent, "*fOff", &sobj->fOff);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<float,3> : new ::ROOT::Math::MatRepSym<float,3>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<float,3>[nElements] : new ::ROOT::Math::MatRepSym<float,3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<float,3>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<float,3>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<float,3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<float,3>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepSym<float,4>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepSymlEfloatcO4gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,4>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[10]", sobj->fArray);
      R__insp.Inspect(R__cl, R__parent, "*fOff", &sobj->fOff);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<float,4> : new ::ROOT::Math::MatRepSym<float,4>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<float,4>[nElements] : new ::ROOT::Math::MatRepSym<float,4>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<float,4>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<float,4>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<float,4> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<float,4>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepSym<float,5>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepSymlEfloatcO5gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,5>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[15]", sobj->fArray);
      R__insp.Inspect(R__cl, R__parent, "*fOff", &sobj->fOff);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<float,5> : new ::ROOT::Math::MatRepSym<float,5>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<float,5>[nElements] : new ::ROOT::Math::MatRepSym<float,5>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<float,5>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<float,5>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<float,5> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<float,5>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepSym<float,6>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepSymlEfloatcO6gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,6>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[21]", sobj->fArray);
      R__insp.Inspect(R__cl, R__parent, "*fOff", &sobj->fOff);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<float,6> : new ::ROOT::Math::MatRepSym<float,6>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<float,6>[nElements] : new ::ROOT::Math::MatRepSym<float,6>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<float,6>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<float,6>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<float,6> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<float,6>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::MatRepSym<float,7>.
      typedef ::ROOT::Shadow::ROOT::Math::MatRepSymlEfloatcO7gR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::MatRepSym<float,7>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArray[28]", sobj->fArray);
      R__insp.Inspect(R__cl, R__parent, "*fOff", &sobj->fOff);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<float,7> : new ::ROOT::Math::MatRepSym<float,7>;
   }
   static void *newArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::MatRepSym<float,7>[nElements] : new ::ROOT::Math::MatRepSym<float,7>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR(void *p) {
      delete ((::ROOT::Math::MatRepSym<float,7>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR(void *p) {
      delete [] ((::ROOT::Math::MatRepSym<float,7>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR(void *p) {
      typedef ::ROOT::Math::MatRepSym<float,7> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::MatRepSym<float,7>

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<float,2>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> > : new ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >[nElements] : new ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<float,3>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> > : new ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >[nElements] : new ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<float,4>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> > : new ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >[nElements] : new ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<float,5>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> > : new ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >[nElements] : new ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<float,6>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> > : new ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >[nElements] : new ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >.
      typedef ::ROOT::Shadow::ROOT::Math::SMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRep", (void*)&sobj->fRep);
      ::ROOT::GenericShowMembers("ROOT::Math::MatRepSym<float,7>", (void*)&sobj->fRep, R__insp, strcat(R__parent,"fRep."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> > : new ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >;
   }
   static void *newArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >[nElements] : new ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR(void *p) {
      delete ((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR(void *p) {
      typedef ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow(void *p) {
      delete ((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow(void *p) {
      typedef ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const(void *p) {
      delete ((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const(void *p) {
      delete [] ((::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const*)p);
   }
   static void destruct_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const(void *p) {
      typedef ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLRowOffsetslE2gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::RowOffsets<2> : new ::ROOT::Math::RowOffsets<2>;
   }
   static void *newArray_ROOTcLcLMathcLcLRowOffsetslE2gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::RowOffsets<2>[nElements] : new ::ROOT::Math::RowOffsets<2>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLRowOffsetslE2gR(void *p) {
      delete ((::ROOT::Math::RowOffsets<2>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLRowOffsetslE2gR(void *p) {
      delete [] ((::ROOT::Math::RowOffsets<2>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLRowOffsetslE2gR(void *p) {
      typedef ::ROOT::Math::RowOffsets<2> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::RowOffsets<2>

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLRowOffsetslE3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::RowOffsets<3> : new ::ROOT::Math::RowOffsets<3>;
   }
   static void *newArray_ROOTcLcLMathcLcLRowOffsetslE3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::RowOffsets<3>[nElements] : new ::ROOT::Math::RowOffsets<3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLRowOffsetslE3gR(void *p) {
      delete ((::ROOT::Math::RowOffsets<3>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLRowOffsetslE3gR(void *p) {
      delete [] ((::ROOT::Math::RowOffsets<3>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLRowOffsetslE3gR(void *p) {
      typedef ::ROOT::Math::RowOffsets<3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::RowOffsets<3>

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLRowOffsetslE4gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::RowOffsets<4> : new ::ROOT::Math::RowOffsets<4>;
   }
   static void *newArray_ROOTcLcLMathcLcLRowOffsetslE4gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::RowOffsets<4>[nElements] : new ::ROOT::Math::RowOffsets<4>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLRowOffsetslE4gR(void *p) {
      delete ((::ROOT::Math::RowOffsets<4>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLRowOffsetslE4gR(void *p) {
      delete [] ((::ROOT::Math::RowOffsets<4>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLRowOffsetslE4gR(void *p) {
      typedef ::ROOT::Math::RowOffsets<4> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::RowOffsets<4>

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLRowOffsetslE5gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::RowOffsets<5> : new ::ROOT::Math::RowOffsets<5>;
   }
   static void *newArray_ROOTcLcLMathcLcLRowOffsetslE5gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::RowOffsets<5>[nElements] : new ::ROOT::Math::RowOffsets<5>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLRowOffsetslE5gR(void *p) {
      delete ((::ROOT::Math::RowOffsets<5>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLRowOffsetslE5gR(void *p) {
      delete [] ((::ROOT::Math::RowOffsets<5>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLRowOffsetslE5gR(void *p) {
      typedef ::ROOT::Math::RowOffsets<5> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::RowOffsets<5>

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLRowOffsetslE6gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::RowOffsets<6> : new ::ROOT::Math::RowOffsets<6>;
   }
   static void *newArray_ROOTcLcLMathcLcLRowOffsetslE6gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::RowOffsets<6>[nElements] : new ::ROOT::Math::RowOffsets<6>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLRowOffsetslE6gR(void *p) {
      delete ((::ROOT::Math::RowOffsets<6>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLRowOffsetslE6gR(void *p) {
      delete [] ((::ROOT::Math::RowOffsets<6>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLRowOffsetslE6gR(void *p) {
      typedef ::ROOT::Math::RowOffsets<6> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::RowOffsets<6>

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLMathcLcLRowOffsetslE7gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::RowOffsets<7> : new ::ROOT::Math::RowOffsets<7>;
   }
   static void *newArray_ROOTcLcLMathcLcLRowOffsetslE7gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Math::RowOffsets<7>[nElements] : new ::ROOT::Math::RowOffsets<7>[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLMathcLcLRowOffsetslE7gR(void *p) {
      delete ((::ROOT::Math::RowOffsets<7>*)p);
   }
   static void deleteArray_ROOTcLcLMathcLcLRowOffsetslE7gR(void *p) {
      delete [] ((::ROOT::Math::RowOffsets<7>*)p);
   }
   static void destruct_ROOTcLcLMathcLcLRowOffsetslE7gR(void *p) {
      typedef ::ROOT::Math::RowOffsets<7> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Math::RowOffsets<7>

/********************************************************
* math/smatrix/src/G__Smatrix.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__Smatrix();

extern "C" void G__set_cpp_environmentG__Smatrix() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Math/SMatrix.h");
  G__add_compiledheader("Math/SVector.h");
  G__add_compiledheader("Math/SMatrixDfwd.h");
  G__add_compiledheader("Math/SMatrixFfwd.h");
  G__cpp_reset_tagtableG__Smatrix();
}
#include <new>
extern "C" int G__cpp_dllrevG__Smatrix() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ROOT::Math */

/* ROOT::Math::RowOffsets<2> */
static int G__G__Smatrix_103_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::RowOffsets<2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::RowOffsets<2>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::RowOffsets<2>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::RowOffsets<2>;
     } else {
       p = new((void*) gvp) ROOT::Math::RowOffsets<2>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_103_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::Math::RowOffsets<2>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_103_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::Math::RowOffsets<2>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_103_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::RowOffsets<2>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::RowOffsets<2>(*(ROOT::Math::RowOffsets<2>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::RowOffsets<2> G__TROOTcLcLMathcLcLRowOffsetslE2gR;
static int G__G__Smatrix_103_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::RowOffsets<2>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::RowOffsets<2>*) (soff+(sizeof(ROOT::Math::RowOffsets<2>)*i)))->~G__TROOTcLcLMathcLcLRowOffsetslE2gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::RowOffsets<2>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::RowOffsets<2>*) (soff))->~G__TROOTcLcLMathcLcLRowOffsetslE2gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_103_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::RowOffsets<2>* dest = (ROOT::Math::RowOffsets<2>*) G__getstructoffset();
   const ROOT::Math::RowOffsets<2>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::RowOffsets<3> */
static int G__G__Smatrix_104_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::RowOffsets<3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::RowOffsets<3>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::RowOffsets<3>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::RowOffsets<3>;
     } else {
       p = new((void*) gvp) ROOT::Math::RowOffsets<3>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_104_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::Math::RowOffsets<3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_104_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::Math::RowOffsets<3>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_104_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::RowOffsets<3>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::RowOffsets<3>(*(ROOT::Math::RowOffsets<3>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::RowOffsets<3> G__TROOTcLcLMathcLcLRowOffsetslE3gR;
static int G__G__Smatrix_104_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::RowOffsets<3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::RowOffsets<3>*) (soff+(sizeof(ROOT::Math::RowOffsets<3>)*i)))->~G__TROOTcLcLMathcLcLRowOffsetslE3gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::RowOffsets<3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::RowOffsets<3>*) (soff))->~G__TROOTcLcLMathcLcLRowOffsetslE3gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_104_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::RowOffsets<3>* dest = (ROOT::Math::RowOffsets<3>*) G__getstructoffset();
   const ROOT::Math::RowOffsets<3>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::RowOffsets<4> */
static int G__G__Smatrix_105_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::RowOffsets<4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::RowOffsets<4>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::RowOffsets<4>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::RowOffsets<4>;
     } else {
       p = new((void*) gvp) ROOT::Math::RowOffsets<4>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_105_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::Math::RowOffsets<4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_105_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::Math::RowOffsets<4>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_105_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::RowOffsets<4>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::RowOffsets<4>(*(ROOT::Math::RowOffsets<4>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::RowOffsets<4> G__TROOTcLcLMathcLcLRowOffsetslE4gR;
static int G__G__Smatrix_105_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::RowOffsets<4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::RowOffsets<4>*) (soff+(sizeof(ROOT::Math::RowOffsets<4>)*i)))->~G__TROOTcLcLMathcLcLRowOffsetslE4gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::RowOffsets<4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::RowOffsets<4>*) (soff))->~G__TROOTcLcLMathcLcLRowOffsetslE4gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_105_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::RowOffsets<4>* dest = (ROOT::Math::RowOffsets<4>*) G__getstructoffset();
   const ROOT::Math::RowOffsets<4>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::RowOffsets<5> */
static int G__G__Smatrix_106_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::RowOffsets<5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::RowOffsets<5>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::RowOffsets<5>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::RowOffsets<5>;
     } else {
       p = new((void*) gvp) ROOT::Math::RowOffsets<5>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_106_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::Math::RowOffsets<5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_106_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::Math::RowOffsets<5>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_106_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::RowOffsets<5>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::RowOffsets<5>(*(ROOT::Math::RowOffsets<5>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::RowOffsets<5> G__TROOTcLcLMathcLcLRowOffsetslE5gR;
static int G__G__Smatrix_106_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::RowOffsets<5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::RowOffsets<5>*) (soff+(sizeof(ROOT::Math::RowOffsets<5>)*i)))->~G__TROOTcLcLMathcLcLRowOffsetslE5gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::RowOffsets<5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::RowOffsets<5>*) (soff))->~G__TROOTcLcLMathcLcLRowOffsetslE5gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_106_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::RowOffsets<5>* dest = (ROOT::Math::RowOffsets<5>*) G__getstructoffset();
   const ROOT::Math::RowOffsets<5>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::RowOffsets<6> */
static int G__G__Smatrix_107_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::RowOffsets<6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::RowOffsets<6>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::RowOffsets<6>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::RowOffsets<6>;
     } else {
       p = new((void*) gvp) ROOT::Math::RowOffsets<6>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_107_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::Math::RowOffsets<6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_107_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::Math::RowOffsets<6>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_107_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::RowOffsets<6>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::RowOffsets<6>(*(ROOT::Math::RowOffsets<6>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::RowOffsets<6> G__TROOTcLcLMathcLcLRowOffsetslE6gR;
static int G__G__Smatrix_107_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::RowOffsets<6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::RowOffsets<6>*) (soff+(sizeof(ROOT::Math::RowOffsets<6>)*i)))->~G__TROOTcLcLMathcLcLRowOffsetslE6gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::RowOffsets<6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::RowOffsets<6>*) (soff))->~G__TROOTcLcLMathcLcLRowOffsetslE6gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_107_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::RowOffsets<6>* dest = (ROOT::Math::RowOffsets<6>*) G__getstructoffset();
   const ROOT::Math::RowOffsets<6>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::RowOffsets<7> */
static int G__G__Smatrix_108_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::RowOffsets<7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::RowOffsets<7>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::RowOffsets<7>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::RowOffsets<7>;
     } else {
       p = new((void*) gvp) ROOT::Math::RowOffsets<7>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_108_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::Math::RowOffsets<7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_108_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::Math::RowOffsets<7>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_108_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::RowOffsets<7>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::RowOffsets<7>(*(ROOT::Math::RowOffsets<7>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::RowOffsets<7> G__TROOTcLcLMathcLcLRowOffsetslE7gR;
static int G__G__Smatrix_108_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::RowOffsets<7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::RowOffsets<7>*) (soff+(sizeof(ROOT::Math::RowOffsets<7>)*i)))->~G__TROOTcLcLMathcLcLRowOffsetslE7gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::RowOffsets<7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::RowOffsets<7>*) (soff))->~G__TROOTcLcLMathcLcLRowOffsetslE7gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_108_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::RowOffsets<7>* dest = (ROOT::Math::RowOffsets<7>*) G__getstructoffset();
   const ROOT::Math::RowOffsets<7>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrixIdentity */
// automatic default constructor
static int G__G__Smatrix_112_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrixIdentity *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrixIdentity[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrixIdentity[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrixIdentity;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrixIdentity;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixIdentity));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_112_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrixIdentity* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrixIdentity(*(ROOT::Math::SMatrixIdentity*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixIdentity));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrixIdentity G__TROOTcLcLMathcLcLSMatrixIdentity;
static int G__G__Smatrix_112_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrixIdentity*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrixIdentity*) (soff+(sizeof(ROOT::Math::SMatrixIdentity)*i)))->~G__TROOTcLcLMathcLcLSMatrixIdentity();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrixIdentity*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrixIdentity*) (soff))->~G__TROOTcLcLMathcLcLSMatrixIdentity();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_112_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrixIdentity* dest = (ROOT::Math::SMatrixIdentity*) G__getstructoffset();
   const ROOT::Math::SMatrixIdentity& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<double,2,2> */
static int G__G__Smatrix_113_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,2,2>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_113_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,2,2>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_113_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,2,2>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_113_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,2,2>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_113_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepStd<double,2,2>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_113_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepStd<double,2,2>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_113_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepStd<double,2,2>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_113_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,2,2> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,2,2>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,2,2>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,2,2>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,2,2>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_113_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<double,2,2>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<double,2,2>(*(ROOT::Math::MatRepStd<double,2,2>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<double,2,2> G__TROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR;
static int G__G__Smatrix_113_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<double,2,2>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<double,2,2>*) (soff+(sizeof(ROOT::Math::MatRepStd<double,2,2>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<double,2,2>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<double,2,2>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_113_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,2,2>* dest = (ROOT::Math::MatRepStd<double,2,2>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<double,2,2>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<double,2,2>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> > */
static int G__G__Smatrix_115_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >(*(ROOT::Math::SVector<double,2*(2+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >(*(ROOT::Math::SVector<double,2*(2+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >(*(ROOT::Math::SVector<double,2*(2+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >(*(ROOT::Math::SVector<double,2*(2+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >* pobj;
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> > xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >* pobj;
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> > xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >* pobj;
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> > xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->Det(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->Det2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2>* pobj;
         const ROOT::Math::SVector<double,2> xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2>* pobj;
         const ROOT::Math::SVector<double,2> xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2>* pobj;
         const ROOT::Math::SVector<double,2> xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<double,2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2*(2+1)/2>* pobj;
         const ROOT::Math::SVector<double,2*(2+1)/2> xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<double,2*(2+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2*(2+1)/2>* pobj;
         const ROOT::Math::SVector<double,2*(2+1)/2> xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<double,2*(2+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->IsInUse((const double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_115_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> > G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR;
static int G__G__Smatrix_115_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) (soff+(sizeof(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_115_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >* dest = (ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SVector<double,3> */
static int G__G__Smatrix_116_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<double,3>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<double,3>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<double,3>;
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<double,3>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,3>(*(ROOT::Math::SVector<double,3>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,3>(*(ROOT::Math::SVector<double,3>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,3>((const double*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,3>((const double*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,3>((ROOT::Math::SVector<double,3>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<double,3>::const_iterator) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,3>((ROOT::Math::SVector<double,3>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<double,3>::const_iterator) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,3>(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,3>(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,3>(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,3>(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,3>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,3>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,3>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,3>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,3>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,3>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,3>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,3>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,3>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,3>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,3>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,3>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,3>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,3>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,3>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]), *(double*) G__Doubleref(&libp->para[9]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,3>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]), *(double*) G__Doubleref(&libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>& obj = ((ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Math::SVector<double,3>::Dim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SVector<double,3>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,3>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,3>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,3>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,3>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator==(*(ROOT::Math::SVector<double,3>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator!=(*(ROOT::Math::SVector<double,3>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator>(*(ROOT::Math::SVector<double,3>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator<(*(ROOT::Math::SVector<double,3>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,3>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,3>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>& obj = ((ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>& obj = ((ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>& obj = ((ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>& obj = ((ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>& obj = ((ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator+=(*(ROOT::Math::SVector<double,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>& obj = ((ROOT::Math::SVector<double,3>*) G__getstructoffset())->operator-=(*(ROOT::Math::SVector<double,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>& obj = ((ROOT::Math::SVector<double,3>*) G__getstructoffset())->Unit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_116_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SVector<double,3>*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SVector<double,3> G__TROOTcLcLMathcLcLSVectorlEdoublecO3gR;
static int G__G__Smatrix_116_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SVector<double,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SVector<double,3>*) (soff+(sizeof(ROOT::Math::SVector<double,3>)*i)))->~G__TROOTcLcLMathcLcLSVectorlEdoublecO3gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SVector<double,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SVector<double,3>*) (soff))->~G__TROOTcLcLMathcLcLSVectorlEdoublecO3gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_116_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,3>* dest = (ROOT::Math::SVector<double,3>*) G__getstructoffset();
   *dest = *(ROOT::Math::SVector<double,3>*) libp->para[0].ref;
   const ROOT::Math::SVector<double,3>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow */
static int G__G__Smatrix_119_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_119_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_119_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_119_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_119_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow* dest = (ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const */
static int G__G__Smatrix_120_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_120_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_120_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_120_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SVector<double,2> */
static int G__G__Smatrix_121_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<double,2>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<double,2>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<double,2>;
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<double,2>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,2>(*(ROOT::Math::SVector<double,2>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,2>(*(ROOT::Math::SVector<double,2>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,2>((const double*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,2>((const double*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,2>((ROOT::Math::SVector<double,2>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<double,2>::const_iterator) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,2>((ROOT::Math::SVector<double,2>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<double,2>::const_iterator) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,2>(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,2>(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,2>(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,2>(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,2>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,2>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,2>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,2>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,2>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,2>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,2>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,2>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,2>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,2>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,2>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,2>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,2>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,2>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,2>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]), *(double*) G__Doubleref(&libp->para[9]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,2>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]), *(double*) G__Doubleref(&libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2>& obj = ((ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Math::SVector<double,2>::Dim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SVector<double,2>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,2>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,2>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,2>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,2>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,2>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,2>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator==(*(ROOT::Math::SVector<double,2>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator!=(*(ROOT::Math::SVector<double,2>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator>(*(ROOT::Math::SVector<double,2>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator<(*(ROOT::Math::SVector<double,2>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,2>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,2>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2>& obj = ((ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2>& obj = ((ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2>& obj = ((ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2>& obj = ((ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2>& obj = ((ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator+=(*(ROOT::Math::SVector<double,2>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2>& obj = ((ROOT::Math::SVector<double,2>*) G__getstructoffset())->operator-=(*(ROOT::Math::SVector<double,2>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2>& obj = ((ROOT::Math::SVector<double,2>*) G__getstructoffset())->Unit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_121_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SVector<double,2>*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SVector<double,2> G__TROOTcLcLMathcLcLSVectorlEdoublecO2gR;
static int G__G__Smatrix_121_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SVector<double,2>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SVector<double,2>*) (soff+(sizeof(ROOT::Math::SVector<double,2>)*i)))->~G__TROOTcLcLMathcLcLSVectorlEdoublecO2gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SVector<double,2>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SVector<double,2>*) (soff))->~G__TROOTcLcLMathcLcLSVectorlEdoublecO2gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_121_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,2>* dest = (ROOT::Math::SVector<double,2>*) G__getstructoffset();
   *dest = *(ROOT::Math::SVector<double,2>*) libp->para[0].ref;
   const ROOT::Math::SVector<double,2>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<double,3,3> */
static int G__G__Smatrix_123_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,3,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_123_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,3,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_123_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,3,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_123_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,3,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_123_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepStd<double,3,3>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_123_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepStd<double,3,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_123_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepStd<double,3,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_123_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,3,3> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,3,3>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,3,3>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,3,3>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,3,3>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_123_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<double,3,3>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<double,3,3>(*(ROOT::Math::MatRepStd<double,3,3>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<double,3,3> G__TROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR;
static int G__G__Smatrix_123_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<double,3,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<double,3,3>*) (soff+(sizeof(ROOT::Math::MatRepStd<double,3,3>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<double,3,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<double,3,3>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_123_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,3,3>* dest = (ROOT::Math::MatRepStd<double,3,3>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<double,3,3>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<double,3,3>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> > */
static int G__G__Smatrix_125_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >(*(ROOT::Math::SVector<double,3*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >(*(ROOT::Math::SVector<double,3*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >(*(ROOT::Math::SVector<double,3*(3+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >(*(ROOT::Math::SVector<double,3*(3+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >* pobj;
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> > xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >* pobj;
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> > xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >* pobj;
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> > xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->Det(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->Det2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>* pobj;
         const ROOT::Math::SVector<double,3> xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>* pobj;
         const ROOT::Math::SVector<double,3> xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>* pobj;
         const ROOT::Math::SVector<double,3> xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<double,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3*(3+1)/2>* pobj;
         const ROOT::Math::SVector<double,3*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<double,3*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3*(3+1)/2>* pobj;
         const ROOT::Math::SVector<double,3*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<double,3*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->IsInUse((const double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_125_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> > G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR;
static int G__G__Smatrix_125_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) (soff+(sizeof(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_125_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >* dest = (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SVector<double,6> */
static int G__G__Smatrix_126_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<double,6>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<double,6>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<double,6>;
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<double,6>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,6>(*(ROOT::Math::SVector<double,6>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,6>(*(ROOT::Math::SVector<double,6>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,6>((const double*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,6>((const double*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,6>((ROOT::Math::SVector<double,6>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<double,6>::const_iterator) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,6>((ROOT::Math::SVector<double,6>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<double,6>::const_iterator) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,6>(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,6>(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,6>(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,6>(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,6>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,6>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,6>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,6>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,6>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,6>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,6>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,6>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,6>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,6>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,6>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,6>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,6>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,6>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,6>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]), *(double*) G__Doubleref(&libp->para[9]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,6>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]), *(double*) G__Doubleref(&libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6>& obj = ((ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Math::SVector<double,6>::Dim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SVector<double,6>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,6>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,6>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,6>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,6>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator==(*(ROOT::Math::SVector<double,6>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator!=(*(ROOT::Math::SVector<double,6>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator>(*(ROOT::Math::SVector<double,6>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator<(*(ROOT::Math::SVector<double,6>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,6>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,6>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6>& obj = ((ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6>& obj = ((ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6>& obj = ((ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6>& obj = ((ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6>& obj = ((ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator+=(*(ROOT::Math::SVector<double,6>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6>& obj = ((ROOT::Math::SVector<double,6>*) G__getstructoffset())->operator-=(*(ROOT::Math::SVector<double,6>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6>& obj = ((ROOT::Math::SVector<double,6>*) G__getstructoffset())->Unit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_126_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SVector<double,6>*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SVector<double,6> G__TROOTcLcLMathcLcLSVectorlEdoublecO6gR;
static int G__G__Smatrix_126_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SVector<double,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SVector<double,6>*) (soff+(sizeof(ROOT::Math::SVector<double,6>)*i)))->~G__TROOTcLcLMathcLcLSVectorlEdoublecO6gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SVector<double,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SVector<double,6>*) (soff))->~G__TROOTcLcLMathcLcLSVectorlEdoublecO6gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_126_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,6>* dest = (ROOT::Math::SVector<double,6>*) G__getstructoffset();
   *dest = *(ROOT::Math::SVector<double,6>*) libp->para[0].ref;
   const ROOT::Math::SVector<double,6>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow */
static int G__G__Smatrix_129_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_129_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_129_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_129_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_129_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow* dest = (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const */
static int G__G__Smatrix_130_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_130_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_130_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_130_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<double,4,4> */
static int G__G__Smatrix_131_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,4,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_131_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,4,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_131_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,4,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_131_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,4,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_131_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepStd<double,4,4>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_131_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepStd<double,4,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_131_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepStd<double,4,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_131_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,4,4> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,4,4>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,4,4>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,4,4>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,4,4>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_131_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<double,4,4>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<double,4,4>(*(ROOT::Math::MatRepStd<double,4,4>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<double,4,4> G__TROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR;
static int G__G__Smatrix_131_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<double,4,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<double,4,4>*) (soff+(sizeof(ROOT::Math::MatRepStd<double,4,4>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<double,4,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<double,4,4>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_131_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,4,4>* dest = (ROOT::Math::MatRepStd<double,4,4>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<double,4,4>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<double,4,4>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> > */
static int G__G__Smatrix_133_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >(*(ROOT::Math::SVector<double,4*(4+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >(*(ROOT::Math::SVector<double,4*(4+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >(*(ROOT::Math::SVector<double,4*(4+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >(*(ROOT::Math::SVector<double,4*(4+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >* pobj;
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> > xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >* pobj;
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> > xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >* pobj;
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> > xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->Det(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->Det2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>* pobj;
         const ROOT::Math::SVector<double,4> xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>* pobj;
         const ROOT::Math::SVector<double,4> xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>* pobj;
         const ROOT::Math::SVector<double,4> xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<double,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4*(4+1)/2>* pobj;
         const ROOT::Math::SVector<double,4*(4+1)/2> xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<double,4*(4+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4*(4+1)/2>* pobj;
         const ROOT::Math::SVector<double,4*(4+1)/2> xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<double,4*(4+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->IsInUse((const double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_133_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> > G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR;
static int G__G__Smatrix_133_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) (soff+(sizeof(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_133_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >* dest = (ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow */
static int G__G__Smatrix_137_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_137_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_137_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_137_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_137_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow* dest = (ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const */
static int G__G__Smatrix_138_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_138_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_138_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_138_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SVector<double,4> */
static int G__G__Smatrix_139_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<double,4>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<double,4>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<double,4>;
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<double,4>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,4>(*(ROOT::Math::SVector<double,4>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,4>(*(ROOT::Math::SVector<double,4>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,4>((const double*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,4>((const double*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,4>((ROOT::Math::SVector<double,4>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<double,4>::const_iterator) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,4>((ROOT::Math::SVector<double,4>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<double,4>::const_iterator) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,4>(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,4>(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,4>(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,4>(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,4>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,4>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,4>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,4>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,4>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,4>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,4>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,4>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,4>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,4>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,4>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,4>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,4>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,4>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,4>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]), *(double*) G__Doubleref(&libp->para[9]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,4>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]), *(double*) G__Doubleref(&libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>& obj = ((ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Math::SVector<double,4>::Dim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SVector<double,4>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,4>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,4>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,4>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,4>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator==(*(ROOT::Math::SVector<double,4>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator!=(*(ROOT::Math::SVector<double,4>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator>(*(ROOT::Math::SVector<double,4>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator<(*(ROOT::Math::SVector<double,4>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,4>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,4>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>& obj = ((ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>& obj = ((ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>& obj = ((ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>& obj = ((ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>& obj = ((ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator+=(*(ROOT::Math::SVector<double,4>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>& obj = ((ROOT::Math::SVector<double,4>*) G__getstructoffset())->operator-=(*(ROOT::Math::SVector<double,4>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>& obj = ((ROOT::Math::SVector<double,4>*) G__getstructoffset())->Unit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_139_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SVector<double,4>*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SVector<double,4> G__TROOTcLcLMathcLcLSVectorlEdoublecO4gR;
static int G__G__Smatrix_139_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SVector<double,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SVector<double,4>*) (soff+(sizeof(ROOT::Math::SVector<double,4>)*i)))->~G__TROOTcLcLMathcLcLSVectorlEdoublecO4gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SVector<double,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SVector<double,4>*) (soff))->~G__TROOTcLcLMathcLcLSVectorlEdoublecO4gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_139_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,4>* dest = (ROOT::Math::SVector<double,4>*) G__getstructoffset();
   *dest = *(ROOT::Math::SVector<double,4>*) libp->para[0].ref;
   const ROOT::Math::SVector<double,4>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<double,5,5> */
static int G__G__Smatrix_141_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,5,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_141_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,5,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_141_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,5,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_141_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,5,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_141_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepStd<double,5,5>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_141_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepStd<double,5,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_141_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepStd<double,5,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_141_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,5,5> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,5,5>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,5,5>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,5,5>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,5,5>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_141_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<double,5,5>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<double,5,5>(*(ROOT::Math::MatRepStd<double,5,5>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<double,5,5> G__TROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR;
static int G__G__Smatrix_141_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<double,5,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<double,5,5>*) (soff+(sizeof(ROOT::Math::MatRepStd<double,5,5>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<double,5,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<double,5,5>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_141_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,5,5>* dest = (ROOT::Math::MatRepStd<double,5,5>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<double,5,5>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<double,5,5>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> > */
static int G__G__Smatrix_143_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >(*(ROOT::Math::SVector<double,5*(5+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >(*(ROOT::Math::SVector<double,5*(5+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >(*(ROOT::Math::SVector<double,5*(5+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >(*(ROOT::Math::SVector<double,5*(5+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >* pobj;
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> > xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >* pobj;
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> > xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >* pobj;
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> > xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->Det(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->Det2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5>* pobj;
         const ROOT::Math::SVector<double,5> xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5>* pobj;
         const ROOT::Math::SVector<double,5> xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5>* pobj;
         const ROOT::Math::SVector<double,5> xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<double,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5*(5+1)/2>* pobj;
         const ROOT::Math::SVector<double,5*(5+1)/2> xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<double,5*(5+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5*(5+1)/2>* pobj;
         const ROOT::Math::SVector<double,5*(5+1)/2> xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<double,5*(5+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->IsInUse((const double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_143_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> > G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR;
static int G__G__Smatrix_143_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) (soff+(sizeof(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_143_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >* dest = (ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow */
static int G__G__Smatrix_147_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_147_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_147_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_147_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_147_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow* dest = (ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const */
static int G__G__Smatrix_148_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_148_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_148_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_148_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SVector<double,5> */
static int G__G__Smatrix_149_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<double,5>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<double,5>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<double,5>;
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<double,5>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,5>(*(ROOT::Math::SVector<double,5>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,5>(*(ROOT::Math::SVector<double,5>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,5>((const double*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,5>((const double*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,5>((ROOT::Math::SVector<double,5>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<double,5>::const_iterator) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,5>((ROOT::Math::SVector<double,5>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<double,5>::const_iterator) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,5>(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,5>(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,5>(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,5>(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,5>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,5>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,5>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,5>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,5>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,5>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,5>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,5>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,5>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,5>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,5>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,5>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,5>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,5>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,5>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]), *(double*) G__Doubleref(&libp->para[9]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,5>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]), *(double*) G__Doubleref(&libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5>& obj = ((ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Math::SVector<double,5>::Dim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SVector<double,5>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,5>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,5>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,5>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,5>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator==(*(ROOT::Math::SVector<double,5>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator!=(*(ROOT::Math::SVector<double,5>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator>(*(ROOT::Math::SVector<double,5>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator<(*(ROOT::Math::SVector<double,5>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,5>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,5>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5>& obj = ((ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5>& obj = ((ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5>& obj = ((ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5>& obj = ((ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5>& obj = ((ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator+=(*(ROOT::Math::SVector<double,5>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5>& obj = ((ROOT::Math::SVector<double,5>*) G__getstructoffset())->operator-=(*(ROOT::Math::SVector<double,5>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5>& obj = ((ROOT::Math::SVector<double,5>*) G__getstructoffset())->Unit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_149_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SVector<double,5>*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SVector<double,5> G__TROOTcLcLMathcLcLSVectorlEdoublecO5gR;
static int G__G__Smatrix_149_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SVector<double,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SVector<double,5>*) (soff+(sizeof(ROOT::Math::SVector<double,5>)*i)))->~G__TROOTcLcLMathcLcLSVectorlEdoublecO5gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SVector<double,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SVector<double,5>*) (soff))->~G__TROOTcLcLMathcLcLSVectorlEdoublecO5gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_149_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,5>* dest = (ROOT::Math::SVector<double,5>*) G__getstructoffset();
   *dest = *(ROOT::Math::SVector<double,5>*) libp->para[0].ref;
   const ROOT::Math::SVector<double,5>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<double,6,6> */
static int G__G__Smatrix_151_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,6,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_151_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,6,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_151_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,6,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_151_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,6,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_151_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepStd<double,6,6>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_151_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepStd<double,6,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_151_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepStd<double,6,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_151_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,6,6> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,6,6>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,6,6>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,6,6>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,6,6>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_151_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<double,6,6>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<double,6,6>(*(ROOT::Math::MatRepStd<double,6,6>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<double,6,6> G__TROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR;
static int G__G__Smatrix_151_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<double,6,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<double,6,6>*) (soff+(sizeof(ROOT::Math::MatRepStd<double,6,6>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<double,6,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<double,6,6>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_151_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,6,6>* dest = (ROOT::Math::MatRepStd<double,6,6>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<double,6,6>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<double,6,6>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> > */
static int G__G__Smatrix_153_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >(*(ROOT::Math::SVector<double,6*(6+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >(*(ROOT::Math::SVector<double,6*(6+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >(*(ROOT::Math::SVector<double,6*(6+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >(*(ROOT::Math::SVector<double,6*(6+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >* pobj;
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> > xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >* pobj;
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> > xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >* pobj;
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> > xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->Det(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->Det2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6>* pobj;
         const ROOT::Math::SVector<double,6> xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6>* pobj;
         const ROOT::Math::SVector<double,6> xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6>* pobj;
         const ROOT::Math::SVector<double,6> xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<double,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6*(6+1)/2>* pobj;
         const ROOT::Math::SVector<double,6*(6+1)/2> xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<double,6*(6+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6*(6+1)/2>* pobj;
         const ROOT::Math::SVector<double,6*(6+1)/2> xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<double,6*(6+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->IsInUse((const double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_153_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> > G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR;
static int G__G__Smatrix_153_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) (soff+(sizeof(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_153_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >* dest = (ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow */
static int G__G__Smatrix_157_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_157_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_157_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_157_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_157_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow* dest = (ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const */
static int G__G__Smatrix_158_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_158_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_158_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_158_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<double,7,7> */
static int G__G__Smatrix_159_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,7,7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_159_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,7,7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_159_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,7,7>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_159_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,7,7>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_159_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepStd<double,7,7>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_159_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepStd<double,7,7>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_159_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepStd<double,7,7>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_159_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,7,7> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,7,7>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,7,7>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,7,7>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,7,7>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_159_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<double,7,7>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<double,7,7>(*(ROOT::Math::MatRepStd<double,7,7>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<double,7,7> G__TROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR;
static int G__G__Smatrix_159_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<double,7,7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<double,7,7>*) (soff+(sizeof(ROOT::Math::MatRepStd<double,7,7>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<double,7,7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<double,7,7>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_159_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,7,7>* dest = (ROOT::Math::MatRepStd<double,7,7>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<double,7,7>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<double,7,7>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> > */
static int G__G__Smatrix_161_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >(*(ROOT::Math::SVector<double,7*(7+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >(*(ROOT::Math::SVector<double,7*(7+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >(*(ROOT::Math::SVector<double,7*(7+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >(*(ROOT::Math::SVector<double,7*(7+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >* pobj;
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> > xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >* pobj;
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> > xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >* pobj;
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> > xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->Det(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->Det2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7>* pobj;
         const ROOT::Math::SVector<double,7> xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,7>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7>* pobj;
         const ROOT::Math::SVector<double,7> xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,7>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7>* pobj;
         const ROOT::Math::SVector<double,7> xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<double,7>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7*(7+1)/2>* pobj;
         const ROOT::Math::SVector<double,7*(7+1)/2> xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<double,7*(7+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7*(7+1)/2>* pobj;
         const ROOT::Math::SVector<double,7*(7+1)/2> xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<double,7*(7+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->IsInUse((const double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_161_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> > G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR;
static int G__G__Smatrix_161_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) (soff+(sizeof(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_161_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >* dest = (ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow */
static int G__G__Smatrix_165_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_165_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_165_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_165_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_165_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow* dest = (ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const */
static int G__G__Smatrix_166_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_166_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_166_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_166_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SVector<double,7> */
static int G__G__Smatrix_167_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<double,7>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<double,7>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<double,7>;
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<double,7>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,7>(*(ROOT::Math::SVector<double,7>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,7>(*(ROOT::Math::SVector<double,7>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,7>((const double*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,7>((const double*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,7>((ROOT::Math::SVector<double,7>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<double,7>::const_iterator) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,7>((ROOT::Math::SVector<double,7>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<double,7>::const_iterator) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,7>(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,7>(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,7>(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,7>(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,7>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,7>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,7>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,7>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,7>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,7>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,7>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,7>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,7>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,7>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,7>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,7>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,7>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,7>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<double,7>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]), *(double*) G__Doubleref(&libp->para[9]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<double,7>(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]), *(double*) G__Doubleref(&libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7>& obj = ((ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Math::SVector<double,7>::Dim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SVector<double,7>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,7>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,7>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,7>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SVector<double,7>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,7>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SVector<double,7>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator==(*(ROOT::Math::SVector<double,7>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator!=(*(ROOT::Math::SVector<double,7>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator>(*(ROOT::Math::SVector<double,7>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator<(*(ROOT::Math::SVector<double,7>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SVector<double,7>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SVector<double,7>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7>& obj = ((ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7>& obj = ((ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7>& obj = ((ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7>& obj = ((ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7>& obj = ((ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator+=(*(ROOT::Math::SVector<double,7>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7>& obj = ((ROOT::Math::SVector<double,7>*) G__getstructoffset())->operator-=(*(ROOT::Math::SVector<double,7>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7>& obj = ((ROOT::Math::SVector<double,7>*) G__getstructoffset())->Unit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_167_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SVector<double,7>*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SVector<double,7> G__TROOTcLcLMathcLcLSVectorlEdoublecO7gR;
static int G__G__Smatrix_167_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SVector<double,7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SVector<double,7>*) (soff+(sizeof(ROOT::Math::SVector<double,7>)*i)))->~G__TROOTcLcLMathcLcLSVectorlEdoublecO7gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SVector<double,7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SVector<double,7>*) (soff))->~G__TROOTcLcLMathcLcLSVectorlEdoublecO7gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_167_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<double,7>* dest = (ROOT::Math::SVector<double,7>*) G__getstructoffset();
   *dest = *(ROOT::Math::SVector<double,7>*) libp->para[0].ref;
   const ROOT::Math::SVector<double,7>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<double,2> */
static int G__G__Smatrix_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<double,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<double,2>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<double,2>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<double,2>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<double,2>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepSym<double,2>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepSym<double,2>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepSym<double,2>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepSym<double,2>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepSym<double,2>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepSym<double,2>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepSym<double,2>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,2>& obj = ((ROOT::Math::MatRepSym<double,2>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<double,2>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,2>& obj = ((ROOT::Math::MatRepSym<double,2>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<double,2>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,2>& obj = ((ROOT::Math::MatRepSym<double,2>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<double,2>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<double,2>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<2>& obj = ((const ROOT::Math::MatRepSym<double,2>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<double,2>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<double,2>(*(ROOT::Math::MatRepSym<double,2>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<double,2> G__TROOTcLcLMathcLcLMatRepSymlEdoublecO2gR;
static int G__G__Smatrix_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<double,2>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<double,2>*) (soff+(sizeof(ROOT::Math::MatRepSym<double,2>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEdoublecO2gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<double,2>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<double,2>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEdoublecO2gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> > */
static int G__G__Smatrix_171_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >(*(ROOT::Math::SVector<double,2*(2+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >(*(ROOT::Math::SVector<double,2*(2+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >(*(ROOT::Math::SVector<double,2*(2+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >(*(ROOT::Math::SVector<double,2*(2+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >* pobj;
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> > xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >* pobj;
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> > xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >* pobj;
         const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> > xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->Det(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->Det2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2>* pobj;
         const ROOT::Math::SVector<double,2> xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2>* pobj;
         const ROOT::Math::SVector<double,2> xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2>* pobj;
         const ROOT::Math::SVector<double,2> xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<double,2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2*(2+1)/2>* pobj;
         const ROOT::Math::SVector<double,2*(2+1)/2> xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<double,2*(2+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,2*(2+1)/2>* pobj;
         const ROOT::Math::SVector<double,2*(2+1)/2> xobj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<double,2*(2+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->IsInUse((const double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_171_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> > G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR;
static int G__G__Smatrix_171_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) (soff+(sizeof(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow */
static int G__G__Smatrix_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow* dest = (ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const */
static int G__G__Smatrix_174_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_174_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_174_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_174_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<double,3> */
static int G__G__Smatrix_175_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<double,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<double,3>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<double,3>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<double,3>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<double,3>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_175_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_175_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_175_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_175_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_175_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_175_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_175_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_175_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,3>& obj = ((ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<double,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_175_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,3>& obj = ((ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<double,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_175_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,3>& obj = ((ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<double,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_175_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_175_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<3>& obj = ((const ROOT::Math::MatRepSym<double,3>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_175_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<double,3>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<double,3>(*(ROOT::Math::MatRepSym<double,3>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<double,3> G__TROOTcLcLMathcLcLMatRepSymlEdoublecO3gR;
static int G__G__Smatrix_175_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<double,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<double,3>*) (soff+(sizeof(ROOT::Math::MatRepSym<double,3>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEdoublecO3gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<double,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<double,3>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEdoublecO3gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > */
static int G__G__Smatrix_177_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*(ROOT::Math::SVector<double,3*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*(ROOT::Math::SVector<double,3*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*(ROOT::Math::SVector<double,3*(3+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*(ROOT::Math::SVector<double,3*(3+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >* pobj;
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >* pobj;
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >* pobj;
         const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Det(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Det2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>* pobj;
         const ROOT::Math::SVector<double,3> xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>* pobj;
         const ROOT::Math::SVector<double,3> xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>* pobj;
         const ROOT::Math::SVector<double,3> xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<double,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3*(3+1)/2>* pobj;
         const ROOT::Math::SVector<double,3*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<double,3*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3*(3+1)/2>* pobj;
         const ROOT::Math::SVector<double,3*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<double,3*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->IsInUse((const double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_177_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR;
static int G__G__Smatrix_177_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) (soff+(sizeof(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow */
static int G__G__Smatrix_179_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_179_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_179_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_179_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_179_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow* dest = (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const */
static int G__G__Smatrix_180_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_180_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_180_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_180_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<double,4> */
static int G__G__Smatrix_181_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<double,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<double,4>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<double,4>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<double,4>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<double,4>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_181_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepSym<double,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_181_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepSym<double,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_181_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepSym<double,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_181_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepSym<double,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_181_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepSym<double,4>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_181_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepSym<double,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_181_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepSym<double,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_181_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,4>& obj = ((ROOT::Math::MatRepSym<double,4>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<double,4>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_181_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,4>& obj = ((ROOT::Math::MatRepSym<double,4>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<double,4>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_181_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,4>& obj = ((ROOT::Math::MatRepSym<double,4>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<double,4>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_181_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<double,4>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_181_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<4>& obj = ((const ROOT::Math::MatRepSym<double,4>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_181_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<double,4>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<double,4>(*(ROOT::Math::MatRepSym<double,4>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<double,4> G__TROOTcLcLMathcLcLMatRepSymlEdoublecO4gR;
static int G__G__Smatrix_181_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<double,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<double,4>*) (soff+(sizeof(ROOT::Math::MatRepSym<double,4>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEdoublecO4gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<double,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<double,4>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEdoublecO4gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> > */
static int G__G__Smatrix_183_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >(*(ROOT::Math::SVector<double,4*(4+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >(*(ROOT::Math::SVector<double,4*(4+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >(*(ROOT::Math::SVector<double,4*(4+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >(*(ROOT::Math::SVector<double,4*(4+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >* pobj;
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> > xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >* pobj;
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> > xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >* pobj;
         const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> > xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->Det(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->Det2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>* pobj;
         const ROOT::Math::SVector<double,4> xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>* pobj;
         const ROOT::Math::SVector<double,4> xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>* pobj;
         const ROOT::Math::SVector<double,4> xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<double,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4*(4+1)/2>* pobj;
         const ROOT::Math::SVector<double,4*(4+1)/2> xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<double,4*(4+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4*(4+1)/2>* pobj;
         const ROOT::Math::SVector<double,4*(4+1)/2> xobj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<double,4*(4+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->IsInUse((const double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_183_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> > G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR;
static int G__G__Smatrix_183_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) (soff+(sizeof(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow */
static int G__G__Smatrix_185_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_185_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_185_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_185_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_185_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow* dest = (ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const */
static int G__G__Smatrix_186_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_186_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_186_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_186_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<double,5> */
static int G__G__Smatrix_187_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<double,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<double,5>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<double,5>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<double,5>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<double,5>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_187_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepSym<double,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_187_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepSym<double,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_187_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepSym<double,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_187_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepSym<double,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_187_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepSym<double,5>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_187_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepSym<double,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_187_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepSym<double,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_187_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,5>& obj = ((ROOT::Math::MatRepSym<double,5>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<double,5>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_187_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,5>& obj = ((ROOT::Math::MatRepSym<double,5>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<double,5>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_187_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,5>& obj = ((ROOT::Math::MatRepSym<double,5>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<double,5>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_187_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<double,5>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_187_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<5>& obj = ((const ROOT::Math::MatRepSym<double,5>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_187_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<double,5>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<double,5>(*(ROOT::Math::MatRepSym<double,5>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<double,5> G__TROOTcLcLMathcLcLMatRepSymlEdoublecO5gR;
static int G__G__Smatrix_187_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<double,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<double,5>*) (soff+(sizeof(ROOT::Math::MatRepSym<double,5>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEdoublecO5gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<double,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<double,5>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEdoublecO5gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > */
static int G__G__Smatrix_189_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >(*(ROOT::Math::SVector<double,5*(5+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >(*(ROOT::Math::SVector<double,5*(5+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >(*(ROOT::Math::SVector<double,5*(5+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >(*(ROOT::Math::SVector<double,5*(5+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >* pobj;
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >* pobj;
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >* pobj;
         const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->Det(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->Det2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5>* pobj;
         const ROOT::Math::SVector<double,5> xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5>* pobj;
         const ROOT::Math::SVector<double,5> xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5>* pobj;
         const ROOT::Math::SVector<double,5> xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<double,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5*(5+1)/2>* pobj;
         const ROOT::Math::SVector<double,5*(5+1)/2> xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<double,5*(5+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,5*(5+1)/2>* pobj;
         const ROOT::Math::SVector<double,5*(5+1)/2> xobj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<double,5*(5+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->IsInUse((const double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_189_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR;
static int G__G__Smatrix_189_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) (soff+(sizeof(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow */
static int G__G__Smatrix_191_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_191_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow* dest = (ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const */
static int G__G__Smatrix_192_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_192_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_192_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_192_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<double,6> */
static int G__G__Smatrix_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<double,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<double,6>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<double,6>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<double,6>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<double,6>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_193_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepSym<double,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepSym<double,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepSym<double,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepSym<double,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepSym<double,6>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_193_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepSym<double,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_193_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepSym<double,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_193_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,6>& obj = ((ROOT::Math::MatRepSym<double,6>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<double,6>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_193_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,6>& obj = ((ROOT::Math::MatRepSym<double,6>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<double,6>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,6>& obj = ((ROOT::Math::MatRepSym<double,6>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<double,6>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<double,6>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<6>& obj = ((const ROOT::Math::MatRepSym<double,6>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<double,6>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<double,6>(*(ROOT::Math::MatRepSym<double,6>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<double,6> G__TROOTcLcLMathcLcLMatRepSymlEdoublecO6gR;
static int G__G__Smatrix_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<double,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<double,6>*) (soff+(sizeof(ROOT::Math::MatRepSym<double,6>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEdoublecO6gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<double,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<double,6>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEdoublecO6gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> > */
static int G__G__Smatrix_195_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >(*(ROOT::Math::SVector<double,6*(6+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >(*(ROOT::Math::SVector<double,6*(6+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >(*(ROOT::Math::SVector<double,6*(6+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >(*(ROOT::Math::SVector<double,6*(6+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >* pobj;
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> > xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >* pobj;
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> > xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >* pobj;
         const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> > xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->Det(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->Det2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6>* pobj;
         const ROOT::Math::SVector<double,6> xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6>* pobj;
         const ROOT::Math::SVector<double,6> xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6>* pobj;
         const ROOT::Math::SVector<double,6> xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<double,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6*(6+1)/2>* pobj;
         const ROOT::Math::SVector<double,6*(6+1)/2> xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<double,6*(6+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,6*(6+1)/2>* pobj;
         const ROOT::Math::SVector<double,6*(6+1)/2> xobj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<double,6*(6+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->IsInUse((const double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_195_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> > G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR;
static int G__G__Smatrix_195_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) (soff+(sizeof(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow */
static int G__G__Smatrix_197_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_197_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_197_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_197_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_197_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow* dest = (ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const */
static int G__G__Smatrix_198_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_198_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_198_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_198_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<double,7> */
static int G__G__Smatrix_199_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<double,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<double,7>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<double,7>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<double,7>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<double,7>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_199_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepSym<double,7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_199_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepSym<double,7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_199_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepSym<double,7>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_199_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepSym<double,7>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_199_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepSym<double,7>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_199_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepSym<double,7>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_199_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepSym<double,7>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_199_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,7>& obj = ((ROOT::Math::MatRepSym<double,7>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<double,7>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_199_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,7>& obj = ((ROOT::Math::MatRepSym<double,7>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<double,7>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_199_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<double,7>& obj = ((ROOT::Math::MatRepSym<double,7>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<double,7>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_199_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<double,7>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_199_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<7>& obj = ((const ROOT::Math::MatRepSym<double,7>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_199_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<double,7>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<double,7>(*(ROOT::Math::MatRepSym<double,7>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<double,7> G__TROOTcLcLMathcLcLMatRepSymlEdoublecO7gR;
static int G__G__Smatrix_199_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<double,7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<double,7>*) (soff+(sizeof(ROOT::Math::MatRepSym<double,7>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEdoublecO7gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<double,7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<double,7>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEdoublecO7gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> > */
static int G__G__Smatrix_201_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >(*(ROOT::Math::SVector<double,7*(7+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >(*(ROOT::Math::SVector<double,7*(7+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >(*(ROOT::Math::SVector<double,7*(7+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >(*(ROOT::Math::SVector<double,7*(7+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >* pobj;
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> > xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >* pobj;
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> > xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >* pobj;
         const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> > xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->Det(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->Det2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7>* pobj;
         const ROOT::Math::SVector<double,7> xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,7>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7>* pobj;
         const ROOT::Math::SVector<double,7> xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,7>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7>* pobj;
         const ROOT::Math::SVector<double,7> xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<double,7>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7*(7+1)/2>* pobj;
         const ROOT::Math::SVector<double,7*(7+1)/2> xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<double,7*(7+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7*(7+1)/2>* pobj;
         const ROOT::Math::SVector<double,7*(7+1)/2> xobj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<double,7*(7+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->IsInUse((const double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_201_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> > G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR;
static int G__G__Smatrix_201_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) (soff+(sizeof(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow */
static int G__G__Smatrix_203_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_203_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_203_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_203_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_203_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow* dest = (ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const */
static int G__G__Smatrix_204_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_204_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_204_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_204_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<float,2,2> */
static int G__G__Smatrix_205_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,2,2>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_205_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,2,2>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_205_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,2,2>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_205_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,2,2>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_205_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::MatRepStd<float,2,2>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_205_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::MatRepStd<float,2,2>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_205_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::MatRepStd<float,2,2>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_205_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,2,2> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,2,2>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,2,2>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,2,2>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,2,2>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_205_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<float,2,2>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<float,2,2>(*(ROOT::Math::MatRepStd<float,2,2>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<float,2,2> G__TROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR;
static int G__G__Smatrix_205_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<float,2,2>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<float,2,2>*) (soff+(sizeof(ROOT::Math::MatRepStd<float,2,2>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<float,2,2>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<float,2,2>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_205_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,2,2>* dest = (ROOT::Math::MatRepStd<float,2,2>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<float,2,2>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<float,2,2>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> > */
static int G__G__Smatrix_207_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >(*(ROOT::Math::SVector<float,2*(2+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >(*(ROOT::Math::SVector<float,2*(2+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >(*(ROOT::Math::SVector<float,2*(2+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >(*(ROOT::Math::SVector<float,2*(2+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >* pobj;
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> > xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >* pobj;
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> > xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >* pobj;
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> > xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->Det(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->Det2(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2>* pobj;
         const ROOT::Math::SVector<float,2> xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2>* pobj;
         const ROOT::Math::SVector<float,2> xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2>* pobj;
         const ROOT::Math::SVector<float,2> xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<float,2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2*(2+1)/2>* pobj;
         const ROOT::Math::SVector<float,2*(2+1)/2> xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<float,2*(2+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2*(2+1)/2>* pobj;
         const ROOT::Math::SVector<float,2*(2+1)/2> xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<float,2*(2+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->IsInUse((const float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_207_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> > G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR;
static int G__G__Smatrix_207_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) (soff+(sizeof(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_207_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >* dest = (ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SVector<float,3> */
static int G__G__Smatrix_208_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<float,3>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<float,3>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<float,3>;
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<float,3>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,3>(*(ROOT::Math::SVector<float,3>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,3>(*(ROOT::Math::SVector<float,3>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,3>((const float*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,3>((const float*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,3>((ROOT::Math::SVector<float,3>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<float,3>::const_iterator) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,3>((ROOT::Math::SVector<float,3>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<float,3>::const_iterator) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,3>(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,3>(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,3>(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,3>(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,3>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,3>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,3>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,3>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,3>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,3>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,3>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,3>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,3>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,3>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,3>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,3>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,3>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,3>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,3>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]), *(float*) G__Floatref(&libp->para[9]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,3>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]), *(float*) G__Floatref(&libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>& obj = ((ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Math::SVector<float,3>::Dim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SVector<float,3>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,3>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,3>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,3>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,3>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator==(*(ROOT::Math::SVector<float,3>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator!=(*(ROOT::Math::SVector<float,3>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator>(*(ROOT::Math::SVector<float,3>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator<(*(ROOT::Math::SVector<float,3>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,3>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,3>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>& obj = ((ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>& obj = ((ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>& obj = ((ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>& obj = ((ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>& obj = ((ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator+=(*(ROOT::Math::SVector<float,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>& obj = ((ROOT::Math::SVector<float,3>*) G__getstructoffset())->operator-=(*(ROOT::Math::SVector<float,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>& obj = ((ROOT::Math::SVector<float,3>*) G__getstructoffset())->Unit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_208_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SVector<float,3>*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SVector<float,3> G__TROOTcLcLMathcLcLSVectorlEfloatcO3gR;
static int G__G__Smatrix_208_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SVector<float,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SVector<float,3>*) (soff+(sizeof(ROOT::Math::SVector<float,3>)*i)))->~G__TROOTcLcLMathcLcLSVectorlEfloatcO3gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SVector<float,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SVector<float,3>*) (soff))->~G__TROOTcLcLMathcLcLSVectorlEfloatcO3gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_208_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,3>* dest = (ROOT::Math::SVector<float,3>*) G__getstructoffset();
   *dest = *(ROOT::Math::SVector<float,3>*) libp->para[0].ref;
   const ROOT::Math::SVector<float,3>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow */
static int G__G__Smatrix_211_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_211_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_211_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_211_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_211_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow* dest = (ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const */
static int G__G__Smatrix_212_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_212_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_212_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_212_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SVector<float,2> */
static int G__G__Smatrix_213_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<float,2>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<float,2>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<float,2>;
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<float,2>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,2>(*(ROOT::Math::SVector<float,2>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,2>(*(ROOT::Math::SVector<float,2>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,2>((const float*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,2>((const float*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,2>((ROOT::Math::SVector<float,2>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<float,2>::const_iterator) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,2>((ROOT::Math::SVector<float,2>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<float,2>::const_iterator) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,2>(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,2>(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,2>(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,2>(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,2>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,2>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,2>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,2>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,2>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,2>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,2>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,2>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,2>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,2>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,2>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,2>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,2>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,2>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,2>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]), *(float*) G__Floatref(&libp->para[9]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,2>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]), *(float*) G__Floatref(&libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2>& obj = ((ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Math::SVector<float,2>::Dim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SVector<float,2>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,2>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,2>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,2>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,2>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,2>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,2>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator==(*(ROOT::Math::SVector<float,2>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator!=(*(ROOT::Math::SVector<float,2>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator>(*(ROOT::Math::SVector<float,2>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator<(*(ROOT::Math::SVector<float,2>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,2>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,2>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2>& obj = ((ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2>& obj = ((ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2>& obj = ((ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2>& obj = ((ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2>& obj = ((ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator+=(*(ROOT::Math::SVector<float,2>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2>& obj = ((ROOT::Math::SVector<float,2>*) G__getstructoffset())->operator-=(*(ROOT::Math::SVector<float,2>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2>& obj = ((ROOT::Math::SVector<float,2>*) G__getstructoffset())->Unit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_213_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SVector<float,2>*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SVector<float,2> G__TROOTcLcLMathcLcLSVectorlEfloatcO2gR;
static int G__G__Smatrix_213_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SVector<float,2>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SVector<float,2>*) (soff+(sizeof(ROOT::Math::SVector<float,2>)*i)))->~G__TROOTcLcLMathcLcLSVectorlEfloatcO2gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SVector<float,2>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SVector<float,2>*) (soff))->~G__TROOTcLcLMathcLcLSVectorlEfloatcO2gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_213_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,2>* dest = (ROOT::Math::SVector<float,2>*) G__getstructoffset();
   *dest = *(ROOT::Math::SVector<float,2>*) libp->para[0].ref;
   const ROOT::Math::SVector<float,2>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<float,3,3> */
static int G__G__Smatrix_215_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,3,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_215_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,3,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_215_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,3,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_215_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,3,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_215_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::MatRepStd<float,3,3>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_215_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::MatRepStd<float,3,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_215_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::MatRepStd<float,3,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_215_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,3,3> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,3,3>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,3,3>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,3,3>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,3,3>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_215_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<float,3,3>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<float,3,3>(*(ROOT::Math::MatRepStd<float,3,3>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<float,3,3> G__TROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR;
static int G__G__Smatrix_215_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<float,3,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<float,3,3>*) (soff+(sizeof(ROOT::Math::MatRepStd<float,3,3>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<float,3,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<float,3,3>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_215_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,3,3>* dest = (ROOT::Math::MatRepStd<float,3,3>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<float,3,3>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<float,3,3>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> > */
static int G__G__Smatrix_217_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >(*(ROOT::Math::SVector<float,3*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >(*(ROOT::Math::SVector<float,3*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >(*(ROOT::Math::SVector<float,3*(3+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >(*(ROOT::Math::SVector<float,3*(3+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >* pobj;
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> > xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >* pobj;
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> > xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >* pobj;
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> > xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->Det(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->Det2(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>* pobj;
         const ROOT::Math::SVector<float,3> xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>* pobj;
         const ROOT::Math::SVector<float,3> xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>* pobj;
         const ROOT::Math::SVector<float,3> xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<float,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3*(3+1)/2>* pobj;
         const ROOT::Math::SVector<float,3*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<float,3*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3*(3+1)/2>* pobj;
         const ROOT::Math::SVector<float,3*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<float,3*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->IsInUse((const float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_217_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> > G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR;
static int G__G__Smatrix_217_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) (soff+(sizeof(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_217_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >* dest = (ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SVector<float,6> */
static int G__G__Smatrix_218_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<float,6>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<float,6>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<float,6>;
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<float,6>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,6>(*(ROOT::Math::SVector<float,6>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,6>(*(ROOT::Math::SVector<float,6>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,6>((const float*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,6>((const float*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,6>((ROOT::Math::SVector<float,6>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<float,6>::const_iterator) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,6>((ROOT::Math::SVector<float,6>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<float,6>::const_iterator) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,6>(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,6>(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,6>(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,6>(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,6>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,6>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,6>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,6>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,6>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,6>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,6>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,6>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,6>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,6>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,6>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,6>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,6>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,6>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,6>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]), *(float*) G__Floatref(&libp->para[9]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,6>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]), *(float*) G__Floatref(&libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6>& obj = ((ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Math::SVector<float,6>::Dim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SVector<float,6>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,6>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,6>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,6>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,6>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator==(*(ROOT::Math::SVector<float,6>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator!=(*(ROOT::Math::SVector<float,6>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator>(*(ROOT::Math::SVector<float,6>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator<(*(ROOT::Math::SVector<float,6>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,6>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,6>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6>& obj = ((ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6>& obj = ((ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6>& obj = ((ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6>& obj = ((ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6>& obj = ((ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator+=(*(ROOT::Math::SVector<float,6>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6>& obj = ((ROOT::Math::SVector<float,6>*) G__getstructoffset())->operator-=(*(ROOT::Math::SVector<float,6>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6>& obj = ((ROOT::Math::SVector<float,6>*) G__getstructoffset())->Unit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_218_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SVector<float,6>*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SVector<float,6> G__TROOTcLcLMathcLcLSVectorlEfloatcO6gR;
static int G__G__Smatrix_218_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SVector<float,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SVector<float,6>*) (soff+(sizeof(ROOT::Math::SVector<float,6>)*i)))->~G__TROOTcLcLMathcLcLSVectorlEfloatcO6gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SVector<float,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SVector<float,6>*) (soff))->~G__TROOTcLcLMathcLcLSVectorlEfloatcO6gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_218_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,6>* dest = (ROOT::Math::SVector<float,6>*) G__getstructoffset();
   *dest = *(ROOT::Math::SVector<float,6>*) libp->para[0].ref;
   const ROOT::Math::SVector<float,6>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow */
static int G__G__Smatrix_221_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_221_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_221_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_221_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_221_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow* dest = (ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const */
static int G__G__Smatrix_222_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_222_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_222_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_222_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<float,4,4> */
static int G__G__Smatrix_223_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,4,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_223_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,4,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_223_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,4,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_223_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,4,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_223_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::MatRepStd<float,4,4>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_223_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::MatRepStd<float,4,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_223_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::MatRepStd<float,4,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_223_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,4,4> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,4,4>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,4,4>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,4,4>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,4,4>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_223_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<float,4,4>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<float,4,4>(*(ROOT::Math::MatRepStd<float,4,4>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<float,4,4> G__TROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR;
static int G__G__Smatrix_223_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<float,4,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<float,4,4>*) (soff+(sizeof(ROOT::Math::MatRepStd<float,4,4>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<float,4,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<float,4,4>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_223_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,4,4>* dest = (ROOT::Math::MatRepStd<float,4,4>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<float,4,4>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<float,4,4>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> > */
static int G__G__Smatrix_225_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >(*(ROOT::Math::SVector<float,4*(4+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >(*(ROOT::Math::SVector<float,4*(4+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >(*(ROOT::Math::SVector<float,4*(4+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >(*(ROOT::Math::SVector<float,4*(4+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >* pobj;
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> > xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >* pobj;
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> > xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >* pobj;
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> > xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->Det(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->Det2(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>* pobj;
         const ROOT::Math::SVector<float,4> xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>* pobj;
         const ROOT::Math::SVector<float,4> xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>* pobj;
         const ROOT::Math::SVector<float,4> xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<float,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4*(4+1)/2>* pobj;
         const ROOT::Math::SVector<float,4*(4+1)/2> xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<float,4*(4+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4*(4+1)/2>* pobj;
         const ROOT::Math::SVector<float,4*(4+1)/2> xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<float,4*(4+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->IsInUse((const float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_225_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> > G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR;
static int G__G__Smatrix_225_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) (soff+(sizeof(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_225_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >* dest = (ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow */
static int G__G__Smatrix_229_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_229_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_229_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_229_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_229_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow* dest = (ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const */
static int G__G__Smatrix_230_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_230_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_230_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_230_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SVector<float,4> */
static int G__G__Smatrix_231_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<float,4>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<float,4>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<float,4>;
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<float,4>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,4>(*(ROOT::Math::SVector<float,4>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,4>(*(ROOT::Math::SVector<float,4>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,4>((const float*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,4>((const float*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,4>((ROOT::Math::SVector<float,4>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<float,4>::const_iterator) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,4>((ROOT::Math::SVector<float,4>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<float,4>::const_iterator) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,4>(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,4>(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,4>(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,4>(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,4>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,4>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,4>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,4>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,4>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,4>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,4>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,4>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,4>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,4>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,4>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,4>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,4>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,4>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,4>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]), *(float*) G__Floatref(&libp->para[9]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,4>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]), *(float*) G__Floatref(&libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>& obj = ((ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Math::SVector<float,4>::Dim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SVector<float,4>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,4>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,4>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,4>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,4>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator==(*(ROOT::Math::SVector<float,4>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator!=(*(ROOT::Math::SVector<float,4>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator>(*(ROOT::Math::SVector<float,4>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator<(*(ROOT::Math::SVector<float,4>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,4>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,4>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>& obj = ((ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>& obj = ((ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>& obj = ((ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>& obj = ((ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>& obj = ((ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator+=(*(ROOT::Math::SVector<float,4>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>& obj = ((ROOT::Math::SVector<float,4>*) G__getstructoffset())->operator-=(*(ROOT::Math::SVector<float,4>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>& obj = ((ROOT::Math::SVector<float,4>*) G__getstructoffset())->Unit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_231_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SVector<float,4>*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SVector<float,4> G__TROOTcLcLMathcLcLSVectorlEfloatcO4gR;
static int G__G__Smatrix_231_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SVector<float,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SVector<float,4>*) (soff+(sizeof(ROOT::Math::SVector<float,4>)*i)))->~G__TROOTcLcLMathcLcLSVectorlEfloatcO4gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SVector<float,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SVector<float,4>*) (soff))->~G__TROOTcLcLMathcLcLSVectorlEfloatcO4gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_231_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,4>* dest = (ROOT::Math::SVector<float,4>*) G__getstructoffset();
   *dest = *(ROOT::Math::SVector<float,4>*) libp->para[0].ref;
   const ROOT::Math::SVector<float,4>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<float,5,5> */
static int G__G__Smatrix_233_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,5,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_233_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,5,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_233_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,5,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_233_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,5,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_233_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::MatRepStd<float,5,5>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_233_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::MatRepStd<float,5,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_233_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::MatRepStd<float,5,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_233_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,5,5> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,5,5>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,5,5>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,5,5>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,5,5>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_233_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<float,5,5>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<float,5,5>(*(ROOT::Math::MatRepStd<float,5,5>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<float,5,5> G__TROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR;
static int G__G__Smatrix_233_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<float,5,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<float,5,5>*) (soff+(sizeof(ROOT::Math::MatRepStd<float,5,5>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<float,5,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<float,5,5>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_233_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,5,5>* dest = (ROOT::Math::MatRepStd<float,5,5>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<float,5,5>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<float,5,5>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> > */
static int G__G__Smatrix_235_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >(*(ROOT::Math::SVector<float,5*(5+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >(*(ROOT::Math::SVector<float,5*(5+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >(*(ROOT::Math::SVector<float,5*(5+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >(*(ROOT::Math::SVector<float,5*(5+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >* pobj;
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> > xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >* pobj;
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> > xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >* pobj;
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> > xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->Det(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->Det2(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5>* pobj;
         const ROOT::Math::SVector<float,5> xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5>* pobj;
         const ROOT::Math::SVector<float,5> xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5>* pobj;
         const ROOT::Math::SVector<float,5> xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<float,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5*(5+1)/2>* pobj;
         const ROOT::Math::SVector<float,5*(5+1)/2> xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<float,5*(5+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5*(5+1)/2>* pobj;
         const ROOT::Math::SVector<float,5*(5+1)/2> xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<float,5*(5+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->IsInUse((const float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_235_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> > G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR;
static int G__G__Smatrix_235_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) (soff+(sizeof(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_235_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >* dest = (ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow */
static int G__G__Smatrix_239_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_239_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_239_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_239_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_239_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow* dest = (ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const */
static int G__G__Smatrix_240_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_240_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_240_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_240_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SVector<float,5> */
static int G__G__Smatrix_241_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<float,5>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<float,5>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<float,5>;
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<float,5>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,5>(*(ROOT::Math::SVector<float,5>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,5>(*(ROOT::Math::SVector<float,5>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,5>((const float*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,5>((const float*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,5>((ROOT::Math::SVector<float,5>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<float,5>::const_iterator) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,5>((ROOT::Math::SVector<float,5>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<float,5>::const_iterator) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,5>(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,5>(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,5>(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,5>(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,5>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,5>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,5>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,5>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,5>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,5>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,5>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,5>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,5>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,5>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,5>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,5>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,5>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,5>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,5>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]), *(float*) G__Floatref(&libp->para[9]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,5>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]), *(float*) G__Floatref(&libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5>& obj = ((ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Math::SVector<float,5>::Dim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SVector<float,5>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,5>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,5>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,5>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,5>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator==(*(ROOT::Math::SVector<float,5>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator!=(*(ROOT::Math::SVector<float,5>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator>(*(ROOT::Math::SVector<float,5>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator<(*(ROOT::Math::SVector<float,5>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,5>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,5>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5>& obj = ((ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5>& obj = ((ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5>& obj = ((ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5>& obj = ((ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5>& obj = ((ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator+=(*(ROOT::Math::SVector<float,5>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5>& obj = ((ROOT::Math::SVector<float,5>*) G__getstructoffset())->operator-=(*(ROOT::Math::SVector<float,5>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5>& obj = ((ROOT::Math::SVector<float,5>*) G__getstructoffset())->Unit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_241_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SVector<float,5>*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SVector<float,5> G__TROOTcLcLMathcLcLSVectorlEfloatcO5gR;
static int G__G__Smatrix_241_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SVector<float,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SVector<float,5>*) (soff+(sizeof(ROOT::Math::SVector<float,5>)*i)))->~G__TROOTcLcLMathcLcLSVectorlEfloatcO5gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SVector<float,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SVector<float,5>*) (soff))->~G__TROOTcLcLMathcLcLSVectorlEfloatcO5gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_241_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,5>* dest = (ROOT::Math::SVector<float,5>*) G__getstructoffset();
   *dest = *(ROOT::Math::SVector<float,5>*) libp->para[0].ref;
   const ROOT::Math::SVector<float,5>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<float,6,6> */
static int G__G__Smatrix_243_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,6,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_243_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,6,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_243_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,6,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_243_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,6,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_243_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::MatRepStd<float,6,6>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_243_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::MatRepStd<float,6,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_243_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::MatRepStd<float,6,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_243_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,6,6> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,6,6>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,6,6>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,6,6>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,6,6>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_243_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<float,6,6>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<float,6,6>(*(ROOT::Math::MatRepStd<float,6,6>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<float,6,6> G__TROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR;
static int G__G__Smatrix_243_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<float,6,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<float,6,6>*) (soff+(sizeof(ROOT::Math::MatRepStd<float,6,6>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<float,6,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<float,6,6>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_243_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,6,6>* dest = (ROOT::Math::MatRepStd<float,6,6>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<float,6,6>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<float,6,6>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> > */
static int G__G__Smatrix_245_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >(*(ROOT::Math::SVector<float,6*(6+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >(*(ROOT::Math::SVector<float,6*(6+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >(*(ROOT::Math::SVector<float,6*(6+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >(*(ROOT::Math::SVector<float,6*(6+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >* pobj;
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> > xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >* pobj;
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> > xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >* pobj;
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> > xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->Det(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->Det2(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6>* pobj;
         const ROOT::Math::SVector<float,6> xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6>* pobj;
         const ROOT::Math::SVector<float,6> xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6>* pobj;
         const ROOT::Math::SVector<float,6> xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<float,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6*(6+1)/2>* pobj;
         const ROOT::Math::SVector<float,6*(6+1)/2> xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<float,6*(6+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6*(6+1)/2>* pobj;
         const ROOT::Math::SVector<float,6*(6+1)/2> xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<float,6*(6+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->IsInUse((const float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_245_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> > G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR;
static int G__G__Smatrix_245_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) (soff+(sizeof(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_245_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >* dest = (ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow */
static int G__G__Smatrix_249_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_249_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_249_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_249_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_249_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow* dest = (ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const */
static int G__G__Smatrix_250_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_250_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_250_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_250_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<float,7,7> */
static int G__G__Smatrix_251_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,7,7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_251_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,7,7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_251_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,7,7>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_251_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,7,7>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_251_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::MatRepStd<float,7,7>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_251_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::MatRepStd<float,7,7>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_251_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::MatRepStd<float,7,7>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_251_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,7,7> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,7,7>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,7,7>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,7,7>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,7,7>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_251_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<float,7,7>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<float,7,7>(*(ROOT::Math::MatRepStd<float,7,7>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<float,7,7> G__TROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR;
static int G__G__Smatrix_251_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<float,7,7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<float,7,7>*) (soff+(sizeof(ROOT::Math::MatRepStd<float,7,7>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<float,7,7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<float,7,7>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_251_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,7,7>* dest = (ROOT::Math::MatRepStd<float,7,7>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<float,7,7>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<float,7,7>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> > */
static int G__G__Smatrix_253_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >(*(ROOT::Math::SVector<float,7*(7+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >(*(ROOT::Math::SVector<float,7*(7+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >(*(ROOT::Math::SVector<float,7*(7+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >(*(ROOT::Math::SVector<float,7*(7+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >* pobj;
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> > xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >* pobj;
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> > xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >* pobj;
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> > xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->Det(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->Det2(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7>* pobj;
         const ROOT::Math::SVector<float,7> xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,7>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7>* pobj;
         const ROOT::Math::SVector<float,7> xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,7>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7>* pobj;
         const ROOT::Math::SVector<float,7> xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<float,7>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7*(7+1)/2>* pobj;
         const ROOT::Math::SVector<float,7*(7+1)/2> xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<float,7*(7+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7*(7+1)/2>* pobj;
         const ROOT::Math::SVector<float,7*(7+1)/2> xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<float,7*(7+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->IsInUse((const float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_253_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> > G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR;
static int G__G__Smatrix_253_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) (soff+(sizeof(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_253_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >* dest = (ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow */
static int G__G__Smatrix_257_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_257_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_257_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_257_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_257_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow* dest = (ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const */
static int G__G__Smatrix_258_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_258_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_258_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_258_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SVector<float,7> */
static int G__G__Smatrix_259_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<float,7>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<float,7>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SVector<float,7>;
     } else {
       p = new((void*) gvp) ROOT::Math::SVector<float,7>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,7>(*(ROOT::Math::SVector<float,7>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,7>(*(ROOT::Math::SVector<float,7>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,7>((const float*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,7>((const float*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,7>((ROOT::Math::SVector<float,7>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<float,7>::const_iterator) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,7>((ROOT::Math::SVector<float,7>::const_iterator) G__int(libp->para[0]), (ROOT::Math::SVector<float,7>::const_iterator) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,7>(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,7>(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,7>(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,7>(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,7>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,7>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,7>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,7>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,7>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,7>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,7>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,7>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,7>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,7>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,7>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,7>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,7>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,7>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SVector<float,7>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]), *(float*) G__Floatref(&libp->para[9]));
   } else {
     p = new((void*) gvp) ROOT::Math::SVector<float,7>(
*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), *(float*) G__Floatref(&libp->para[5])
, *(float*) G__Floatref(&libp->para[6]), *(float*) G__Floatref(&libp->para[7])
, *(float*) G__Floatref(&libp->para[8]), *(float*) G__Floatref(&libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7>& obj = ((ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Math::SVector<float,7>::Dim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SVector<float,7>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,7>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,7>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,7>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SVector<float,7>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,7>*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SVector<float,7>*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator==(*(ROOT::Math::SVector<float,7>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator!=(*(ROOT::Math::SVector<float,7>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator>(*(ROOT::Math::SVector<float,7>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator<(*(ROOT::Math::SVector<float,7>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SVector<float,7>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SVector<float,7>*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7>& obj = ((ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7>& obj = ((ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7>& obj = ((ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7>& obj = ((ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7>& obj = ((ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator+=(*(ROOT::Math::SVector<float,7>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7>& obj = ((ROOT::Math::SVector<float,7>*) G__getstructoffset())->operator-=(*(ROOT::Math::SVector<float,7>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7>& obj = ((ROOT::Math::SVector<float,7>*) G__getstructoffset())->Unit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_259_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SVector<float,7>*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SVector<float,7> G__TROOTcLcLMathcLcLSVectorlEfloatcO7gR;
static int G__G__Smatrix_259_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SVector<float,7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SVector<float,7>*) (soff+(sizeof(ROOT::Math::SVector<float,7>)*i)))->~G__TROOTcLcLMathcLcLSVectorlEfloatcO7gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SVector<float,7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SVector<float,7>*) (soff))->~G__TROOTcLcLMathcLcLSVectorlEfloatcO7gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_259_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SVector<float,7>* dest = (ROOT::Math::SVector<float,7>*) G__getstructoffset();
   *dest = *(ROOT::Math::SVector<float,7>*) libp->para[0].ref;
   const ROOT::Math::SVector<float,7>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<float,2> */
static int G__G__Smatrix_261_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<float,2>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<float,2>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<float,2>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<float,2>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<float,2>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_261_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepSym<float,2>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_261_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepSym<float,2>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_261_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepSym<float,2>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_261_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepSym<float,2>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_261_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::MatRepSym<float,2>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_261_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::MatRepSym<float,2>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_261_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::MatRepSym<float,2>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_261_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,2>& obj = ((ROOT::Math::MatRepSym<float,2>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<float,2>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_261_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,2>& obj = ((ROOT::Math::MatRepSym<float,2>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<float,2>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_261_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,2>& obj = ((ROOT::Math::MatRepSym<float,2>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<float,2>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_261_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<float,2>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_261_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<2>& obj = ((const ROOT::Math::MatRepSym<float,2>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_261_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<float,2>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<float,2>(*(ROOT::Math::MatRepSym<float,2>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<float,2> G__TROOTcLcLMathcLcLMatRepSymlEfloatcO2gR;
static int G__G__Smatrix_261_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<float,2>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<float,2>*) (soff+(sizeof(ROOT::Math::MatRepSym<float,2>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEfloatcO2gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<float,2>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<float,2>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEfloatcO2gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> > */
static int G__G__Smatrix_263_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >(*(ROOT::Math::SVector<float,2*(2+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >(*(ROOT::Math::SVector<float,2*(2+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >(*(ROOT::Math::SVector<float,2*(2+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >(*(ROOT::Math::SVector<float,2*(2+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >* pobj;
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> > xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >* pobj;
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> > xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >* pobj;
         const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> > xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->Det(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->Det2(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2>* pobj;
         const ROOT::Math::SVector<float,2> xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2>* pobj;
         const ROOT::Math::SVector<float,2> xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2>* pobj;
         const ROOT::Math::SVector<float,2> xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<float,2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2*(2+1)/2>* pobj;
         const ROOT::Math::SVector<float,2*(2+1)/2> xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<float,2*(2+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,2*(2+1)/2>* pobj;
         const ROOT::Math::SVector<float,2*(2+1)/2> xobj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<float,2*(2+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->IsInUse((const float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_263_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> > G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR;
static int G__G__Smatrix_263_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) (soff+(sizeof(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow */
static int G__G__Smatrix_265_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_265_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_265_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_265_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_265_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow* dest = (ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const */
static int G__G__Smatrix_266_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_266_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_266_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_266_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<float,3> */
static int G__G__Smatrix_267_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<float,3>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<float,3>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<float,3>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<float,3>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<float,3>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_267_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepSym<float,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_267_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepSym<float,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_267_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepSym<float,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_267_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepSym<float,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_267_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::MatRepSym<float,3>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_267_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::MatRepSym<float,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_267_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::MatRepSym<float,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_267_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,3>& obj = ((ROOT::Math::MatRepSym<float,3>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<float,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_267_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,3>& obj = ((ROOT::Math::MatRepSym<float,3>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<float,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_267_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,3>& obj = ((ROOT::Math::MatRepSym<float,3>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<float,3>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_267_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<float,3>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_267_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<3>& obj = ((const ROOT::Math::MatRepSym<float,3>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_267_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<float,3>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<float,3>(*(ROOT::Math::MatRepSym<float,3>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<float,3> G__TROOTcLcLMathcLcLMatRepSymlEfloatcO3gR;
static int G__G__Smatrix_267_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<float,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<float,3>*) (soff+(sizeof(ROOT::Math::MatRepSym<float,3>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEfloatcO3gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<float,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<float,3>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEfloatcO3gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> > */
static int G__G__Smatrix_269_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >(*(ROOT::Math::SVector<float,3*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >(*(ROOT::Math::SVector<float,3*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >(*(ROOT::Math::SVector<float,3*(3+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >(*(ROOT::Math::SVector<float,3*(3+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >* pobj;
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> > xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >* pobj;
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> > xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >* pobj;
         const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> > xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->Det(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->Det2(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>* pobj;
         const ROOT::Math::SVector<float,3> xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>* pobj;
         const ROOT::Math::SVector<float,3> xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>* pobj;
         const ROOT::Math::SVector<float,3> xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<float,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3*(3+1)/2>* pobj;
         const ROOT::Math::SVector<float,3*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<float,3*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3*(3+1)/2>* pobj;
         const ROOT::Math::SVector<float,3*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<float,3*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->IsInUse((const float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_269_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> > G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR;
static int G__G__Smatrix_269_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) (soff+(sizeof(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow */
static int G__G__Smatrix_271_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_271_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_271_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_271_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_271_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow* dest = (ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const */
static int G__G__Smatrix_272_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_272_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_272_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_272_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<float,4> */
static int G__G__Smatrix_273_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<float,4>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<float,4>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<float,4>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<float,4>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<float,4>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_273_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepSym<float,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_273_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepSym<float,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_273_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepSym<float,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_273_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepSym<float,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_273_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::MatRepSym<float,4>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_273_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::MatRepSym<float,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_273_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::MatRepSym<float,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_273_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,4>& obj = ((ROOT::Math::MatRepSym<float,4>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<float,4>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_273_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,4>& obj = ((ROOT::Math::MatRepSym<float,4>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<float,4>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_273_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,4>& obj = ((ROOT::Math::MatRepSym<float,4>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<float,4>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_273_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<float,4>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_273_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<4>& obj = ((const ROOT::Math::MatRepSym<float,4>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_273_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<float,4>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<float,4>(*(ROOT::Math::MatRepSym<float,4>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<float,4> G__TROOTcLcLMathcLcLMatRepSymlEfloatcO4gR;
static int G__G__Smatrix_273_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<float,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<float,4>*) (soff+(sizeof(ROOT::Math::MatRepSym<float,4>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEfloatcO4gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<float,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<float,4>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEfloatcO4gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> > */
static int G__G__Smatrix_275_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >(*(ROOT::Math::SVector<float,4*(4+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >(*(ROOT::Math::SVector<float,4*(4+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >(*(ROOT::Math::SVector<float,4*(4+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >(*(ROOT::Math::SVector<float,4*(4+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >* pobj;
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> > xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >* pobj;
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> > xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >* pobj;
         const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> > xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->Det(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->Det2(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>* pobj;
         const ROOT::Math::SVector<float,4> xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>* pobj;
         const ROOT::Math::SVector<float,4> xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>* pobj;
         const ROOT::Math::SVector<float,4> xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<float,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4*(4+1)/2>* pobj;
         const ROOT::Math::SVector<float,4*(4+1)/2> xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<float,4*(4+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4*(4+1)/2>* pobj;
         const ROOT::Math::SVector<float,4*(4+1)/2> xobj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<float,4*(4+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->IsInUse((const float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_275_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> > G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR;
static int G__G__Smatrix_275_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) (soff+(sizeof(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow */
static int G__G__Smatrix_277_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_277_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_277_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_277_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_277_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow* dest = (ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const */
static int G__G__Smatrix_278_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_278_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_278_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_278_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<float,5> */
static int G__G__Smatrix_279_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<float,5>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<float,5>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<float,5>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<float,5>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<float,5>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_279_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepSym<float,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_279_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepSym<float,5>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_279_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepSym<float,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_279_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepSym<float,5>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_279_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::MatRepSym<float,5>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_279_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::MatRepSym<float,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_279_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::MatRepSym<float,5>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_279_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,5>& obj = ((ROOT::Math::MatRepSym<float,5>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<float,5>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_279_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,5>& obj = ((ROOT::Math::MatRepSym<float,5>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<float,5>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_279_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,5>& obj = ((ROOT::Math::MatRepSym<float,5>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<float,5>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_279_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<float,5>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_279_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<5>& obj = ((const ROOT::Math::MatRepSym<float,5>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_279_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<float,5>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<float,5>(*(ROOT::Math::MatRepSym<float,5>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<float,5> G__TROOTcLcLMathcLcLMatRepSymlEfloatcO5gR;
static int G__G__Smatrix_279_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<float,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<float,5>*) (soff+(sizeof(ROOT::Math::MatRepSym<float,5>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEfloatcO5gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<float,5>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<float,5>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEfloatcO5gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> > */
static int G__G__Smatrix_281_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >(*(ROOT::Math::SVector<float,5*(5+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >(*(ROOT::Math::SVector<float,5*(5+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >(*(ROOT::Math::SVector<float,5*(5+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >(*(ROOT::Math::SVector<float,5*(5+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >* pobj;
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> > xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >* pobj;
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> > xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >* pobj;
         const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> > xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->Det(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->Det2(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5>* pobj;
         const ROOT::Math::SVector<float,5> xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5>* pobj;
         const ROOT::Math::SVector<float,5> xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5>* pobj;
         const ROOT::Math::SVector<float,5> xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<float,5>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5*(5+1)/2>* pobj;
         const ROOT::Math::SVector<float,5*(5+1)/2> xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<float,5*(5+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,5*(5+1)/2>* pobj;
         const ROOT::Math::SVector<float,5*(5+1)/2> xobj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<float,5*(5+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->IsInUse((const float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_281_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> > G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR;
static int G__G__Smatrix_281_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) (soff+(sizeof(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow */
static int G__G__Smatrix_283_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_283_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_283_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_283_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_283_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow* dest = (ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const */
static int G__G__Smatrix_284_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_284_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_284_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_284_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<float,6> */
static int G__G__Smatrix_285_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<float,6>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<float,6>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<float,6>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<float,6>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<float,6>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_285_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepSym<float,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_285_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepSym<float,6>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_285_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepSym<float,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_285_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepSym<float,6>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_285_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::MatRepSym<float,6>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_285_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::MatRepSym<float,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_285_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::MatRepSym<float,6>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_285_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,6>& obj = ((ROOT::Math::MatRepSym<float,6>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<float,6>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_285_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,6>& obj = ((ROOT::Math::MatRepSym<float,6>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<float,6>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_285_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,6>& obj = ((ROOT::Math::MatRepSym<float,6>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<float,6>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_285_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<float,6>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_285_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<6>& obj = ((const ROOT::Math::MatRepSym<float,6>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_285_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<float,6>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<float,6>(*(ROOT::Math::MatRepSym<float,6>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<float,6> G__TROOTcLcLMathcLcLMatRepSymlEfloatcO6gR;
static int G__G__Smatrix_285_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<float,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<float,6>*) (soff+(sizeof(ROOT::Math::MatRepSym<float,6>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEfloatcO6gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<float,6>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<float,6>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEfloatcO6gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> > */
static int G__G__Smatrix_287_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >(*(ROOT::Math::SVector<float,6*(6+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >(*(ROOT::Math::SVector<float,6*(6+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >(*(ROOT::Math::SVector<float,6*(6+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >(*(ROOT::Math::SVector<float,6*(6+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >* pobj;
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> > xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >* pobj;
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> > xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >* pobj;
         const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> > xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->Det(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->Det2(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6>* pobj;
         const ROOT::Math::SVector<float,6> xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6>* pobj;
         const ROOT::Math::SVector<float,6> xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6>* pobj;
         const ROOT::Math::SVector<float,6> xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<float,6>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6*(6+1)/2>* pobj;
         const ROOT::Math::SVector<float,6*(6+1)/2> xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<float,6*(6+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,6*(6+1)/2>* pobj;
         const ROOT::Math::SVector<float,6*(6+1)/2> xobj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<float,6*(6+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->IsInUse((const float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_287_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> > G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR;
static int G__G__Smatrix_287_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) (soff+(sizeof(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow */
static int G__G__Smatrix_289_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_289_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_289_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_289_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_289_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow* dest = (ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const */
static int G__G__Smatrix_290_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_290_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_290_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_290_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepSym<float,7> */
static int G__G__Smatrix_291_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepSym<float,7>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<float,7>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<float,7>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepSym<float,7>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepSym<float,7>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_291_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepSym<float,7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_291_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepSym<float,7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_291_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepSym<float,7>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_291_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepSym<float,7>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_291_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::MatRepSym<float,7>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_291_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::MatRepSym<float,7>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_291_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::MatRepSym<float,7>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_291_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,7>& obj = ((ROOT::Math::MatRepSym<float,7>*) G__getstructoffset())->operator=(*(ROOT::Math::MatRepSym<float,7>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_291_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,7>& obj = ((ROOT::Math::MatRepSym<float,7>*) G__getstructoffset())->operator+=(*(ROOT::Math::MatRepSym<float,7>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_291_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MatRepSym<float,7>& obj = ((ROOT::Math::MatRepSym<float,7>*) G__getstructoffset())->operator-=(*(ROOT::Math::MatRepSym<float,7>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_291_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Math::MatRepSym<float,7>*) G__getstructoffset())->CreateOffsets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_291_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::RowOffsets<7>& obj = ((const ROOT::Math::MatRepSym<float,7>*) G__getstructoffset())->Offsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_291_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepSym<float,7>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepSym<float,7>(*(ROOT::Math::MatRepSym<float,7>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepSym<float,7> G__TROOTcLcLMathcLcLMatRepSymlEfloatcO7gR;
static int G__G__Smatrix_291_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepSym<float,7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepSym<float,7>*) (soff+(sizeof(ROOT::Math::MatRepSym<float,7>)*i)))->~G__TROOTcLcLMathcLcLMatRepSymlEfloatcO7gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepSym<float,7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepSym<float,7>*) (soff))->~G__TROOTcLcLMathcLcLMatRepSymlEfloatcO7gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> > */
static int G__G__Smatrix_293_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >(*(ROOT::Math::SVector<float,7*(7+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >(*(ROOT::Math::SVector<float,7*(7+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >(*(ROOT::Math::SVector<float,7*(7+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >(*(ROOT::Math::SVector<float,7*(7+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >* pobj;
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> > xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >* pobj;
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> > xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >* pobj;
         const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> > xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->Det(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->Det2(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7>* pobj;
         const ROOT::Math::SVector<float,7> xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,7>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7>* pobj;
         const ROOT::Math::SVector<float,7> xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,7>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7>* pobj;
         const ROOT::Math::SVector<float,7> xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<float,7>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7*(7+1)/2>* pobj;
         const ROOT::Math::SVector<float,7*(7+1)/2> xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<float,7*(7+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7*(7+1)/2>* pobj;
         const ROOT::Math::SVector<float,7*(7+1)/2> xobj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<float,7*(7+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->IsInUse((const float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_293_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> > G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR;
static int G__G__Smatrix_293_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) (soff+(sizeof(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow */
static int G__G__Smatrix_295_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_295_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_295_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_295_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_295_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow* dest = (ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const */
static int G__G__Smatrix_296_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_296_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_296_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_296_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<double,4,3> */
static int G__G__Smatrix_297_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,4,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_297_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,4,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_297_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,4,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_297_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,4,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_297_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepStd<double,4,3>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_297_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepStd<double,4,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_297_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepStd<double,4,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_297_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,4,3> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,4,3>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,4,3>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,4,3>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,4,3>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_297_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<double,4,3>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<double,4,3>(*(ROOT::Math::MatRepStd<double,4,3>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<double,4,3> G__TROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR;
static int G__G__Smatrix_297_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<double,4,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<double,4,3>*) (soff+(sizeof(ROOT::Math::MatRepStd<double,4,3>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<double,4,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<double,4,3>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_297_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,4,3>* dest = (ROOT::Math::MatRepStd<double,4,3>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<double,4,3>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<double,4,3>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<double,3,4> */
static int G__G__Smatrix_299_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,3,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_299_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,3,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_299_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,3,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_299_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,3,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_299_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepStd<double,3,4>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_299_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepStd<double,3,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_299_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepStd<double,3,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_299_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,3,4> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,3,4>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,3,4>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,3,4>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,3,4>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_299_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<double,3,4>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<double,3,4>(*(ROOT::Math::MatRepStd<double,3,4>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<double,3,4> G__TROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR;
static int G__G__Smatrix_299_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<double,3,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<double,3,4>*) (soff+(sizeof(ROOT::Math::MatRepStd<double,3,4>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<double,3,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<double,3,4>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_299_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,3,4>* dest = (ROOT::Math::MatRepStd<double,3,4>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<double,3,4>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<double,3,4>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<double,9,7> */
static int G__G__Smatrix_301_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,9,7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_301_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,9,7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_301_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::MatRepStd<double,9,7>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_301_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::MatRepStd<double,9,7>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_301_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::MatRepStd<double,9,7>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_301_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::MatRepStd<double,9,7>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_301_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::MatRepStd<double,9,7>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_301_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,9,7> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,9,7>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,9,7>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<double,9,7>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<double,9,7>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_301_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<double,9,7>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<double,9,7>(*(ROOT::Math::MatRepStd<double,9,7>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<double,9,7> G__TROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR;
static int G__G__Smatrix_301_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<double,9,7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<double,9,7>*) (soff+(sizeof(ROOT::Math::MatRepStd<double,9,7>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<double,9,7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<double,9,7>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_301_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<double,9,7>* dest = (ROOT::Math::MatRepStd<double,9,7>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<double,9,7>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<double,9,7>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> > */
static int G__G__Smatrix_303_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >(*(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >(*(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >(*(ROOT::Math::SVector<double,4*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >(*(ROOT::Math::SVector<double,4*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >(*(ROOT::Math::SVector<double,4*(3+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >(*(ROOT::Math::SVector<double,4*(3+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >& obj = ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >& obj = ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >& obj = ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >& obj = ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >& obj = ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >& obj = ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >* pobj;
         const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> > xobj = ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >* pobj;
         const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> > xobj = ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >* pobj;
         const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> > xobj = ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->Det(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->Det2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>* pobj;
         const ROOT::Math::SVector<double,3> xobj = ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>* pobj;
         const ROOT::Math::SVector<double,4> xobj = ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>* pobj;
         const ROOT::Math::SVector<double,4> xobj = ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<double,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4*(3+1)/2>* pobj;
         const ROOT::Math::SVector<double,4*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<double,4*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4*(3+1)/2>* pobj;
         const ROOT::Math::SVector<double,4*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<double,4*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->IsInUse((const double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_303_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> > G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR;
static int G__G__Smatrix_303_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) (soff+(sizeof(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_303_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >* dest = (ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow */
static int G__G__Smatrix_307_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow(*(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow(*(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_307_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_307_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow(*(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_307_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_307_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow* dest = (ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const */
static int G__G__Smatrix_308_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_308_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_308_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_308_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> > */
static int G__G__Smatrix_309_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >(*(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >(*(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >(*(ROOT::Math::SVector<double,3*(4+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >(*(ROOT::Math::SVector<double,3*(4+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >(*(ROOT::Math::SVector<double,3*(4+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >(*(ROOT::Math::SVector<double,3*(4+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >& obj = ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >& obj = ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >& obj = ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >& obj = ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >& obj = ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >& obj = ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >* pobj;
         const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> > xobj = ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >* pobj;
         const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> > xobj = ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >* pobj;
         const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> > xobj = ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->Det(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->Det2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,4>* pobj;
         const ROOT::Math::SVector<double,4> xobj = ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>* pobj;
         const ROOT::Math::SVector<double,3> xobj = ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3>* pobj;
         const ROOT::Math::SVector<double,3> xobj = ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<double,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3*(4+1)/2>* pobj;
         const ROOT::Math::SVector<double,3*(4+1)/2> xobj = ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<double,3*(4+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,3*(4+1)/2>* pobj;
         const ROOT::Math::SVector<double,3*(4+1)/2> xobj = ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<double,3*(4+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->IsInUse((const double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_309_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> > G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR;
static int G__G__Smatrix_309_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) (soff+(sizeof(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_309_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >* dest = (ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow */
static int G__G__Smatrix_311_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow(*(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow(*(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_311_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_311_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow(*(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_311_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_311_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow* dest = (ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const */
static int G__G__Smatrix_312_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_312_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_312_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_312_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> > */
static int G__G__Smatrix_313_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >(*(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >(*(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >(*(ROOT::Math::SVector<double,9*(7+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >(*(ROOT::Math::SVector<double,9*(7+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >(*(ROOT::Math::SVector<double,9*(7+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >(*(ROOT::Math::SVector<double,9*(7+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >(*(double*) G__Doubleref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >(*(double*) G__Doubleref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >& obj = ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >& obj = ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->operator=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->operator==(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->operator!=(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->operator>(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->operator<(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >& obj = ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->operator+=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >& obj = ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->operator-=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >& obj = ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->operator*=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >& obj = ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->operator/=(*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >* pobj;
         const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> > xobj = ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >* pobj;
         const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> > xobj = ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >* pobj;
         const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> > xobj = ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->Det(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->Det2(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,7>* pobj;
         const ROOT::Math::SVector<double,7> xobj = ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,7>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,9>* pobj;
         const ROOT::Math::SVector<double,9> xobj = ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<double,9>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,9>* pobj;
         const ROOT::Math::SVector<double,9> xobj = ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<double,9>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,9*(7+1)/2>* pobj;
         const ROOT::Math::SVector<double,9*(7+1)/2> xobj = ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<double,9*(7+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<double,9*(7+1)/2>* pobj;
         const ROOT::Math::SVector<double,9*(7+1)/2> xobj = ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<double,9*(7+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->IsInUse((const double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_313_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> > G__TROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR;
static int G__G__Smatrix_313_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) (soff+(sizeof(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_313_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >* dest = (ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow */
static int G__G__Smatrix_317_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow(*(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow(*(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_317_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_317_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow(*(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_317_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_317_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow* dest = (ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const */
static int G__G__Smatrix_318_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_318_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_318_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_318_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<float,4,3> */
static int G__G__Smatrix_321_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,4,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_321_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,4,3>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_321_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,4,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_321_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,4,3>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_321_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::MatRepStd<float,4,3>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_321_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::MatRepStd<float,4,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_321_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::MatRepStd<float,4,3>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_321_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,4,3> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,4,3>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,4,3>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,4,3>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,4,3>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_321_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<float,4,3>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<float,4,3>(*(ROOT::Math::MatRepStd<float,4,3>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<float,4,3> G__TROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR;
static int G__G__Smatrix_321_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<float,4,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<float,4,3>*) (soff+(sizeof(ROOT::Math::MatRepStd<float,4,3>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<float,4,3>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<float,4,3>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_321_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,4,3>* dest = (ROOT::Math::MatRepStd<float,4,3>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<float,4,3>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<float,4,3>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<float,3,4> */
static int G__G__Smatrix_323_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,3,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_323_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,3,4>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_323_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,3,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_323_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,3,4>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_323_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::MatRepStd<float,3,4>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_323_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::MatRepStd<float,3,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_323_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::MatRepStd<float,3,4>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_323_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,3,4> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,3,4>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,3,4>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,3,4>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,3,4>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_323_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<float,3,4>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<float,3,4>(*(ROOT::Math::MatRepStd<float,3,4>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<float,3,4> G__TROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR;
static int G__G__Smatrix_323_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<float,3,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<float,3,4>*) (soff+(sizeof(ROOT::Math::MatRepStd<float,3,4>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<float,3,4>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<float,3,4>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_323_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,3,4>* dest = (ROOT::Math::MatRepStd<float,3,4>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<float,3,4>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<float,3,4>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::MatRepStd<float,9,7> */
static int G__G__Smatrix_325_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,9,7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_325_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,9,7>*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_325_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::MatRepStd<float,9,7>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_325_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::MatRepStd<float,9,7>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_325_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::MatRepStd<float,9,7>*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_325_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::MatRepStd<float,9,7>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_325_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::MatRepStd<float,9,7>*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Smatrix_325_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,9,7> *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,9,7>[n];
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,9,7>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::MatRepStd<float,9,7>;
     } else {
       p = new((void*) gvp) ROOT::Math::MatRepStd<float,9,7>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_325_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::MatRepStd<float,9,7>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::MatRepStd<float,9,7>(*(ROOT::Math::MatRepStd<float,9,7>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::MatRepStd<float,9,7> G__TROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR;
static int G__G__Smatrix_325_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::MatRepStd<float,9,7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::MatRepStd<float,9,7>*) (soff+(sizeof(ROOT::Math::MatRepStd<float,9,7>)*i)))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::MatRepStd<float,9,7>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::MatRepStd<float,9,7>*) (soff))->~G__TROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_325_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::MatRepStd<float,9,7>* dest = (ROOT::Math::MatRepStd<float,9,7>*) G__getstructoffset();
   *dest = *(ROOT::Math::MatRepStd<float,9,7>*) libp->para[0].ref;
   const ROOT::Math::MatRepStd<float,9,7>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> > */
static int G__G__Smatrix_327_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >(*(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >(*(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >(*(ROOT::Math::SVector<float,4*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >(*(ROOT::Math::SVector<float,4*(3+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >(*(ROOT::Math::SVector<float,4*(3+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >(*(ROOT::Math::SVector<float,4*(3+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >& obj = ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >& obj = ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >& obj = ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >& obj = ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >& obj = ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >& obj = ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >* pobj;
         const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> > xobj = ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >* pobj;
         const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> > xobj = ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >* pobj;
         const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> > xobj = ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->Det(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->Det2(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>* pobj;
         const ROOT::Math::SVector<float,3> xobj = ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>* pobj;
         const ROOT::Math::SVector<float,4> xobj = ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>* pobj;
         const ROOT::Math::SVector<float,4> xobj = ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<float,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4*(3+1)/2>* pobj;
         const ROOT::Math::SVector<float,4*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<float,4*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4*(3+1)/2>* pobj;
         const ROOT::Math::SVector<float,4*(3+1)/2> xobj = ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<float,4*(3+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->IsInUse((const float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_327_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> > G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR;
static int G__G__Smatrix_327_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) (soff+(sizeof(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_327_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >* dest = (ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow */
static int G__G__Smatrix_331_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow(*(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow(*(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_331_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_331_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow(*(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_331_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_331_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow* dest = (ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const */
static int G__G__Smatrix_332_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_332_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_332_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_332_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> > */
static int G__G__Smatrix_333_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >(*(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >(*(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >(*(ROOT::Math::SVector<float,3*(4+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >(*(ROOT::Math::SVector<float,3*(4+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >(*(ROOT::Math::SVector<float,3*(4+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >(*(ROOT::Math::SVector<float,3*(4+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >& obj = ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >& obj = ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >& obj = ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >& obj = ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >& obj = ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >& obj = ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >* pobj;
         const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> > xobj = ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >* pobj;
         const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> > xobj = ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >* pobj;
         const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> > xobj = ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->Det(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->Det2(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,4>* pobj;
         const ROOT::Math::SVector<float,4> xobj = ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,4>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>* pobj;
         const ROOT::Math::SVector<float,3> xobj = ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3>* pobj;
         const ROOT::Math::SVector<float,3> xobj = ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<float,3>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3*(4+1)/2>* pobj;
         const ROOT::Math::SVector<float,3*(4+1)/2> xobj = ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<float,3*(4+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,3*(4+1)/2>* pobj;
         const ROOT::Math::SVector<float,3*(4+1)/2> xobj = ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<float,3*(4+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->IsInUse((const float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_333_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> > G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR;
static int G__G__Smatrix_333_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) (soff+(sizeof(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_333_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >* dest = (ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow */
static int G__G__Smatrix_335_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow(*(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow(*(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_335_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_335_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow(*(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_335_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_335_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow* dest = (ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const */
static int G__G__Smatrix_336_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_336_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_336_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_336_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> > */
static int G__G__Smatrix_337_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >[n];
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >;
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >(*(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >(*(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >(*(ROOT::Math::SVector<float,9*(7+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >(*(ROOT::Math::SVector<float,9*(7+1)/2>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >(*(ROOT::Math::SVector<float,9*(7+1)/2>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >(*(ROOT::Math::SVector<float,9*(7+1)/2>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >(*(float*) G__Floatref(&libp->para[0]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >(*(float*) G__Floatref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >& obj = ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->operator=(*((ROOT::Math::SMatrixIdentity*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >& obj = ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->operator=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->apply((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->Array());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->operator==(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->operator!=(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->operator!=(*(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->operator>(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->operator<(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->At((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const* pobj;
         const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const xobj = ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow* pobj;
         ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow xobj = ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >& obj = ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->operator+=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >& obj = ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->operator-=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >& obj = ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->operator*=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >& obj = ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->operator/=(*(float*) G__Floatref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->Invert());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >* pobj;
         const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> > xobj = ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->Inverse(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->InvertFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >* pobj;
         const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> > xobj = ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->InverseFast(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->InvertChol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >* pobj;
         const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> > xobj = ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->InverseChol(*(int*) G__Intref(&libp->para[0]));
         pobj = new ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->Det(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->Det2(*(float*) G__Floatref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,7>* pobj;
         const ROOT::Math::SVector<float,7> xobj = ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->Row((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,7>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,9>* pobj;
         const ROOT::Math::SVector<float,9> xobj = ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->Col((unsigned int) G__int(libp->para[0]));
         pobj = new ROOT::Math::SVector<float,9>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,9>* pobj;
         const ROOT::Math::SVector<float,9> xobj = ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->Diagonal();
         pobj = new ROOT::Math::SVector<float,9>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->Trace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,9*(7+1)/2>* pobj;
         const ROOT::Math::SVector<float,9*(7+1)/2> xobj = ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->UpperBlock();
         pobj = new ROOT::Math::SVector<float,9*(7+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::SVector<float,9*(7+1)/2>* pobj;
         const ROOT::Math::SVector<float,9*(7+1)/2> xobj = ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->LowerBlock();
         pobj = new ROOT::Math::SVector<float,9*(7+1)/2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->IsInUse((const float*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_337_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> > G__TROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR;
static int G__G__Smatrix_337_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) (soff+(sizeof(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_337_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >* dest = (ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow */
static int G__G__Smatrix_341_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow(*(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow(*(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_341_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_341_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow(*(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow G__TROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow;
static int G__G__Smatrix_341_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow*) (soff+(sizeof(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Smatrix_341_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow* dest = (ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow*) G__getstructoffset();
   *dest = *(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow*) libp->para[0].ref;
   const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const */
static int G__G__Smatrix_342_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Smatrix_342_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Smatrix_342_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const(*(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const G__TROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const;
static int G__G__Smatrix_342_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const*) (soff+(sizeof(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const)*i)))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const*) (soff))->~G__TROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ROOT::Math */

/* ROOT::Math::RowOffsets<2> */

/* ROOT::Math::RowOffsets<3> */

/* ROOT::Math::RowOffsets<4> */

/* ROOT::Math::RowOffsets<5> */

/* ROOT::Math::RowOffsets<6> */

/* ROOT::Math::RowOffsets<7> */

/* ROOT::Math::SMatrixIdentity */

/* ROOT::Math::MatRepStd<double,2,2> */

/* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> > */

/* ROOT::Math::SVector<double,3> */

/* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow */

/* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const */

/* ROOT::Math::SVector<double,2> */

/* ROOT::Math::MatRepStd<double,3,3> */

/* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> > */

/* ROOT::Math::SVector<double,6> */

/* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow */

/* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const */

/* ROOT::Math::MatRepStd<double,4,4> */

/* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> > */

/* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow */

/* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const */

/* ROOT::Math::SVector<double,4> */

/* ROOT::Math::MatRepStd<double,5,5> */

/* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> > */

/* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow */

/* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const */

/* ROOT::Math::SVector<double,5> */

/* ROOT::Math::MatRepStd<double,6,6> */

/* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> > */

/* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow */

/* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const */

/* ROOT::Math::MatRepStd<double,7,7> */

/* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> > */

/* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow */

/* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const */

/* ROOT::Math::SVector<double,7> */

/* ROOT::Math::MatRepSym<double,2> */

/* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> > */

/* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow */

/* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const */

/* ROOT::Math::MatRepSym<double,3> */

/* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > */

/* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow */

/* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const */

/* ROOT::Math::MatRepSym<double,4> */

/* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> > */

/* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow */

/* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const */

/* ROOT::Math::MatRepSym<double,5> */

/* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > */

/* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow */

/* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const */

/* ROOT::Math::MatRepSym<double,6> */

/* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> > */

/* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow */

/* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const */

/* ROOT::Math::MatRepSym<double,7> */

/* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> > */

/* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow */

/* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const */

/* ROOT::Math::MatRepStd<float,2,2> */

/* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> > */

/* ROOT::Math::SVector<float,3> */

/* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow */

/* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const */

/* ROOT::Math::SVector<float,2> */

/* ROOT::Math::MatRepStd<float,3,3> */

/* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> > */

/* ROOT::Math::SVector<float,6> */

/* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow */

/* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const */

/* ROOT::Math::MatRepStd<float,4,4> */

/* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> > */

/* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow */

/* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const */

/* ROOT::Math::SVector<float,4> */

/* ROOT::Math::MatRepStd<float,5,5> */

/* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> > */

/* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow */

/* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const */

/* ROOT::Math::SVector<float,5> */

/* ROOT::Math::MatRepStd<float,6,6> */

/* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> > */

/* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow */

/* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const */

/* ROOT::Math::MatRepStd<float,7,7> */

/* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> > */

/* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow */

/* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const */

/* ROOT::Math::SVector<float,7> */

/* ROOT::Math::MatRepSym<float,2> */

/* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> > */

/* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow */

/* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const */

/* ROOT::Math::MatRepSym<float,3> */

/* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> > */

/* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow */

/* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const */

/* ROOT::Math::MatRepSym<float,4> */

/* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> > */

/* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow */

/* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const */

/* ROOT::Math::MatRepSym<float,5> */

/* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> > */

/* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow */

/* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const */

/* ROOT::Math::MatRepSym<float,6> */

/* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> > */

/* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow */

/* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const */

/* ROOT::Math::MatRepSym<float,7> */

/* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> > */

/* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow */

/* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const */

/* ROOT::Math::MatRepStd<double,4,3> */

/* ROOT::Math::MatRepStd<double,3,4> */

/* ROOT::Math::MatRepStd<double,9,7> */

/* ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> > */

/* ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow */

/* ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const */

/* ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> > */

/* ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow */

/* ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const */

/* ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> > */

/* ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow */

/* ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const */

/* ROOT::Math::MatRepStd<float,4,3> */

/* ROOT::Math::MatRepStd<float,3,4> */

/* ROOT::Math::MatRepStd<float,9,7> */

/* ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> > */

/* ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow */

/* ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const */

/* ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> > */

/* ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow */

/* ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const */

/* ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> > */

/* ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow */

/* ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Smatrix {
 public:
  G__Sizep2memfuncG__Smatrix(): p(&G__Sizep2memfuncG__Smatrix::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Smatrix::*p)();
};

size_t G__get_sizep2memfuncG__Smatrix()
{
  G__Sizep2memfuncG__Smatrix a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Smatrix() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Smatrix() {

   /* Setting up typedef entry */
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__SmatrixLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__SmatrixLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__SmatrixLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__SmatrixLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,2,2,MatRepStd<double,2,2> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<double,2*(2+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,2,2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix2D",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,3,3,MatRepStd<double,3,3> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<double,3*(3+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,3>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,3,3>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix3D",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,4,4,MatRepStd<double,4,4> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<double,4*(4+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO10gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,4>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,4,4>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix4D",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,5,5,MatRepStd<double,5,5> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<double,5*(5+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO15gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,5>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,5,5>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix5D",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,6,6,MatRepStd<double,6,6> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<double,6*(6+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO21gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,6>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,6,6>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix6D",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,7,7,MatRepStd<double,7,7> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<double,7*(7+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO28gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,7>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,7,7>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix7D",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,2,2,MatRepSym<double,2> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrixSym2D",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,3,3,MatRepSym<double,3> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrixSym3D",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,4,4,MatRepSym<double,4> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrixSym4D",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,5,5,MatRepSym<double,5> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrixSym5D",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,6,6,MatRepSym<double,6> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrixSym6D",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<double,7,7,MatRepSym<double,7> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrixSym7D",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,2,2,MatRepStd<float,2,2> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<float,2*(2+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,2,2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix2F",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,3,3,MatRepStd<float,3,3> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<float,3*(3+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,3>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,3,3>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix3F",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,4,4,MatRepStd<float,4,4> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<float,4*(4+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO10gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,4>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,4,4>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix4F",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,5,5,MatRepStd<float,5,5> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<float,5*(5+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO15gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,5>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,5,5>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix5F",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,6,6,MatRepStd<float,6,6> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<float,6*(6+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO21gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,6>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,6,6>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix6F",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,7,7,MatRepStd<float,7,7> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<float,7*(7+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO28gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,7>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,7,7>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix7F",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,2,2,MatRepSym<float,2> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrixSym2F",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,3,3,MatRepSym<float,3> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrixSym3F",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,4,4,MatRepSym<float,4> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrixSym4F",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,5,5,MatRepSym<float,5> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrixSym5F",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,6,6,MatRepSym<float,6> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrixSym6F",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrix<float,7,7,MatRepSym<float,7> >",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMatrixSym7F",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<double,4,3>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<double,4*(3+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO8gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<double,3,4>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<double,3*(4+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<double,9,7>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",68,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",68,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<double,9*(7+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO36gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<double,9>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<double,4,3>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<double,3,4>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<double,9,7>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<double,9>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<double,4,3>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<double,3,4>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<double,9,7>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<double,9>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<float,4,3>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<float,4*(3+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO8gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<float,3,4>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<float,3*(4+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<float,9,7>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("rep_type",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",70,-1,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",70,-1,256,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SVector<float,9*(7+1)/2>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO36gR),0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<float,9>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<float,4,3>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<float,3,4>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<float,9,7>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<float,9>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<float,4,3>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<float,3,4>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<float,9,7>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ROOT::Math::SMatrix<float,9>",117,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ROOT::Math */
static void G__setup_memvarROOTcLcLMath(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   {
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,"fOff1x1[1]=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,"fOff2x2[4]=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,"fOff3x3[9]=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,"fOff4x4[16]=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,"fOff5x5[25]=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,"fOff6x6[36]=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,"fOff7x7[49]=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,"fOff8x8[64]=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,"fOff9x9[81]=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,"fOff10x10[100]=0",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::RowOffsets<2> */
static void G__setup_memvarROOTcLcLMathcLcLRowOffsetslE2gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE2gR));
   { ROOT::Math::RowOffsets<2> *p; p=(ROOT::Math::RowOffsets<2>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::RowOffsets<3> */
static void G__setup_memvarROOTcLcLMathcLcLRowOffsetslE3gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE3gR));
   { ROOT::Math::RowOffsets<3> *p; p=(ROOT::Math::RowOffsets<3>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::RowOffsets<4> */
static void G__setup_memvarROOTcLcLMathcLcLRowOffsetslE4gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE4gR));
   { ROOT::Math::RowOffsets<4> *p; p=(ROOT::Math::RowOffsets<4>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::RowOffsets<5> */
static void G__setup_memvarROOTcLcLMathcLcLRowOffsetslE5gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE5gR));
   { ROOT::Math::RowOffsets<5> *p; p=(ROOT::Math::RowOffsets<5>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::RowOffsets<6> */
static void G__setup_memvarROOTcLcLMathcLcLRowOffsetslE6gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE6gR));
   { ROOT::Math::RowOffsets<6> *p; p=(ROOT::Math::RowOffsets<6>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::RowOffsets<7> */
static void G__setup_memvarROOTcLcLMathcLcLRowOffsetslE7gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE7gR));
   { ROOT::Math::RowOffsets<7> *p; p=(ROOT::Math::RowOffsets<7>*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrixIdentity */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixIdentity(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixIdentity));
   { ROOT::Math::SMatrixIdentity *p; p=(ROOT::Math::SMatrixIdentity*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<double,2,2> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR));
   { ROOT::Math::MatRepStd<double,2,2> *p; p=(ROOT::Math::MatRepStd<double,2,2>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRcLcLdA),-1,-2,1,"kRows=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRcLcLdA),-1,-2,1,"kCols=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRcLcLdA),-1,-2,1,"kSize=4",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[4]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR));
   { ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> > *p; p=(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLdA),-1,-2,1,"kRows=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLdA),-1,-2,1,"kCols=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLdA),-1,-2,1,"kSize=4",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SVector<double,3> */
static void G__setup_memvarROOTcLcLMathcLcLSVectorlEdoublecO3gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   { ROOT::Math::SVector<double,3> *p; p=(ROOT::Math::SVector<double,3>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gRcLcLdA),-1,-2,1,"kSize=3",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[3]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SVector<double,2> */
static void G__setup_memvarROOTcLcLMathcLcLSVectorlEdoublecO2gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   { ROOT::Math::SVector<double,2> *p; p=(ROOT::Math::SVector<double,2>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gRcLcLdA),-1,-2,1,"kSize=2",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[2]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<double,3,3> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR));
   { ROOT::Math::MatRepStd<double,3,3> *p; p=(ROOT::Math::MatRepStd<double,3,3>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRcLcLdA),-1,-2,1,"kSize=9",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[9]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR));
   { ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> > *p; p=(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLdA),-1,-2,1,"kSize=9",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SVector<double,6> */
static void G__setup_memvarROOTcLcLMathcLcLSVectorlEdoublecO6gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   { ROOT::Math::SVector<double,6> *p; p=(ROOT::Math::SVector<double,6>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gRcLcLdA),-1,-2,1,"kSize=6",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[6]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<double,4,4> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR));
   { ROOT::Math::MatRepStd<double,4,4> *p; p=(ROOT::Math::MatRepStd<double,4,4>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRcLcLdA),-1,-2,1,"kRows=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRcLcLdA),-1,-2,1,"kCols=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRcLcLdA),-1,-2,1,"kSize=16",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[16]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR));
   { ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> > *p; p=(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLdA),-1,-2,1,"kRows=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLdA),-1,-2,1,"kCols=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLdA),-1,-2,1,"kSize=16",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SVector<double,4> */
static void G__setup_memvarROOTcLcLMathcLcLSVectorlEdoublecO4gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   { ROOT::Math::SVector<double,4> *p; p=(ROOT::Math::SVector<double,4>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gRcLcLdA),-1,-2,1,"kSize=4",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[4]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<double,5,5> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR));
   { ROOT::Math::MatRepStd<double,5,5> *p; p=(ROOT::Math::MatRepStd<double,5,5>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRcLcLdA),-1,-2,1,"kRows=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRcLcLdA),-1,-2,1,"kCols=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRcLcLdA),-1,-2,1,"kSize=25",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[25]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR));
   { ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> > *p; p=(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLdA),-1,-2,1,"kRows=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLdA),-1,-2,1,"kCols=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLdA),-1,-2,1,"kSize=25",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SVector<double,5> */
static void G__setup_memvarROOTcLcLMathcLcLSVectorlEdoublecO5gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   { ROOT::Math::SVector<double,5> *p; p=(ROOT::Math::SVector<double,5>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gRcLcLdA),-1,-2,1,"kSize=5",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[5]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<double,6,6> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR));
   { ROOT::Math::MatRepStd<double,6,6> *p; p=(ROOT::Math::MatRepStd<double,6,6>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRcLcLdA),-1,-2,1,"kRows=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRcLcLdA),-1,-2,1,"kCols=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRcLcLdA),-1,-2,1,"kSize=36",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[36]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR));
   { ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> > *p; p=(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLdA),-1,-2,1,"kRows=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLdA),-1,-2,1,"kCols=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLdA),-1,-2,1,"kSize=36",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<double,7,7> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR));
   { ROOT::Math::MatRepStd<double,7,7> *p; p=(ROOT::Math::MatRepStd<double,7,7>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRcLcLdA),-1,-2,1,"kRows=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRcLcLdA),-1,-2,1,"kCols=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRcLcLdA),-1,-2,1,"kSize=49",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[49]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR));
   { ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> > *p; p=(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLdA),-1,-2,1,"kRows=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLdA),-1,-2,1,"kCols=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLdA),-1,-2,1,"kSize=49",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SVector<double,7> */
static void G__setup_memvarROOTcLcLMathcLcLSVectorlEdoublecO7gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   { ROOT::Math::SVector<double,7> *p; p=(ROOT::Math::SVector<double,7>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gRcLcLdA),-1,-2,1,"kSize=7",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[7]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<double,2> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEdoublecO2gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR));
   { ROOT::Math::MatRepSym<double,2> *p; p=(ROOT::Math::MatRepSym<double,2>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gRcLcLdA),-1,-2,1,"kRows=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gRcLcLdA),-1,-2,1,"kCols=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gRcLcLdA),-1,-2,1,"kSize=3",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE2gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR));
   { ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> > *p; p=(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLdA),-1,-2,1,"kRows=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLdA),-1,-2,1,"kCols=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLdA),-1,-2,1,"kSize=4",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<double,3> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR));
   { ROOT::Math::MatRepSym<double,3> *p; p=(ROOT::Math::MatRepSym<double,3>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gRcLcLdA),-1,-2,1,"kSize=6",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE3gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   { ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > *p; p=(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLdA),-1,-2,1,"kSize=9",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<double,4> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEdoublecO4gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR));
   { ROOT::Math::MatRepSym<double,4> *p; p=(ROOT::Math::MatRepSym<double,4>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gRcLcLdA),-1,-2,1,"kRows=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gRcLcLdA),-1,-2,1,"kCols=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gRcLcLdA),-1,-2,1,"kSize=10",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE4gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR));
   { ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> > *p; p=(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLdA),-1,-2,1,"kRows=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLdA),-1,-2,1,"kCols=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLdA),-1,-2,1,"kSize=16",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<double,5> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEdoublecO5gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR));
   { ROOT::Math::MatRepSym<double,5> *p; p=(ROOT::Math::MatRepSym<double,5>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gRcLcLdA),-1,-2,1,"kRows=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gRcLcLdA),-1,-2,1,"kCols=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gRcLcLdA),-1,-2,1,"kSize=15",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE5gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR));
   { ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > *p; p=(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLdA),-1,-2,1,"kRows=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLdA),-1,-2,1,"kCols=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLdA),-1,-2,1,"kSize=25",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<double,6> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEdoublecO6gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR));
   { ROOT::Math::MatRepSym<double,6> *p; p=(ROOT::Math::MatRepSym<double,6>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gRcLcLdA),-1,-2,1,"kRows=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gRcLcLdA),-1,-2,1,"kCols=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gRcLcLdA),-1,-2,1,"kSize=21",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[21]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE6gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR));
   { ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> > *p; p=(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLdA),-1,-2,1,"kRows=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLdA),-1,-2,1,"kCols=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLdA),-1,-2,1,"kSize=36",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<double,7> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEdoublecO7gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR));
   { ROOT::Math::MatRepSym<double,7> *p; p=(ROOT::Math::MatRepSym<double,7>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gRcLcLdA),-1,-2,1,"kRows=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gRcLcLdA),-1,-2,1,"kCols=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gRcLcLdA),-1,-2,1,"kSize=28",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[28]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE7gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR));
   { ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> > *p; p=(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLdA),-1,-2,1,"kRows=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLdA),-1,-2,1,"kCols=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLdA),-1,-2,1,"kSize=49",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<float,2,2> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR));
   { ROOT::Math::MatRepStd<float,2,2> *p; p=(ROOT::Math::MatRepStd<float,2,2>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRcLcLdA),-1,-2,1,"kRows=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRcLcLdA),-1,-2,1,"kCols=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRcLcLdA),-1,-2,1,"kSize=4",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[4]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR));
   { ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> > *p; p=(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLdA),-1,-2,1,"kRows=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLdA),-1,-2,1,"kCols=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLdA),-1,-2,1,"kSize=4",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SVector<float,3> */
static void G__setup_memvarROOTcLcLMathcLcLSVectorlEfloatcO3gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   { ROOT::Math::SVector<float,3> *p; p=(ROOT::Math::SVector<float,3>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gRcLcLdA),-1,-2,1,"kSize=3",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[3]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SVector<float,2> */
static void G__setup_memvarROOTcLcLMathcLcLSVectorlEfloatcO2gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   { ROOT::Math::SVector<float,2> *p; p=(ROOT::Math::SVector<float,2>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gRcLcLdA),-1,-2,1,"kSize=2",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[2]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<float,3,3> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR));
   { ROOT::Math::MatRepStd<float,3,3> *p; p=(ROOT::Math::MatRepStd<float,3,3>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRcLcLdA),-1,-2,1,"kSize=9",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[9]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR));
   { ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> > *p; p=(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLdA),-1,-2,1,"kSize=9",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SVector<float,6> */
static void G__setup_memvarROOTcLcLMathcLcLSVectorlEfloatcO6gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   { ROOT::Math::SVector<float,6> *p; p=(ROOT::Math::SVector<float,6>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gRcLcLdA),-1,-2,1,"kSize=6",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[6]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<float,4,4> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR));
   { ROOT::Math::MatRepStd<float,4,4> *p; p=(ROOT::Math::MatRepStd<float,4,4>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRcLcLdA),-1,-2,1,"kRows=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRcLcLdA),-1,-2,1,"kCols=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRcLcLdA),-1,-2,1,"kSize=16",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[16]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR));
   { ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> > *p; p=(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLdA),-1,-2,1,"kRows=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLdA),-1,-2,1,"kCols=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLdA),-1,-2,1,"kSize=16",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SVector<float,4> */
static void G__setup_memvarROOTcLcLMathcLcLSVectorlEfloatcO4gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   { ROOT::Math::SVector<float,4> *p; p=(ROOT::Math::SVector<float,4>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gRcLcLdA),-1,-2,1,"kSize=4",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[4]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<float,5,5> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR));
   { ROOT::Math::MatRepStd<float,5,5> *p; p=(ROOT::Math::MatRepStd<float,5,5>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRcLcLdA),-1,-2,1,"kRows=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRcLcLdA),-1,-2,1,"kCols=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRcLcLdA),-1,-2,1,"kSize=25",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[25]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR));
   { ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> > *p; p=(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLdA),-1,-2,1,"kRows=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLdA),-1,-2,1,"kCols=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLdA),-1,-2,1,"kSize=25",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SVector<float,5> */
static void G__setup_memvarROOTcLcLMathcLcLSVectorlEfloatcO5gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   { ROOT::Math::SVector<float,5> *p; p=(ROOT::Math::SVector<float,5>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gRcLcLdA),-1,-2,1,"kSize=5",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[5]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<float,6,6> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR));
   { ROOT::Math::MatRepStd<float,6,6> *p; p=(ROOT::Math::MatRepStd<float,6,6>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRcLcLdA),-1,-2,1,"kRows=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRcLcLdA),-1,-2,1,"kCols=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRcLcLdA),-1,-2,1,"kSize=36",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[36]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR));
   { ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> > *p; p=(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLdA),-1,-2,1,"kRows=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLdA),-1,-2,1,"kCols=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLdA),-1,-2,1,"kSize=36",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<float,7,7> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR));
   { ROOT::Math::MatRepStd<float,7,7> *p; p=(ROOT::Math::MatRepStd<float,7,7>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRcLcLdA),-1,-2,1,"kRows=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRcLcLdA),-1,-2,1,"kCols=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRcLcLdA),-1,-2,1,"kSize=49",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[49]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR));
   { ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> > *p; p=(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLdA),-1,-2,1,"kRows=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLdA),-1,-2,1,"kCols=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLdA),-1,-2,1,"kSize=49",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SVector<float,7> */
static void G__setup_memvarROOTcLcLMathcLcLSVectorlEfloatcO7gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   { ROOT::Math::SVector<float,7> *p; p=(ROOT::Math::SVector<float,7>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gRcLcLdA),-1,-2,1,"kSize=7",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[7]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<float,2> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEfloatcO2gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR));
   { ROOT::Math::MatRepSym<float,2> *p; p=(ROOT::Math::MatRepSym<float,2>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gRcLcLdA),-1,-2,1,"kRows=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gRcLcLdA),-1,-2,1,"kCols=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gRcLcLdA),-1,-2,1,"kSize=3",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE2gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR));
   { ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> > *p; p=(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLdA),-1,-2,1,"kRows=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLdA),-1,-2,1,"kCols=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLdA),-1,-2,1,"kSize=4",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<float,3> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEfloatcO3gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR));
   { ROOT::Math::MatRepSym<float,3> *p; p=(ROOT::Math::MatRepSym<float,3>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gRcLcLdA),-1,-2,1,"kSize=6",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE3gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR));
   { ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> > *p; p=(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLdA),-1,-2,1,"kSize=9",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<float,4> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEfloatcO4gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR));
   { ROOT::Math::MatRepSym<float,4> *p; p=(ROOT::Math::MatRepSym<float,4>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gRcLcLdA),-1,-2,1,"kRows=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gRcLcLdA),-1,-2,1,"kCols=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gRcLcLdA),-1,-2,1,"kSize=10",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE4gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR));
   { ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> > *p; p=(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLdA),-1,-2,1,"kRows=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLdA),-1,-2,1,"kCols=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLdA),-1,-2,1,"kSize=16",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<float,5> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEfloatcO5gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR));
   { ROOT::Math::MatRepSym<float,5> *p; p=(ROOT::Math::MatRepSym<float,5>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gRcLcLdA),-1,-2,1,"kRows=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gRcLcLdA),-1,-2,1,"kCols=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gRcLcLdA),-1,-2,1,"kSize=15",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE5gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR));
   { ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> > *p; p=(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLdA),-1,-2,1,"kRows=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLdA),-1,-2,1,"kCols=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLdA),-1,-2,1,"kSize=25",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<float,6> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEfloatcO6gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR));
   { ROOT::Math::MatRepSym<float,6> *p; p=(ROOT::Math::MatRepSym<float,6>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gRcLcLdA),-1,-2,1,"kRows=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gRcLcLdA),-1,-2,1,"kCols=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gRcLcLdA),-1,-2,1,"kSize=21",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[21]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE6gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR));
   { ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> > *p; p=(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLdA),-1,-2,1,"kRows=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLdA),-1,-2,1,"kCols=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLdA),-1,-2,1,"kSize=36",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepSym<float,7> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepSymlEfloatcO7gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR));
   { ROOT::Math::MatRepSym<float,7> *p; p=(ROOT::Math::MatRepSym<float,7>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gRcLcLdA),-1,-2,1,"kRows=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gRcLcLdA),-1,-2,1,"kCols=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gRcLcLdA),-1,-2,1,"kSize=28",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[28]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE7gR),-1,-1,4,"fOff=",0,"! transient");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR));
   { ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> > *p; p=(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLdA),-1,-2,1,"kRows=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLdA),-1,-2,1,"kCols=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLdA),-1,-2,1,"kSize=49",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<double,4,3> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR));
   { ROOT::Math::MatRepStd<double,4,3> *p; p=(ROOT::Math::MatRepStd<double,4,3>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRcLcLdA),-1,-2,1,"kRows=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRcLcLdA),-1,-2,1,"kSize=12",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[12]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<double,3,4> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR));
   { ROOT::Math::MatRepStd<double,3,4> *p; p=(ROOT::Math::MatRepStd<double,3,4>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRcLcLdA),-1,-2,1,"kCols=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRcLcLdA),-1,-2,1,"kSize=12",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[12]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<double,9,7> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR));
   { ROOT::Math::MatRepStd<double,9,7> *p; p=(ROOT::Math::MatRepStd<double,9,7>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRcLcLdA),-1,-2,1,"kRows=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRcLcLdA),-1,-2,1,"kCols=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRcLcLdA),-1,-2,1,"kSize=63",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fArray[63]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR));
   { ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> > *p; p=(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLdA),-1,-2,1,"kRows=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLdA),-1,-2,1,"kSize=12",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR));
   { ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> > *p; p=(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLdA),-1,-2,1,"kCols=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLdA),-1,-2,1,"kSize=12",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR));
   { ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> > *p; p=(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLdA),-1,-2,1,"kRows=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLdA),-1,-2,1,"kCols=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLdA),-1,-2,1,"kSize=63",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<float,4,3> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR));
   { ROOT::Math::MatRepStd<float,4,3> *p; p=(ROOT::Math::MatRepStd<float,4,3>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRcLcLdA),-1,-2,1,"kRows=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRcLcLdA),-1,-2,1,"kSize=12",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[12]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<float,3,4> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR));
   { ROOT::Math::MatRepStd<float,3,4> *p; p=(ROOT::Math::MatRepStd<float,3,4>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRcLcLdA),-1,-2,1,"kCols=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRcLcLdA),-1,-2,1,"kSize=12",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[12]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::MatRepStd<float,9,7> */
static void G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR));
   { ROOT::Math::MatRepStd<float,9,7> *p; p=(ROOT::Math::MatRepStd<float,9,7>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRcLcLdA),-1,-2,1,"kRows=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRcLcLdA),-1,-2,1,"kCols=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRcLcLdA),-1,-2,1,"kSize=63",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fArray[63]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR));
   { ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> > *p; p=(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLdA),-1,-2,1,"kRows=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLdA),-1,-2,1,"kCols=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLdA),-1,-2,1,"kSize=12",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR));
   { ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> > *p; p=(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLdA),-1,-2,1,"kRows=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLdA),-1,-2,1,"kCols=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLdA),-1,-2,1,"kSize=12",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> > */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR));
   { ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> > *p; p=(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLdA),-1,-2,1,"kRows=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLdA),-1,-2,1,"kCols=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLdA),-1,-2,1,"kSize=63",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR),-1,-1,1,"fRep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow));
   { ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow *p; p=(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const */
static void G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const));
   { ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const *p; p=(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR),-1,-1,4,"fMat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRow=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Smatrix() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncROOTcLcLMath(void) {
   /* ROOT::Math */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLRowOffsetslE2gR(void) {
   /* ROOT::Math::RowOffsets<2> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE2gR));
   G__memfunc_setup("RowOffsets<2>",1214,G__G__Smatrix_103_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE2gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_103_0_2, 105, -1, -1, 0, 2, 1, 1, 8, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_103_0_3, 105, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("RowOffsets<2>", 1214, G__G__Smatrix_103_0_4, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE2gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::RowOffsets<2>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RowOffsets<2>", 1340, G__G__Smatrix_103_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_103_0_6, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE2gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::RowOffsets<2>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLRowOffsetslE3gR(void) {
   /* ROOT::Math::RowOffsets<3> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE3gR));
   G__memfunc_setup("RowOffsets<3>",1215,G__G__Smatrix_104_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE3gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_104_0_2, 105, -1, -1, 0, 2, 1, 1, 8, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_104_0_3, 105, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("RowOffsets<3>", 1215, G__G__Smatrix_104_0_4, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE3gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::RowOffsets<3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RowOffsets<3>", 1341, G__G__Smatrix_104_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_104_0_6, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::RowOffsets<3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLRowOffsetslE4gR(void) {
   /* ROOT::Math::RowOffsets<4> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE4gR));
   G__memfunc_setup("RowOffsets<4>",1216,G__G__Smatrix_105_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE4gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_105_0_2, 105, -1, -1, 0, 2, 1, 1, 8, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_105_0_3, 105, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("RowOffsets<4>", 1216, G__G__Smatrix_105_0_4, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE4gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::RowOffsets<4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RowOffsets<4>", 1342, G__G__Smatrix_105_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_105_0_6, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::RowOffsets<4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLRowOffsetslE5gR(void) {
   /* ROOT::Math::RowOffsets<5> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE5gR));
   G__memfunc_setup("RowOffsets<5>",1217,G__G__Smatrix_106_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE5gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_106_0_2, 105, -1, -1, 0, 2, 1, 1, 8, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_106_0_3, 105, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("RowOffsets<5>", 1217, G__G__Smatrix_106_0_4, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE5gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::RowOffsets<5>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RowOffsets<5>", 1343, G__G__Smatrix_106_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_106_0_6, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::RowOffsets<5>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLRowOffsetslE6gR(void) {
   /* ROOT::Math::RowOffsets<6> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE6gR));
   G__memfunc_setup("RowOffsets<6>",1218,G__G__Smatrix_107_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE6gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_107_0_2, 105, -1, -1, 0, 2, 1, 1, 8, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_107_0_3, 105, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("RowOffsets<6>", 1218, G__G__Smatrix_107_0_4, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE6gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::RowOffsets<6>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RowOffsets<6>", 1344, G__G__Smatrix_107_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_107_0_6, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::RowOffsets<6>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLRowOffsetslE7gR(void) {
   /* ROOT::Math::RowOffsets<7> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE7gR));
   G__memfunc_setup("RowOffsets<7>",1219,G__G__Smatrix_108_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE7gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_108_0_2, 105, -1, -1, 0, 2, 1, 1, 8, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_108_0_3, 105, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("RowOffsets<7>", 1219, G__G__Smatrix_108_0_4, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE7gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::RowOffsets<7>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RowOffsets<7>", 1345, G__G__Smatrix_108_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_108_0_6, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::RowOffsets<7>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixIdentity(void) {
   /* ROOT::Math::SMatrixIdentity */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixIdentity));
   // automatic default constructor
   G__memfunc_setup("SMatrixIdentity", 1554, G__G__Smatrix_112_0_1, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixIdentity), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixIdentity", 1554, G__G__Smatrix_112_0_2, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixIdentity), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixIdentity", 1680, G__G__Smatrix_112_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_112_0_4, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixIdentity), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR(void) {
   /* ROOT::Math::MatRepStd<double,2,2> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_113_0_1, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_113_0_2, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_113_0_3, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_113_0_4, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_113_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_113_0_6, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_113_0_7, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<double,2,2>", 1829, G__G__Smatrix_113_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<double,2,2>", 1829, G__G__Smatrix_113_0_9, (int) ('i'), 
G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,2,2>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<double,2,2>", 1955, G__G__Smatrix_113_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_113_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,2,2>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR(void) {
   /* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR));
   G__memfunc_setup("SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >",4512,G__G__Smatrix_115_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >",4512,G__G__Smatrix_115_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >",4512,G__G__Smatrix_115_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >",4512,G__G__Smatrix_115_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<double,3>' 'ROOT::Math::SVector<double,2*(2+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >",4512,G__G__Smatrix_115_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR), -1, 0, 1, 5, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_115_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_115_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_115_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_115_0_9, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_115_0_10, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_115_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_115_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_115_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_115_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_115_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_115_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_115_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_115_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_115_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_115_0_20, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_115_0_21, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_115_0_22, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_115_0_23, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_115_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_115_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_115_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_115_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_115_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_115_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_115_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_115_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_115_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_115_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_115_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_115_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_115_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_115_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_115_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_115_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_115_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_115_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_115_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), G__defined_typename("ROOT::Math::SVector<double,2*(2+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_115_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), G__defined_typename("ROOT::Math::SVector<double,2*(2+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_115_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_115_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >", 4638, G__G__Smatrix_115_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_115_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSVectorlEdoublecO3gR(void) {
   /* ROOT::Math::SVector<double,3> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR));
   G__memfunc_setup("SVector<double,3>",1562,G__G__Smatrix_116_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,3>",1562,G__G__Smatrix_116_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,3>",1562,G__G__Smatrix_116_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 2, 1, 1, 0, 
"D - - 10 - a h - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,3>",1562,G__G__Smatrix_116_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 2, 1, 1, 0, 
"D - 'ROOT::Math::SVector<double,3>::const_iterator' 10 - begin D - 'ROOT::Math::SVector<double,3>::const_iterator' 10 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,3>",1562,G__G__Smatrix_116_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 1, 5, 1, 0, "d - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,3>",1562,G__G__Smatrix_116_0_6, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 2, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,3>",1562,G__G__Smatrix_116_0_7, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 3, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,3>",1562,G__G__Smatrix_116_0_8, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 4, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,3>",1562,G__G__Smatrix_116_0_9, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 5, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,3>",1562,G__G__Smatrix_116_0_10, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 6, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,3>",1562,G__G__Smatrix_116_0_11, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 7, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,3>",1562,G__G__Smatrix_116_0_12, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 8, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,3>",1562,G__G__Smatrix_116_0_13, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 9, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8 "
"d - - 11 - a9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,3>",1562,G__G__Smatrix_116_0_14, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 10, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8 "
"d - - 11 - a9 d - - 11 - a10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_116_0_15, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 1, 1, 1, 1, 0, "d - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dim",282,G__G__Smatrix_116_0_16, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Math::SVector<double,3>::Dim) ), 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_116_0_17, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_116_0_18, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_116_0_19, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_116_0_20, 68, -1, G__defined_typename("ROOT::Math::SVector<double,3>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_116_0_21, 68, -1, G__defined_typename("ROOT::Math::SVector<double,3>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_116_0_22, 68, -1, G__defined_typename("ROOT::Math::SVector<double,3>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_116_0_23, 68, -1, G__defined_typename("ROOT::Math::SVector<double,3>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_116_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_116_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_116_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_116_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_116_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_116_0_29, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_116_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_116_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_116_0_32, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_116_0_33, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_116_0_34, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_116_0_35, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_116_0_36, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_116_0_37, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_116_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_116_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_116_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_116_0_41, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_116_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_116_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Smatrix_116_0_44, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_116_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVector<double,3>", 1688, G__G__Smatrix_116_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_116_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_119_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_119_0_2, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_119_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_119_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_119_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_120_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_120_0_2, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_120_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_120_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSVectorlEdoublecO2gR(void) {
   /* ROOT::Math::SVector<double,2> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR));
   G__memfunc_setup("SVector<double,2>",1561,G__G__Smatrix_121_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,2>",1561,G__G__Smatrix_121_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,2>",1561,G__G__Smatrix_121_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 2, 1, 1, 0, 
"D - - 10 - a h - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,2>",1561,G__G__Smatrix_121_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 2, 1, 1, 0, 
"D - 'ROOT::Math::SVector<double,2>::const_iterator' 10 - begin D - 'ROOT::Math::SVector<double,2>::const_iterator' 10 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,2>",1561,G__G__Smatrix_121_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 1, 5, 1, 0, "d - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,2>",1561,G__G__Smatrix_121_0_6, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 2, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,2>",1561,G__G__Smatrix_121_0_7, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 3, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,2>",1561,G__G__Smatrix_121_0_8, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 4, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,2>",1561,G__G__Smatrix_121_0_9, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 5, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,2>",1561,G__G__Smatrix_121_0_10, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 6, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,2>",1561,G__G__Smatrix_121_0_11, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 7, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,2>",1561,G__G__Smatrix_121_0_12, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 8, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,2>",1561,G__G__Smatrix_121_0_13, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 9, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8 "
"d - - 11 - a9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,2>",1561,G__G__Smatrix_121_0_14, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 10, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8 "
"d - - 11 - a9 d - - 11 - a10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_121_0_15, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 1, 1, 1, 1, 0, "d - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dim",282,G__G__Smatrix_121_0_16, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Math::SVector<double,2>::Dim) ), 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_121_0_17, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_121_0_18, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_121_0_19, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_121_0_20, 68, -1, G__defined_typename("ROOT::Math::SVector<double,2>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_121_0_21, 68, -1, G__defined_typename("ROOT::Math::SVector<double,2>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_121_0_22, 68, -1, G__defined_typename("ROOT::Math::SVector<double,2>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_121_0_23, 68, -1, G__defined_typename("ROOT::Math::SVector<double,2>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_121_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_121_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_121_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_121_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_121_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_121_0_29, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_121_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_121_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_121_0_32, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_121_0_33, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_121_0_34, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_121_0_35, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_121_0_36, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_121_0_37, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_121_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_121_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_121_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_121_0_41, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_121_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_121_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Smatrix_121_0_44, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_121_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVector<double,2>", 1687, G__G__Smatrix_121_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_121_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,2>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR(void) {
   /* ROOT::Math::MatRepStd<double,3,3> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_123_0_1, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_123_0_2, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_123_0_3, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_123_0_4, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_123_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_123_0_6, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_123_0_7, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<double,3,3>", 1831, G__G__Smatrix_123_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<double,3,3>", 1831, G__G__Smatrix_123_0_9, (int) ('i'), 
G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,3,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<double,3,3>", 1957, G__G__Smatrix_123_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_123_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,3,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR(void) {
   /* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR));
   G__memfunc_setup("SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >",4516,G__G__Smatrix_125_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >",4516,G__G__Smatrix_125_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >",4516,G__G__Smatrix_125_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >",4516,G__G__Smatrix_125_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<double,6>' 'ROOT::Math::SVector<double,3*(3+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >",4516,G__G__Smatrix_125_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR), -1, 0, 1, 5, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_125_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_125_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_125_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_125_0_9, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_125_0_10, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_125_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_125_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_125_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_125_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_125_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_125_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_125_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_125_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_125_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_125_0_20, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_125_0_21, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_125_0_22, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_125_0_23, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_125_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_125_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_125_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_125_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_125_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_125_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_125_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_125_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_125_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_125_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_125_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_125_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_125_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_125_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_125_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_125_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_125_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_125_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_125_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), G__defined_typename("ROOT::Math::SVector<double,3*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_125_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), G__defined_typename("ROOT::Math::SVector<double,3*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_125_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_125_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >", 4642, G__G__Smatrix_125_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_125_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSVectorlEdoublecO6gR(void) {
   /* ROOT::Math::SVector<double,6> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR));
   G__memfunc_setup("SVector<double,6>",1565,G__G__Smatrix_126_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,6>",1565,G__G__Smatrix_126_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,6>",1565,G__G__Smatrix_126_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 2, 1, 1, 0, 
"D - - 10 - a h - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,6>",1565,G__G__Smatrix_126_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 2, 1, 1, 0, 
"D - 'ROOT::Math::SVector<double,6>::const_iterator' 10 - begin D - 'ROOT::Math::SVector<double,6>::const_iterator' 10 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,6>",1565,G__G__Smatrix_126_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 1, 5, 1, 0, "d - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,6>",1565,G__G__Smatrix_126_0_6, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 2, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,6>",1565,G__G__Smatrix_126_0_7, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 3, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,6>",1565,G__G__Smatrix_126_0_8, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 4, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,6>",1565,G__G__Smatrix_126_0_9, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 5, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,6>",1565,G__G__Smatrix_126_0_10, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 6, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,6>",1565,G__G__Smatrix_126_0_11, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 7, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,6>",1565,G__G__Smatrix_126_0_12, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 8, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,6>",1565,G__G__Smatrix_126_0_13, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 9, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8 "
"d - - 11 - a9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,6>",1565,G__G__Smatrix_126_0_14, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 10, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8 "
"d - - 11 - a9 d - - 11 - a10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_126_0_15, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 1, 1, 1, 1, 0, "d - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dim",282,G__G__Smatrix_126_0_16, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Math::SVector<double,6>::Dim) ), 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_126_0_17, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_126_0_18, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_126_0_19, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_126_0_20, 68, -1, G__defined_typename("ROOT::Math::SVector<double,6>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_126_0_21, 68, -1, G__defined_typename("ROOT::Math::SVector<double,6>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_126_0_22, 68, -1, G__defined_typename("ROOT::Math::SVector<double,6>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_126_0_23, 68, -1, G__defined_typename("ROOT::Math::SVector<double,6>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_126_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_126_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_126_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_126_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_126_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_126_0_29, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_126_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_126_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_126_0_32, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_126_0_33, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_126_0_34, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_126_0_35, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_126_0_36, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_126_0_37, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_126_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_126_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_126_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_126_0_41, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_126_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_126_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Smatrix_126_0_44, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_126_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVector<double,6>", 1691, G__G__Smatrix_126_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_126_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,6>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_129_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_129_0_2, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_129_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_129_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_129_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_130_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_130_0_2, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_130_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_130_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR(void) {
   /* ROOT::Math::MatRepStd<double,4,4> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_131_0_1, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_131_0_2, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_131_0_3, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_131_0_4, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_131_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_131_0_6, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_131_0_7, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<double,4,4>", 1833, G__G__Smatrix_131_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<double,4,4>", 1833, G__G__Smatrix_131_0_9, (int) ('i'), 
G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,4,4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<double,4,4>", 1959, G__G__Smatrix_131_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_131_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,4,4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR(void) {
   /* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR));
   G__memfunc_setup("SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >",4520,G__G__Smatrix_133_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >",4520,G__G__Smatrix_133_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >",4520,G__G__Smatrix_133_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >",4520,G__G__Smatrix_133_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<double,10>' 'ROOT::Math::SVector<double,4*(4+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >",4520,G__G__Smatrix_133_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR), -1, 0, 1, 5, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_133_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_133_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_133_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_133_0_9, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_133_0_10, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_133_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_133_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_133_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_133_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_133_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_133_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_133_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_133_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_133_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_133_0_20, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_133_0_21, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_133_0_22, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_133_0_23, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_133_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_133_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_133_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_133_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_133_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_133_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_133_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_133_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_133_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_133_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_133_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_133_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_133_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_133_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_133_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_133_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_133_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_133_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_133_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO10gR), G__defined_typename("ROOT::Math::SVector<double,4*(4+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_133_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO10gR), G__defined_typename("ROOT::Math::SVector<double,4*(4+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_133_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_133_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >", 4646, G__G__Smatrix_133_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_133_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_137_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_137_0_2, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_137_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_137_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_137_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_138_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_138_0_2, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_138_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_138_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSVectorlEdoublecO4gR(void) {
   /* ROOT::Math::SVector<double,4> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR));
   G__memfunc_setup("SVector<double,4>",1563,G__G__Smatrix_139_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,4>",1563,G__G__Smatrix_139_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,4>",1563,G__G__Smatrix_139_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 2, 1, 1, 0, 
"D - - 10 - a h - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,4>",1563,G__G__Smatrix_139_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 2, 1, 1, 0, 
"D - 'ROOT::Math::SVector<double,4>::const_iterator' 10 - begin D - 'ROOT::Math::SVector<double,4>::const_iterator' 10 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,4>",1563,G__G__Smatrix_139_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 1, 5, 1, 0, "d - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,4>",1563,G__G__Smatrix_139_0_6, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 2, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,4>",1563,G__G__Smatrix_139_0_7, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 3, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,4>",1563,G__G__Smatrix_139_0_8, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 4, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,4>",1563,G__G__Smatrix_139_0_9, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 5, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,4>",1563,G__G__Smatrix_139_0_10, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 6, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,4>",1563,G__G__Smatrix_139_0_11, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 7, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,4>",1563,G__G__Smatrix_139_0_12, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 8, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,4>",1563,G__G__Smatrix_139_0_13, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 9, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8 "
"d - - 11 - a9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,4>",1563,G__G__Smatrix_139_0_14, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 10, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8 "
"d - - 11 - a9 d - - 11 - a10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_139_0_15, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 1, 1, 1, 1, 0, "d - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dim",282,G__G__Smatrix_139_0_16, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Math::SVector<double,4>::Dim) ), 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_139_0_17, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_139_0_18, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_139_0_19, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_139_0_20, 68, -1, G__defined_typename("ROOT::Math::SVector<double,4>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_139_0_21, 68, -1, G__defined_typename("ROOT::Math::SVector<double,4>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_139_0_22, 68, -1, G__defined_typename("ROOT::Math::SVector<double,4>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_139_0_23, 68, -1, G__defined_typename("ROOT::Math::SVector<double,4>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_139_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_139_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_139_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_139_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_139_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_139_0_29, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_139_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_139_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_139_0_32, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_139_0_33, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_139_0_34, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_139_0_35, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_139_0_36, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_139_0_37, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_139_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_139_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_139_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_139_0_41, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_139_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_139_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Smatrix_139_0_44, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_139_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVector<double,4>", 1689, G__G__Smatrix_139_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_139_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR(void) {
   /* ROOT::Math::MatRepStd<double,5,5> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_141_0_1, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_141_0_2, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_141_0_3, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_141_0_4, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_141_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_141_0_6, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_141_0_7, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<double,5,5>", 1835, G__G__Smatrix_141_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<double,5,5>", 1835, G__G__Smatrix_141_0_9, (int) ('i'), 
G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,5,5>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<double,5,5>", 1961, G__G__Smatrix_141_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_141_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,5,5>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR(void) {
   /* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR));
   G__memfunc_setup("SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >",4524,G__G__Smatrix_143_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >",4524,G__G__Smatrix_143_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >",4524,G__G__Smatrix_143_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >",4524,G__G__Smatrix_143_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<double,15>' 'ROOT::Math::SVector<double,5*(5+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >",4524,G__G__Smatrix_143_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR), -1, 0, 1, 5, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_143_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_143_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_143_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_143_0_9, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_143_0_10, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_143_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_143_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_143_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_143_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_143_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_143_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_143_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_143_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_143_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_143_0_20, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_143_0_21, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_143_0_22, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_143_0_23, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_143_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_143_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_143_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_143_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_143_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_143_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_143_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_143_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_143_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_143_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_143_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_143_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_143_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_143_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_143_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_143_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_143_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_143_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_143_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO15gR), G__defined_typename("ROOT::Math::SVector<double,5*(5+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_143_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO15gR), G__defined_typename("ROOT::Math::SVector<double,5*(5+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_143_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_143_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >", 4650, G__G__Smatrix_143_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_143_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_147_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_147_0_2, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_147_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_147_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_147_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_148_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_148_0_2, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_148_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_148_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSVectorlEdoublecO5gR(void) {
   /* ROOT::Math::SVector<double,5> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR));
   G__memfunc_setup("SVector<double,5>",1564,G__G__Smatrix_149_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,5>",1564,G__G__Smatrix_149_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,5>",1564,G__G__Smatrix_149_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 2, 1, 1, 0, 
"D - - 10 - a h - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,5>",1564,G__G__Smatrix_149_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 2, 1, 1, 0, 
"D - 'ROOT::Math::SVector<double,5>::const_iterator' 10 - begin D - 'ROOT::Math::SVector<double,5>::const_iterator' 10 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,5>",1564,G__G__Smatrix_149_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 1, 5, 1, 0, "d - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,5>",1564,G__G__Smatrix_149_0_6, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 2, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,5>",1564,G__G__Smatrix_149_0_7, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 3, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,5>",1564,G__G__Smatrix_149_0_8, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 4, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,5>",1564,G__G__Smatrix_149_0_9, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 5, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,5>",1564,G__G__Smatrix_149_0_10, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 6, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,5>",1564,G__G__Smatrix_149_0_11, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 7, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,5>",1564,G__G__Smatrix_149_0_12, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 8, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,5>",1564,G__G__Smatrix_149_0_13, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 9, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8 "
"d - - 11 - a9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,5>",1564,G__G__Smatrix_149_0_14, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 10, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8 "
"d - - 11 - a9 d - - 11 - a10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_149_0_15, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 1, 1, 1, 1, 0, "d - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dim",282,G__G__Smatrix_149_0_16, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Math::SVector<double,5>::Dim) ), 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_149_0_17, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_149_0_18, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_149_0_19, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_149_0_20, 68, -1, G__defined_typename("ROOT::Math::SVector<double,5>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_149_0_21, 68, -1, G__defined_typename("ROOT::Math::SVector<double,5>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_149_0_22, 68, -1, G__defined_typename("ROOT::Math::SVector<double,5>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_149_0_23, 68, -1, G__defined_typename("ROOT::Math::SVector<double,5>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_149_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_149_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_149_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_149_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_149_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_149_0_29, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_149_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_149_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_149_0_32, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_149_0_33, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_149_0_34, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_149_0_35, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_149_0_36, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_149_0_37, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_149_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_149_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_149_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_149_0_41, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_149_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_149_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Smatrix_149_0_44, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_149_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVector<double,5>", 1690, G__G__Smatrix_149_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_149_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,5>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR(void) {
   /* ROOT::Math::MatRepStd<double,6,6> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_151_0_1, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_151_0_2, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_151_0_3, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_151_0_4, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_151_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_151_0_6, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_151_0_7, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<double,6,6>", 1837, G__G__Smatrix_151_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<double,6,6>", 1837, G__G__Smatrix_151_0_9, (int) ('i'), 
G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,6,6>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<double,6,6>", 1963, G__G__Smatrix_151_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_151_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,6,6>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR(void) {
   /* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR));
   G__memfunc_setup("SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >",4528,G__G__Smatrix_153_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >",4528,G__G__Smatrix_153_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >",4528,G__G__Smatrix_153_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >",4528,G__G__Smatrix_153_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<double,21>' 'ROOT::Math::SVector<double,6*(6+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >",4528,G__G__Smatrix_153_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR), -1, 0, 1, 5, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_153_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_153_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_153_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_153_0_9, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_153_0_10, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_153_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_153_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_153_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_153_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_153_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_153_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_153_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_153_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_153_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_153_0_20, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_153_0_21, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_153_0_22, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_153_0_23, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_153_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_153_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_153_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_153_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_153_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_153_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_153_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_153_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_153_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_153_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_153_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_153_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_153_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_153_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_153_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_153_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_153_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_153_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_153_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO21gR), G__defined_typename("ROOT::Math::SVector<double,6*(6+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_153_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO21gR), G__defined_typename("ROOT::Math::SVector<double,6*(6+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_153_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_153_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >", 4654, G__G__Smatrix_153_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_153_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_157_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_157_0_2, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_157_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_157_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_157_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_158_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_158_0_2, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_158_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_158_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR(void) {
   /* ROOT::Math::MatRepStd<double,7,7> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_159_0_1, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_159_0_2, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_159_0_3, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_159_0_4, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_159_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_159_0_6, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_159_0_7, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<double,7,7>", 1839, G__G__Smatrix_159_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<double,7,7>", 1839, G__G__Smatrix_159_0_9, (int) ('i'), 
G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,7,7>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<double,7,7>", 1965, G__G__Smatrix_159_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_159_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,7,7>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR(void) {
   /* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR));
   G__memfunc_setup("SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >",4532,G__G__Smatrix_161_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >",4532,G__G__Smatrix_161_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >",4532,G__G__Smatrix_161_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >",4532,G__G__Smatrix_161_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<double,28>' 'ROOT::Math::SVector<double,7*(7+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >",4532,G__G__Smatrix_161_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR), -1, 0, 1, 5, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_161_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_161_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_161_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_161_0_9, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_161_0_10, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_161_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_161_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_161_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_161_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_161_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_161_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_161_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_161_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_161_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_161_0_20, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_161_0_21, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_161_0_22, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_161_0_23, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_161_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_161_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_161_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_161_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_161_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_161_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_161_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_161_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_161_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_161_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_161_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_161_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_161_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_161_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_161_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_161_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_161_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_161_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_161_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO28gR), G__defined_typename("ROOT::Math::SVector<double,7*(7+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_161_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO28gR), G__defined_typename("ROOT::Math::SVector<double,7*(7+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_161_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_161_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >", 4658, G__G__Smatrix_161_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_161_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_165_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_165_0_2, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_165_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_165_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_165_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_166_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_166_0_2, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_166_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_166_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSVectorlEdoublecO7gR(void) {
   /* ROOT::Math::SVector<double,7> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR));
   G__memfunc_setup("SVector<double,7>",1566,G__G__Smatrix_167_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,7>",1566,G__G__Smatrix_167_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,7>",1566,G__G__Smatrix_167_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 2, 1, 1, 0, 
"D - - 10 - a h - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,7>",1566,G__G__Smatrix_167_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 2, 1, 1, 0, 
"D - 'ROOT::Math::SVector<double,7>::const_iterator' 10 - begin D - 'ROOT::Math::SVector<double,7>::const_iterator' 10 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,7>",1566,G__G__Smatrix_167_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 1, 5, 1, 0, "d - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,7>",1566,G__G__Smatrix_167_0_6, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 2, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,7>",1566,G__G__Smatrix_167_0_7, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 3, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,7>",1566,G__G__Smatrix_167_0_8, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 4, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,7>",1566,G__G__Smatrix_167_0_9, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 5, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,7>",1566,G__G__Smatrix_167_0_10, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 6, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,7>",1566,G__G__Smatrix_167_0_11, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 7, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,7>",1566,G__G__Smatrix_167_0_12, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 8, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,7>",1566,G__G__Smatrix_167_0_13, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 9, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8 "
"d - - 11 - a9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<double,7>",1566,G__G__Smatrix_167_0_14, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 10, 1, 1, 0, 
"d - - 11 - a1 d - - 11 - a2 "
"d - - 11 - a3 d - - 11 - a4 "
"d - - 11 - a5 d - - 11 - a6 "
"d - - 11 - a7 d - - 11 - a8 "
"d - - 11 - a9 d - - 11 - a10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_167_0_15, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 1, 1, 1, 1, 0, "d - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dim",282,G__G__Smatrix_167_0_16, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Math::SVector<double,7>::Dim) ), 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_167_0_17, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_167_0_18, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_167_0_19, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_167_0_20, 68, -1, G__defined_typename("ROOT::Math::SVector<double,7>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_167_0_21, 68, -1, G__defined_typename("ROOT::Math::SVector<double,7>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_167_0_22, 68, -1, G__defined_typename("ROOT::Math::SVector<double,7>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_167_0_23, 68, -1, G__defined_typename("ROOT::Math::SVector<double,7>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_167_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_167_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_167_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_167_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_167_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_167_0_29, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_167_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_167_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<double,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_167_0_32, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_167_0_33, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_167_0_34, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_167_0_35, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_167_0_36, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_167_0_37, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_167_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_167_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_167_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_167_0_41, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_167_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_167_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Smatrix_167_0_44, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_167_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVector<double,7>", 1692, G__G__Smatrix_167_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_167_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<double,7>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEdoublecO2gR(void) {
   /* ROOT::Math::MatRepSym<double,2> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR));
   G__memfunc_setup("MatRepSym<double,2>",1749,G__G__Smatrix_169_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_169_0_2, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_169_0_3, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_169_0_4, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_169_0_5, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_169_0_6, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_169_0_7, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_169_0_8, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_169_0_9, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_169_0_10, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_169_0_11, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__G__Smatrix_169_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__G__Smatrix_169_0_13, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE2gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<double,2>", 1749, G__G__Smatrix_169_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,2>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<double,2>", 1875, G__G__Smatrix_169_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR(void) {
   /* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR));
   G__memfunc_setup("SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >",4432,G__G__Smatrix_171_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >",4432,G__G__Smatrix_171_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >",4432,G__G__Smatrix_171_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >",4432,G__G__Smatrix_171_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<double,3>' 'ROOT::Math::SVector<double,2*(2+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >",4432,G__G__Smatrix_171_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR), -1, 0, 1, 5, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_171_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_171_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_171_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_171_0_9, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_171_0_10, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_171_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_171_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_171_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_171_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_171_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_171_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_171_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_171_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_171_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_171_0_20, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_171_0_21, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_171_0_22, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_171_0_23, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_171_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_171_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_171_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_171_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_171_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_171_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_171_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_171_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_171_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_171_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_171_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_171_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_171_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_171_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_171_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_171_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_171_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_171_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_171_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), G__defined_typename("ROOT::Math::SVector<double,2*(2+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_171_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), G__defined_typename("ROOT::Math::SVector<double,2*(2+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_171_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_171_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >", 4558, G__G__Smatrix_171_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_173_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_173_0_2, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_173_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_173_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_173_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_174_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_174_0_2, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_174_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_174_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEdoublecO3gR(void) {
   /* ROOT::Math::MatRepSym<double,3> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR));
   G__memfunc_setup("MatRepSym<double,3>",1750,G__G__Smatrix_175_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_175_0_2, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_175_0_3, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_175_0_4, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_175_0_5, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_175_0_6, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_175_0_7, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_175_0_8, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_175_0_9, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_175_0_10, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_175_0_11, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__G__Smatrix_175_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__G__Smatrix_175_0_13, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE3gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<double,3>", 1750, G__G__Smatrix_175_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<double,3>", 1876, G__G__Smatrix_175_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR(void) {
   /* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR));
   G__memfunc_setup("SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >",4435,G__G__Smatrix_177_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >",4435,G__G__Smatrix_177_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >",4435,G__G__Smatrix_177_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >",4435,G__G__Smatrix_177_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<double,6>' 'ROOT::Math::SVector<double,3*(3+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >",4435,G__G__Smatrix_177_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 0, 1, 5, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_177_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_177_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_177_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_177_0_9, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_177_0_10, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_177_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_177_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_177_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_177_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_177_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_177_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_177_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_177_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_177_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_177_0_20, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_177_0_21, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_177_0_22, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_177_0_23, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_177_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_177_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_177_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_177_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_177_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_177_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_177_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_177_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_177_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_177_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_177_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_177_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_177_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_177_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_177_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_177_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_177_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_177_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_177_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), G__defined_typename("ROOT::Math::SVector<double,3*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_177_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), G__defined_typename("ROOT::Math::SVector<double,3*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_177_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_177_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >", 4561, G__G__Smatrix_177_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_179_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_179_0_2, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_179_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_179_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_179_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_180_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_180_0_2, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_180_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_180_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEdoublecO4gR(void) {
   /* ROOT::Math::MatRepSym<double,4> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR));
   G__memfunc_setup("MatRepSym<double,4>",1751,G__G__Smatrix_181_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_181_0_2, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_181_0_3, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_181_0_4, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_181_0_5, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_181_0_6, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_181_0_7, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_181_0_8, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_181_0_9, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_181_0_10, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_181_0_11, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__G__Smatrix_181_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__G__Smatrix_181_0_13, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE4gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<double,4>", 1751, G__G__Smatrix_181_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<double,4>", 1877, G__G__Smatrix_181_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR(void) {
   /* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR));
   G__memfunc_setup("SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >",4438,G__G__Smatrix_183_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >",4438,G__G__Smatrix_183_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >",4438,G__G__Smatrix_183_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >",4438,G__G__Smatrix_183_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<double,10>' 'ROOT::Math::SVector<double,4*(4+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >",4438,G__G__Smatrix_183_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR), -1, 0, 1, 5, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_183_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_183_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_183_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_183_0_9, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_183_0_10, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_183_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_183_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_183_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_183_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_183_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_183_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_183_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_183_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_183_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_183_0_20, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_183_0_21, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_183_0_22, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_183_0_23, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_183_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_183_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_183_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_183_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_183_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_183_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_183_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_183_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_183_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_183_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_183_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_183_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_183_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_183_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_183_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_183_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_183_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_183_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_183_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO10gR), G__defined_typename("ROOT::Math::SVector<double,4*(4+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_183_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO10gR), G__defined_typename("ROOT::Math::SVector<double,4*(4+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_183_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_183_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >", 4564, G__G__Smatrix_183_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_185_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_185_0_2, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_185_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_185_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_185_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_186_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_186_0_2, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_186_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_186_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEdoublecO5gR(void) {
   /* ROOT::Math::MatRepSym<double,5> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR));
   G__memfunc_setup("MatRepSym<double,5>",1752,G__G__Smatrix_187_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_187_0_2, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_187_0_3, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_187_0_4, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_187_0_5, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_187_0_6, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_187_0_7, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_187_0_8, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_187_0_9, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_187_0_10, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_187_0_11, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__G__Smatrix_187_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__G__Smatrix_187_0_13, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE5gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<double,5>", 1752, G__G__Smatrix_187_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,5>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<double,5>", 1878, G__G__Smatrix_187_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR(void) {
   /* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR));
   G__memfunc_setup("SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >",4441,G__G__Smatrix_189_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >",4441,G__G__Smatrix_189_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >",4441,G__G__Smatrix_189_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >",4441,G__G__Smatrix_189_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<double,15>' 'ROOT::Math::SVector<double,5*(5+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >",4441,G__G__Smatrix_189_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR), -1, 0, 1, 5, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_189_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_189_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_189_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_189_0_9, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_189_0_10, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_189_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_189_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_189_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_189_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_189_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_189_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_189_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_189_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_189_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_189_0_20, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_189_0_21, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_189_0_22, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_189_0_23, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_189_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_189_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_189_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_189_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_189_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_189_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_189_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_189_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_189_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_189_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_189_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_189_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_189_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_189_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_189_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_189_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_189_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_189_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_189_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO15gR), G__defined_typename("ROOT::Math::SVector<double,5*(5+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_189_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO15gR), G__defined_typename("ROOT::Math::SVector<double,5*(5+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_189_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_189_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >", 4567, G__G__Smatrix_189_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_191_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_191_0_2, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_191_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_191_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_191_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_192_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_192_0_2, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_192_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_192_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEdoublecO6gR(void) {
   /* ROOT::Math::MatRepSym<double,6> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR));
   G__memfunc_setup("MatRepSym<double,6>",1753,G__G__Smatrix_193_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_193_0_2, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_193_0_3, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_193_0_4, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_193_0_5, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_193_0_6, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_193_0_7, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_193_0_8, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_193_0_9, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_193_0_10, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_193_0_11, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__G__Smatrix_193_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__G__Smatrix_193_0_13, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE6gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<double,6>", 1753, G__G__Smatrix_193_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,6>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<double,6>", 1879, G__G__Smatrix_193_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR(void) {
   /* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR));
   G__memfunc_setup("SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >",4444,G__G__Smatrix_195_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >",4444,G__G__Smatrix_195_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >",4444,G__G__Smatrix_195_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >",4444,G__G__Smatrix_195_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<double,21>' 'ROOT::Math::SVector<double,6*(6+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >",4444,G__G__Smatrix_195_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR), -1, 0, 1, 5, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_195_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_195_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_195_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_195_0_9, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_195_0_10, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_195_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_195_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_195_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_195_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_195_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_195_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_195_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_195_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_195_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_195_0_20, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_195_0_21, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_195_0_22, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_195_0_23, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_195_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_195_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_195_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_195_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_195_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_195_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_195_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_195_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_195_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_195_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_195_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_195_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_195_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_195_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_195_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_195_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_195_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_195_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_195_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO21gR), G__defined_typename("ROOT::Math::SVector<double,6*(6+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_195_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO21gR), G__defined_typename("ROOT::Math::SVector<double,6*(6+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_195_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_195_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >", 4570, G__G__Smatrix_195_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_197_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_197_0_2, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_197_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_197_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_197_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_198_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_198_0_2, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_198_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_198_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEdoublecO7gR(void) {
   /* ROOT::Math::MatRepSym<double,7> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR));
   G__memfunc_setup("MatRepSym<double,7>",1754,G__G__Smatrix_199_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_199_0_2, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_199_0_3, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_199_0_4, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_199_0_5, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_199_0_6, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_199_0_7, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_199_0_8, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_199_0_9, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_199_0_10, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_199_0_11, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__G__Smatrix_199_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__G__Smatrix_199_0_13, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE7gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<double,7>", 1754, G__G__Smatrix_199_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<double,7>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<double,7>", 1880, G__G__Smatrix_199_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR(void) {
   /* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR));
   G__memfunc_setup("SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >",4447,G__G__Smatrix_201_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >",4447,G__G__Smatrix_201_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >",4447,G__G__Smatrix_201_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >",4447,G__G__Smatrix_201_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<double,28>' 'ROOT::Math::SVector<double,7*(7+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >",4447,G__G__Smatrix_201_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR), -1, 0, 1, 5, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_201_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_201_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_201_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_201_0_9, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_201_0_10, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_201_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_201_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_201_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_201_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_201_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_201_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_201_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_201_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_201_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_201_0_20, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_201_0_21, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_201_0_22, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_201_0_23, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_201_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_201_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_201_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_201_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_201_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_201_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_201_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_201_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_201_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_201_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_201_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_201_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_201_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_201_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_201_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_201_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_201_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_201_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_201_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO28gR), G__defined_typename("ROOT::Math::SVector<double,7*(7+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_201_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO28gR), G__defined_typename("ROOT::Math::SVector<double,7*(7+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_201_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_201_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >", 4573, G__G__Smatrix_201_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_203_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_203_0_2, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_203_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_203_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_203_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_204_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_204_0_2, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_204_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_204_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR(void) {
   /* ROOT::Math::MatRepStd<float,2,2> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_205_0_1, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_205_0_2, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_205_0_3, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_205_0_4, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_205_0_5, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_205_0_6, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_205_0_7, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<float,2,2>", 1728, G__G__Smatrix_205_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<float,2,2>", 1728, G__G__Smatrix_205_0_9, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,2,2>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<float,2,2>", 1854, G__G__Smatrix_205_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_205_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,2,2>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR(void) {
   /* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR));
   G__memfunc_setup("SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >",4310,G__G__Smatrix_207_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >",4310,G__G__Smatrix_207_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >",4310,G__G__Smatrix_207_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >",4310,G__G__Smatrix_207_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<float,3>' 'ROOT::Math::SVector<float,2*(2+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >",4310,G__G__Smatrix_207_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR), -1, 0, 1, 5, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_207_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_207_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_207_0_8, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_207_0_9, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_207_0_10, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_207_0_11, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_207_0_12, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_207_0_13, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_207_0_14, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_207_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_207_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_207_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_207_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_207_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_207_0_20, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_207_0_21, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_207_0_22, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_207_0_23, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_207_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_207_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_207_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_207_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_207_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_207_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_207_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_207_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_207_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_207_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_207_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_207_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_207_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_207_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_207_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_207_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_207_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_207_0_41, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_207_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), G__defined_typename("ROOT::Math::SVector<float,2*(2+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_207_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), G__defined_typename("ROOT::Math::SVector<float,2*(2+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_207_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "F - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_207_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >", 4436, G__G__Smatrix_207_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_207_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSVectorlEfloatcO3gR(void) {
   /* ROOT::Math::SVector<float,3> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR));
   G__memfunc_setup("SVector<float,3>",1461,G__G__Smatrix_208_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,3>",1461,G__G__Smatrix_208_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,3>",1461,G__G__Smatrix_208_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 2, 1, 1, 0, 
"F - - 10 - a h - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,3>",1461,G__G__Smatrix_208_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 2, 1, 1, 0, 
"F - 'ROOT::Math::SVector<float,3>::const_iterator' 10 - begin F - 'ROOT::Math::SVector<float,3>::const_iterator' 10 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,3>",1461,G__G__Smatrix_208_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 1, 5, 1, 0, "f - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,3>",1461,G__G__Smatrix_208_0_6, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 2, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,3>",1461,G__G__Smatrix_208_0_7, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 3, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,3>",1461,G__G__Smatrix_208_0_8, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 4, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,3>",1461,G__G__Smatrix_208_0_9, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 5, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,3>",1461,G__G__Smatrix_208_0_10, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 6, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,3>",1461,G__G__Smatrix_208_0_11, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 7, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,3>",1461,G__G__Smatrix_208_0_12, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 8, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,3>",1461,G__G__Smatrix_208_0_13, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 9, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8 "
"f - - 11 - a9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,3>",1461,G__G__Smatrix_208_0_14, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 10, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8 "
"f - - 11 - a9 f - - 11 - a10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_208_0_15, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 1, 1, 1, 1, 0, "f - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dim",282,G__G__Smatrix_208_0_16, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Math::SVector<float,3>::Dim) ), 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_208_0_17, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_208_0_18, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_208_0_19, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_208_0_20, 70, -1, G__defined_typename("ROOT::Math::SVector<float,3>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_208_0_21, 70, -1, G__defined_typename("ROOT::Math::SVector<float,3>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_208_0_22, 70, -1, G__defined_typename("ROOT::Math::SVector<float,3>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_208_0_23, 70, -1, G__defined_typename("ROOT::Math::SVector<float,3>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_208_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_208_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_208_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_208_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_208_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_208_0_29, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_208_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_208_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_208_0_32, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_208_0_33, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_208_0_34, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_208_0_35, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_208_0_36, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_208_0_37, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_208_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_208_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_208_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_208_0_41, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_208_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_208_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Smatrix_208_0_44, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_208_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVector<float,3>", 1587, G__G__Smatrix_208_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_208_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_211_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_211_0_2, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_211_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_211_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_211_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_212_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_212_0_2, 102, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_212_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_212_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSVectorlEfloatcO2gR(void) {
   /* ROOT::Math::SVector<float,2> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR));
   G__memfunc_setup("SVector<float,2>",1460,G__G__Smatrix_213_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,2>",1460,G__G__Smatrix_213_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,2>",1460,G__G__Smatrix_213_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 2, 1, 1, 0, 
"F - - 10 - a h - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,2>",1460,G__G__Smatrix_213_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 2, 1, 1, 0, 
"F - 'ROOT::Math::SVector<float,2>::const_iterator' 10 - begin F - 'ROOT::Math::SVector<float,2>::const_iterator' 10 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,2>",1460,G__G__Smatrix_213_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 1, 5, 1, 0, "f - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,2>",1460,G__G__Smatrix_213_0_6, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 2, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,2>",1460,G__G__Smatrix_213_0_7, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 3, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,2>",1460,G__G__Smatrix_213_0_8, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 4, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,2>",1460,G__G__Smatrix_213_0_9, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 5, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,2>",1460,G__G__Smatrix_213_0_10, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 6, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,2>",1460,G__G__Smatrix_213_0_11, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 7, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,2>",1460,G__G__Smatrix_213_0_12, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 8, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,2>",1460,G__G__Smatrix_213_0_13, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 9, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8 "
"f - - 11 - a9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,2>",1460,G__G__Smatrix_213_0_14, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 10, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8 "
"f - - 11 - a9 f - - 11 - a10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_213_0_15, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 1, 1, 1, 1, 0, "f - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dim",282,G__G__Smatrix_213_0_16, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Math::SVector<float,2>::Dim) ), 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_213_0_17, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_213_0_18, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_213_0_19, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_213_0_20, 70, -1, G__defined_typename("ROOT::Math::SVector<float,2>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_213_0_21, 70, -1, G__defined_typename("ROOT::Math::SVector<float,2>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_213_0_22, 70, -1, G__defined_typename("ROOT::Math::SVector<float,2>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_213_0_23, 70, -1, G__defined_typename("ROOT::Math::SVector<float,2>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_213_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_213_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_213_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_213_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_213_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_213_0_29, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_213_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_213_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_213_0_32, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_213_0_33, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_213_0_34, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_213_0_35, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_213_0_36, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_213_0_37, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_213_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_213_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_213_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_213_0_41, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_213_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_213_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Smatrix_213_0_44, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_213_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVector<float,2>", 1586, G__G__Smatrix_213_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_213_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,2>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR(void) {
   /* ROOT::Math::MatRepStd<float,3,3> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_215_0_1, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_215_0_2, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_215_0_3, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_215_0_4, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_215_0_5, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_215_0_6, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_215_0_7, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<float,3,3>", 1730, G__G__Smatrix_215_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<float,3,3>", 1730, G__G__Smatrix_215_0_9, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,3,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<float,3,3>", 1856, G__G__Smatrix_215_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_215_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,3,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR(void) {
   /* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR));
   G__memfunc_setup("SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >",4314,G__G__Smatrix_217_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >",4314,G__G__Smatrix_217_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >",4314,G__G__Smatrix_217_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >",4314,G__G__Smatrix_217_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<float,6>' 'ROOT::Math::SVector<float,3*(3+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >",4314,G__G__Smatrix_217_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR), -1, 0, 1, 5, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_217_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_217_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_217_0_8, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_217_0_9, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_217_0_10, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_217_0_11, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_217_0_12, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_217_0_13, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_217_0_14, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_217_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_217_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_217_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_217_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_217_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_217_0_20, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_217_0_21, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_217_0_22, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_217_0_23, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_217_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_217_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_217_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_217_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_217_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_217_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_217_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_217_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_217_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_217_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_217_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_217_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_217_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_217_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_217_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_217_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_217_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_217_0_41, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_217_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), G__defined_typename("ROOT::Math::SVector<float,3*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_217_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), G__defined_typename("ROOT::Math::SVector<float,3*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_217_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "F - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_217_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >", 4440, G__G__Smatrix_217_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_217_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSVectorlEfloatcO6gR(void) {
   /* ROOT::Math::SVector<float,6> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR));
   G__memfunc_setup("SVector<float,6>",1464,G__G__Smatrix_218_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,6>",1464,G__G__Smatrix_218_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,6>",1464,G__G__Smatrix_218_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 2, 1, 1, 0, 
"F - - 10 - a h - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,6>",1464,G__G__Smatrix_218_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 2, 1, 1, 0, 
"F - 'ROOT::Math::SVector<float,6>::const_iterator' 10 - begin F - 'ROOT::Math::SVector<float,6>::const_iterator' 10 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,6>",1464,G__G__Smatrix_218_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 1, 5, 1, 0, "f - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,6>",1464,G__G__Smatrix_218_0_6, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 2, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,6>",1464,G__G__Smatrix_218_0_7, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 3, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,6>",1464,G__G__Smatrix_218_0_8, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 4, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,6>",1464,G__G__Smatrix_218_0_9, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 5, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,6>",1464,G__G__Smatrix_218_0_10, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 6, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,6>",1464,G__G__Smatrix_218_0_11, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 7, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,6>",1464,G__G__Smatrix_218_0_12, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 8, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,6>",1464,G__G__Smatrix_218_0_13, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 9, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8 "
"f - - 11 - a9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,6>",1464,G__G__Smatrix_218_0_14, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 10, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8 "
"f - - 11 - a9 f - - 11 - a10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_218_0_15, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 1, 1, 1, 1, 0, "f - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dim",282,G__G__Smatrix_218_0_16, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Math::SVector<float,6>::Dim) ), 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_218_0_17, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_218_0_18, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_218_0_19, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_218_0_20, 70, -1, G__defined_typename("ROOT::Math::SVector<float,6>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_218_0_21, 70, -1, G__defined_typename("ROOT::Math::SVector<float,6>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_218_0_22, 70, -1, G__defined_typename("ROOT::Math::SVector<float,6>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_218_0_23, 70, -1, G__defined_typename("ROOT::Math::SVector<float,6>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_218_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_218_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_218_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_218_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_218_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_218_0_29, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_218_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_218_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_218_0_32, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_218_0_33, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_218_0_34, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_218_0_35, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_218_0_36, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_218_0_37, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_218_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_218_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_218_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_218_0_41, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_218_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_218_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Smatrix_218_0_44, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_218_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVector<float,6>", 1590, G__G__Smatrix_218_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_218_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,6>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_221_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_221_0_2, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_221_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_221_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_221_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_222_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_222_0_2, 102, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_222_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_222_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR(void) {
   /* ROOT::Math::MatRepStd<float,4,4> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_223_0_1, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_223_0_2, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_223_0_3, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_223_0_4, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_223_0_5, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_223_0_6, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_223_0_7, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<float,4,4>", 1732, G__G__Smatrix_223_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<float,4,4>", 1732, G__G__Smatrix_223_0_9, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,4,4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<float,4,4>", 1858, G__G__Smatrix_223_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_223_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,4,4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR(void) {
   /* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR));
   G__memfunc_setup("SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >",4318,G__G__Smatrix_225_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >",4318,G__G__Smatrix_225_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >",4318,G__G__Smatrix_225_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >",4318,G__G__Smatrix_225_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<float,10>' 'ROOT::Math::SVector<float,4*(4+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >",4318,G__G__Smatrix_225_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR), -1, 0, 1, 5, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_225_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_225_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_225_0_8, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_225_0_9, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_225_0_10, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_225_0_11, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_225_0_12, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_225_0_13, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_225_0_14, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_225_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_225_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_225_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_225_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_225_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_225_0_20, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_225_0_21, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_225_0_22, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_225_0_23, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_225_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_225_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_225_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_225_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_225_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_225_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_225_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_225_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_225_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_225_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_225_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_225_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_225_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_225_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_225_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_225_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_225_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_225_0_41, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_225_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO10gR), G__defined_typename("ROOT::Math::SVector<float,4*(4+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_225_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO10gR), G__defined_typename("ROOT::Math::SVector<float,4*(4+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_225_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "F - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_225_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >", 4444, G__G__Smatrix_225_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_225_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_229_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_229_0_2, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_229_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_229_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_229_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_230_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_230_0_2, 102, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_230_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_230_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSVectorlEfloatcO4gR(void) {
   /* ROOT::Math::SVector<float,4> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR));
   G__memfunc_setup("SVector<float,4>",1462,G__G__Smatrix_231_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,4>",1462,G__G__Smatrix_231_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,4>",1462,G__G__Smatrix_231_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 2, 1, 1, 0, 
"F - - 10 - a h - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,4>",1462,G__G__Smatrix_231_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 2, 1, 1, 0, 
"F - 'ROOT::Math::SVector<float,4>::const_iterator' 10 - begin F - 'ROOT::Math::SVector<float,4>::const_iterator' 10 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,4>",1462,G__G__Smatrix_231_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 1, 5, 1, 0, "f - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,4>",1462,G__G__Smatrix_231_0_6, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 2, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,4>",1462,G__G__Smatrix_231_0_7, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 3, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,4>",1462,G__G__Smatrix_231_0_8, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 4, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,4>",1462,G__G__Smatrix_231_0_9, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 5, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,4>",1462,G__G__Smatrix_231_0_10, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 6, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,4>",1462,G__G__Smatrix_231_0_11, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 7, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,4>",1462,G__G__Smatrix_231_0_12, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 8, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,4>",1462,G__G__Smatrix_231_0_13, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 9, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8 "
"f - - 11 - a9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,4>",1462,G__G__Smatrix_231_0_14, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 10, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8 "
"f - - 11 - a9 f - - 11 - a10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_231_0_15, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 1, 1, 1, 1, 0, "f - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dim",282,G__G__Smatrix_231_0_16, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Math::SVector<float,4>::Dim) ), 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_231_0_17, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_231_0_18, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_231_0_19, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_231_0_20, 70, -1, G__defined_typename("ROOT::Math::SVector<float,4>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_231_0_21, 70, -1, G__defined_typename("ROOT::Math::SVector<float,4>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_231_0_22, 70, -1, G__defined_typename("ROOT::Math::SVector<float,4>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_231_0_23, 70, -1, G__defined_typename("ROOT::Math::SVector<float,4>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_231_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_231_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_231_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_231_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_231_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_231_0_29, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_231_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_231_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_231_0_32, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_231_0_33, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_231_0_34, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_231_0_35, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_231_0_36, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_231_0_37, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_231_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_231_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_231_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_231_0_41, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_231_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_231_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Smatrix_231_0_44, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_231_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVector<float,4>", 1588, G__G__Smatrix_231_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_231_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR(void) {
   /* ROOT::Math::MatRepStd<float,5,5> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_233_0_1, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_233_0_2, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_233_0_3, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_233_0_4, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_233_0_5, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_233_0_6, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_233_0_7, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<float,5,5>", 1734, G__G__Smatrix_233_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<float,5,5>", 1734, G__G__Smatrix_233_0_9, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,5,5>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<float,5,5>", 1860, G__G__Smatrix_233_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_233_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,5,5>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR(void) {
   /* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR));
   G__memfunc_setup("SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >",4322,G__G__Smatrix_235_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >",4322,G__G__Smatrix_235_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >",4322,G__G__Smatrix_235_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >",4322,G__G__Smatrix_235_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<float,15>' 'ROOT::Math::SVector<float,5*(5+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >",4322,G__G__Smatrix_235_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR), -1, 0, 1, 5, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_235_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_235_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_235_0_8, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_235_0_9, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_235_0_10, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_235_0_11, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_235_0_12, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_235_0_13, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_235_0_14, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_235_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_235_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_235_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_235_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_235_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_235_0_20, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_235_0_21, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_235_0_22, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_235_0_23, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_235_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_235_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_235_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_235_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_235_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_235_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_235_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_235_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_235_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_235_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_235_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_235_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_235_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_235_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_235_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_235_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_235_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_235_0_41, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_235_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO15gR), G__defined_typename("ROOT::Math::SVector<float,5*(5+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_235_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO15gR), G__defined_typename("ROOT::Math::SVector<float,5*(5+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_235_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "F - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_235_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >", 4448, G__G__Smatrix_235_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_235_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_239_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_239_0_2, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_239_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_239_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_239_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_240_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_240_0_2, 102, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_240_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_240_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSVectorlEfloatcO5gR(void) {
   /* ROOT::Math::SVector<float,5> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR));
   G__memfunc_setup("SVector<float,5>",1463,G__G__Smatrix_241_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,5>",1463,G__G__Smatrix_241_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,5>",1463,G__G__Smatrix_241_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 2, 1, 1, 0, 
"F - - 10 - a h - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,5>",1463,G__G__Smatrix_241_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 2, 1, 1, 0, 
"F - 'ROOT::Math::SVector<float,5>::const_iterator' 10 - begin F - 'ROOT::Math::SVector<float,5>::const_iterator' 10 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,5>",1463,G__G__Smatrix_241_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 1, 5, 1, 0, "f - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,5>",1463,G__G__Smatrix_241_0_6, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 2, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,5>",1463,G__G__Smatrix_241_0_7, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 3, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,5>",1463,G__G__Smatrix_241_0_8, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 4, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,5>",1463,G__G__Smatrix_241_0_9, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 5, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,5>",1463,G__G__Smatrix_241_0_10, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 6, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,5>",1463,G__G__Smatrix_241_0_11, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 7, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,5>",1463,G__G__Smatrix_241_0_12, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 8, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,5>",1463,G__G__Smatrix_241_0_13, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 9, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8 "
"f - - 11 - a9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,5>",1463,G__G__Smatrix_241_0_14, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 10, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8 "
"f - - 11 - a9 f - - 11 - a10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_241_0_15, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 1, 1, 1, 1, 0, "f - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dim",282,G__G__Smatrix_241_0_16, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Math::SVector<float,5>::Dim) ), 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_241_0_17, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_241_0_18, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_241_0_19, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_241_0_20, 70, -1, G__defined_typename("ROOT::Math::SVector<float,5>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_241_0_21, 70, -1, G__defined_typename("ROOT::Math::SVector<float,5>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_241_0_22, 70, -1, G__defined_typename("ROOT::Math::SVector<float,5>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_241_0_23, 70, -1, G__defined_typename("ROOT::Math::SVector<float,5>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_241_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_241_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_241_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_241_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_241_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_241_0_29, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_241_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_241_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_241_0_32, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_241_0_33, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_241_0_34, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_241_0_35, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_241_0_36, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_241_0_37, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_241_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_241_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_241_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_241_0_41, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_241_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_241_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Smatrix_241_0_44, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_241_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVector<float,5>", 1589, G__G__Smatrix_241_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_241_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,5>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR(void) {
   /* ROOT::Math::MatRepStd<float,6,6> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_243_0_1, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_243_0_2, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_243_0_3, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_243_0_4, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_243_0_5, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_243_0_6, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_243_0_7, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<float,6,6>", 1736, G__G__Smatrix_243_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<float,6,6>", 1736, G__G__Smatrix_243_0_9, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,6,6>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<float,6,6>", 1862, G__G__Smatrix_243_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_243_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,6,6>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR(void) {
   /* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR));
   G__memfunc_setup("SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >",4326,G__G__Smatrix_245_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >",4326,G__G__Smatrix_245_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >",4326,G__G__Smatrix_245_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >",4326,G__G__Smatrix_245_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<float,21>' 'ROOT::Math::SVector<float,6*(6+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >",4326,G__G__Smatrix_245_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR), -1, 0, 1, 5, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_245_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_245_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_245_0_8, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_245_0_9, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_245_0_10, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_245_0_11, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_245_0_12, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_245_0_13, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_245_0_14, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_245_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_245_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_245_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_245_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_245_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_245_0_20, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_245_0_21, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_245_0_22, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_245_0_23, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_245_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_245_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_245_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_245_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_245_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_245_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_245_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_245_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_245_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_245_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_245_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_245_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_245_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_245_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_245_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_245_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_245_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_245_0_41, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_245_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO21gR), G__defined_typename("ROOT::Math::SVector<float,6*(6+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_245_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO21gR), G__defined_typename("ROOT::Math::SVector<float,6*(6+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_245_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "F - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_245_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >", 4452, G__G__Smatrix_245_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_245_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_249_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_249_0_2, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_249_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_249_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_249_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_250_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_250_0_2, 102, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_250_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_250_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR(void) {
   /* ROOT::Math::MatRepStd<float,7,7> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_251_0_1, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_251_0_2, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_251_0_3, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_251_0_4, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_251_0_5, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_251_0_6, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_251_0_7, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<float,7,7>", 1738, G__G__Smatrix_251_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<float,7,7>", 1738, G__G__Smatrix_251_0_9, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,7,7>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<float,7,7>", 1864, G__G__Smatrix_251_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_251_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,7,7>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR(void) {
   /* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR));
   G__memfunc_setup("SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >",4330,G__G__Smatrix_253_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >",4330,G__G__Smatrix_253_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >",4330,G__G__Smatrix_253_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >",4330,G__G__Smatrix_253_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<float,28>' 'ROOT::Math::SVector<float,7*(7+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >",4330,G__G__Smatrix_253_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR), -1, 0, 1, 5, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_253_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_253_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_253_0_8, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_253_0_9, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_253_0_10, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_253_0_11, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_253_0_12, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_253_0_13, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_253_0_14, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_253_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_253_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_253_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_253_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_253_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_253_0_20, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_253_0_21, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_253_0_22, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_253_0_23, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_253_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_253_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_253_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_253_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_253_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_253_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_253_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_253_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_253_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_253_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_253_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_253_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_253_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_253_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_253_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_253_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_253_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_253_0_41, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_253_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO28gR), G__defined_typename("ROOT::Math::SVector<float,7*(7+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_253_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO28gR), G__defined_typename("ROOT::Math::SVector<float,7*(7+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_253_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "F - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_253_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >", 4456, G__G__Smatrix_253_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_253_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_257_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_257_0_2, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_257_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_257_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_257_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_258_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_258_0_2, 102, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_258_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_258_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSVectorlEfloatcO7gR(void) {
   /* ROOT::Math::SVector<float,7> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR));
   G__memfunc_setup("SVector<float,7>",1465,G__G__Smatrix_259_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,7>",1465,G__G__Smatrix_259_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,7>",1465,G__G__Smatrix_259_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 2, 1, 1, 0, 
"F - - 10 - a h - - 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,7>",1465,G__G__Smatrix_259_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 2, 1, 1, 0, 
"F - 'ROOT::Math::SVector<float,7>::const_iterator' 10 - begin F - 'ROOT::Math::SVector<float,7>::const_iterator' 10 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,7>",1465,G__G__Smatrix_259_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 1, 5, 1, 0, "f - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,7>",1465,G__G__Smatrix_259_0_6, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 2, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,7>",1465,G__G__Smatrix_259_0_7, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 3, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,7>",1465,G__G__Smatrix_259_0_8, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 4, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,7>",1465,G__G__Smatrix_259_0_9, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 5, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,7>",1465,G__G__Smatrix_259_0_10, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 6, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,7>",1465,G__G__Smatrix_259_0_11, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 7, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,7>",1465,G__G__Smatrix_259_0_12, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 8, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,7>",1465,G__G__Smatrix_259_0_13, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 9, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8 "
"f - - 11 - a9", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVector<float,7>",1465,G__G__Smatrix_259_0_14, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 10, 1, 1, 0, 
"f - - 11 - a1 f - - 11 - a2 "
"f - - 11 - a3 f - - 11 - a4 "
"f - - 11 - a5 f - - 11 - a6 "
"f - - 11 - a7 f - - 11 - a8 "
"f - - 11 - a9 f - - 11 - a10", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_259_0_15, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 1, 1, 1, 1, 0, "f - - 11 - a1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dim",282,G__G__Smatrix_259_0_16, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Math::SVector<float,7>::Dim) ), 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_259_0_17, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_259_0_18, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_259_0_19, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_259_0_20, 70, -1, G__defined_typename("ROOT::Math::SVector<float,7>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_259_0_21, 70, -1, G__defined_typename("ROOT::Math::SVector<float,7>::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_259_0_22, 70, -1, G__defined_typename("ROOT::Math::SVector<float,7>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_259_0_23, 70, -1, G__defined_typename("ROOT::Math::SVector<float,7>::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_259_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_259_0_25, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_259_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_259_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_259_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_259_0_29, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_259_0_30, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_259_0_31, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SVector<float,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_259_0_32, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_259_0_33, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_259_0_34, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_259_0_35, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_259_0_36, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_259_0_37, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_259_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_259_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_259_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_259_0_41, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_259_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_259_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Smatrix_259_0_44, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_259_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVector<float,7>", 1591, G__G__Smatrix_259_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_259_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SVector<float,7>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEfloatcO2gR(void) {
   /* ROOT::Math::MatRepSym<float,2> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR));
   G__memfunc_setup("MatRepSym<float,2>",1648,G__G__Smatrix_261_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_261_0_2, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_261_0_3, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_261_0_4, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_261_0_5, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_261_0_6, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_261_0_7, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_261_0_8, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_261_0_9, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_261_0_10, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_261_0_11, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,2>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__G__Smatrix_261_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__G__Smatrix_261_0_13, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE2gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<float,2>", 1648, G__G__Smatrix_261_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,2>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<float,2>", 1774, G__G__Smatrix_261_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR(void) {
   /* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR));
   G__memfunc_setup("SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >",4230,G__G__Smatrix_263_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >",4230,G__G__Smatrix_263_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >",4230,G__G__Smatrix_263_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >",4230,G__G__Smatrix_263_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<float,3>' 'ROOT::Math::SVector<float,2*(2+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >",4230,G__G__Smatrix_263_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR), -1, 0, 1, 5, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_263_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_263_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_263_0_8, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_263_0_9, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_263_0_10, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_263_0_11, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_263_0_12, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_263_0_13, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_263_0_14, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_263_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_263_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_263_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_263_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_263_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_263_0_20, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_263_0_21, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_263_0_22, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_263_0_23, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_263_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_263_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_263_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_263_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_263_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_263_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_263_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_263_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_263_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_263_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_263_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_263_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_263_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_263_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_263_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_263_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_263_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_263_0_41, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_263_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), G__defined_typename("ROOT::Math::SVector<float,2*(2+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_263_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), G__defined_typename("ROOT::Math::SVector<float,2*(2+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_263_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "F - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_263_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >", 4356, G__G__Smatrix_263_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_265_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_265_0_2, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_265_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_265_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_265_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_266_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_266_0_2, 102, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_266_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_266_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEfloatcO3gR(void) {
   /* ROOT::Math::MatRepSym<float,3> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR));
   G__memfunc_setup("MatRepSym<float,3>",1649,G__G__Smatrix_267_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_267_0_2, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_267_0_3, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_267_0_4, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_267_0_5, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_267_0_6, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_267_0_7, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_267_0_8, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_267_0_9, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_267_0_10, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_267_0_11, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,3>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__G__Smatrix_267_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__G__Smatrix_267_0_13, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE3gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<float,3>", 1649, G__G__Smatrix_267_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<float,3>", 1775, G__G__Smatrix_267_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR(void) {
   /* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR));
   G__memfunc_setup("SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >",4233,G__G__Smatrix_269_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >",4233,G__G__Smatrix_269_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >",4233,G__G__Smatrix_269_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >",4233,G__G__Smatrix_269_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<float,6>' 'ROOT::Math::SVector<float,3*(3+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >",4233,G__G__Smatrix_269_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR), -1, 0, 1, 5, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_269_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_269_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_269_0_8, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_269_0_9, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_269_0_10, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_269_0_11, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_269_0_12, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_269_0_13, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_269_0_14, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_269_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_269_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_269_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_269_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_269_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_269_0_20, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_269_0_21, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_269_0_22, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_269_0_23, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_269_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_269_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_269_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_269_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_269_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_269_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_269_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_269_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_269_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_269_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_269_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_269_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_269_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_269_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_269_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_269_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_269_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_269_0_41, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_269_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), G__defined_typename("ROOT::Math::SVector<float,3*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_269_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), G__defined_typename("ROOT::Math::SVector<float,3*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_269_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "F - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_269_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >", 4359, G__G__Smatrix_269_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_271_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_271_0_2, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_271_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_271_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_271_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_272_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_272_0_2, 102, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_272_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_272_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEfloatcO4gR(void) {
   /* ROOT::Math::MatRepSym<float,4> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR));
   G__memfunc_setup("MatRepSym<float,4>",1650,G__G__Smatrix_273_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_273_0_2, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_273_0_3, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_273_0_4, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_273_0_5, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_273_0_6, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_273_0_7, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_273_0_8, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_273_0_9, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_273_0_10, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_273_0_11, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,4>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__G__Smatrix_273_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__G__Smatrix_273_0_13, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE4gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<float,4>", 1650, G__G__Smatrix_273_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<float,4>", 1776, G__G__Smatrix_273_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR(void) {
   /* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR));
   G__memfunc_setup("SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >",4236,G__G__Smatrix_275_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >",4236,G__G__Smatrix_275_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >",4236,G__G__Smatrix_275_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >",4236,G__G__Smatrix_275_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<float,10>' 'ROOT::Math::SVector<float,4*(4+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >",4236,G__G__Smatrix_275_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR), -1, 0, 1, 5, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_275_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_275_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_275_0_8, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_275_0_9, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_275_0_10, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_275_0_11, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_275_0_12, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_275_0_13, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_275_0_14, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_275_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_275_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_275_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_275_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_275_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_275_0_20, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_275_0_21, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_275_0_22, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_275_0_23, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_275_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_275_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_275_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_275_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_275_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_275_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_275_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_275_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_275_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_275_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_275_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_275_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_275_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_275_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_275_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_275_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_275_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_275_0_41, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_275_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO10gR), G__defined_typename("ROOT::Math::SVector<float,4*(4+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_275_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO10gR), G__defined_typename("ROOT::Math::SVector<float,4*(4+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_275_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "F - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_275_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >", 4362, G__G__Smatrix_275_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_277_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_277_0_2, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_277_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_277_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_277_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_278_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_278_0_2, 102, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_278_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_278_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEfloatcO5gR(void) {
   /* ROOT::Math::MatRepSym<float,5> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR));
   G__memfunc_setup("MatRepSym<float,5>",1651,G__G__Smatrix_279_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_279_0_2, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_279_0_3, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_279_0_4, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_279_0_5, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_279_0_6, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_279_0_7, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_279_0_8, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_279_0_9, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_279_0_10, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_279_0_11, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,5>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__G__Smatrix_279_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__G__Smatrix_279_0_13, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE5gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<float,5>", 1651, G__G__Smatrix_279_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,5>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<float,5>", 1777, G__G__Smatrix_279_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR(void) {
   /* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR));
   G__memfunc_setup("SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >",4239,G__G__Smatrix_281_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >",4239,G__G__Smatrix_281_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >",4239,G__G__Smatrix_281_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >",4239,G__G__Smatrix_281_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<float,15>' 'ROOT::Math::SVector<float,5*(5+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >",4239,G__G__Smatrix_281_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR), -1, 0, 1, 5, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_281_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_281_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_281_0_8, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_281_0_9, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_281_0_10, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_281_0_11, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_281_0_12, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_281_0_13, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_281_0_14, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_281_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_281_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_281_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_281_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_281_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_281_0_20, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_281_0_21, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_281_0_22, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_281_0_23, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_281_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_281_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_281_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_281_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_281_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_281_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_281_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_281_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_281_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_281_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_281_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_281_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_281_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_281_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_281_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_281_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_281_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_281_0_41, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_281_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO15gR), G__defined_typename("ROOT::Math::SVector<float,5*(5+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_281_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO15gR), G__defined_typename("ROOT::Math::SVector<float,5*(5+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_281_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "F - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_281_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >", 4365, G__G__Smatrix_281_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_283_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_283_0_2, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_283_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_283_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_283_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_284_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_284_0_2, 102, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_284_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_284_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEfloatcO6gR(void) {
   /* ROOT::Math::MatRepSym<float,6> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR));
   G__memfunc_setup("MatRepSym<float,6>",1652,G__G__Smatrix_285_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_285_0_2, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_285_0_3, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_285_0_4, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_285_0_5, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_285_0_6, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_285_0_7, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_285_0_8, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_285_0_9, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_285_0_10, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_285_0_11, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,6>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__G__Smatrix_285_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__G__Smatrix_285_0_13, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE6gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<float,6>", 1652, G__G__Smatrix_285_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,6>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<float,6>", 1778, G__G__Smatrix_285_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR(void) {
   /* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR));
   G__memfunc_setup("SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >",4242,G__G__Smatrix_287_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >",4242,G__G__Smatrix_287_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >",4242,G__G__Smatrix_287_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >",4242,G__G__Smatrix_287_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<float,21>' 'ROOT::Math::SVector<float,6*(6+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >",4242,G__G__Smatrix_287_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR), -1, 0, 1, 5, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_287_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_287_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_287_0_8, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_287_0_9, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_287_0_10, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_287_0_11, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_287_0_12, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_287_0_13, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_287_0_14, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_287_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_287_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_287_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_287_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_287_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_287_0_20, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_287_0_21, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_287_0_22, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_287_0_23, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_287_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_287_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_287_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_287_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_287_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_287_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_287_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_287_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_287_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_287_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_287_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_287_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_287_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_287_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_287_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_287_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_287_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_287_0_41, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_287_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO21gR), G__defined_typename("ROOT::Math::SVector<float,6*(6+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_287_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO21gR), G__defined_typename("ROOT::Math::SVector<float,6*(6+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_287_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "F - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_287_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >", 4368, G__G__Smatrix_287_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_289_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_289_0_2, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_289_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_289_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_289_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_290_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_290_0_2, 102, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_290_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_290_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEfloatcO7gR(void) {
   /* ROOT::Math::MatRepSym<float,7> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR));
   G__memfunc_setup("MatRepSym<float,7>",1653,G__G__Smatrix_291_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_291_0_2, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_291_0_3, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_291_0_4, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_291_0_5, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_291_0_6, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_291_0_7, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_291_0_8, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_291_0_9, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_291_0_10, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_291_0_11, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,7>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOffsets",1326,G__G__Smatrix_291_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Offsets",730,G__G__Smatrix_291_0_13, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE7gR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepSym<float,7>", 1653, G__G__Smatrix_291_0_14, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepSym<float,7>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepSym<float,7>", 1779, G__G__Smatrix_291_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR(void) {
   /* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR));
   G__memfunc_setup("SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >",4245,G__G__Smatrix_293_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >",4245,G__G__Smatrix_293_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >",4245,G__G__Smatrix_293_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >",4245,G__G__Smatrix_293_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<float,28>' 'ROOT::Math::SVector<float,7*(7+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >",4245,G__G__Smatrix_293_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR), -1, 0, 1, 5, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_293_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_293_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_293_0_8, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_293_0_9, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_293_0_10, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_293_0_11, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_293_0_12, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_293_0_13, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_293_0_14, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_293_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_293_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_293_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_293_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_293_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_293_0_20, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_293_0_21, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_293_0_22, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_293_0_23, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_293_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_293_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_293_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_293_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_293_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_293_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_293_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_293_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_293_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_293_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_293_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_293_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_293_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_293_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_293_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_293_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_293_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_293_0_41, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_293_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO28gR), G__defined_typename("ROOT::Math::SVector<float,7*(7+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_293_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO28gR), G__defined_typename("ROOT::Math::SVector<float,7*(7+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_293_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "F - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_293_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >", 4371, G__G__Smatrix_293_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_295_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_295_0_2, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_295_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_295_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_295_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_296_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_296_0_2, 102, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_296_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_296_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR(void) {
   /* ROOT::Math::MatRepStd<double,4,3> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_297_0_1, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_297_0_2, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_297_0_3, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_297_0_4, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_297_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_297_0_6, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_297_0_7, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<double,4,3>", 1832, G__G__Smatrix_297_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<double,4,3>", 1832, G__G__Smatrix_297_0_9, (int) ('i'), 
G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,4,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<double,4,3>", 1958, G__G__Smatrix_297_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_297_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,4,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR(void) {
   /* ROOT::Math::MatRepStd<double,3,4> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_299_0_1, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_299_0_2, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_299_0_3, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_299_0_4, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_299_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_299_0_6, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_299_0_7, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<double,3,4>", 1832, G__G__Smatrix_299_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<double,3,4>", 1832, G__G__Smatrix_299_0_9, (int) ('i'), 
G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,3,4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<double,3,4>", 1958, G__G__Smatrix_299_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_299_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,3,4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR(void) {
   /* ROOT::Math::MatRepStd<double,9,7> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_301_0_1, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_301_0_2, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_301_0_3, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_301_0_4, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_301_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_301_0_6, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_301_0_7, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<double,9,7>", 1841, G__G__Smatrix_301_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<double,9,7>", 1841, G__G__Smatrix_301_0_9, (int) ('i'), 
G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,9,7>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<double,9,7>", 1967, G__G__Smatrix_301_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_301_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<double,9,7>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR(void) {
   /* ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR));
   G__memfunc_setup("SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >",4518,G__G__Smatrix_303_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >",4518,G__G__Smatrix_303_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >",4518,G__G__Smatrix_303_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >",4518,G__G__Smatrix_303_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<double,8>' 'ROOT::Math::SVector<double,4*(3+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >",4518,G__G__Smatrix_303_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR), -1, 0, 1, 5, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_303_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_303_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_303_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_303_0_9, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_303_0_10, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_303_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_303_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_303_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_303_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_303_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_303_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_303_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_303_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_303_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_303_0_20, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_303_0_21, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_303_0_22, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_303_0_23, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_303_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_303_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_303_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_303_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_303_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_303_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_303_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_303_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_303_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_303_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_303_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_303_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_303_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_303_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_303_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_303_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_303_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_303_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_303_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO8gR), G__defined_typename("ROOT::Math::SVector<double,4*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_303_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO8gR), G__defined_typename("ROOT::Math::SVector<double,4*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_303_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_303_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >", 4644, G__G__Smatrix_303_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_303_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_307_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_307_0_2, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_307_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_307_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_307_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_308_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_308_0_2, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_308_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_308_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR(void) {
   /* ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR));
   G__memfunc_setup("SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >",4518,G__G__Smatrix_309_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >",4518,G__G__Smatrix_309_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >",4518,G__G__Smatrix_309_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >",4518,G__G__Smatrix_309_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<double,7>' 'ROOT::Math::SVector<double,3*(4+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >",4518,G__G__Smatrix_309_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR), -1, 0, 1, 5, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_309_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_309_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_309_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_309_0_9, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_309_0_10, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_309_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_309_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_309_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_309_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_309_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_309_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_309_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_309_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_309_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_309_0_20, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_309_0_21, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_309_0_22, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_309_0_23, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_309_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_309_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_309_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_309_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_309_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_309_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_309_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_309_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_309_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_309_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_309_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_309_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_309_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_309_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_309_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_309_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_309_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_309_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_309_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), G__defined_typename("ROOT::Math::SVector<double,3*(4+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_309_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), G__defined_typename("ROOT::Math::SVector<double,3*(4+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_309_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_309_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >", 4644, G__G__Smatrix_309_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_309_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_311_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_311_0_2, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_311_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_311_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_311_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_312_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_312_0_2, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_312_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_312_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR(void) {
   /* ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR));
   G__memfunc_setup("SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >",4536,G__G__Smatrix_313_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >",4536,G__G__Smatrix_313_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >",4536,G__G__Smatrix_313_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >",4536,G__G__Smatrix_313_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<double,36>' 'ROOT::Math::SVector<double,9*(7+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >",4536,G__G__Smatrix_313_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR), -1, 0, 1, 5, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_313_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_313_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_313_0_8, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_313_0_9, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_313_0_10, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_313_0_11, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_313_0_12, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_313_0_13, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_313_0_14, 68, -1, G__defined_typename("ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_313_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_313_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_313_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_313_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_313_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_313_0_20, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_313_0_21, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_313_0_22, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_313_0_23, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_313_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_313_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_313_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_313_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_313_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_313_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_313_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_313_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_313_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_313_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_313_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_313_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_313_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_313_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_313_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_313_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO9gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_313_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO9gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_313_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_313_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO36gR), G__defined_typename("ROOT::Math::SVector<double,9*(7+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_313_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO36gR), G__defined_typename("ROOT::Math::SVector<double,9*(7+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_313_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_313_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >", 4662, G__G__Smatrix_313_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_313_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_317_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_317_0_2, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_317_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_317_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_317_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_318_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_318_0_2, 100, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_318_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_318_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR(void) {
   /* ROOT::Math::MatRepStd<float,4,3> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_321_0_1, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_321_0_2, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_321_0_3, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_321_0_4, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_321_0_5, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_321_0_6, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_321_0_7, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<float,4,3>", 1731, G__G__Smatrix_321_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<float,4,3>", 1731, G__G__Smatrix_321_0_9, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,4,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<float,4,3>", 1857, G__G__Smatrix_321_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_321_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,4,3>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR(void) {
   /* ROOT::Math::MatRepStd<float,3,4> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_323_0_1, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_323_0_2, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_323_0_3, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_323_0_4, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_323_0_5, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_323_0_6, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_323_0_7, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<float,3,4>", 1731, G__G__Smatrix_323_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<float,3,4>", 1731, G__G__Smatrix_323_0_9, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,3,4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<float,3,4>", 1857, G__G__Smatrix_323_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_323_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,3,4>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR(void) {
   /* ROOT::Math::MatRepStd<float,9,7> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR));
   G__memfunc_setup("operator()",957,G__G__Smatrix_325_0_1, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_325_0_2, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_325_0_3, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_325_0_4, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_325_0_5, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_325_0_6, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_325_0_7, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("MatRepStd<float,9,7>", 1740, G__G__Smatrix_325_0_8, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MatRepStd<float,9,7>", 1740, G__G__Smatrix_325_0_9, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,9,7>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MatRepStd<float,9,7>", 1866, G__G__Smatrix_325_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_325_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::MatRepStd<float,9,7>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR(void) {
   /* ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR));
   G__memfunc_setup("SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >",4316,G__G__Smatrix_327_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >",4316,G__G__Smatrix_327_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >",4316,G__G__Smatrix_327_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >",4316,G__G__Smatrix_327_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<float,8>' 'ROOT::Math::SVector<float,4*(3+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >",4316,G__G__Smatrix_327_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR), -1, 0, 1, 5, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_327_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_327_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_327_0_8, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_327_0_9, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_327_0_10, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_327_0_11, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_327_0_12, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_327_0_13, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_327_0_14, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_327_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_327_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_327_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_327_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_327_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_327_0_20, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_327_0_21, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_327_0_22, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_327_0_23, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_327_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_327_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_327_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_327_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_327_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_327_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_327_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_327_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_327_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_327_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_327_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_327_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_327_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_327_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_327_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_327_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_327_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_327_0_41, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_327_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO8gR), G__defined_typename("ROOT::Math::SVector<float,4*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_327_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO8gR), G__defined_typename("ROOT::Math::SVector<float,4*(3+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_327_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "F - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_327_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >", 4442, G__G__Smatrix_327_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_327_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_331_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_331_0_2, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_331_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_331_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_331_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_332_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_332_0_2, 102, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_332_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_332_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR(void) {
   /* ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR));
   G__memfunc_setup("SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >",4316,G__G__Smatrix_333_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >",4316,G__G__Smatrix_333_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >",4316,G__G__Smatrix_333_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >",4316,G__G__Smatrix_333_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<float,7>' 'ROOT::Math::SVector<float,3*(4+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >",4316,G__G__Smatrix_333_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR), -1, 0, 1, 5, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_333_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_333_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_333_0_8, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_333_0_9, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_333_0_10, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_333_0_11, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_333_0_12, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_333_0_13, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_333_0_14, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_333_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_333_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_333_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_333_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_333_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_333_0_20, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_333_0_21, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_333_0_22, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_333_0_23, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_333_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_333_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_333_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_333_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_333_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_333_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_333_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_333_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_333_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_333_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_333_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_333_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_333_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_333_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_333_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_333_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_333_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_333_0_41, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_333_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), G__defined_typename("ROOT::Math::SVector<float,3*(4+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_333_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), G__defined_typename("ROOT::Math::SVector<float,3*(4+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_333_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "F - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_333_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >", 4442, G__G__Smatrix_333_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_333_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_335_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_335_0_2, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_335_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_335_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_335_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_336_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_336_0_2, 102, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_336_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_336_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR(void) {
   /* ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR));
   G__memfunc_setup("SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >",4334,G__G__Smatrix_337_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >",4334,G__G__Smatrix_337_0_2, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >",4334,G__G__Smatrix_337_0_3, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >",4334,G__G__Smatrix_337_0_4, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SVector<float,36>' 'ROOT::Math::SVector<float,9*(7+1)/2>' 11 - v g - - 0 'true' lower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >",4334,G__G__Smatrix_337_0_5, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR), -1, 0, 1, 5, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_337_0_6, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrixIdentity' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Smatrix_337_0_7, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__G__Smatrix_337_0_8, 102, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_337_0_9, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__G__Smatrix_337_0_10, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_337_0_11, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_337_0_12, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__Smatrix_337_0_13, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__Smatrix_337_0_14, 70, -1, G__defined_typename("ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Smatrix_337_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_337_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Smatrix_337_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__G__Smatrix_337_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__G__Smatrix_337_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_337_0_20, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Smatrix_337_0_21, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_337_0_22, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("At",181,G__G__Smatrix_337_0_23, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_337_0_24, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_337_0_25, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Smatrix_337_0_26, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Smatrix_337_0_27, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Smatrix_337_0_28, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Smatrix_337_0_29, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR), -1, 1, 1, 1, 1, 0, "f - - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Smatrix_337_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Smatrix_337_0_31, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertFast",1030,G__G__Smatrix_337_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseFast",1130,G__G__Smatrix_337_0_33, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvertChol",1022,G__G__Smatrix_337_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseChol",1122,G__G__Smatrix_337_0_35, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR), -1, 0, 1, 1, 1, 8, "i - - 1 - ifail", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det",285,G__G__Smatrix_337_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Det2",335,G__G__Smatrix_337_0_37, 103, -1, -1, 0, 1, 1, 1, 8, "f - - 1 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Row",312,G__G__Smatrix_337_0_38, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR), -1, 0, 1, 1, 1, 8, "h - - 0 - therow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Col",286,G__G__Smatrix_337_0_39, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO9gR), -1, 0, 1, 1, 1, 8, "h - - 0 - thecol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Diagonal",799,G__G__Smatrix_337_0_40, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO9gR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trace",495,G__G__Smatrix_337_0_41, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperBlock",1015,G__G__Smatrix_337_0_42, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO36gR), G__defined_typename("ROOT::Math::SVector<float,9*(7+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerBlock",1012,G__G__Smatrix_337_0_43, 117, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO36gR), G__defined_typename("ROOT::Math::SVector<float,9*(7+1)/2>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInUse",672,G__G__Smatrix_337_0_44, 103, -1, -1, 0, 1, 1, 1, 8, "F - - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__Smatrix_337_0_45, 117, G__get_linked_tagnum(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >", 4460, G__G__Smatrix_337_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_337_0_47, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow(void) {
   /* ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow));
   G__memfunc_setup("SMatrixRow",1024,G__G__Smatrix_341_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >' - 1 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_341_0_2, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow", 1024, G__G__Smatrix_341_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow", 1150, G__G__Smatrix_341_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Smatrix_341_0_5, (int) ('u'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow), -1, 1, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const(void) {
   /* ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const));
   G__memfunc_setup("SMatrixRow_const",1670,G__G__Smatrix_342_0_1, 105, G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >' - 11 - rhs h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Smatrix_342_0_2, 102, -1, -1, 1, 1, 1, 1, 9, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SMatrixRow_const", 1670, G__G__Smatrix_342_0_3, (int) ('i'), G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const), -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SMatrixRow_const", 1796, G__G__Smatrix_342_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Smatrix() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Smatrix() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Smatrix() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__SmatrixLN_ROOT = { "ROOT" , 110 , -1 };
G__linked_taginfo G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMath = { "ROOT::Math" , 110 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE2gR = { "ROOT::Math::RowOffsets<2>" , 115 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE3gR = { "ROOT::Math::RowOffsets<3>" , 115 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE4gR = { "ROOT::Math::RowOffsets<4>" , 115 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE5gR = { "ROOT::Math::RowOffsets<5>" , 115 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE6gR = { "ROOT::Math::RowOffsets<6>" , 115 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE7gR = { "ROOT::Math::RowOffsets<7>" , 115 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixIdentity = { "ROOT::Math::SMatrixIdentity" , 115 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR = { "ROOT::Math::MatRepStd<double,2,2>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRcLcLdA = { "ROOT::Math::MatRepStd<double,2,2>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR = { "ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR = { "ROOT::Math::SVector<double,3>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gRcLcLdA = { "ROOT::Math::SVector<double,3>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLdA = { "ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR = { "ROOT::Math::SVector<double,2>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gRcLcLdA = { "ROOT::Math::SVector<double,2>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR = { "ROOT::Math::MatRepStd<double,3,3>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRcLcLdA = { "ROOT::Math::MatRepStd<double,3,3>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR = { "ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR = { "ROOT::Math::SVector<double,6>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gRcLcLdA = { "ROOT::Math::SVector<double,6>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLdA = { "ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR = { "ROOT::Math::MatRepStd<double,4,4>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRcLcLdA = { "ROOT::Math::MatRepStd<double,4,4>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR = { "ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO10gR = { "ROOT::Math::SVector<double,10>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLdA = { "ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR = { "ROOT::Math::SVector<double,4>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gRcLcLdA = { "ROOT::Math::SVector<double,4>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR = { "ROOT::Math::MatRepStd<double,5,5>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRcLcLdA = { "ROOT::Math::MatRepStd<double,5,5>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR = { "ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO15gR = { "ROOT::Math::SVector<double,15>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLdA = { "ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR = { "ROOT::Math::SVector<double,5>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gRcLcLdA = { "ROOT::Math::SVector<double,5>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR = { "ROOT::Math::MatRepStd<double,6,6>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRcLcLdA = { "ROOT::Math::MatRepStd<double,6,6>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR = { "ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO21gR = { "ROOT::Math::SVector<double,21>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLdA = { "ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR = { "ROOT::Math::MatRepStd<double,7,7>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRcLcLdA = { "ROOT::Math::MatRepStd<double,7,7>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR = { "ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO28gR = { "ROOT::Math::SVector<double,28>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLdA = { "ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR = { "ROOT::Math::SVector<double,7>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gRcLcLdA = { "ROOT::Math::SVector<double,7>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR = { "ROOT::Math::MatRepSym<double,2>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gRcLcLdA = { "ROOT::Math::MatRepSym<double,2>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR = { "ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLdA = { "ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR = { "ROOT::Math::MatRepSym<double,3>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gRcLcLdA = { "ROOT::Math::MatRepSym<double,3>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR = { "ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLdA = { "ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR = { "ROOT::Math::MatRepSym<double,4>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gRcLcLdA = { "ROOT::Math::MatRepSym<double,4>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR = { "ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLdA = { "ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR = { "ROOT::Math::MatRepSym<double,5>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gRcLcLdA = { "ROOT::Math::MatRepSym<double,5>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR = { "ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLdA = { "ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR = { "ROOT::Math::MatRepSym<double,6>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gRcLcLdA = { "ROOT::Math::MatRepSym<double,6>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR = { "ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLdA = { "ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR = { "ROOT::Math::MatRepSym<double,7>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gRcLcLdA = { "ROOT::Math::MatRepSym<double,7>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR = { "ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLdA = { "ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR = { "ROOT::Math::MatRepStd<float,2,2>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRcLcLdA = { "ROOT::Math::MatRepStd<float,2,2>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR = { "ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR = { "ROOT::Math::SVector<float,3>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gRcLcLdA = { "ROOT::Math::SVector<float,3>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLdA = { "ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR = { "ROOT::Math::SVector<float,2>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gRcLcLdA = { "ROOT::Math::SVector<float,2>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR = { "ROOT::Math::MatRepStd<float,3,3>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRcLcLdA = { "ROOT::Math::MatRepStd<float,3,3>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR = { "ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR = { "ROOT::Math::SVector<float,6>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gRcLcLdA = { "ROOT::Math::SVector<float,6>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLdA = { "ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR = { "ROOT::Math::MatRepStd<float,4,4>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRcLcLdA = { "ROOT::Math::MatRepStd<float,4,4>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR = { "ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO10gR = { "ROOT::Math::SVector<float,10>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLdA = { "ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR = { "ROOT::Math::SVector<float,4>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gRcLcLdA = { "ROOT::Math::SVector<float,4>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR = { "ROOT::Math::MatRepStd<float,5,5>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRcLcLdA = { "ROOT::Math::MatRepStd<float,5,5>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR = { "ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO15gR = { "ROOT::Math::SVector<float,15>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLdA = { "ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR = { "ROOT::Math::SVector<float,5>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gRcLcLdA = { "ROOT::Math::SVector<float,5>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR = { "ROOT::Math::MatRepStd<float,6,6>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRcLcLdA = { "ROOT::Math::MatRepStd<float,6,6>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR = { "ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO21gR = { "ROOT::Math::SVector<float,21>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLdA = { "ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR = { "ROOT::Math::MatRepStd<float,7,7>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRcLcLdA = { "ROOT::Math::MatRepStd<float,7,7>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR = { "ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO28gR = { "ROOT::Math::SVector<float,28>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLdA = { "ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR = { "ROOT::Math::SVector<float,7>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gRcLcLdA = { "ROOT::Math::SVector<float,7>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR = { "ROOT::Math::MatRepSym<float,2>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gRcLcLdA = { "ROOT::Math::MatRepSym<float,2>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR = { "ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLdA = { "ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR = { "ROOT::Math::MatRepSym<float,3>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gRcLcLdA = { "ROOT::Math::MatRepSym<float,3>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR = { "ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLdA = { "ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR = { "ROOT::Math::MatRepSym<float,4>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gRcLcLdA = { "ROOT::Math::MatRepSym<float,4>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR = { "ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLdA = { "ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR = { "ROOT::Math::MatRepSym<float,5>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gRcLcLdA = { "ROOT::Math::MatRepSym<float,5>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR = { "ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLdA = { "ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR = { "ROOT::Math::MatRepSym<float,6>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gRcLcLdA = { "ROOT::Math::MatRepSym<float,6>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR = { "ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLdA = { "ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR = { "ROOT::Math::MatRepSym<float,7>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gRcLcLdA = { "ROOT::Math::MatRepSym<float,7>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR = { "ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLdA = { "ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR = { "ROOT::Math::MatRepStd<double,4,3>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRcLcLdA = { "ROOT::Math::MatRepStd<double,4,3>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR = { "ROOT::Math::MatRepStd<double,3,4>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRcLcLdA = { "ROOT::Math::MatRepStd<double,3,4>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR = { "ROOT::Math::MatRepStd<double,9,7>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRcLcLdA = { "ROOT::Math::MatRepStd<double,9,7>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR = { "ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO8gR = { "ROOT::Math::SVector<double,8>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLdA = { "ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR = { "ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLdA = { "ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR = { "ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO36gR = { "ROOT::Math::SVector<double,36>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLdA = { "ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO9gR = { "ROOT::Math::SVector<double,9>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR = { "ROOT::Math::MatRepStd<float,4,3>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRcLcLdA = { "ROOT::Math::MatRepStd<float,4,3>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR = { "ROOT::Math::MatRepStd<float,3,4>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRcLcLdA = { "ROOT::Math::MatRepStd<float,3,4>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR = { "ROOT::Math::MatRepStd<float,9,7>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRcLcLdA = { "ROOT::Math::MatRepStd<float,9,7>::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR = { "ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO8gR = { "ROOT::Math::SVector<float,8>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLdA = { "ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR = { "ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLdA = { "ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR = { "ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO36gR = { "ROOT::Math::SVector<float,36>" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLdA = { "ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::$" , 101 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow = { "ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const = { "ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const" , 99 , -1 };
G__linked_taginfo G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO9gR = { "ROOT::Math::SVector<float,9>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Smatrix() {
  G__G__SmatrixLN_ROOT.tagnum = -1 ;
  G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMath.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE2gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE3gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE4gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE5gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE6gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE7gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixIdentity.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO10gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO15gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO21gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO28gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO10gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO15gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO21gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO28gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO8gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO36gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO9gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO8gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO36gR.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLdA.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const.tagnum = -1 ;
  G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO9gR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Smatrix() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOT);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMath),0,-1,0,(char*)NULL,G__setup_memvarROOTcLcLMath,G__setup_memfuncROOTcLcLMath);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE2gR),sizeof(ROOT::Math::RowOffsets<2>),-1,256,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLRowOffsetslE2gR,G__setup_memfuncROOTcLcLMathcLcLRowOffsetslE2gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE3gR),sizeof(ROOT::Math::RowOffsets<3>),-1,256,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLRowOffsetslE3gR,G__setup_memfuncROOTcLcLMathcLcLRowOffsetslE3gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE4gR),sizeof(ROOT::Math::RowOffsets<4>),-1,256,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLRowOffsetslE4gR,G__setup_memfuncROOTcLcLMathcLcLRowOffsetslE4gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE5gR),sizeof(ROOT::Math::RowOffsets<5>),-1,256,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLRowOffsetslE5gR,G__setup_memfuncROOTcLcLMathcLcLRowOffsetslE5gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE6gR),sizeof(ROOT::Math::RowOffsets<6>),-1,256,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLRowOffsetslE6gR,G__setup_memfuncROOTcLcLMathcLcLRowOffsetslE6gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLRowOffsetslE7gR),sizeof(ROOT::Math::RowOffsets<7>),-1,256,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLRowOffsetslE7gR,G__setup_memfuncROOTcLcLMathcLcLRowOffsetslE7gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixIdentity),sizeof(ROOT::Math::SMatrixIdentity),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixIdentity,G__setup_memfuncROOTcLcLMathcLcLSMatrixIdentity);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR),sizeof(ROOT::Math::MatRepStd<double,2,2>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR),sizeof(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gR),sizeof(ROOT::Math::SVector<double,3>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSVectorlEdoublecO3gR,G__setup_memfuncROOTcLcLMathcLcLSVectorlEdoublecO3gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO3gRcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepStdlEdoublecO2cO2gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gR),sizeof(ROOT::Math::SVector<double,2>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSVectorlEdoublecO2gR,G__setup_memfuncROOTcLcLMathcLcLSVectorlEdoublecO2gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO2gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR),sizeof(ROOT::Math::MatRepStd<double,3,3>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR),sizeof(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gR),sizeof(ROOT::Math::SVector<double,6>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSVectorlEdoublecO6gR,G__setup_memfuncROOTcLcLMathcLcLSVectorlEdoublecO6gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO6gRcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO3gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR),sizeof(ROOT::Math::MatRepStd<double,4,4>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR),sizeof(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO10gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO4gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gR),sizeof(ROOT::Math::SVector<double,4>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSVectorlEdoublecO4gR,G__setup_memfuncROOTcLcLMathcLcLSVectorlEdoublecO4gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO4gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR),sizeof(ROOT::Math::MatRepStd<double,5,5>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR),sizeof(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO15gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepStdlEdoublecO5cO5gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gR),sizeof(ROOT::Math::SVector<double,5>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSVectorlEdoublecO5gR,G__setup_memfuncROOTcLcLMathcLcLSVectorlEdoublecO5gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO5gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR),sizeof(ROOT::Math::MatRepStd<double,6,6>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR),sizeof(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO21gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepStdlEdoublecO6cO6gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR),sizeof(ROOT::Math::MatRepStd<double,7,7>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR),sizeof(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO28gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO7cO7gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gR),sizeof(ROOT::Math::SVector<double,7>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSVectorlEdoublecO7gR,G__setup_memfuncROOTcLcLMathcLcLSVectorlEdoublecO7gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO7gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gR),sizeof(ROOT::Math::MatRepSym<double,2>),-1,264448,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEdoublecO2gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEdoublecO2gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO2gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR),sizeof(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO2cO2cOROOTcLcLMathcLcLMatRepSymlEdoublecO2gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gR),sizeof(ROOT::Math::MatRepSym<double,3>),-1,264448,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEdoublecO3gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEdoublecO3gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO3gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR),sizeof(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO3cOROOTcLcLMathcLcLMatRepSymlEdoublecO3gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gR),sizeof(ROOT::Math::MatRepSym<double,4>),-1,264448,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEdoublecO4gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEdoublecO4gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO4gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR),sizeof(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO4cOROOTcLcLMathcLcLMatRepSymlEdoublecO4gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gR),sizeof(ROOT::Math::MatRepSym<double,5>),-1,264448,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEdoublecO5gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEdoublecO5gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO5gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR),sizeof(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO5cO5cOROOTcLcLMathcLcLMatRepSymlEdoublecO5gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gR),sizeof(ROOT::Math::MatRepSym<double,6>),-1,264448,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEdoublecO6gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEdoublecO6gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO6gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR),sizeof(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO6cO6cOROOTcLcLMathcLcLMatRepSymlEdoublecO6gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gR),sizeof(ROOT::Math::MatRepSym<double,7>),-1,264448,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEdoublecO7gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEdoublecO7gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEdoublecO7gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR),sizeof(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO7cO7cOROOTcLcLMathcLcLMatRepSymlEdoublecO7gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR),sizeof(ROOT::Math::MatRepStd<float,2,2>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR),sizeof(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gR),sizeof(ROOT::Math::SVector<float,3>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSVectorlEfloatcO3gR,G__setup_memfuncROOTcLcLMathcLcLSVectorlEfloatcO3gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO3gRcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepStd<float,2,2> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepStdlEfloatcO2cO2gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gR),sizeof(ROOT::Math::SVector<float,2>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSVectorlEfloatcO2gR,G__setup_memfuncROOTcLcLMathcLcLSVectorlEfloatcO2gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO2gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR),sizeof(ROOT::Math::MatRepStd<float,3,3>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR),sizeof(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gR),sizeof(ROOT::Math::SVector<float,6>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSVectorlEfloatcO6gR,G__setup_memfuncROOTcLcLMathcLcLSVectorlEfloatcO6gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO6gRcLcLdA);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepStd<float,3,3> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO3gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR),sizeof(ROOT::Math::MatRepStd<float,4,4>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR),sizeof(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO10gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO4gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gR),sizeof(ROOT::Math::SVector<float,4>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSVectorlEfloatcO4gR,G__setup_memfuncROOTcLcLMathcLcLSVectorlEfloatcO4gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO4gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR),sizeof(ROOT::Math::MatRepStd<float,5,5>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR),sizeof(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO15gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepStdlEfloatcO5cO5gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gR),sizeof(ROOT::Math::SVector<float,5>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSVectorlEfloatcO5gR,G__setup_memfuncROOTcLcLMathcLcLSVectorlEfloatcO5gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO5gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR),sizeof(ROOT::Math::MatRepStd<float,6,6>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR),sizeof(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO21gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepStdlEfloatcO6cO6gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR),sizeof(ROOT::Math::MatRepStd<float,7,7>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR),sizeof(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO28gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO7cO7gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gR),sizeof(ROOT::Math::SVector<float,7>),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSVectorlEfloatcO7gR,G__setup_memfuncROOTcLcLMathcLcLSVectorlEfloatcO7gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO7gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gR),sizeof(ROOT::Math::MatRepSym<float,2>),-1,264448,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEfloatcO2gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEfloatcO2gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO2gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR),sizeof(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO2cO2cOROOTcLcLMathcLcLMatRepSymlEfloatcO2gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gR),sizeof(ROOT::Math::MatRepSym<float,3>),-1,264448,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEfloatcO3gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEfloatcO3gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO3gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR),sizeof(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO3cOROOTcLcLMathcLcLMatRepSymlEfloatcO3gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gR),sizeof(ROOT::Math::MatRepSym<float,4>),-1,264448,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEfloatcO4gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEfloatcO4gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO4gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR),sizeof(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO4cOROOTcLcLMathcLcLMatRepSymlEfloatcO4gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gR),sizeof(ROOT::Math::MatRepSym<float,5>),-1,264448,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEfloatcO5gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEfloatcO5gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO5gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR),sizeof(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO5cO5cOROOTcLcLMathcLcLMatRepSymlEfloatcO5gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gR),sizeof(ROOT::Math::MatRepSym<float,6>),-1,264448,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEfloatcO6gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEfloatcO6gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO6gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR),sizeof(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO6cO6cOROOTcLcLMathcLcLMatRepSymlEfloatcO6gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gR),sizeof(ROOT::Math::MatRepSym<float,7>),-1,264448,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepSymlEfloatcO7gR,G__setup_memfuncROOTcLcLMathcLcLMatRepSymlEfloatcO7gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepSymlEfloatcO7gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR),sizeof(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO7cO7cOROOTcLcLMathcLcLMatRepSymlEfloatcO7gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR),sizeof(ROOT::Math::MatRepStd<double,4,3>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR),sizeof(ROOT::Math::MatRepStd<double,3,4>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR),sizeof(ROOT::Math::MatRepStd<double,9,7>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR),sizeof(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO8gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO4cO3cOROOTcLcLMathcLcLMatRepStdlEdoublecO4cO3gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR),sizeof(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO3cO4cOROOTcLcLMathcLcLMatRepStdlEdoublecO3cO4gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR),sizeof(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO36gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEdoublecO9cO7cOROOTcLcLMathcLcLMatRepStdlEdoublecO9cO7gRsPgRcLcLSMatrixRow_const);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEdoublecO9gR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR),sizeof(ROOT::Math::MatRepStd<float,4,3>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR),sizeof(ROOT::Math::MatRepStd<float,3,4>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR),sizeof(ROOT::Math::MatRepStd<float,9,7>),-1,262144,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR,G__setup_memfuncROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR),sizeof(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO8gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO4cO3cOROOTcLcLMathcLcLMatRepStdlEfloatcO4cO3gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR),sizeof(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO3cO4cOROOTcLcLMathcLcLMatRepStdlEfloatcO3cO4gRsPgRcLcLSMatrixRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR),sizeof(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >),-1,297728,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO36gR);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow),sizeof(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__SmatrixLN_ROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const),sizeof(ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::SMatrixRow_const),-1,32768,(char*)NULL,G__setup_memvarROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const,G__setup_memfuncROOTcLcLMathcLcLSMatrixlEfloatcO9cO7cOROOTcLcLMathcLcLMatRepStdlEfloatcO9cO7gRsPgRcLcLSMatrixRow_const);
   G__get_linked_tagnum_fwd(&G__G__SmatrixLN_ROOTcLcLMathcLcLSVectorlEfloatcO9gR);
}
extern "C" void G__cpp_setupG__Smatrix(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Smatrix()");
  G__set_cpp_environmentG__Smatrix();
  G__cpp_setup_tagtableG__Smatrix();

  G__cpp_setup_inheritanceG__Smatrix();

  G__cpp_setup_typetableG__Smatrix();

  G__cpp_setup_memvarG__Smatrix();

  G__cpp_setup_memfuncG__Smatrix();
  G__cpp_setup_globalG__Smatrix();
  G__cpp_setup_funcG__Smatrix();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Smatrix();
  return;
}
class G__cpp_setup_initG__Smatrix {
  public:
    G__cpp_setup_initG__Smatrix() { G__add_setup_func("G__Smatrix",(G__incsetup)(&G__cpp_setupG__Smatrix)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Smatrix() { G__remove_setup_func("G__Smatrix"); }
};
G__cpp_setup_initG__Smatrix G__cpp_setup_initializerG__Smatrix;

