//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:40:23 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__MathFit.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace ROOT {
         namespace Fit {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Fit::FitData FitData;
      #else
      class FitData  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FitData() throw() {};
         ::ROOT::Fit::DataOptions fOptions; //
         ::ROOT::Fit::DataRange fRange; //
      };
      #endif
      } } 
      namespace ROOT {
         namespace Fit {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Fit::BinData BinData;
      #else
      class BinData  :  public ::ROOT::Fit::FitData {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Fit::BinData::ErrorType ErrorType;
         #else
         enum ErrorType  {
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~BinData() throw() {};
         unsigned int fDim; //coordinate dimension
         unsigned int fPointSize; //total point size including value and errors (= fDim + 2 for error in only Y ) 
         unsigned int fNPoints; //number of contained points in the data set (can be different than size of vector)
         double fRefVolume; //reference bin volume - used to normalize the bins in case of variable bins data
         ::ROOT::Fit::DataVector* fDataVector; //pointer to the copied in data vector
         ::ROOT::Fit::DataWrapper* fDataWrapper; //pointer to the external data wrapper structure
         vector< double > fBinEdge; //vector containing the bin upper edge (coordinate will contain low edge) 
      };
      #endif
      } } 
      namespace ROOT {
         namespace Fit {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Fit::UnBinData UnBinData;
      #else
      class UnBinData  :  public ::ROOT::Fit::FitData {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~UnBinData() throw() {};
         unsigned int fDim; //coordinate data dimension
         unsigned int fNPoints; //numer of fit points
         ::ROOT::Fit::DataVector* fDataVector; //pointer to internal data vector (null for external data)
         ::ROOT::Fit::DataWrapper* fDataWrapper; //pointer to structure wrapping external data (null when data are copied in)
      };
      #endif
      } } 
      namespace ROOT {
         namespace Fit {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Fit::ParameterSettings ParameterSettings;
      #else
      class ParameterSettings  {
         public:
         //friend XX;
         double fValue; //parameter value
         double fStepSize; //parameter step size (used by minimizer)
         bool fFix; //flag to control if parameter is fixed 
         double fLowerLimit; //lower parameter limit
         double fUpperLimit; //upper parameter limit
         bool fHasLowerLimit; //flag to control lower parameter limit
         bool fHasUpperLimit; //flag to control upper parameter limit
         string fName; //parameter name
      };
      #endif
      } } 
      namespace ROOT {
         namespace Fit {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Fit::FitConfig FitConfig;
      #else
      class FitConfig  {
         public:
         //friend XX;
         bool fNormErrors; //flag for error normalization
         bool fParabErrors; //get correct parabolic errors estimate (call Hesse after minimizing)  
         bool fMinosErrors; //do full error analysis using Minos
         vector< ::ROOT::Fit::ParameterSettings > fSettings; //vector with the parameter settings
         vector< unsigned int > fMinosParams; //vector with the parameter indeces for running Minos
         ::ROOT::Math::MinimizerOptions fMinimizerOpts; //minimizer control parameters including name and algo type
      };
      #endif
      } } 
      namespace ROOT {
         namespace Fit {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Fit::FitResult FitResult;
      #else
      class FitResult  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ROOT::Fit::FitResult::Fitter Fitter;
         #else
         class Fitter  {
            public:
            //friend XX;
         };
         #endif

         typedef ::ROOT::Math::IParametricFunctionMultiDim IModelFunction;
         bool fValid; //flag for indicating valid fit
         bool fNormalized; //flag for indicating is errors are normalized
         unsigned int fNFree; //number of fit free parameters (total parameters are in size of parameter vector)  
         unsigned int fNdf; //number of degree of freedom
         unsigned int fNCalls; //number of function calls
         int fStatus; //minimizer status code
         int fCovStatus; //covariance matrix status code
         double fVal; //minimum function value
         double fEdm; //expected distance from mimimum
         double fChi2; //fit chi2 value (different than fval in case of chi2 fits)
         ::ROOT::Math::IParametricFunctionMultiDim* fFitFunc; //! model function resulting  from the fit. It is given by Fitter but it is managed by FitResult
         vector< unsigned int > fFixedParams; //list of fixed parameters
         vector< unsigned int > fBoundParams; //list of limited parameters
         vector< double > fParams; //parameter values. Size is total number of parameters
         vector< double > fErrors; //errors 
         vector< double > fCovMatrix; //covariance matrix (size is npar*(npar+1)/2) where npar is total parameters
         vector< double > fGlobalCC; //global Correlation coefficient
         map< unsigned int, pair< double, double >  > fMinosErrors; //map contains the two Minos errors
         string fMinimType; //string indicating type of minimizer
         vector< ::string > fParNames; //parameter names (only with FCN only fites, when fFitFunc=0)
      };
      #endif
      } } 
      namespace ROOT {
         namespace Fit {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ROOT::Fit::SparseData SparseData;
      #else
      class SparseData  :  public ::ROOT::Fit::FitData {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~SparseData() throw() {};
         ::ROOT::Fit::ProxyListBox* fList; //
      };
      #endif
      } } 
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
namespace Fit {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void ROOTcLcLFit_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ROOT::Fit", 0 /*version*/, "include/Fit/SparseData.h", 27,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &ROOTcLcLFit_Dictionary, 0);
         return &instance;
      }
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void ROOTcLcLFit_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOT {
   void ROOTcLcLFitcLcLDataOptions_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLFitcLcLDataOptions_Dictionary();
   static void *new_ROOTcLcLFitcLcLDataOptions(void *p = 0);
   static void *newArray_ROOTcLcLFitcLcLDataOptions(Long_t size, void *p);
   static void delete_ROOTcLcLFitcLcLDataOptions(void *p);
   static void deleteArray_ROOTcLcLFitcLcLDataOptions(void *p);
   static void destruct_ROOTcLcLFitcLcLDataOptions(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Fit::DataOptions*)
   {
      ::ROOT::Fit::DataOptions *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Fit::DataOptions),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Fit::DataOptions", "include/Fit/DataOptions.h", 28,
                  typeid(::ROOT::Fit::DataOptions), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLFitcLcLDataOptions_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Fit::DataOptions) );
      instance.SetNew(&new_ROOTcLcLFitcLcLDataOptions);
      instance.SetNewArray(&newArray_ROOTcLcLFitcLcLDataOptions);
      instance.SetDelete(&delete_ROOTcLcLFitcLcLDataOptions);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLFitcLcLDataOptions);
      instance.SetDestructor(&destruct_ROOTcLcLFitcLcLDataOptions);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Fit::DataOptions*)
   {
      return GenerateInitInstanceLocal((::ROOT::Fit::DataOptions*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Fit::DataOptions*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLFitcLcLDataOptions_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::DataOptions*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLFitcLcLDataRange_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLFitcLcLDataRange_Dictionary();
   static void *new_ROOTcLcLFitcLcLDataRange(void *p = 0);
   static void *newArray_ROOTcLcLFitcLcLDataRange(Long_t size, void *p);
   static void delete_ROOTcLcLFitcLcLDataRange(void *p);
   static void deleteArray_ROOTcLcLFitcLcLDataRange(void *p);
   static void destruct_ROOTcLcLFitcLcLDataRange(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Fit::DataRange*)
   {
      ::ROOT::Fit::DataRange *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Fit::DataRange),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Fit::DataRange", "include/Fit/DataRange.h", 34,
                  typeid(::ROOT::Fit::DataRange), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLFitcLcLDataRange_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Fit::DataRange) );
      instance.SetNew(&new_ROOTcLcLFitcLcLDataRange);
      instance.SetNewArray(&newArray_ROOTcLcLFitcLcLDataRange);
      instance.SetDelete(&delete_ROOTcLcLFitcLcLDataRange);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLFitcLcLDataRange);
      instance.SetDestructor(&destruct_ROOTcLcLFitcLcLDataRange);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Fit::DataRange*)
   {
      return GenerateInitInstanceLocal((::ROOT::Fit::DataRange*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Fit::DataRange*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLFitcLcLDataRange_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::DataRange*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLFitcLcLFitData_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLFitcLcLFitData_Dictionary();
   static void *new_ROOTcLcLFitcLcLFitData(void *p = 0);
   static void *newArray_ROOTcLcLFitcLcLFitData(Long_t size, void *p);
   static void delete_ROOTcLcLFitcLcLFitData(void *p);
   static void deleteArray_ROOTcLcLFitcLcLFitData(void *p);
   static void destruct_ROOTcLcLFitcLcLFitData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Fit::FitData*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Fit::FitData) == sizeof(::ROOT::Shadow::ROOT::Fit::FitData));
      ::ROOT::Fit::FitData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Fit::FitData),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Fit::FitData", "include/Fit/DataVector.h", 55,
                  typeid(::ROOT::Fit::FitData), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLFitcLcLFitData_ShowMembers, &ROOTcLcLFitcLcLFitData_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Fit::FitData) );
      instance.SetNew(&new_ROOTcLcLFitcLcLFitData);
      instance.SetNewArray(&newArray_ROOTcLcLFitcLcLFitData);
      instance.SetDelete(&delete_ROOTcLcLFitcLcLFitData);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLFitcLcLFitData);
      instance.SetDestructor(&destruct_ROOTcLcLFitcLcLFitData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Fit::FitData*)
   {
      return GenerateInitInstanceLocal((::ROOT::Fit::FitData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Fit::FitData*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLFitcLcLFitData_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::FitData*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLFitcLcLBinData_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLFitcLcLBinData_Dictionary();
   static void *new_ROOTcLcLFitcLcLBinData(void *p = 0);
   static void *newArray_ROOTcLcLFitcLcLBinData(Long_t size, void *p);
   static void delete_ROOTcLcLFitcLcLBinData(void *p);
   static void deleteArray_ROOTcLcLFitcLcLBinData(void *p);
   static void destruct_ROOTcLcLFitcLcLBinData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Fit::BinData*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Fit::BinData) == sizeof(::ROOT::Shadow::ROOT::Fit::BinData));
      ::ROOT::Fit::BinData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Fit::BinData),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Fit::BinData", "include/Fit/BinData.h", 61,
                  typeid(::ROOT::Fit::BinData), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLFitcLcLBinData_ShowMembers, &ROOTcLcLFitcLcLBinData_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Fit::BinData) );
      instance.SetNew(&new_ROOTcLcLFitcLcLBinData);
      instance.SetNewArray(&newArray_ROOTcLcLFitcLcLBinData);
      instance.SetDelete(&delete_ROOTcLcLFitcLcLBinData);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLFitcLcLBinData);
      instance.SetDestructor(&destruct_ROOTcLcLFitcLcLBinData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Fit::BinData*)
   {
      return GenerateInitInstanceLocal((::ROOT::Fit::BinData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Fit::BinData*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLFitcLcLBinData_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::BinData*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLFitcLcLUnBinData_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLFitcLcLUnBinData_Dictionary();
   static void *new_ROOTcLcLFitcLcLUnBinData(void *p = 0);
   static void *newArray_ROOTcLcLFitcLcLUnBinData(Long_t size, void *p);
   static void delete_ROOTcLcLFitcLcLUnBinData(void *p);
   static void deleteArray_ROOTcLcLFitcLcLUnBinData(void *p);
   static void destruct_ROOTcLcLFitcLcLUnBinData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Fit::UnBinData*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Fit::UnBinData) == sizeof(::ROOT::Shadow::ROOT::Fit::UnBinData));
      ::ROOT::Fit::UnBinData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Fit::UnBinData),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Fit::UnBinData", "include/Fit/UnBinData.h", 47,
                  typeid(::ROOT::Fit::UnBinData), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLFitcLcLUnBinData_ShowMembers, &ROOTcLcLFitcLcLUnBinData_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Fit::UnBinData) );
      instance.SetNew(&new_ROOTcLcLFitcLcLUnBinData);
      instance.SetNewArray(&newArray_ROOTcLcLFitcLcLUnBinData);
      instance.SetDelete(&delete_ROOTcLcLFitcLcLUnBinData);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLFitcLcLUnBinData);
      instance.SetDestructor(&destruct_ROOTcLcLFitcLcLUnBinData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Fit::UnBinData*)
   {
      return GenerateInitInstanceLocal((::ROOT::Fit::UnBinData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Fit::UnBinData*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLFitcLcLUnBinData_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::UnBinData*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR_Dictionary();
   static void delete_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p);
   static void deleteArray_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p);
   static void destruct_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*)
   {
      ::ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>", "include/Fit/Chi2FCN.h", 74,
                  typeid(::ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR_Dictionary, isa_proxy, 1,
                  sizeof(::ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>) );
      instance.SetDelete(&delete_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR);
      instance.SetDestructor(&destruct_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_Dictionary();
   static void delete_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p);
   static void deleteArray_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p);
   static void destruct_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*)
   {
      ::ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>", "include/Fit/Chi2FCN.h", 74,
                  typeid(::ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_Dictionary, isa_proxy, 1,
                  sizeof(::ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>) );
      instance.SetDelete(&delete_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR);
      instance.SetDestructor(&destruct_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLFitcLcLParameterSettings_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLFitcLcLParameterSettings_Dictionary();
   static void *new_ROOTcLcLFitcLcLParameterSettings(void *p = 0);
   static void *newArray_ROOTcLcLFitcLcLParameterSettings(Long_t size, void *p);
   static void delete_ROOTcLcLFitcLcLParameterSettings(void *p);
   static void deleteArray_ROOTcLcLFitcLcLParameterSettings(void *p);
   static void destruct_ROOTcLcLFitcLcLParameterSettings(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Fit::ParameterSettings*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Fit::ParameterSettings) == sizeof(::ROOT::Shadow::ROOT::Fit::ParameterSettings));
      ::ROOT::Fit::ParameterSettings *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Fit::ParameterSettings),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Fit::ParameterSettings", "include/Fit/ParameterSettings.h", 33,
                  typeid(::ROOT::Fit::ParameterSettings), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLFitcLcLParameterSettings_ShowMembers, &ROOTcLcLFitcLcLParameterSettings_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Fit::ParameterSettings) );
      instance.SetNew(&new_ROOTcLcLFitcLcLParameterSettings);
      instance.SetNewArray(&newArray_ROOTcLcLFitcLcLParameterSettings);
      instance.SetDelete(&delete_ROOTcLcLFitcLcLParameterSettings);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLFitcLcLParameterSettings);
      instance.SetDestructor(&destruct_ROOTcLcLFitcLcLParameterSettings);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Fit::ParameterSettings*)
   {
      return GenerateInitInstanceLocal((::ROOT::Fit::ParameterSettings*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Fit::ParameterSettings*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLFitcLcLParameterSettings_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::ParameterSettings*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLFitcLcLFitConfig_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLFitcLcLFitConfig_Dictionary();
   static void *new_ROOTcLcLFitcLcLFitConfig(void *p = 0);
   static void *newArray_ROOTcLcLFitcLcLFitConfig(Long_t size, void *p);
   static void delete_ROOTcLcLFitcLcLFitConfig(void *p);
   static void deleteArray_ROOTcLcLFitcLcLFitConfig(void *p);
   static void destruct_ROOTcLcLFitcLcLFitConfig(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Fit::FitConfig*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Fit::FitConfig) == sizeof(::ROOT::Shadow::ROOT::Fit::FitConfig));
      ::ROOT::Fit::FitConfig *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Fit::FitConfig),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Fit::FitConfig", "include/Fit/FitConfig.h", 49,
                  typeid(::ROOT::Fit::FitConfig), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLFitcLcLFitConfig_ShowMembers, &ROOTcLcLFitcLcLFitConfig_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Fit::FitConfig) );
      instance.SetNew(&new_ROOTcLcLFitcLcLFitConfig);
      instance.SetNewArray(&newArray_ROOTcLcLFitcLcLFitConfig);
      instance.SetDelete(&delete_ROOTcLcLFitcLcLFitConfig);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLFitcLcLFitConfig);
      instance.SetDestructor(&destruct_ROOTcLcLFitcLcLFitConfig);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Fit::FitConfig*)
   {
      return GenerateInitInstanceLocal((::ROOT::Fit::FitConfig*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Fit::FitConfig*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLFitcLcLFitConfig_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::FitConfig*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLFitcLcLFitResult_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLFitcLcLFitResult_Dictionary();
   static void *new_ROOTcLcLFitcLcLFitResult(void *p = 0);
   static void *newArray_ROOTcLcLFitcLcLFitResult(Long_t size, void *p);
   static void delete_ROOTcLcLFitcLcLFitResult(void *p);
   static void deleteArray_ROOTcLcLFitcLcLFitResult(void *p);
   static void destruct_ROOTcLcLFitcLcLFitResult(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Fit::FitResult*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Fit::FitResult) == sizeof(::ROOT::Shadow::ROOT::Fit::FitResult));
      ::ROOT::Fit::FitResult *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Fit::FitResult),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Fit::FitResult", "include/Fit/FitResult.h", 50,
                  typeid(::ROOT::Fit::FitResult), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLFitcLcLFitResult_ShowMembers, &ROOTcLcLFitcLcLFitResult_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Fit::FitResult) );
      instance.SetNew(&new_ROOTcLcLFitcLcLFitResult);
      instance.SetNewArray(&newArray_ROOTcLcLFitcLcLFitResult);
      instance.SetDelete(&delete_ROOTcLcLFitcLcLFitResult);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLFitcLcLFitResult);
      instance.SetDestructor(&destruct_ROOTcLcLFitcLcLFitResult);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Fit::FitResult*)
   {
      return GenerateInitInstanceLocal((::ROOT::Fit::FitResult*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Fit::FitResult*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLFitcLcLFitResult_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::FitResult*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLFitcLcLFitter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLFitcLcLFitter_Dictionary();
   static void *new_ROOTcLcLFitcLcLFitter(void *p = 0);
   static void *newArray_ROOTcLcLFitcLcLFitter(Long_t size, void *p);
   static void delete_ROOTcLcLFitcLcLFitter(void *p);
   static void deleteArray_ROOTcLcLFitcLcLFitter(void *p);
   static void destruct_ROOTcLcLFitcLcLFitter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Fit::Fitter*)
   {
      ::ROOT::Fit::Fitter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Fit::Fitter),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Fit::Fitter", "include/Fit/Fitter.h", 73,
                  typeid(::ROOT::Fit::Fitter), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLFitcLcLFitter_Dictionary, isa_proxy, 0,
                  sizeof(::ROOT::Fit::Fitter) );
      instance.SetNew(&new_ROOTcLcLFitcLcLFitter);
      instance.SetNewArray(&newArray_ROOTcLcLFitcLcLFitter);
      instance.SetDelete(&delete_ROOTcLcLFitcLcLFitter);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLFitcLcLFitter);
      instance.SetDestructor(&destruct_ROOTcLcLFitcLcLFitter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Fit::Fitter*)
   {
      return GenerateInitInstanceLocal((::ROOT::Fit::Fitter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Fit::Fitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLFitcLcLFitter_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::Fitter*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR_Dictionary();
   static void delete_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p);
   static void deleteArray_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p);
   static void destruct_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)
   {
      ::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>", "include/Fit/LogLikelihoodFCN.h", 53,
                  typeid(::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR_Dictionary, isa_proxy, 1,
                  sizeof(::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>) );
      instance.SetDelete(&delete_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR);
      instance.SetDestructor(&destruct_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_Dictionary();
   static void delete_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p);
   static void deleteArray_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p);
   static void destruct_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)
   {
      ::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>", "include/Fit/LogLikelihoodFCN.h", 53,
                  typeid(::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_Dictionary, isa_proxy, 1,
                  sizeof(::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>) );
      instance.SetDelete(&delete_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR);
      instance.SetDestructor(&destruct_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR_Dictionary();
   static void delete_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p);
   static void deleteArray_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p);
   static void destruct_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)
   {
      ::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>", "include/Fit/PoissonLikelihoodFCN.h", 53,
                  typeid(::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR_Dictionary, isa_proxy, 1,
                  sizeof(::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>) );
      instance.SetDelete(&delete_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR);
      instance.SetDestructor(&destruct_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_Dictionary();
   static void delete_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p);
   static void deleteArray_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p);
   static void destruct_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)
   {
      ::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>", "include/Fit/PoissonLikelihoodFCN.h", 53,
                  typeid(::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>), DefineBehavior(ptr, ptr),
                  0, &ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_Dictionary, isa_proxy, 1,
                  sizeof(::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>) );
      instance.SetDelete(&delete_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR);
      instance.SetDestructor(&destruct_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)
   {
      return GenerateInitInstanceLocal((::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ROOTcLcLFitcLcLSparseData_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ROOTcLcLFitcLcLSparseData_Dictionary();
   static void delete_ROOTcLcLFitcLcLSparseData(void *p);
   static void deleteArray_ROOTcLcLFitcLcLSparseData(void *p);
   static void destruct_ROOTcLcLFitcLcLSparseData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ROOT::Fit::SparseData*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ROOT::Fit::SparseData) == sizeof(::ROOT::Shadow::ROOT::Fit::SparseData));
      ::ROOT::Fit::SparseData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ROOT::Fit::SparseData),0);
      static ::ROOT::TGenericClassInfo 
         instance("ROOT::Fit::SparseData", "include/Fit/SparseData.h", 32,
                  typeid(::ROOT::Fit::SparseData), DefineBehavior(ptr, ptr),
                  (void*)&ROOTcLcLFitcLcLSparseData_ShowMembers, &ROOTcLcLFitcLcLSparseData_Dictionary, isa_proxy, 4,
                  sizeof(::ROOT::Fit::SparseData) );
      instance.SetDelete(&delete_ROOTcLcLFitcLcLSparseData);
      instance.SetDeleteArray(&deleteArray_ROOTcLcLFitcLcLSparseData);
      instance.SetDestructor(&destruct_ROOTcLcLFitcLcLSparseData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ROOT::Fit::SparseData*)
   {
      return GenerateInitInstanceLocal((::ROOT::Fit::SparseData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ROOT::Fit::SparseData*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ROOTcLcLFitcLcLSparseData_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::SparseData*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLFitcLcLDataRange(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::DataRange : new ::ROOT::Fit::DataRange;
   }
   static void *newArray_ROOTcLcLFitcLcLDataRange(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::DataRange[nElements] : new ::ROOT::Fit::DataRange[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLFitcLcLDataRange(void *p) {
      delete ((::ROOT::Fit::DataRange*)p);
   }
   static void deleteArray_ROOTcLcLFitcLcLDataRange(void *p) {
      delete [] ((::ROOT::Fit::DataRange*)p);
   }
   static void destruct_ROOTcLcLFitcLcLDataRange(void *p) {
      typedef ::ROOT::Fit::DataRange current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Fit::DataRange

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLFitcLcLDataOptions(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::DataOptions : new ::ROOT::Fit::DataOptions;
   }
   static void *newArray_ROOTcLcLFitcLcLDataOptions(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::DataOptions[nElements] : new ::ROOT::Fit::DataOptions[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLFitcLcLDataOptions(void *p) {
      delete ((::ROOT::Fit::DataOptions*)p);
   }
   static void deleteArray_ROOTcLcLFitcLcLDataOptions(void *p) {
      delete [] ((::ROOT::Fit::DataOptions*)p);
   }
   static void destruct_ROOTcLcLFitcLcLDataOptions(void *p) {
      typedef ::ROOT::Fit::DataOptions current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Fit::DataOptions

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLFitcLcLFitter(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::Fitter : new ::ROOT::Fit::Fitter;
   }
   static void *newArray_ROOTcLcLFitcLcLFitter(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::Fitter[nElements] : new ::ROOT::Fit::Fitter[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLFitcLcLFitter(void *p) {
      delete ((::ROOT::Fit::Fitter*)p);
   }
   static void deleteArray_ROOTcLcLFitcLcLFitter(void *p) {
      delete [] ((::ROOT::Fit::Fitter*)p);
   }
   static void destruct_ROOTcLcLFitcLcLFitter(void *p) {
      typedef ::ROOT::Fit::Fitter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Fit::Fitter

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLFitcLcLFitConfig_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Fit::FitConfig.
      typedef ::ROOT::Shadow::ROOT::Fit::FitConfig ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::FitConfig*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNormErrors", &sobj->fNormErrors);
      R__insp.Inspect(R__cl, R__parent, "fParabErrors", &sobj->fParabErrors);
      R__insp.Inspect(R__cl, R__parent, "fMinosErrors", &sobj->fMinosErrors);
      R__insp.Inspect(R__cl, R__parent, "fSettings", (void*)&sobj->fSettings);
      ::ROOT::GenericShowMembers("vector<ROOT::Fit::ParameterSettings>", (void*)&sobj->fSettings, R__insp, strcat(R__parent,"fSettings."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMinosParams", (void*)&sobj->fMinosParams);
      ::ROOT::GenericShowMembers("vector<unsigned int>", (void*)&sobj->fMinosParams, R__insp, strcat(R__parent,"fMinosParams."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMinimizerOpts", (void*)&sobj->fMinimizerOpts);
      ::ROOT::GenericShowMembers("ROOT::Math::MinimizerOptions", (void*)&sobj->fMinimizerOpts, R__insp, strcat(R__parent,"fMinimizerOpts."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLFitcLcLFitConfig(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::FitConfig : new ::ROOT::Fit::FitConfig;
   }
   static void *newArray_ROOTcLcLFitcLcLFitConfig(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::FitConfig[nElements] : new ::ROOT::Fit::FitConfig[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLFitcLcLFitConfig(void *p) {
      delete ((::ROOT::Fit::FitConfig*)p);
   }
   static void deleteArray_ROOTcLcLFitcLcLFitConfig(void *p) {
      delete [] ((::ROOT::Fit::FitConfig*)p);
   }
   static void destruct_ROOTcLcLFitcLcLFitConfig(void *p) {
      typedef ::ROOT::Fit::FitConfig current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Fit::FitConfig

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLFitcLcLFitData_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Fit::FitData.
      typedef ::ROOT::Shadow::ROOT::Fit::FitData ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::FitData*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fOptions", (void*)&sobj->fOptions);
      ::ROOT::GenericShowMembers("ROOT::Fit::DataOptions", (void*)&sobj->fOptions, R__insp, strcat(R__parent,"fOptions."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRange", (void*)&sobj->fRange);
      ::ROOT::GenericShowMembers("ROOT::Fit::DataRange", (void*)&sobj->fRange, R__insp, strcat(R__parent,"fRange."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLFitcLcLFitData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::FitData : new ::ROOT::Fit::FitData;
   }
   static void *newArray_ROOTcLcLFitcLcLFitData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::FitData[nElements] : new ::ROOT::Fit::FitData[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLFitcLcLFitData(void *p) {
      delete ((::ROOT::Fit::FitData*)p);
   }
   static void deleteArray_ROOTcLcLFitcLcLFitData(void *p) {
      delete [] ((::ROOT::Fit::FitData*)p);
   }
   static void destruct_ROOTcLcLFitcLcLFitData(void *p) {
      typedef ::ROOT::Fit::FitData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Fit::FitData

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLFitcLcLBinData_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Fit::BinData.
      typedef ::ROOT::Shadow::ROOT::Fit::BinData ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::BinData*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDim", &sobj->fDim);
      R__insp.Inspect(R__cl, R__parent, "fPointSize", &sobj->fPointSize);
      R__insp.Inspect(R__cl, R__parent, "fNPoints", &sobj->fNPoints);
      R__insp.Inspect(R__cl, R__parent, "fRefVolume", &sobj->fRefVolume);
      R__insp.Inspect(R__cl, R__parent, "*fDataVector", &sobj->fDataVector);
      R__insp.Inspect(R__cl, R__parent, "*fDataWrapper", &sobj->fDataWrapper);
      R__insp.Inspect(R__cl, R__parent, "fBinEdge", (void*)&sobj->fBinEdge);
      ::ROOT::GenericShowMembers("vector<double>", (void*)&sobj->fBinEdge, R__insp, strcat(R__parent,"fBinEdge."),false);
      R__parent[R__ncp] = 0;
      ::ROOT::GenericShowMembers("ROOT::Fit::FitData", ( ::ROOT::Fit::FitData * )( (::ROOT::Fit::BinData*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLFitcLcLBinData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::BinData : new ::ROOT::Fit::BinData;
   }
   static void *newArray_ROOTcLcLFitcLcLBinData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::BinData[nElements] : new ::ROOT::Fit::BinData[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLFitcLcLBinData(void *p) {
      delete ((::ROOT::Fit::BinData*)p);
   }
   static void deleteArray_ROOTcLcLFitcLcLBinData(void *p) {
      delete [] ((::ROOT::Fit::BinData*)p);
   }
   static void destruct_ROOTcLcLFitcLcLBinData(void *p) {
      typedef ::ROOT::Fit::BinData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Fit::BinData

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLFitcLcLUnBinData_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Fit::UnBinData.
      typedef ::ROOT::Shadow::ROOT::Fit::UnBinData ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::UnBinData*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDim", &sobj->fDim);
      R__insp.Inspect(R__cl, R__parent, "fNPoints", &sobj->fNPoints);
      R__insp.Inspect(R__cl, R__parent, "*fDataVector", &sobj->fDataVector);
      R__insp.Inspect(R__cl, R__parent, "*fDataWrapper", &sobj->fDataWrapper);
      ::ROOT::GenericShowMembers("ROOT::Fit::FitData", ( ::ROOT::Fit::FitData * )( (::ROOT::Fit::UnBinData*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLFitcLcLUnBinData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::UnBinData : new ::ROOT::Fit::UnBinData;
   }
   static void *newArray_ROOTcLcLFitcLcLUnBinData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::UnBinData[nElements] : new ::ROOT::Fit::UnBinData[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLFitcLcLUnBinData(void *p) {
      delete ((::ROOT::Fit::UnBinData*)p);
   }
   static void deleteArray_ROOTcLcLFitcLcLUnBinData(void *p) {
      delete [] ((::ROOT::Fit::UnBinData*)p);
   }
   static void destruct_ROOTcLcLFitcLcLUnBinData(void *p) {
      typedef ::ROOT::Fit::UnBinData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Fit::UnBinData

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLFitcLcLSparseData_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Fit::SparseData.
      typedef ::ROOT::Shadow::ROOT::Fit::SparseData ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::SparseData*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fList", &sobj->fList);
      ::ROOT::GenericShowMembers("ROOT::Fit::FitData", ( ::ROOT::Fit::FitData * )( (::ROOT::Fit::SparseData*) obj ), R__insp, R__parent, false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLFitcLcLSparseData(void *p) {
      delete ((::ROOT::Fit::SparseData*)p);
   }
   static void deleteArray_ROOTcLcLFitcLcLSparseData(void *p) {
      delete [] ((::ROOT::Fit::SparseData*)p);
   }
   static void destruct_ROOTcLcLFitcLcLSparseData(void *p) {
      typedef ::ROOT::Fit::SparseData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Fit::SparseData

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLFitcLcLFitResult_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Fit::FitResult.
      typedef ::ROOT::Shadow::ROOT::Fit::FitResult ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::FitResult*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fValid", &sobj->fValid);
      R__insp.Inspect(R__cl, R__parent, "fNormalized", &sobj->fNormalized);
      R__insp.Inspect(R__cl, R__parent, "fNFree", &sobj->fNFree);
      R__insp.Inspect(R__cl, R__parent, "fNdf", &sobj->fNdf);
      R__insp.Inspect(R__cl, R__parent, "fNCalls", &sobj->fNCalls);
      R__insp.Inspect(R__cl, R__parent, "fStatus", &sobj->fStatus);
      R__insp.Inspect(R__cl, R__parent, "fCovStatus", &sobj->fCovStatus);
      R__insp.Inspect(R__cl, R__parent, "fVal", &sobj->fVal);
      R__insp.Inspect(R__cl, R__parent, "fEdm", &sobj->fEdm);
      R__insp.Inspect(R__cl, R__parent, "fChi2", &sobj->fChi2);
      R__insp.Inspect(R__cl, R__parent, "*fFitFunc", &sobj->fFitFunc);
      R__insp.Inspect(R__cl, R__parent, "fFixedParams", (void*)&sobj->fFixedParams);
      ::ROOT::GenericShowMembers("vector<unsigned int>", (void*)&sobj->fFixedParams, R__insp, strcat(R__parent,"fFixedParams."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fBoundParams", (void*)&sobj->fBoundParams);
      ::ROOT::GenericShowMembers("vector<unsigned int>", (void*)&sobj->fBoundParams, R__insp, strcat(R__parent,"fBoundParams."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fParams", (void*)&sobj->fParams);
      ::ROOT::GenericShowMembers("vector<double>", (void*)&sobj->fParams, R__insp, strcat(R__parent,"fParams."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fErrors", (void*)&sobj->fErrors);
      ::ROOT::GenericShowMembers("vector<double>", (void*)&sobj->fErrors, R__insp, strcat(R__parent,"fErrors."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCovMatrix", (void*)&sobj->fCovMatrix);
      ::ROOT::GenericShowMembers("vector<double>", (void*)&sobj->fCovMatrix, R__insp, strcat(R__parent,"fCovMatrix."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fGlobalCC", (void*)&sobj->fGlobalCC);
      ::ROOT::GenericShowMembers("vector<double>", (void*)&sobj->fGlobalCC, R__insp, strcat(R__parent,"fGlobalCC."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMinosErrors", (void*)&sobj->fMinosErrors);
      ::ROOT::GenericShowMembers("map<unsigned int,std::pair<double,double> >", (void*)&sobj->fMinosErrors, R__insp, strcat(R__parent,"fMinosErrors."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMinimType", (void*)&sobj->fMinimType);
      ::ROOT::GenericShowMembers("string", (void*)&sobj->fMinimType, R__insp, strcat(R__parent,"fMinimType."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fParNames", (void*)&sobj->fParNames);
      ::ROOT::GenericShowMembers("vector<std::string>", (void*)&sobj->fParNames, R__insp, strcat(R__parent,"fParNames."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLFitcLcLFitResult(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::FitResult : new ::ROOT::Fit::FitResult;
   }
   static void *newArray_ROOTcLcLFitcLcLFitResult(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::FitResult[nElements] : new ::ROOT::Fit::FitResult[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLFitcLcLFitResult(void *p) {
      delete ((::ROOT::Fit::FitResult*)p);
   }
   static void deleteArray_ROOTcLcLFitcLcLFitResult(void *p) {
      delete [] ((::ROOT::Fit::FitResult*)p);
   }
   static void destruct_ROOTcLcLFitcLcLFitResult(void *p) {
      typedef ::ROOT::Fit::FitResult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Fit::FitResult

//______________________________________________________________________________
namespace ROOT {
   void ROOTcLcLFitcLcLParameterSettings_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class ROOT::Fit::ParameterSettings.
      typedef ::ROOT::Shadow::ROOT::Fit::ParameterSettings ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ROOT::Fit::ParameterSettings*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fValue", &sobj->fValue);
      R__insp.Inspect(R__cl, R__parent, "fStepSize", &sobj->fStepSize);
      R__insp.Inspect(R__cl, R__parent, "fFix", &sobj->fFix);
      R__insp.Inspect(R__cl, R__parent, "fLowerLimit", &sobj->fLowerLimit);
      R__insp.Inspect(R__cl, R__parent, "fUpperLimit", &sobj->fUpperLimit);
      R__insp.Inspect(R__cl, R__parent, "fHasLowerLimit", &sobj->fHasLowerLimit);
      R__insp.Inspect(R__cl, R__parent, "fHasUpperLimit", &sobj->fHasUpperLimit);
      R__insp.Inspect(R__cl, R__parent, "fName", (void*)&sobj->fName);
      ::ROOT::GenericShowMembers("string", (void*)&sobj->fName, R__insp, strcat(R__parent,"fName."),false);
      R__parent[R__ncp] = 0;
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ROOTcLcLFitcLcLParameterSettings(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::ParameterSettings : new ::ROOT::Fit::ParameterSettings;
   }
   static void *newArray_ROOTcLcLFitcLcLParameterSettings(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ROOT::Fit::ParameterSettings[nElements] : new ::ROOT::Fit::ParameterSettings[nElements];
   }
   // Wrapper around operator delete
   static void delete_ROOTcLcLFitcLcLParameterSettings(void *p) {
      delete ((::ROOT::Fit::ParameterSettings*)p);
   }
   static void deleteArray_ROOTcLcLFitcLcLParameterSettings(void *p) {
      delete [] ((::ROOT::Fit::ParameterSettings*)p);
   }
   static void destruct_ROOTcLcLFitcLcLParameterSettings(void *p) {
      typedef ::ROOT::Fit::ParameterSettings current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Fit::ParameterSettings

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p) {
      delete ((::ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*)p);
   }
   static void deleteArray_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p) {
      delete [] ((::ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*)p);
   }
   static void destruct_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p) {
      typedef ::ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p) {
      delete ((::ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*)p);
   }
   static void deleteArray_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p) {
      delete [] ((::ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*)p);
   }
   static void destruct_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p) {
      typedef ::ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p) {
      delete ((::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)p);
   }
   static void deleteArray_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p) {
      delete [] ((::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)p);
   }
   static void destruct_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p) {
      typedef ::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p) {
      delete ((::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)p);
   }
   static void deleteArray_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p) {
      delete [] ((::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)p);
   }
   static void destruct_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p) {
      typedef ::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p) {
      delete ((::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)p);
   }
   static void deleteArray_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p) {
      delete [] ((::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)p);
   }
   static void destruct_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void *p) {
      typedef ::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p) {
      delete ((::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)p);
   }
   static void deleteArray_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p) {
      delete [] ((::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)p);
   }
   static void destruct_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void *p) {
      typedef ::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>

namespace ROOT {
   void maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR_Dictionary();
   static void *new_maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR(void *p = 0);
   static void *newArray_maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR(Long_t size, void *p);
   static void delete_maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR(void *p);
   static void deleteArray_maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR(void *p);
   static void destruct_maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned int,pair<double,double> >*)
   {
      map<unsigned int,pair<double,double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned int,pair<double,double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned int,pair<double,double> >", -2, "prec_stl/map", 63,
                  typeid(map<unsigned int,pair<double,double> >), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned int,pair<double,double> >) );
      instance.SetNew(&new_maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR);
      instance.SetNewArray(&newArray_maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR);
      instance.SetDelete(&delete_maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR);
      instance.SetDestructor(&destruct_maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned int,pair<double,double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned int,pair<double,double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned int,pair<double,double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,pair<double,double> > : new map<unsigned int,pair<double,double> >;
   }
   static void *newArray_maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,pair<double,double> >[nElements] : new map<unsigned int,pair<double,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR(void *p) {
      delete ((map<unsigned int,pair<double,double> >*)p);
   }
   static void deleteArray_maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR(void *p) {
      delete [] ((map<unsigned int,pair<double,double> >*)p);
   }
   static void destruct_maplEunsignedsPintcOpairlEdoublecOdoublegRsPgR(void *p) {
      typedef map<unsigned int,pair<double,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned int,pair<double,double> >

namespace ROOT {
   void vectorlEROOTcLcLFitcLcLParameterSettingsgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEROOTcLcLFitcLcLParameterSettingsgR_Dictionary();
   static void *new_vectorlEROOTcLcLFitcLcLParameterSettingsgR(void *p = 0);
   static void *newArray_vectorlEROOTcLcLFitcLcLParameterSettingsgR(Long_t size, void *p);
   static void delete_vectorlEROOTcLcLFitcLcLParameterSettingsgR(void *p);
   static void deleteArray_vectorlEROOTcLcLFitcLcLParameterSettingsgR(void *p);
   static void destruct_vectorlEROOTcLcLFitcLcLParameterSettingsgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<ROOT::Fit::ParameterSettings>*)
   {
      vector<ROOT::Fit::ParameterSettings> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<ROOT::Fit::ParameterSettings>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<ROOT::Fit::ParameterSettings>", -2, "prec_stl/vector", 49,
                  typeid(vector<ROOT::Fit::ParameterSettings>), DefineBehavior(ptr, ptr),
                  0, &vectorlEROOTcLcLFitcLcLParameterSettingsgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<ROOT::Fit::ParameterSettings>) );
      instance.SetNew(&new_vectorlEROOTcLcLFitcLcLParameterSettingsgR);
      instance.SetNewArray(&newArray_vectorlEROOTcLcLFitcLcLParameterSettingsgR);
      instance.SetDelete(&delete_vectorlEROOTcLcLFitcLcLParameterSettingsgR);
      instance.SetDeleteArray(&deleteArray_vectorlEROOTcLcLFitcLcLParameterSettingsgR);
      instance.SetDestructor(&destruct_vectorlEROOTcLcLFitcLcLParameterSettingsgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<ROOT::Fit::ParameterSettings> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<ROOT::Fit::ParameterSettings>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEROOTcLcLFitcLcLParameterSettingsgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<ROOT::Fit::ParameterSettings>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEROOTcLcLFitcLcLParameterSettingsgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ROOT::Fit::ParameterSettings> : new vector<ROOT::Fit::ParameterSettings>;
   }
   static void *newArray_vectorlEROOTcLcLFitcLcLParameterSettingsgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ROOT::Fit::ParameterSettings>[nElements] : new vector<ROOT::Fit::ParameterSettings>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEROOTcLcLFitcLcLParameterSettingsgR(void *p) {
      delete ((vector<ROOT::Fit::ParameterSettings>*)p);
   }
   static void deleteArray_vectorlEROOTcLcLFitcLcLParameterSettingsgR(void *p) {
      delete [] ((vector<ROOT::Fit::ParameterSettings>*)p);
   }
   static void destruct_vectorlEROOTcLcLFitcLcLParameterSettingsgR(void *p) {
      typedef vector<ROOT::Fit::ParameterSettings> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<ROOT::Fit::ParameterSettings>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "prec_stl/vector", 49,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

namespace ROOT {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "prec_stl/vector", 49,
                  typeid(vector<unsigned int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned int>

/********************************************************
* math/mathcore/src/G__MathFit.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__MathFit();

extern "C" void G__set_cpp_environmentG__MathFit() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Fit/BinData.h");
  G__add_compiledheader("Fit/BinPoint.h");
  G__add_compiledheader("Fit/Chi2FCN.h");
  G__add_compiledheader("Fit/DataOptions.h");
  G__add_compiledheader("Fit/DataRange.h");
  G__add_compiledheader("Fit/DataVectorfwd.h");
  G__add_compiledheader("Fit/DataVector.h");
  G__add_compiledheader("Fit/FcnAdapter.h");
  G__add_compiledheader("Fit/FitConfig.h");
  G__add_compiledheader("Fit/FitResult.h");
  G__add_compiledheader("Fit/Fitter.h");
  G__add_compiledheader("Fit/FitUtil.h");
  G__add_compiledheader("Fit/FitUtilParallel.h");
  G__add_compiledheader("Fit/LogLikelihoodFCN.h");
  G__add_compiledheader("Fit/ParameterSettings.h");
  G__add_compiledheader("Fit/PoissonLikelihoodFCN.h");
  G__add_compiledheader("Fit/SparseData.h");
  G__add_compiledheader("Fit/UnBinData.h");
  G__cpp_reset_tagtableG__MathFit();
}
#include <new>
extern "C" int G__cpp_dllrevG__MathFit() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ROOT::Fit */

/* ROOT::Fit::DataOptions */
static int G__G__MathFit_96_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::DataOptions* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::DataOptions[n];
     } else {
       p = new((void*) gvp) ROOT::Fit::DataOptions[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::DataOptions;
     } else {
       p = new((void*) gvp) ROOT::Fit::DataOptions;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataOptions));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MathFit_96_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Fit::DataOptions* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Fit::DataOptions(*(ROOT::Fit::DataOptions*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataOptions));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Fit::DataOptions G__TROOTcLcLFitcLcLDataOptions;
static int G__G__MathFit_96_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Fit::DataOptions*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Fit::DataOptions*) (soff+(sizeof(ROOT::Fit::DataOptions)*i)))->~G__TROOTcLcLFitcLcLDataOptions();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Fit::DataOptions*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Fit::DataOptions*) (soff))->~G__TROOTcLcLFitcLcLDataOptions();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MathFit_96_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::DataOptions* dest = (ROOT::Fit::DataOptions*) G__getstructoffset();
   *dest = *(ROOT::Fit::DataOptions*) libp->para[0].ref;
   const ROOT::Fit::DataOptions& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Fit::DataRange */
static int G__G__MathFit_97_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::DataRange* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::DataRange((unsigned int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ROOT::Fit::DataRange((unsigned int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ROOT::Fit::DataRange[n];
       } else {
         p = new((void*) gvp) ROOT::Fit::DataRange[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ROOT::Fit::DataRange;
       } else {
         p = new((void*) gvp) ROOT::Fit::DataRange;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::DataRange* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::DataRange((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Fit::DataRange((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::DataRange* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::DataRange(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Fit::DataRange(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::DataRange* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::DataRange(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
   } else {
     p = new((void*) gvp) ROOT::Fit::DataRange(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::DataRange*) G__getstructoffset())->NDim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::DataRange*) G__getstructoffset())->Size((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::DataRange::RangeSet& obj = ((const ROOT::Fit::DataRange*) G__getstructoffset())->Ranges((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const ROOT::Fit::DataRange*) G__getstructoffset())->operator()((unsigned int) G__int(libp->para[0]));
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Fit::DataRange*) G__getstructoffset())->GetRange((unsigned int) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Fit::DataRange*) G__getstructoffset())->GetRange(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Fit::DataRange*) G__getstructoffset())->GetRange(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Fit::DataRange*) G__getstructoffset())->GetRange(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::DataRange*) G__getstructoffset())->AddRange((unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::DataRange*) G__getstructoffset())->AddRange((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::DataRange*) G__getstructoffset())->AddRange((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::DataRange*) G__getstructoffset())->AddRange((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::DataRange*) G__getstructoffset())->SetRange((unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::DataRange*) G__getstructoffset())->SetRange((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::DataRange*) G__getstructoffset())->SetRange((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::DataRange*) G__getstructoffset())->SetRange((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ROOT::Fit::DataRange*) G__getstructoffset())->Clear((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ROOT::Fit::DataRange*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_97_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const ROOT::Fit::DataRange*) G__getstructoffset())->IsInside((double) G__double(libp->para[0]), (unsigned int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const ROOT::Fit::DataRange*) G__getstructoffset())->IsInside((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MathFit_97_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Fit::DataRange* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Fit::DataRange(*(ROOT::Fit::DataRange*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Fit::DataRange G__TROOTcLcLFitcLcLDataRange;
static int G__G__MathFit_97_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Fit::DataRange*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Fit::DataRange*) (soff+(sizeof(ROOT::Fit::DataRange)*i)))->~G__TROOTcLcLFitcLcLDataRange();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Fit::DataRange*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Fit::DataRange*) (soff))->~G__TROOTcLcLFitcLcLDataRange();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MathFit_97_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::DataRange* dest = (ROOT::Fit::DataRange*) G__getstructoffset();
   *dest = *(ROOT::Fit::DataRange*) libp->para[0].ref;
   const ROOT::Fit::DataRange& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Fit::FitData */
static int G__G__MathFit_107_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::FitData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::FitData[n];
     } else {
       p = new((void*) gvp) ROOT::Fit::FitData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::FitData;
     } else {
       p = new((void*) gvp) ROOT::Fit::FitData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_107_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::FitData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::FitData(*(ROOT::Fit::DataOptions*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Fit::FitData(*(ROOT::Fit::DataOptions*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_107_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::FitData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::FitData(*(ROOT::Fit::DataRange*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Fit::FitData(*(ROOT::Fit::DataRange*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_107_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::FitData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::FitData(*(ROOT::Fit::DataOptions*) libp->para[0].ref, *(ROOT::Fit::DataRange*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) ROOT::Fit::FitData(*(ROOT::Fit::DataOptions*) libp->para[0].ref, *(ROOT::Fit::DataRange*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_107_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::DataOptions& obj = ((const ROOT::Fit::FitData*) G__getstructoffset())->Opt();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_107_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::DataOptions& obj = ((ROOT::Fit::FitData*) G__getstructoffset())->Opt();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_107_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::DataRange& obj = ((const ROOT::Fit::FitData*) G__getstructoffset())->Range();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_107_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Fit::FitData::MaxSize());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MathFit_107_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Fit::FitData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Fit::FitData(*(ROOT::Fit::FitData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Fit::FitData G__TROOTcLcLFitcLcLFitData;
static int G__G__MathFit_107_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Fit::FitData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Fit::FitData*) (soff+(sizeof(ROOT::Fit::FitData)*i)))->~G__TROOTcLcLFitcLcLFitData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Fit::FitData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Fit::FitData*) (soff))->~G__TROOTcLcLFitcLcLFitData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MathFit_107_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::FitData* dest = (ROOT::Fit::FitData*) G__getstructoffset();
   *dest = *(ROOT::Fit::FitData*) libp->para[0].ref;
   const ROOT::Fit::FitData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Fit::BinData */
static int G__G__MathFit_118_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ROOT::Fit::BinData::GetPointSize((ROOT::Fit::BinData::ErrorType) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::Fit::BinData*) G__getstructoffset())->GetErrorType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::BinData* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::BinData(
(unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (ROOT::Fit::BinData::ErrorType) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::Fit::BinData(
(unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (ROOT::Fit::BinData::ErrorType) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::BinData((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Fit::BinData((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::BinData((unsigned int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ROOT::Fit::BinData((unsigned int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ROOT::Fit::BinData[n];
       } else {
         p = new((void*) gvp) ROOT::Fit::BinData[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ROOT::Fit::BinData;
       } else {
         p = new((void*) gvp) ROOT::Fit::BinData;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::BinData* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::BinData(
*(ROOT::Fit::DataOptions*) libp->para[0].ref, (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (ROOT::Fit::BinData::ErrorType) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::Fit::BinData(
*(ROOT::Fit::DataOptions*) libp->para[0].ref, (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (ROOT::Fit::BinData::ErrorType) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::BinData(
*(ROOT::Fit::DataOptions*) libp->para[0].ref, (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::Fit::BinData(
*(ROOT::Fit::DataOptions*) libp->para[0].ref, (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::BinData(*(ROOT::Fit::DataOptions*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Fit::BinData(*(ROOT::Fit::DataOptions*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::BinData(*(ROOT::Fit::DataOptions*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Fit::BinData(*(ROOT::Fit::DataOptions*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::BinData* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::BinData(
*(ROOT::Fit::DataOptions*) libp->para[0].ref, *(ROOT::Fit::DataRange*) libp->para[1].ref
, (unsigned int) G__int(libp->para[2]), (unsigned int) G__int(libp->para[3])
, (ROOT::Fit::BinData::ErrorType) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::Fit::BinData(
*(ROOT::Fit::DataOptions*) libp->para[0].ref, *(ROOT::Fit::DataRange*) libp->para[1].ref
, (unsigned int) G__int(libp->para[2]), (unsigned int) G__int(libp->para[3])
, (ROOT::Fit::BinData::ErrorType) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::BinData(
*(ROOT::Fit::DataOptions*) libp->para[0].ref, *(ROOT::Fit::DataRange*) libp->para[1].ref
, (unsigned int) G__int(libp->para[2]), (unsigned int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::Fit::BinData(
*(ROOT::Fit::DataOptions*) libp->para[0].ref, *(ROOT::Fit::DataRange*) libp->para[1].ref
, (unsigned int) G__int(libp->para[2]), (unsigned int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::BinData(
*(ROOT::Fit::DataOptions*) libp->para[0].ref, *(ROOT::Fit::DataRange*) libp->para[1].ref
, (unsigned int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::Fit::BinData(
*(ROOT::Fit::DataOptions*) libp->para[0].ref, *(ROOT::Fit::DataRange*) libp->para[1].ref
, (unsigned int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::BinData(*(ROOT::Fit::DataOptions*) libp->para[0].ref, *(ROOT::Fit::DataRange*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) ROOT::Fit::BinData(*(ROOT::Fit::DataOptions*) libp->para[0].ref, *(ROOT::Fit::DataRange*) libp->para[1].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::BinData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::BinData(
(unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, (const double*) G__int(libp->para[2]), (const double*) G__int(libp->para[3])
, (const double*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Fit::BinData(
(unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, (const double*) G__int(libp->para[2]), (const double*) G__int(libp->para[3])
, (const double*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::BinData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::BinData(
(unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, (const double*) G__int(libp->para[2]), (const double*) G__int(libp->para[3])
, (const double*) G__int(libp->para[4]), (const double*) G__int(libp->para[5])
, (const double*) G__int(libp->para[6]));
   } else {
     p = new((void*) gvp) ROOT::Fit::BinData(
(unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, (const double*) G__int(libp->para[2]), (const double*) G__int(libp->para[3])
, (const double*) G__int(libp->para[4]), (const double*) G__int(libp->para[5])
, (const double*) G__int(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::BinData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::BinData(
(unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, (const double*) G__int(libp->para[2]), (const double*) G__int(libp->para[3])
, (const double*) G__int(libp->para[4]), (const double*) G__int(libp->para[5])
, (const double*) G__int(libp->para[6]), (const double*) G__int(libp->para[7])
, (const double*) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) ROOT::Fit::BinData(
(unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, (const double*) G__int(libp->para[2]), (const double*) G__int(libp->para[3])
, (const double*) G__int(libp->para[4]), (const double*) G__int(libp->para[5])
, (const double*) G__int(libp->para[6]), (const double*) G__int(libp->para[7])
, (const double*) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::BinData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::BinData(*(ROOT::Fit::BinData*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Fit::BinData(*(ROOT::Fit::BinData*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::BinData& obj = ((ROOT::Fit::BinData*) G__getstructoffset())->operator=(*(ROOT::Fit::BinData*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((ROOT::Fit::BinData*) G__getstructoffset())->Initialize((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (ROOT::Fit::BinData::ErrorType) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((ROOT::Fit::BinData*) G__getstructoffset())->Initialize((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((ROOT::Fit::BinData*) G__getstructoffset())->Initialize((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::BinData*) G__getstructoffset())->PointSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::BinData*) G__getstructoffset())->DataSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Fit::BinData*) G__getstructoffset())->HaveCoordErrors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Fit::BinData*) G__getstructoffset())->HaveAsymErrors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::BinData*) G__getstructoffset())->Add((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::BinData*) G__getstructoffset())->Add((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::BinData*) G__getstructoffset())->Add((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::BinData*) G__getstructoffset())->Add((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::BinData*) G__getstructoffset())->Add((const double*) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::BinData*) G__getstructoffset())->Add((const double*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::BinData*) G__getstructoffset())->Add((const double*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (const double*) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Fit::BinData*) G__getstructoffset())->Coords((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::BinData*) G__getstructoffset())->Value((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::BinData*) G__getstructoffset())->Error((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::BinData*) G__getstructoffset())->InvError((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Fit::BinData*) G__getstructoffset())->CoordErrors((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Fit::BinData*) G__getstructoffset())->GetPoint((unsigned int) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Fit::BinData*) G__getstructoffset())->GetPoint((unsigned int) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Fit::BinData*) G__getstructoffset())->GetPointError((unsigned int) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Fit::BinData*) G__getstructoffset())->GetPointError((unsigned int) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::BinData*) G__getstructoffset())->Resize((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::BinData*) G__getstructoffset())->NPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::BinData*) G__getstructoffset())->Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::BinData*) G__getstructoffset())->NDim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::BinData& obj = ((ROOT::Fit::BinData*) G__getstructoffset())->LogTransform();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Fit::BinData*) G__getstructoffset())->BinUpEdge((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Fit::BinData*) G__getstructoffset())->HasBinEdges());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::BinData*) G__getstructoffset())->AddBinUpEdge((const double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::BinData*) G__getstructoffset())->RefVolume());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_118_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::BinData*) G__getstructoffset())->SetRefVolume((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Fit::BinData G__TROOTcLcLFitcLcLBinData;
static int G__G__MathFit_118_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Fit::BinData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Fit::BinData*) (soff+(sizeof(ROOT::Fit::BinData)*i)))->~G__TROOTcLcLFitcLcLBinData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Fit::BinData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Fit::BinData*) (soff))->~G__TROOTcLcLFitcLcLBinData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Fit::UnBinData */
static int G__G__MathFit_138_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::UnBinData* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::UnBinData((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Fit::UnBinData((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::UnBinData((unsigned int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ROOT::Fit::UnBinData((unsigned int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ROOT::Fit::UnBinData[n];
       } else {
         p = new((void*) gvp) ROOT::Fit::UnBinData[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ROOT::Fit::UnBinData;
       } else {
         p = new((void*) gvp) ROOT::Fit::UnBinData;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::UnBinData* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::UnBinData(
*(ROOT::Fit::DataRange*) libp->para[0].ref, (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::Fit::UnBinData(
*(ROOT::Fit::DataRange*) libp->para[0].ref, (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::UnBinData(*(ROOT::Fit::DataRange*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ROOT::Fit::UnBinData(*(ROOT::Fit::DataRange*) libp->para[0].ref, (unsigned int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::UnBinData(*(ROOT::Fit::DataRange*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ROOT::Fit::UnBinData(*(ROOT::Fit::DataRange*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::UnBinData* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::UnBinData(
*(ROOT::Fit::DataOptions*) libp->para[0].ref, *(ROOT::Fit::DataRange*) libp->para[1].ref
, (unsigned int) G__int(libp->para[2]), (unsigned int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::Fit::UnBinData(
*(ROOT::Fit::DataOptions*) libp->para[0].ref, *(ROOT::Fit::DataRange*) libp->para[1].ref
, (unsigned int) G__int(libp->para[2]), (unsigned int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::UnBinData(
*(ROOT::Fit::DataOptions*) libp->para[0].ref, *(ROOT::Fit::DataRange*) libp->para[1].ref
, (unsigned int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ROOT::Fit::UnBinData(
*(ROOT::Fit::DataOptions*) libp->para[0].ref, *(ROOT::Fit::DataRange*) libp->para[1].ref
, (unsigned int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::UnBinData(*(ROOT::Fit::DataOptions*) libp->para[0].ref, *(ROOT::Fit::DataRange*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) ROOT::Fit::UnBinData(*(ROOT::Fit::DataOptions*) libp->para[0].ref, *(ROOT::Fit::DataRange*) libp->para[1].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::UnBinData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::UnBinData((unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Fit::UnBinData((unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::UnBinData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::UnBinData(
(unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, (const double*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Fit::UnBinData(
(unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, (const double*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::UnBinData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::UnBinData(
(unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, (const double*) G__int(libp->para[2]), (const double*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ROOT::Fit::UnBinData(
(unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, (const double*) G__int(libp->para[2]), (const double*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::UnBinData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::UnBinData(
(unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, *(ROOT::Fit::DataRange*) libp->para[2].ref);
   } else {
     p = new((void*) gvp) ROOT::Fit::UnBinData(
(unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, *(ROOT::Fit::DataRange*) libp->para[2].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::UnBinData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::UnBinData(
(unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, (const double*) G__int(libp->para[2]), *(ROOT::Fit::DataRange*) libp->para[3].ref);
   } else {
     p = new((void*) gvp) ROOT::Fit::UnBinData(
(unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, (const double*) G__int(libp->para[2]), *(ROOT::Fit::DataRange*) libp->para[3].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::UnBinData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::UnBinData(
(unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, (const double*) G__int(libp->para[2]), (const double*) G__int(libp->para[3])
, *(ROOT::Fit::DataRange*) libp->para[4].ref);
   } else {
     p = new((void*) gvp) ROOT::Fit::UnBinData(
(unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, (const double*) G__int(libp->para[2]), (const double*) G__int(libp->para[3])
, *(ROOT::Fit::DataRange*) libp->para[4].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((ROOT::Fit::UnBinData*) G__getstructoffset())->Initialize((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((ROOT::Fit::UnBinData*) G__getstructoffset())->Initialize((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::UnBinData*) G__getstructoffset())->PointSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::UnBinData*) G__getstructoffset())->DataSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::UnBinData*) G__getstructoffset())->Add((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::UnBinData*) G__getstructoffset())->Add((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::UnBinData*) G__getstructoffset())->Add((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::UnBinData*) G__getstructoffset())->Add((const double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Fit::UnBinData*) G__getstructoffset())->Coords((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::UnBinData*) G__getstructoffset())->Resize((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::UnBinData*) G__getstructoffset())->NPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::UnBinData*) G__getstructoffset())->Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_138_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::UnBinData*) G__getstructoffset())->NDim());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Fit::UnBinData G__TROOTcLcLFitcLcLUnBinData;
static int G__G__MathFit_138_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Fit::UnBinData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Fit::UnBinData*) (soff+(sizeof(ROOT::Fit::UnBinData)*i)))->~G__TROOTcLcLFitcLcLUnBinData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Fit::UnBinData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Fit::UnBinData*) (soff))->~G__TROOTcLcLFitcLcLUnBinData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim> */
static int G__G__MathFit_141_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>(*(ROOT::Fit::BinData*) libp->para[0].ref, *(ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>(*(ROOT::Fit::BinData*) libp->para[0].ref, *(ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_141_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*) G__getstructoffset())->NFitPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_141_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*) G__getstructoffset())->Gradient((const double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_141_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::BinData& obj = ((const ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*) G__getstructoffset())->Data();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_141_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction& obj = ((const ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*) G__getstructoffset())->ModelFunction();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MathFit_141_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>(*(ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim> G__TROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR;
static int G__G__MathFit_141_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*) (soff+(sizeof(ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>)*i)))->~G__TROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*) (soff))->~G__TROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim> */
static int G__G__MathFit_143_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>(*(ROOT::Fit::BinData*) libp->para[0].ref, *(ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>(*(ROOT::Fit::BinData*) libp->para[0].ref, *(ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_143_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*) G__getstructoffset())->NFitPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_143_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::BinData& obj = ((const ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*) G__getstructoffset())->Data();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_143_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction& obj = ((const ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*) G__getstructoffset())->ModelFunction();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MathFit_143_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>(*(ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim> G__TROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR;
static int G__G__MathFit_143_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*) (soff+(sizeof(ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>)*i)))->~G__TROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*) (soff))->~G__TROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Fit::ParameterSettings */
static int G__G__MathFit_146_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::ParameterSettings* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::ParameterSettings[n];
     } else {
       p = new((void*) gvp) ROOT::Fit::ParameterSettings[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::ParameterSettings;
     } else {
       p = new((void*) gvp) ROOT::Fit::ParameterSettings;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::ParameterSettings* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::ParameterSettings(
*(string*) libp->para[0].ref, (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Fit::ParameterSettings(
*(string*) libp->para[0].ref, (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::ParameterSettings* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::ParameterSettings(
*(string*) libp->para[0].ref, (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) ROOT::Fit::ParameterSettings(
*(string*) libp->para[0].ref, (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::ParameterSettings* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::ParameterSettings(*(string*) libp->para[0].ref, (double) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) ROOT::Fit::ParameterSettings(*(string*) libp->para[0].ref, (double) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::ParameterSettings*) G__getstructoffset())->Set(*(string*) libp->para[0].ref, (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::ParameterSettings*) G__getstructoffset())->Set(*(string*) libp->para[0].ref, (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::ParameterSettings*) G__getstructoffset())->Set(*(string*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::ParameterSettings*) G__getstructoffset())->Value());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::ParameterSettings*) G__getstructoffset())->StepSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::ParameterSettings*) G__getstructoffset())->LowerLimit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::ParameterSettings*) G__getstructoffset())->UpperLimit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Fit::ParameterSettings*) G__getstructoffset())->IsFixed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Fit::ParameterSettings*) G__getstructoffset())->HasLowerLimit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Fit::ParameterSettings*) G__getstructoffset())->HasUpperLimit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Fit::ParameterSettings*) G__getstructoffset())->IsBound());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Fit::ParameterSettings*) G__getstructoffset())->IsDoubleBound());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const ROOT::Fit::ParameterSettings*) G__getstructoffset())->Name();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::ParameterSettings*) G__getstructoffset())->SetName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::ParameterSettings*) G__getstructoffset())->Fix();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::ParameterSettings*) G__getstructoffset())->Release();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::ParameterSettings*) G__getstructoffset())->SetValue((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::ParameterSettings*) G__getstructoffset())->SetStepSize((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::ParameterSettings*) G__getstructoffset())->SetLimits((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::ParameterSettings*) G__getstructoffset())->SetUpperLimit((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::ParameterSettings*) G__getstructoffset())->SetLowerLimit((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_146_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::ParameterSettings*) G__getstructoffset())->RemoveLimits();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MathFit_146_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Fit::ParameterSettings* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Fit::ParameterSettings(*(ROOT::Fit::ParameterSettings*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Fit::ParameterSettings G__TROOTcLcLFitcLcLParameterSettings;
static int G__G__MathFit_146_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Fit::ParameterSettings*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Fit::ParameterSettings*) (soff+(sizeof(ROOT::Fit::ParameterSettings)*i)))->~G__TROOTcLcLFitcLcLParameterSettings();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Fit::ParameterSettings*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Fit::ParameterSettings*) (soff))->~G__TROOTcLcLFitcLcLParameterSettings();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MathFit_146_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::ParameterSettings* dest = (ROOT::Fit::ParameterSettings*) G__getstructoffset();
   *dest = *(ROOT::Fit::ParameterSettings*) libp->para[0].ref;
   const ROOT::Fit::ParameterSettings& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Fit::FitConfig */
static int G__G__MathFit_149_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::FitConfig* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::FitConfig((unsigned int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ROOT::Fit::FitConfig((unsigned int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ROOT::Fit::FitConfig[n];
       } else {
         p = new((void*) gvp) ROOT::Fit::FitConfig[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ROOT::Fit::FitConfig;
       } else {
         p = new((void*) gvp) ROOT::Fit::FitConfig;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::FitConfig* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::FitConfig(*(ROOT::Fit::FitConfig*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Fit::FitConfig(*(ROOT::Fit::FitConfig*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::FitConfig& obj = ((ROOT::Fit::FitConfig*) G__getstructoffset())->operator=(*(ROOT::Fit::FitConfig*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::ParameterSettings& obj = ((const ROOT::Fit::FitConfig*) G__getstructoffset())->ParSettings((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::ParameterSettings& obj = ((ROOT::Fit::FitConfig*) G__getstructoffset())->ParSettings((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<ROOT::Fit::ParameterSettings>& obj = ((const ROOT::Fit::FitConfig*) G__getstructoffset())->ParamsSettings();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<ROOT::Fit::ParameterSettings>& obj = ((ROOT::Fit::FitConfig*) G__getstructoffset())->ParamsSettings();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::FitConfig*) G__getstructoffset())->CreateParamsSettings(*(ROOT::Math::IParamMultiFunction*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((ROOT::Fit::FitConfig*) G__getstructoffset())->SetParamsSettings((unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1])
, (const double*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((ROOT::Fit::FitConfig*) G__getstructoffset())->SetParamsSettings((unsigned int) G__int(libp->para[0]), (const double*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ROOT::Fit::FitConfig*) G__getstructoffset())->CreateMinimizer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::MinimizerOptions& obj = ((ROOT::Fit::FitConfig*) G__getstructoffset())->MinimizerOptions();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((ROOT::Fit::FitConfig*) G__getstructoffset())->SetMinimizer((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((ROOT::Fit::FitConfig*) G__getstructoffset())->SetMinimizer((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const ROOT::Fit::FitConfig*) G__getstructoffset())->MinimizerType();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const ROOT::Fit::FitConfig*) G__getstructoffset())->MinimizerAlgoType();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Fit::FitConfig*) G__getstructoffset())->NormalizeErrors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Fit::FitConfig*) G__getstructoffset())->ParabErrors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Fit::FitConfig*) G__getstructoffset())->MinosErrors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int>& obj = ((const ROOT::Fit::FitConfig*) G__getstructoffset())->MinosParams();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ROOT::Fit::FitConfig*) G__getstructoffset())->SetNormErrors((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ROOT::Fit::FitConfig*) G__getstructoffset())->SetNormErrors();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ROOT::Fit::FitConfig*) G__getstructoffset())->SetParabErrors((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ROOT::Fit::FitConfig*) G__getstructoffset())->SetParabErrors();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ROOT::Fit::FitConfig*) G__getstructoffset())->SetMinosErrors((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ROOT::Fit::FitConfig*) G__getstructoffset())->SetMinosErrors();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::FitConfig*) G__getstructoffset())->SetMinosErrors(*(vector<unsigned int>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_149_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ROOT::Fit::FitConfig::SetDefaultMinimizer((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ROOT::Fit::FitConfig::SetDefaultMinimizer((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Fit::FitConfig G__TROOTcLcLFitcLcLFitConfig;
static int G__G__MathFit_149_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Fit::FitConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Fit::FitConfig*) (soff+(sizeof(ROOT::Fit::FitConfig)*i)))->~G__TROOTcLcLFitcLcLFitConfig();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Fit::FitConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Fit::FitConfig*) (soff))->~G__TROOTcLcLFitcLcLFitConfig();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Fit::FitResult */
static int G__G__MathFit_158_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::FitResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::FitResult[n];
     } else {
       p = new((void*) gvp) ROOT::Fit::FitResult[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::FitResult;
     } else {
       p = new((void*) gvp) ROOT::Fit::FitResult;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::FitResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::FitResult(
*(ROOT::Math::Minimizer*) libp->para[0].ref, *(ROOT::Fit::FitConfig*) libp->para[1].ref
, (const ROOT::Fit::FitResult::IModelFunction*) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (unsigned int) G__int(libp->para[4]), (bool) G__int(libp->para[5])
, (const ROOT::Math::IMultiGenFunction*) G__int(libp->para[6]), (unsigned int) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) ROOT::Fit::FitResult(
*(ROOT::Math::Minimizer*) libp->para[0].ref, *(ROOT::Fit::FitConfig*) libp->para[1].ref
, (const ROOT::Fit::FitResult::IModelFunction*) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (unsigned int) G__int(libp->para[4]), (bool) G__int(libp->para[5])
, (const ROOT::Math::IMultiGenFunction*) G__int(libp->para[6]), (unsigned int) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::FitResult(
*(ROOT::Math::Minimizer*) libp->para[0].ref, *(ROOT::Fit::FitConfig*) libp->para[1].ref
, (const ROOT::Fit::FitResult::IModelFunction*) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (unsigned int) G__int(libp->para[4]), (bool) G__int(libp->para[5])
, (const ROOT::Math::IMultiGenFunction*) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) ROOT::Fit::FitResult(
*(ROOT::Math::Minimizer*) libp->para[0].ref, *(ROOT::Fit::FitConfig*) libp->para[1].ref
, (const ROOT::Fit::FitResult::IModelFunction*) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (unsigned int) G__int(libp->para[4]), (bool) G__int(libp->para[5])
, (const ROOT::Math::IMultiGenFunction*) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::FitResult(
*(ROOT::Math::Minimizer*) libp->para[0].ref, *(ROOT::Fit::FitConfig*) libp->para[1].ref
, (const ROOT::Fit::FitResult::IModelFunction*) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (unsigned int) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) ROOT::Fit::FitResult(
*(ROOT::Math::Minimizer*) libp->para[0].ref, *(ROOT::Fit::FitConfig*) libp->para[1].ref
, (const ROOT::Fit::FitResult::IModelFunction*) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (unsigned int) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::FitResult(
*(ROOT::Math::Minimizer*) libp->para[0].ref, *(ROOT::Fit::FitConfig*) libp->para[1].ref
, (const ROOT::Fit::FitResult::IModelFunction*) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (unsigned int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) ROOT::Fit::FitResult(
*(ROOT::Math::Minimizer*) libp->para[0].ref, *(ROOT::Fit::FitConfig*) libp->para[1].ref
, (const ROOT::Fit::FitResult::IModelFunction*) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (unsigned int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::FitResult(
*(ROOT::Math::Minimizer*) libp->para[0].ref, *(ROOT::Fit::FitConfig*) libp->para[1].ref
, (const ROOT::Fit::FitResult::IModelFunction*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) ROOT::Fit::FitResult(
*(ROOT::Math::Minimizer*) libp->para[0].ref, *(ROOT::Fit::FitConfig*) libp->para[1].ref
, (const ROOT::Fit::FitResult::IModelFunction*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::FitResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::FitResult(*(ROOT::Fit::FitResult*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ROOT::Fit::FitResult(*(ROOT::Fit::FitResult*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::FitResult& obj = ((ROOT::Fit::FitResult*) G__getstructoffset())->operator=(*(ROOT::Fit::FitResult*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((ROOT::Fit::FitResult*) G__getstructoffset())->Update(*(ROOT::Math::Minimizer*) libp->para[0].ref, (bool) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((ROOT::Fit::FitResult*) G__getstructoffset())->Update(*(ROOT::Math::Minimizer*) libp->para[0].ref, (bool) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const ROOT::Fit::FitResult*) G__getstructoffset())->MinimizerType();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Fit::FitResult*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Fit::FitResult*) G__getstructoffset())->IsEmpty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::FitResult*) G__getstructoffset())->MinFcnValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::FitResult*) G__getstructoffset())->NCalls());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::FitResult*) G__getstructoffset())->Edm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::FitResult*) G__getstructoffset())->NTotalParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::FitResult*) G__getstructoffset())->NPar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::FitResult*) G__getstructoffset())->NFreeParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::Fit::FitResult*) G__getstructoffset())->Status());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::Fit::FitResult*) G__getstructoffset())->CovMatrixStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ROOT::Fit::FitResult*) G__getstructoffset())->FittedFunction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::FitResult*) G__getstructoffset())->Chi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::FitResult*) G__getstructoffset())->Ndf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::FitResult*) G__getstructoffset())->Prob());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>& obj = ((const ROOT::Fit::FitResult*) G__getstructoffset())->Errors();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Fit::FitResult*) G__getstructoffset())->GetErrors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>& obj = ((const ROOT::Fit::FitResult*) G__getstructoffset())->Parameters();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const ROOT::Fit::FitResult*) G__getstructoffset())->GetParams());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::FitResult*) G__getstructoffset())->Value((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::FitResult*) G__getstructoffset())->Error((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::FitResult*) G__getstructoffset())->SetMinosError((unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::FitResult*) G__getstructoffset())->LowerError((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::FitResult*) G__getstructoffset())->UpperError((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::FitResult*) G__getstructoffset())->GlobalCC((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::FitResult*) G__getstructoffset())->CovMatrix((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ROOT::Fit::FitResult*) G__getstructoffset())->Correlation((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((const ROOT::Fit::FitResult*) G__getstructoffset())->GetConfidenceIntervals((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (const double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((const ROOT::Fit::FitResult*) G__getstructoffset())->GetConfidenceIntervals((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (const double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const ROOT::Fit::FitResult*) G__getstructoffset())->GetConfidenceIntervals(*(ROOT::Fit::BinData*) libp->para[0].ref, (double*) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const ROOT::Fit::FitResult*) G__getstructoffset())->GetConfidenceIntervals(*(ROOT::Fit::BinData*) libp->para[0].ref, (double*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ROOT::Fit::FitResult*) G__getstructoffset())->Index(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::FitResult*) G__getstructoffset())->NormalizeErrors();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Fit::FitResult*) G__getstructoffset())->NormalizedErrors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const ROOT::Fit::FitResult*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const ROOT::Fit::FitResult*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Fit::FitResult*) G__getstructoffset())->PrintCovMatrix(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Fit::FitResult*) G__getstructoffset())->IsParameterBound((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Fit::FitResult*) G__getstructoffset())->IsParameterFixed((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_158_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const ROOT::Fit::FitResult*) G__getstructoffset())->GetParameterName((unsigned int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Fit::FitResult G__TROOTcLcLFitcLcLFitResult;
static int G__G__MathFit_158_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Fit::FitResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Fit::FitResult*) (soff+(sizeof(ROOT::Fit::FitResult)*i)))->~G__TROOTcLcLFitcLcLFitResult();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Fit::FitResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Fit::FitResult*) (soff))->~G__TROOTcLcLFitcLcLFitResult();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Fit::Fitter */
static int G__G__MathFit_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::Fitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::Fitter[n];
     } else {
       p = new((void*) gvp) ROOT::Fit::Fitter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ROOT::Fit::Fitter;
     } else {
       p = new((void*) gvp) ROOT::Fit::Fitter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->Fit(*(ROOT::Fit::BinData*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->Fit(*(ROOT::Fit::UnBinData*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->FitFCN(*(ROOT::Math::IMultiGenFunction*) libp->para[0].ref, (const double*) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->FitFCN(*(ROOT::Math::IMultiGenFunction*) libp->para[0].ref, (const double*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->FitFCN(*(ROOT::Math::IMultiGenFunction*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->FitFCN(*(ROOT::Math::IMultiGradFunction*) libp->para[0].ref, (const double*) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->FitFCN(*(ROOT::Math::IMultiGradFunction*) libp->para[0].ref, (const double*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->FitFCN(*(ROOT::Math::IMultiGradFunction*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->FitFCN((ROOT::Fit::Fitter::MinuitFCN_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->LinearFit(*(ROOT::Fit::BinData*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::Fitter*) G__getstructoffset())->SetFunction(*(ROOT::Fit::Fitter::IModelFunction*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::Fitter*) G__getstructoffset())->SetFunction(*(ROOT::Fit::Fitter::IModel1DFunction*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::Fitter*) G__getstructoffset())->SetFunction(*(ROOT::Fit::Fitter::IGradModelFunction*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::Fitter*) G__getstructoffset())->SetFunction(*(ROOT::Fit::Fitter::IGradModel1DFunction*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::FitResult& obj = ((const ROOT::Fit::Fitter*) G__getstructoffset())->Result();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->CalculateHessErrors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->CalculateMinosErrors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::FitConfig& obj = ((const ROOT::Fit::Fitter*) G__getstructoffset())->Config();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::FitConfig& obj = ((ROOT::Fit::Fitter*) G__getstructoffset())->Config();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ROOT::Fit::Fitter*) G__getstructoffset())->IsBinFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->GetMinimizer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->GetFCN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->Fit(*(ROOT::Fit::BinData*) libp->para[0].ref, *(ROOT::Math::IParametricFunctionMultiDim*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->Fit(*(ROOT::Fit::UnBinData*) libp->para[0].ref, *(ROOT::Math::IParametricFunctionMultiDim*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->LikelihoodFit(*(ROOT::Fit::BinData*) libp->para[0].ref, *(ROOT::Math::IParametricFunctionMultiDim*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->LikelihoodFit(*(ROOT::Fit::UnBinData*) libp->para[0].ref, *(ROOT::Math::IParametricFunctionMultiDim*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->LikelihoodFit(*(ROOT::Fit::BinData*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_173_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ROOT::Fit::Fitter*) G__getstructoffset())->LikelihoodFit(*(ROOT::Fit::UnBinData*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Fit::Fitter G__TROOTcLcLFitcLcLFitter;
static int G__G__MathFit_173_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Fit::Fitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Fit::Fitter*) (soff+(sizeof(ROOT::Fit::Fitter)*i)))->~G__TROOTcLcLFitcLcLFitter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Fit::Fitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Fit::Fitter*) (soff))->~G__TROOTcLcLFitcLcLFitter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> */
static int G__G__MathFit_177_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>(*(ROOT::Fit::UnBinData*) libp->para[0].ref, *(ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>(*(ROOT::Fit::UnBinData*) libp->para[0].ref, *(ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_177_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*) G__getstructoffset())->NFitPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_177_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*) G__getstructoffset())->Gradient((const double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_177_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::UnBinData& obj = ((const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*) G__getstructoffset())->Data();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_177_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction& obj = ((const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*) G__getstructoffset())->ModelFunction();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> G__TROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR;
static int G__G__MathFit_177_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*) (soff+(sizeof(ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>)*i)))->~G__TROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*) (soff))->~G__TROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> */
static int G__G__MathFit_178_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>(*(ROOT::Fit::UnBinData*) libp->para[0].ref, *(ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>(*(ROOT::Fit::UnBinData*) libp->para[0].ref, *(ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_178_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*) G__getstructoffset())->NFitPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_178_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::UnBinData& obj = ((const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*) G__getstructoffset())->Data();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_178_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction& obj = ((const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*) G__getstructoffset())->ModelFunction();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> G__TROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR;
static int G__G__MathFit_178_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*) (soff+(sizeof(ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>)*i)))->~G__TROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*) (soff))->~G__TROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> */
static int G__G__MathFit_179_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>(*(ROOT::Fit::BinData*) libp->para[0].ref, *(ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>(*(ROOT::Fit::BinData*) libp->para[0].ref, *(ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_179_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*) G__getstructoffset())->NFitPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_179_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*) G__getstructoffset())->Gradient((const double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_179_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::BinData& obj = ((const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*) G__getstructoffset())->Data();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_179_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction& obj = ((const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*) G__getstructoffset())->ModelFunction();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> G__TROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR;
static int G__G__MathFit_179_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*) (soff+(sizeof(ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>)*i)))->~G__TROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*) (soff))->~G__TROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> */
static int G__G__MathFit_180_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>(*(ROOT::Fit::BinData*) libp->para[0].ref, *(ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>(*(ROOT::Fit::BinData*) libp->para[0].ref, *(ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_180_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*) G__getstructoffset())->NFitPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_180_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::BinData& obj = ((const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*) G__getstructoffset())->Data();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_180_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction& obj = ((const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*) G__getstructoffset())->ModelFunction();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> G__TROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR;
static int G__G__MathFit_180_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*) (soff+(sizeof(ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>)*i)))->~G__TROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*) (soff))->~G__TROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ROOT::Fit::SparseData */
static int G__G__MathFit_182_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::SparseData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::SparseData(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) ROOT::Fit::SparseData(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLSparseData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_182_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::SparseData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ROOT::Fit::SparseData(
(const unsigned int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ROOT::Fit::SparseData(
(const unsigned int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLSparseData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_182_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::SparseData*) G__getstructoffset())->NPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_182_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ROOT::Fit::SparseData*) G__getstructoffset())->NDim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_182_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((ROOT::Fit::SparseData*) G__getstructoffset())->Add(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, (const double) G__double(libp->para[2]), (const double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((ROOT::Fit::SparseData*) G__getstructoffset())->Add(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, (const double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_182_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ROOT::Fit::SparseData*) G__getstructoffset())->GetPoint((const unsigned int) G__int(libp->para[0]), *(vector<double>*) libp->para[1].ref
, *(vector<double>*) libp->para[2].ref, *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_182_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Fit::SparseData*) G__getstructoffset())->PrintList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_182_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Fit::SparseData*) G__getstructoffset())->GetBinData(*(ROOT::Fit::BinData*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_182_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Fit::SparseData*) G__getstructoffset())->GetBinDataIntegral(*(ROOT::Fit::BinData*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MathFit_182_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ROOT::Fit::SparseData*) G__getstructoffset())->GetBinDataNoZeros(*(ROOT::Fit::BinData*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MathFit_182_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ROOT::Fit::SparseData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ROOT::Fit::SparseData(*(ROOT::Fit::SparseData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLSparseData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ROOT::Fit::SparseData G__TROOTcLcLFitcLcLSparseData;
static int G__G__MathFit_182_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ROOT::Fit::SparseData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ROOT::Fit::SparseData*) (soff+(sizeof(ROOT::Fit::SparseData)*i)))->~G__TROOTcLcLFitcLcLSparseData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ROOT::Fit::SparseData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ROOT::Fit::SparseData*) (soff))->~G__TROOTcLcLFitcLcLSparseData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MathFit_182_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ROOT::Fit::SparseData* dest = (ROOT::Fit::SparseData*) G__getstructoffset();
   *dest = *(ROOT::Fit::SparseData*) libp->para[0].ref;
   const ROOT::Fit::SparseData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ROOT::Fit */

/* ROOT::Fit::DataOptions */

/* ROOT::Fit::DataRange */

/* ROOT::Fit::FitData */

/* ROOT::Fit::BinData */

/* ROOT::Fit::UnBinData */

/* ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim> */

/* ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim> */

/* ROOT::Fit::ParameterSettings */

/* ROOT::Fit::FitConfig */

/* ROOT::Fit::FitResult */

/* ROOT::Fit::Fitter */

/* ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> */

/* ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> */

/* ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> */

/* ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> */

/* ROOT::Fit::SparseData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__MathFit {
 public:
  G__Sizep2memfuncG__MathFit(): p(&G__Sizep2memfuncG__MathFit::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__MathFit::*p)();
};

size_t G__get_sizep2memfuncG__MathFit()
{
  G__Sizep2memfuncG__MathFit a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */
static long G__2vbo_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_ROOTcLcLMathcLcLIBaseFunctionMultiDim_2(long pobject) {
  ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim> *G__Lderived=(ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*)pobject;
  ROOT::Math::IBaseFunctionMultiDim *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_ROOTcLcLMathcLcLIBaseFunctionMultiDim_2(long pobject) {
  ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> *G__Lderived=(ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)pobject;
  ROOT::Math::IBaseFunctionMultiDim *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_ROOTcLcLMathcLcLIBaseFunctionMultiDim_2(long pobject) {
  ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> *G__Lderived=(ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)pobject;
  ROOT::Math::IBaseFunctionMultiDim *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}


/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__MathFit() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData))) {
     ROOT::Fit::BinData *G__Lderived;
     G__Lderived=(ROOT::Fit::BinData*)0x1000;
     {
       ROOT::Fit::FitData *G__Lpbase=(ROOT::Fit::FitData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData))) {
     ROOT::Fit::UnBinData *G__Lderived;
     G__Lderived=(ROOT::Fit::UnBinData*)0x1000;
     {
       ROOT::Fit::FitData *G__Lpbase=(ROOT::Fit::FitData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR))) {
     ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim> *G__Lderived;
     G__Lderived=(ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*)0x1000;
     {
       ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim> *G__Lpbase=(ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ROOT::Math::IBaseFunctionMultiDim *G__Lpbase=(ROOT::Math::IBaseFunctionMultiDim*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR))) {
     ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim> *G__Lderived;
     G__Lderived=(ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*)0x1000;
     {
       ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim> *G__Lpbase=(ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ROOT::Math::IGradientFunctionMultiDim *G__Lpbase=(ROOT::Math::IGradientFunctionMultiDim*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIGradientFunctionMultiDim),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim),(long)G__2vbo_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_ROOTcLcLMathcLcLIBaseFunctionMultiDim_2,1,2);
     }
     {
       ROOT::Math::IGradientMultiDim *G__Lpbase=(ROOT::Math::IGradientMultiDim*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIGradientMultiDim),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR))) {
     ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> *G__Lderived;
     G__Lderived=(ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)0x1000;
     {
       ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim> *G__Lpbase=(ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ROOT::Math::IBaseFunctionMultiDim *G__Lpbase=(ROOT::Math::IBaseFunctionMultiDim*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR))) {
     ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> *G__Lderived;
     G__Lderived=(ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)0x1000;
     {
       ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim> *G__Lpbase=(ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ROOT::Math::IGradientFunctionMultiDim *G__Lpbase=(ROOT::Math::IGradientFunctionMultiDim*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIGradientFunctionMultiDim),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim),(long)G__2vbo_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_ROOTcLcLMathcLcLIBaseFunctionMultiDim_2,1,2);
     }
     {
       ROOT::Math::IGradientMultiDim *G__Lpbase=(ROOT::Math::IGradientMultiDim*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIGradientMultiDim),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR))) {
     ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> *G__Lderived;
     G__Lderived=(ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)0x1000;
     {
       ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim> *G__Lpbase=(ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ROOT::Math::IBaseFunctionMultiDim *G__Lpbase=(ROOT::Math::IBaseFunctionMultiDim*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR))) {
     ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> *G__Lderived;
     G__Lderived=(ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)0x1000;
     {
       ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim> *G__Lpbase=(ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ROOT::Math::IGradientFunctionMultiDim *G__Lpbase=(ROOT::Math::IGradientFunctionMultiDim*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIGradientFunctionMultiDim),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim),(long)G__2vbo_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR_ROOTcLcLMathcLcLIBaseFunctionMultiDim_2,1,2);
     }
     {
       ROOT::Math::IGradientMultiDim *G__Lpbase=(ROOT::Math::IGradientMultiDim*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIGradientMultiDim),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLSparseData))) {
     ROOT::Fit::SparseData *G__Lderived;
     G__Lderived=(ROOT::Fit::SparseData*)0x1000;
     {
       ROOT::Fit::FitData *G__Lpbase=(ROOT::Fit::FitData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLSparseData),G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__MathFit() {

   /* Setting up typedef entry */
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MathFitLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MathFitLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<double,double> >",117,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MathFitLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MathFitLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<double,double> >",117,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RangeSet",117,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RangeSet>",117,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcOallocatorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MathFitLN_reverse_iteratorlEvectorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcOallocatorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcOallocatorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MathFitLN_reverse_iteratorlEvectorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcOallocatorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcOallocatorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<pair<double,double>,allocator<pair<double,double> > > >",117,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcOallocatorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RangeIntervals",117,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcOallocatorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<double>",117,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MathFitLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MathFitLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const double*>",117,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MathFitLN_reverse_iteratorlEvectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MathFitLN_reverse_iteratorlEvectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IMultiGenFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IMultiGradFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIGradientFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BasicFitMethodFunction<ROOT::Math::IMultiGenFunction>",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BasicFitMethodFunction<ROOT::Math::IMultiGradFunction>",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IParamMultiFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMath));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Chi2FCN<ROOT::Math::IMultiGenFunction>",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFit));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BaseObjFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BaseFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IModelFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Type_t",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgRcLcLType_t),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Chi2Function",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFit));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Chi2FCN<ROOT::Math::IMultiGradFunction>",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFit));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BaseObjFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BaseFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IModelFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Type_t",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgRcLcLType_t),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Chi2GradFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFit));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::Fit::ParameterSettings>",117,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MathFitLN_reverse_iteratorlEvectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MathFitLN_reverse_iteratorlEvectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned int>",117,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MathFitLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MathFitLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IModelFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitResult));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,std::pair<double,double> >",117,G__get_linked_tagnum(&G__G__MathFitLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,pair<double,double> >",117,G__get_linked_tagnum(&G__G__MathFitLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,pair<double,double>,less<unsigned int> >",117,G__get_linked_tagnum(&G__G__MathFitLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MathFitLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MathFitLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IModelFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitter));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IGradModelFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricGradFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitter));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IModel1DFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionOneDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitter));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IGradModel1DFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricGradFunctionOneDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitter));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BaseFunc",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitter));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BaseGradFunc",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIGradientFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitter));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("MinuitFCN_t",89,-1,0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitter));
   G__setnewtype(-1," void (* MinuitFCN_t )(int &npar, double *gin, double &f, double *u, int flag);",0);
   G__search_typename2("auto_ptr<ROOT::Math::IMultiGenFunction>",117,G__get_linked_tagnum(&G__G__MathFitLN_auto_ptrlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("LogLikelihoodFCN<ROOT::Math::IMultiGenFunction>",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFit));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BaseObjFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BaseFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IModelFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("LogLikelihoodFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFit));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("LogLikelihoodFCN<ROOT::Math::IMultiGradFunction>",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFit));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BaseObjFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BaseFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IModelFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("LogLikelihoodGradFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFit));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("PoissonLikelihoodFCN<ROOT::Math::IMultiGenFunction>",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFit));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BaseObjFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BaseFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IModelFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("PoissonLLFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFit));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("PoissonLikelihoodFCN<ROOT::Math::IMultiGradFunction>",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFit));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BaseObjFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BaseFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IModelFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("PoissonLLGradFunction",117,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFit));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ROOT::Fit */
static void G__setup_memvarROOTcLcLFit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFit));
   {
   }
   G__tag_memvar_reset();
}


   /* ROOT::Fit::DataOptions */
static void G__setup_memvarROOTcLcLFitcLcLDataOptions(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataOptions));
   { ROOT::Fit::DataOptions *p; p=(ROOT::Fit::DataOptions*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fIntegral)-(long)(p)),103,0,0,-1,-1,-1,1,"fIntegral=",0,"use integral of bin content instead of bin center (default is false)");
   G__memvar_setup((void*)((long)(&p->fBinVolume)-(long)(p)),103,0,0,-1,-1,-1,1,"fBinVolume=",0,"normalize data by the bin volume (it is used in the Poisson likelihood fits)");
   G__memvar_setup((void*)((long)(&p->fUseEmpty)-(long)(p)),103,0,0,-1,-1,-1,1,"fUseEmpty=",0,"use empty bins (default is false) with a fixed error of 1");
   G__memvar_setup((void*)((long)(&p->fUseRange)-(long)(p)),103,0,0,-1,-1,-1,1,"fUseRange=",0,"use the function range when creating the fit data (default is false)");
   G__memvar_setup((void*)((long)(&p->fErrors1)-(long)(p)),103,0,0,-1,-1,-1,1,"fErrors1=",0,"use all errors equal to 1, i.e. fit without errors (default is false) ");
   G__memvar_setup((void*)((long)(&p->fCoordErrors)-(long)(p)),103,0,0,-1,-1,-1,1,"fCoordErrors=",0,"use errors on the x coordinates when available (default is true)");
   G__memvar_setup((void*)((long)(&p->fAsymErrors)-(long)(p)),103,0,0,-1,-1,-1,1,"fAsymErrors=",0,"use asymmetric errors in the value when available, selecting them according to the on sign of residual (default is true)");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Fit::DataRange */
static void G__setup_memvarROOTcLcLFitcLcLDataRange(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange));
   { ROOT::Fit::DataRange *p; p=(ROOT::Fit::DataRange*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcOallocatorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRsPgRsPgR),G__defined_typename("RangeIntervals"),-1,4,"fRanges=",0,"list of all ranges");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Fit::FitData */
static void G__setup_memvarROOTcLcLFitcLcLFitData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData));
   { ROOT::Fit::FitData *p; p=(ROOT::Fit::FitData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataOptions),-1,-1,4,"fOptions=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange),-1,-1,4,"fRange=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ROOT::Fit::BinData */
static void G__setup_memvarROOTcLcLFitcLcLBinData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData));
   { ROOT::Fit::BinData *p; p=(ROOT::Fit::BinData*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinDatacLcLErrorType),-1,-2,1,"kNoError=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinDatacLcLErrorType),-1,-2,1,"kValueError=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinDatacLcLErrorType),-1,-2,1,"kCoordError=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinDatacLcLErrorType),-1,-2,1,"kAsymError=3",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fDim=",0,"coordinate dimension");
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fPointSize=",0,"total point size including value and errors (= fDim + 2 for error in only Y ) ");
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNPoints=",0,"number of contained points in the data set (can be different than size of vector)");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fRefVolume=",0,"reference bin volume - used to normalize the bins in case of variable bins data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataVector),-1,-1,4,"fDataVector=",0,"pointer to the copied in data vector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataWrapper),-1,-1,4,"fDataWrapper=",0,"pointer to the external data wrapper structure");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBinEdge=",0,"vector containing the bin upper edge (coordinate will contain low edge) ");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Fit::UnBinData */
static void G__setup_memvarROOTcLcLFitcLcLUnBinData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData));
   { ROOT::Fit::UnBinData *p; p=(ROOT::Fit::UnBinData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fDim=",0,"coordinate data dimension");
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNPoints=",0,"numer of fit points");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataVector),-1,-1,4,"fDataVector=",0,"pointer to internal data vector (null for external data)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataWrapper),-1,-1,4,"fDataWrapper=",0,"pointer to structure wrapping external data (null when data are copied in)");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim> */
static void G__setup_memvarROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   { ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim> *p; p=(ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,1,1,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData),-1,-1,4,"fData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,1,1,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),G__defined_typename("IModelFunction"),-1,4,"fFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNEffPoints=",0,"number of effective points used in the fit ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fGrad=",0,"for derivatives");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim> */
static void G__setup_memvarROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   { ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim> *p; p=(ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,1,1,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData),-1,-1,4,"fData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,1,1,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),G__defined_typename("IModelFunction"),-1,4,"fFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNEffPoints=",0,"number of effective points used in the fit ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fGrad=",0,"for derivatives");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Fit::ParameterSettings */
static void G__setup_memvarROOTcLcLFitcLcLParameterSettings(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings));
   { ROOT::Fit::ParameterSettings *p; p=(ROOT::Fit::ParameterSettings*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fValue=",0,"parameter value");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fStepSize=",0,"parameter step size (used by minimizer)");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fFix=",0,"flag to control if parameter is fixed ");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fLowerLimit=",0,"lower parameter limit");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fUpperLimit=",0,"upper parameter limit");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fHasLowerLimit=",0,"flag to control lower parameter limit");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fHasUpperLimit=",0,"flag to control upper parameter limit");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_string),-1,-1,4,"fName=",0,"parameter name");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Fit::FitConfig */
static void G__setup_memvarROOTcLcLFitcLcLFitConfig(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitConfig));
   { ROOT::Fit::FitConfig *p; p=(ROOT::Fit::FitConfig*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fNormErrors=",0,"flag for error normalization");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fParabErrors=",0,"get correct parabolic errors estimate (call Hesse after minimizing)  ");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fMinosErrors=",0,"do full error analysis using Minos");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgR),G__defined_typename("vector<ROOT::Fit::ParameterSettings>"),-1,4,"fSettings=",0,"vector with the parameter settings");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,4,"fMinosParams=",0,"vector with the parameter indeces for running Minos");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLMinimizerOptions),-1,-1,4,"fMinimizerOpts=",0,"minimizer control parameters including name and algo type");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Fit::FitResult */
static void G__setup_memvarROOTcLcLFitcLcLFitResult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitResult));
   { ROOT::Fit::FitResult *p; p=(ROOT::Fit::FitResult*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fValid=",0,"flag for indicating valid fit");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fNormalized=",0,"flag for indicating is errors are normalized");
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"fNFree=",0,"number of fit free parameters (total parameters are in size of parameter vector)  ");
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"fNdf=",0,"number of degree of freedom");
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"fNCalls=",0,"number of function calls");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fStatus=",0,"minimizer status code");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fCovStatus=",0,"covariance matrix status code");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fVal=",0,"minimum function value");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fEdm=",0,"expected distance from mimimum");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fChi2=",0,"fit chi2 value (different than fval in case of chi2 fits)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),G__defined_typename("IModelFunction"),-1,2,"fFitFunc=",0,"! model function resulting  from the fit. It is given by Fitter but it is managed by FitResult");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,2,"fFixedParams=",0,"list of fixed parameters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,2,"fBoundParams=",0,"list of limited parameters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fParams=",0,"parameter values. Size is total number of parameters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fErrors=",0,"errors ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fCovMatrix=",0,"covariance matrix (size is npar*(npar+1)/2) where npar is total parameters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fGlobalCC=",0,"global Correlation coefficient");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR),G__defined_typename("map<unsigned int,std::pair<double,double> >"),-1,2,"fMinosErrors=",0,"map contains the two Minos errors");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_string),-1,-1,2,"fMinimType=",0,"string indicating type of minimizer");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,2,"fParNames=",0,"parameter names (only with FCN only fites, when fFitFunc=0)");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Fit::Fitter */
static void G__setup_memvarROOTcLcLFitcLcLFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitter));
   { ROOT::Fit::Fitter *p; p=(ROOT::Fit::Fitter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fUseGradient=",0,"flag to indicate if using gradient or not");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fBinFit=",0,"flag to indicate if fit is binned (in case of false the fit is unbinned or undefined)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),G__defined_typename("IModelFunction"),-1,4,"fFunc=",0,"copy of the fitted  function containing on output the fit result (managed by FitResult)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitConfig),-1,-1,4,"fConfig=",0,"fitter configuration (options and parameter settings)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_auto_ptrlEROOTcLcLFitcLcLFitResultgR),-1,-1,4,"fResult=",0,"! pointer to the object containing the result of the fit");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_auto_ptrlEROOTcLcLMathcLcLMinimizergR),-1,-1,4,"fMinimizer=",0,"! pointer to used minimizer");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_auto_ptrlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),G__defined_typename("auto_ptr<ROOT::Math::IMultiGenFunction>"),-1,4,"fObjFunction=",0,"! pointer to used objective function");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> */
static void G__setup_memvarROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   { ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> *p; p=(ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,1,1,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData),-1,-1,4,"fData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,1,1,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),G__defined_typename("IModelFunction"),-1,4,"fFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNEffPoints=",0,"number of effective points used in the fit ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fGrad=",0,"for derivatives");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> */
static void G__setup_memvarROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   { ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> *p; p=(ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,1,1,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData),-1,-1,4,"fData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,1,1,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),G__defined_typename("IModelFunction"),-1,4,"fFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNEffPoints=",0,"number of effective points used in the fit ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fGrad=",0,"for derivatives");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> */
static void G__setup_memvarROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   { ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> *p; p=(ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,1,1,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData),-1,-1,4,"fData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,1,1,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),G__defined_typename("IModelFunction"),-1,4,"fFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNEffPoints=",0,"number of effective points used in the fit ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fGrad=",0,"for derivatives");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> */
static void G__setup_memvarROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   { ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> *p; p=(ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,1,1,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData),-1,-1,4,"fData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,1,1,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim),G__defined_typename("IModelFunction"),-1,4,"fFunc=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNEffPoints=",0,"number of effective points used in the fit ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fGrad=",0,"for derivatives");
   }
   G__tag_memvar_reset();
}


   /* ROOT::Fit::SparseData */
static void G__setup_memvarROOTcLcLFitcLcLSparseData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLSparseData));
   { ROOT::Fit::SparseData *p; p=(ROOT::Fit::SparseData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLProxyListBox),-1,-1,4,"fList=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__MathFit() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncROOTcLcLFit(void) {
   /* ROOT::Fit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFit));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLFitcLcLDataOptions(void) {
   /* ROOT::Fit::DataOptions */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataOptions));
   G__memfunc_setup("DataOptions",1126,G__G__MathFit_96_0_1, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataOptions), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DataOptions", 1126, G__G__MathFit_96_0_2, (int) ('i'), G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataOptions), -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::DataOptions' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataOptions", 1252, G__G__MathFit_96_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MathFit_96_0_4, (int) ('u'), G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataOptions), -1, 1, 1, 1, 1, 0, "u 'ROOT::Fit::DataOptions' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLFitcLcLDataRange(void) {
   /* ROOT::Fit::DataRange */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange));
   G__memfunc_setup("DataRange",871,G__G__MathFit_97_0_1, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange), -1, 0, 1, 5, 1, 0, "h - - 0 '1' dim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataRange",871,G__G__MathFit_97_0_2, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange), -1, 0, 2, 1, 1, 0, 
"d - - 0 - xmin d - - 0 - xmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataRange",871,G__G__MathFit_97_0_3, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange), -1, 0, 4, 1, 1, 0, 
"d - - 0 - xmin d - - 0 - xmax "
"d - - 0 - ymin d - - 0 - ymax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataRange",871,G__G__MathFit_97_0_4, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange), -1, 0, 6, 1, 1, 0, 
"d - - 0 - xmin d - - 0 - xmax "
"d - - 0 - ymin d - - 0 - ymax "
"d - - 0 - zmin d - - 0 - zmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NDim",360,G__G__MathFit_97_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Size",411,G__G__MathFit_97_0_6, 104, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - icoord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ranges",608,G__G__MathFit_97_0_7, 117, G__get_linked_tagnum(&G__G__MathFitLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR), G__defined_typename("ROOT::Fit::DataRange::RangeSet"), 1, 1, 1, 1, 9, "h - - 0 - icoord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__MathFit_97_0_8, 117, G__get_linked_tagnum(&G__G__MathFitLN_pairlEdoublecOdoublegR), -1, 0, 1, 1, 1, 8, "h - - 0 - icoord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRange",781,G__G__MathFit_97_0_9, 121, -1, -1, 0, 3, 1, 1, 8, 
"h - - 0 - icoord d - - 1 - xmin "
"d - - 1 - xmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRange",781,G__G__MathFit_97_0_10, 121, -1, -1, 0, 2, 1, 1, 8, 
"d - - 1 - xmin d - - 1 - xmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRange",781,G__G__MathFit_97_0_11, 121, -1, -1, 0, 4, 1, 1, 8, 
"d - - 1 - xmin d - - 1 - xmax "
"d - - 1 - ymin d - - 1 - ymax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRange",781,G__G__MathFit_97_0_12, 121, -1, -1, 0, 6, 1, 1, 8, 
"d - - 1 - xmin d - - 1 - xmax "
"d - - 1 - ymin d - - 1 - ymax "
"d - - 1 - zmin d - - 1 - zmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRange",758,G__G__MathFit_97_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - - 0 - icoord d - - 0 - xmin "
"d - - 0 - xmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRange",758,G__G__MathFit_97_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - xmin d - - 0 - xmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRange",758,G__G__MathFit_97_0_15, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - xmin d - - 0 - xmax "
"d - - 0 - ymin d - - 0 - ymax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRange",758,G__G__MathFit_97_0_16, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - xmin d - - 0 - xmax "
"d - - 0 - ymin d - - 0 - ymax "
"d - - 0 - zmin d - - 0 - zmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRange",793,G__G__MathFit_97_0_17, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - - 0 - icoord d - - 0 - xmin "
"d - - 0 - xmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRange",793,G__G__MathFit_97_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - xmin d - - 0 - xmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRange",793,G__G__MathFit_97_0_19, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - xmin d - - 0 - xmax "
"d - - 0 - ymin d - - 0 - ymax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRange",793,G__G__MathFit_97_0_20, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - xmin d - - 0 - xmax "
"d - - 0 - ymin d - - 0 - ymax "
"d - - 0 - zmin d - - 0 - zmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__G__MathFit_97_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 '0' icoord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInside",792,G__G__MathFit_97_0_22, 103, -1, -1, 0, 2, 1, 1, 8, 
"d - - 0 - x h - - 0 '0' icoord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanRangeSet",1276,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"h - - 0 - icoord d - - 0 - xmin "
"d - - 0 - xmax", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DataRange", 871, G__G__MathFit_97_0_24, (int) ('i'), G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange), -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::DataRange' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataRange", 997, G__G__MathFit_97_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MathFit_97_0_26, (int) ('u'), G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange), -1, 1, 1, 1, 1, 0, "u 'ROOT::Fit::DataRange' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLFitcLcLFitData(void) {
   /* ROOT::Fit::FitData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData));
   G__memfunc_setup("FitData",669,G__G__MathFit_107_0_1, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitData",669,G__G__MathFit_107_0_2, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData), -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::DataOptions' - 11 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitData",669,G__G__MathFit_107_0_3, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData), -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::DataRange' - 11 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitData",669,G__G__MathFit_107_0_4, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Fit::DataOptions' - 11 - opt u 'ROOT::Fit::DataRange' - 11 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Opt",307,G__G__MathFit_107_0_5, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataOptions), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Opt",307,G__G__MathFit_107_0_6, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataOptions), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Range",493,G__G__MathFit_107_0_7, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaxSize",705,G__G__MathFit_107_0_8, 104, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (unsigned int (*)())(&ROOT::Fit::FitData::MaxSize) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FitData", 669, G__G__MathFit_107_0_9, (int) ('i'), G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData), -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::FitData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FitData", 795, G__G__MathFit_107_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MathFit_107_0_11, (int) ('u'), G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData), -1, 1, 1, 1, 1, 0, "u 'ROOT::Fit::FitData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLFitcLcLBinData(void) {
   /* ROOT::Fit::BinData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData));
   G__memfunc_setup("GetPointSize",1221,G__G__MathFit_118_0_1, 104, -1, -1, 0, 2, 3, 1, 0, 
"i 'ROOT::Fit::BinData::ErrorType' - 0 - err h - - 0 - dim", (char*)NULL, (void*) G__func2void( (unsigned int (*)(ROOT::Fit::BinData::ErrorType, unsigned int))(&ROOT::Fit::BinData::GetPointSize) ), 0);
   G__memfunc_setup("GetErrorType",1228,G__G__MathFit_118_0_2, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinDatacLcLErrorType), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BinData",659,G__G__MathFit_118_0_3, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData), -1, 0, 3, 5, 1, 0, 
"h - - 0 '0' maxpoints h - - 0 '1' dim "
"i 'ROOT::Fit::BinData::ErrorType' - 0 'kValueError' err", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BinData",659,G__G__MathFit_118_0_4, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData), -1, 0, 4, 5, 1, 0, 
"u 'ROOT::Fit::DataOptions' - 11 - opt h - - 0 '0' maxpoints "
"h - - 0 '1' dim i 'ROOT::Fit::BinData::ErrorType' - 0 'kValueError' err", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BinData",659,G__G__MathFit_118_0_5, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData), -1, 0, 5, 1, 1, 0, 
"u 'ROOT::Fit::DataOptions' - 11 - opt u 'ROOT::Fit::DataRange' - 11 - range "
"h - - 0 '0' maxpoints h - - 0 '1' dim "
"i 'ROOT::Fit::BinData::ErrorType' - 0 'kValueError' err", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BinData",659,G__G__MathFit_118_0_6, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData), -1, 0, 5, 1, 1, 0, 
"h - - 0 - n D - - 10 - dataX "
"D - - 10 - val D - - 10 - ex "
"D - - 10 - eval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BinData",659,G__G__MathFit_118_0_7, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData), -1, 0, 7, 1, 1, 0, 
"h - - 0 - n D - - 10 - dataX "
"D - - 10 - dataY D - - 10 - val "
"D - - 10 - ex D - - 10 - ey "
"D - - 10 - eval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BinData",659,G__G__MathFit_118_0_8, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData), -1, 0, 9, 1, 1, 0, 
"h - - 0 - n D - - 10 - dataX "
"D - - 10 - dataY D - - 10 - dataZ "
"D - - 10 - val D - - 10 - ex "
"D - - 10 - ey D - - 10 - ez "
"D - - 10 - eval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BinData",659,G__G__MathFit_118_0_9, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData), -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::BinData' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__MathFit_118_0_10, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData), -1, 1, 1, 1, 1, 0, "u 'ROOT::Fit::BinData' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__G__MathFit_118_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - - 0 - maxpoints h - - 0 '1' dim "
"i 'ROOT::Fit::BinData::ErrorType' - 0 'kValueError' err", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PointSize",933,G__G__MathFit_118_0_12, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataSize",789,G__G__MathFit_118_0_13, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HaveCoordErrors",1528,G__G__MathFit_118_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HaveAsymErrors",1435,G__G__MathFit_118_0_15, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__MathFit_118_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__MathFit_118_0_17, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - ey", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__MathFit_118_0_18, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - ex d - - 0 - ey", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__MathFit_118_0_19, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - ex d - - 0 - eyl "
"d - - 0 - eyh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__MathFit_118_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 10 - x d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__MathFit_118_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"D - - 10 - x d - - 0 - val "
"d - - 0 - eval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__MathFit_118_0_22, 121, -1, -1, 0, 4, 1, 1, 0, 
"D - - 10 - x d - - 0 - val "
"D - - 10 - ex d - - 0 - eval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Coords",618,G__G__MathFit_118_0_23, 68, -1, -1, 0, 1, 1, 1, 9, "h - - 0 - ipoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,G__G__MathFit_118_0_24, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - ipoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Error",522,G__G__MathFit_118_0_25, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - ipoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvError",823,G__G__MathFit_118_0_26, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - ipoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CoordErrors",1140,G__G__MathFit_118_0_27, 68, -1, -1, 0, 1, 1, 1, 9, "h - - 0 - ipoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPoint",810,G__G__MathFit_118_0_28, 68, -1, -1, 0, 2, 1, 1, 9, 
"h - - 0 - ipoint d - - 1 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPoint",810,G__G__MathFit_118_0_29, 68, -1, -1, 0, 3, 1, 1, 9, 
"h - - 0 - ipoint d - - 1 - value "
"d - - 1 - invError", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPointError",1332,G__G__MathFit_118_0_30, 68, -1, -1, 0, 2, 1, 1, 9, 
"h - - 0 - ipoint d - - 1 - errvalue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPointError",1332,G__G__MathFit_118_0_31, 68, -1, -1, 0, 3, 1, 1, 9, 
"h - - 0 - ipoint d - - 1 - errlow "
"d - - 1 - errhigh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Resize",626,G__G__MathFit_118_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - npoints", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NPoints",715,G__G__MathFit_118_0_33, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Size",411,G__G__MathFit_118_0_34, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NDim",360,G__G__MathFit_118_0_35, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LogTransform",1246,G__G__MathFit_118_0_36, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BinUpEdge",851,G__G__MathFit_118_0_37, 68, -1, -1, 0, 1, 1, 1, 9, "h - - 0 - icoord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasBinEdges",1053,G__G__MathFit_118_0_38, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBinUpEdge",1116,G__G__MathFit_118_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - binwidth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RefVolume",917,G__G__MathFit_118_0_40, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRefVolume",1217,G__G__MathFit_118_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNPoints",1015,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "h - - 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BinData", 785, G__G__MathFit_118_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLFitcLcLUnBinData(void) {
   /* ROOT::Fit::UnBinData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData));
   G__memfunc_setup("UnBinData",854,G__G__MathFit_138_0_1, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData), -1, 0, 2, 5, 1, 0, 
"h - - 0 '0' maxpoints h - - 0 '1' dim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnBinData",854,G__G__MathFit_138_0_2, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData), -1, 0, 3, 5, 1, 0, 
"u 'ROOT::Fit::DataRange' - 11 - range h - - 0 '0' maxpoints "
"h - - 0 '1' dim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnBinData",854,G__G__MathFit_138_0_3, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData), -1, 0, 4, 1, 1, 0, 
"u 'ROOT::Fit::DataOptions' - 11 - opt u 'ROOT::Fit::DataRange' - 11 - range "
"h - - 0 '0' maxpoints h - - 0 '1' dim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnBinData",854,G__G__MathFit_138_0_4, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData), -1, 0, 2, 1, 1, 0, 
"h - - 0 - n D - - 10 - dataX", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnBinData",854,G__G__MathFit_138_0_5, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData), -1, 0, 3, 1, 1, 0, 
"h - - 0 - n D - - 10 - dataX "
"D - - 10 - dataY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnBinData",854,G__G__MathFit_138_0_6, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData), -1, 0, 4, 1, 1, 0, 
"h - - 0 - n D - - 10 - dataX "
"D - - 10 - dataY D - - 10 - dataZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnBinData",854,G__G__MathFit_138_0_7, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData), -1, 0, 3, 1, 1, 0, 
"h - - 0 - maxpoints D - - 10 - dataX "
"u 'ROOT::Fit::DataRange' - 11 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnBinData",854,G__G__MathFit_138_0_8, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData), -1, 0, 4, 1, 1, 0, 
"h - - 0 - maxpoints D - - 10 - dataX "
"D - - 10 - dataY u 'ROOT::Fit::DataRange' - 11 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnBinData",854,G__G__MathFit_138_0_9, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData), -1, 0, 5, 1, 1, 0, 
"h - - 0 - maxpoints D - - 10 - dataX "
"D - - 10 - dataY D - - 10 - dataZ "
"u 'ROOT::Fit::DataRange' - 11 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnBinData",854,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData), -1, 0, 1, 1, 4, 0, "u 'ROOT::Fit::UnBinData' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData), -1, 1, 1, 1, 4, 0, "u 'ROOT::Fit::UnBinData' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__G__MathFit_138_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - maxpoints h - - 0 '1' dim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PointSize",933,G__G__MathFit_138_0_13, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataSize",789,G__G__MathFit_138_0_14, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__MathFit_138_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__MathFit_138_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__MathFit_138_0_17, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__MathFit_138_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Coords",618,G__G__MathFit_138_0_19, 68, -1, -1, 0, 1, 1, 1, 9, "h - - 0 - ipoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Resize",626,G__G__MathFit_138_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - npoints", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NPoints",715,G__G__MathFit_138_0_21, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Size",411,G__G__MathFit_138_0_22, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NDim",360,G__G__MathFit_138_0_23, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNPoints",1015,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "h - - 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~UnBinData", 980, G__G__MathFit_138_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void) {
   /* ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   G__memfunc_setup("Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>",3708,G__G__MathFit_141_0_1, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Fit::BinData' - 11 - data u 'ROOT::Math::IParametricFunctionMultiDim' 'ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction' 11 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim), G__defined_typename("ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>::BaseFunction"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NFitPoints",1006,G__G__MathFit_141_0_3, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DataElement",1092,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 8, 
"D - - 10 - x h - - 0 - i "
"D - - 0 - g", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Gradient",814,G__G__MathFit_141_0_5, 121, -1, -1, 0, 2, 1, 1, 8, 
"D - - 10 - x D - - 0 - g", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Type",418,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgRcLcLType_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Data",378,G__G__MathFit_141_0_7, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ModelFunction",1335,G__G__MathFit_141_0_8, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim), G__defined_typename("ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNFitPoints",1306,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 8, "h - - 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoEval",571,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 8, "D - - 10 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoDerivative",1222,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 8, 
"D - - 10 - x h - - 0 - icoord", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>", 3708, G__G__MathFit_141_0_12, (int) ('i'), 
G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>", 3834, G__G__MathFit_141_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void) {
   /* ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   G__memfunc_setup("Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>",4143,G__G__MathFit_143_0_1, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Fit::BinData' - 11 - data u 'ROOT::Math::IParametricFunctionMultiDim' 'ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction' 11 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim), G__defined_typename("ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>::BaseFunction"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NFitPoints",1006,G__G__MathFit_143_0_3, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DataElement",1092,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 8, 
"D - - 10 - x h - - 0 - i "
"D - - 0 - g", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Gradient",814,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"D - - 10 - x D - - 0 - g", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Type",418,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgRcLcLType_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Data",378,G__G__MathFit_143_0_7, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ModelFunction",1335,G__G__MathFit_143_0_8, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim), G__defined_typename("ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNFitPoints",1306,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 8, "h - - 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoEval",571,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 8, "D - - 10 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoDerivative",1222,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 8, 
"D - - 10 - x h - - 0 - icoord", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>", 4143, G__G__MathFit_143_0_12, (int) ('i'), 
G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR), -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>", 4269, G__G__MathFit_143_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLFitcLcLParameterSettings(void) {
   /* ROOT::Fit::ParameterSettings */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings));
   G__memfunc_setup("ParameterSettings",1778,G__G__MathFit_146_0_1, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParameterSettings",1778,G__G__MathFit_146_0_2, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings), -1, 0, 3, 1, 1, 0, 
"u 'string' - 11 - name d - - 0 - val "
"d - - 0 - err", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParameterSettings",1778,G__G__MathFit_146_0_3, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings), -1, 0, 5, 1, 1, 0, 
"u 'string' - 11 - name d - - 0 - val "
"d - - 0 - err d - - 0 - min "
"d - - 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParameterSettings",1778,G__G__MathFit_146_0_4, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings), -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - name d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__G__MathFit_146_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 11 - name d - - 0 - value "
"d - - 0 - step", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__G__MathFit_146_0_6, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'string' - 11 - name d - - 0 - value "
"d - - 0 - step d - - 0 - lower "
"d - - 0 - upper", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__G__MathFit_146_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - name d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,G__G__MathFit_146_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StepSize",823,G__G__MathFit_146_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerLimit",1032,G__G__MathFit_146_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperLimit",1035,G__G__MathFit_146_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFixed",684,G__G__MathFit_146_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasLowerLimit",1316,G__G__MathFit_146_0_13, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasUpperLimit",1319,G__G__MathFit_146_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBound",692,G__G__MathFit_146_0_15, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDoubleBound",1295,G__G__MathFit_146_0_16, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Name",385,G__G__MathFit_146_0_17, 117, G__get_linked_tagnum(&G__G__MathFitLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__G__MathFit_146_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fix",295,G__G__MathFit_146_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Release",705,G__G__MathFit_146_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValue",809,G__G__MathFit_146_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStepSize",1123,G__G__MathFit_146_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - err", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLimits",926,G__G__MathFit_146_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - low d - - 0 - up", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUpperLimit",1335,G__G__MathFit_146_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - up", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLowerLimit",1332,G__G__MathFit_146_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - low", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveLimits",1248,G__G__MathFit_146_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ParameterSettings", 1778, G__G__MathFit_146_0_27, (int) ('i'), G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings), -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::ParameterSettings' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ParameterSettings", 1904, G__G__MathFit_146_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MathFit_146_0_29, (int) ('u'), G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings), -1, 1, 1, 1, 1, 0, "u 'ROOT::Fit::ParameterSettings' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLFitcLcLFitConfig(void) {
   /* ROOT::Fit::FitConfig */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitConfig));
   G__memfunc_setup("FitConfig",889,G__G__MathFit_149_0_1, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitConfig), -1, 0, 1, 1, 1, 0, "h - - 0 '0' npar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitConfig",889,G__G__MathFit_149_0_2, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitConfig), -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::FitConfig' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__MathFit_149_0_3, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitConfig), -1, 1, 1, 1, 1, 0, "u 'ROOT::Fit::FitConfig' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParSettings",1140,G__G__MathFit_149_0_4, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings), -1, 1, 1, 1, 1, 9, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParSettings",1140,G__G__MathFit_149_0_5, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings), -1, 1, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParamsSettings",1461,G__G__MathFit_149_0_6, 117, G__get_linked_tagnum(&G__G__MathFitLN_vectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgR), G__defined_typename("vector<ROOT::Fit::ParameterSettings>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParamsSettings",1461,G__G__MathFit_149_0_7, 117, G__get_linked_tagnum(&G__G__MathFitLN_vectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgR), G__defined_typename("vector<ROOT::Fit::ParameterSettings>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateParamsSettings",2057,G__G__MathFit_149_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::IParametricFunctionMultiDim' 'ROOT::Math::IParamMultiFunction' 11 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParamsSettings",1761,G__G__MathFit_149_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - - 0 - npar D - - 10 - params "
"D - - 10 '0' vstep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMinimizer",1544,G__G__MathFit_149_0_10, 85, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLMinimizer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MinimizerOptions",1696,G__G__MathFit_149_0_11, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLMinimizerOptions), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinimizer",1248,G__G__MathFit_149_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - type C - - 10 '0' algo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MinimizerType",1366,G__G__MathFit_149_0_13, 117, G__get_linked_tagnum(&G__G__MathFitLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MinimizerAlgoType",1753,G__G__MathFit_149_0_14, 117, G__get_linked_tagnum(&G__G__MathFitLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NormalizeErrors",1582,G__G__MathFit_149_0_15, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParabErrors",1123,G__G__MathFit_149_0_16, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MinosErrors",1155,G__G__MathFit_149_0_17, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MinosParams",1130,G__G__MathFit_149_0_18, 117, G__get_linked_tagnum(&G__G__MathFitLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<unsigned int>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNormErrors",1349,G__G__MathFit_149_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParabErrors",1423,G__G__MathFit_149_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinosErrors",1455,G__G__MathFit_149_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinosErrors",1455,G__G__MathFit_149_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - paramInd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDefaultMinimizer",1957,G__G__MathFit_149_0_23, 121, -1, -1, 0, 2, 3, 1, 0, 
"C - - 10 - type C - - 10 '0' algo", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*))(&ROOT::Fit::FitConfig::SetDefaultMinimizer) ), 0);
   // automatic destructor
   G__memfunc_setup("~FitConfig", 1015, G__G__MathFit_149_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLFitcLcLFitResult(void) {
   /* ROOT::Fit::FitResult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitResult));
   G__memfunc_setup("FitResult",930,G__G__MathFit_158_0_1, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitResult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitResult",930,G__G__MathFit_158_0_2, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitResult), -1, 0, 8, 1, 1, 0, 
"u 'ROOT::Math::Minimizer' - 1 - min u 'ROOT::Fit::FitConfig' - 11 - fconfig "
"U 'ROOT::Math::IParametricFunctionMultiDim' 'ROOT::Fit::FitResult::IModelFunction' 10 - f g - - 0 - isValid "
"h - - 0 '0' sizeOfData g - - 0 'true' binFit "
"U 'ROOT::Math::IBaseFunctionMultiDim' 'ROOT::Math::IMultiGenFunction' 10 '0' chi2func h - - 0 '0' ncalls", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitResult",930,G__G__MathFit_158_0_3, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitResult), -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::FitResult' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__MathFit_158_0_4, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitResult), -1, 1, 1, 1, 1, 0, "u 'ROOT::Fit::FitResult' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__G__MathFit_158_0_5, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'ROOT::Math::Minimizer' - 11 - min g - - 0 - isValid "
"h - - 0 '0' ncalls", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MinimizerType",1366,G__G__MathFit_158_0_6, 117, G__get_linked_tagnum(&G__G__MathFitLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__G__MathFit_158_0_7, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEmpty",715,G__G__MathFit_158_0_8, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MinFcnValue",1080,G__G__MathFit_158_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NCalls",573,G__G__MathFit_158_0_10, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Edm",278,G__G__MathFit_158_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NTotalParameters",1638,G__G__MathFit_158_0_12, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NPar",369,G__G__MathFit_158_0_13, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NFreeParameters",1508,G__G__MathFit_158_0_14, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Status",644,G__G__MathFit_158_0_15, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CovMatrixStatus",1569,G__G__MathFit_158_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FittedFunction",1446,G__G__MathFit_158_0_17, 85, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim), G__defined_typename("ROOT::Fit::FitResult::IModelFunction"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Chi2",326,G__G__MathFit_158_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ndf",280,G__G__MathFit_158_0_19, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Prob",403,G__G__MathFit_158_0_20, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Errors",637,G__G__MathFit_158_0_21, 117, G__get_linked_tagnum(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetErrors",925,G__G__MathFit_158_0_22, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parameters",1044,G__G__MathFit_158_0_23, 117, G__get_linked_tagnum(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParams",900,G__G__MathFit_158_0_24, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,G__G__MathFit_158_0_25, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Error",522,G__G__MathFit_158_0_26, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinosError",1340,G__G__MathFit_158_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - - 0 - i d - - 0 - elow "
"d - - 0 - eup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowerError",1043,G__G__MathFit_158_0_28, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpperError",1046,G__G__MathFit_158_0_29, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GlobalCC",727,G__G__MathFit_158_0_30, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CovMatrix",925,G__G__MathFit_158_0_31, 100, -1, -1, 0, 2, 1, 1, 8, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Correlation",1154,G__G__MathFit_158_0_32, 100, -1, -1, 0, 2, 1, 1, 8, 
"h - - 0 - i h - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConfidenceIntervals",2246,G__G__MathFit_158_0_33, 121, -1, -1, 0, 6, 1, 1, 8, 
"h - - 0 - n h - - 0 - stride1 "
"h - - 0 - stride2 D - - 10 - x "
"D - - 0 - ci d - - 0 '0.95' cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConfidenceIntervals",2246,G__G__MathFit_158_0_34, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'ROOT::Fit::BinData' - 11 - data D - - 0 - ci "
"d - - 0 '0.95' cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Index",504,G__G__MathFit_158_0_35, 105, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NormalizeErrors",1582,G__G__MathFit_158_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NormalizedErrors",1682,G__G__MathFit_158_0_37, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__MathFit_158_0_38, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os g - - 0 'false' covmat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCovMatrix",1450,G__G__MathFit_158_0_39, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsParameterBound",1621,G__G__MathFit_158_0_40, 103, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - ipar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsParameterFixed",1613,G__G__MathFit_158_0_41, 103, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - ipar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameterName",1602,G__G__MathFit_158_0_42, 117, G__get_linked_tagnum(&G__G__MathFitLN_string), -1, 0, 1, 1, 1, 8, "h - - 0 - ipar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ModelFunction",1335,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim), G__defined_typename("ROOT::Fit::FitResult::IModelFunction"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetModelFunction",1635,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'ROOT::Math::IParametricFunctionMultiDim' 'ROOT::Fit::FitResult::IModelFunction' 0 - func", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FitResult", 1056, G__G__MathFit_158_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLFitcLcLFitter(void) {
   /* ROOT::Fit::Fitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitter));
   G__memfunc_setup("Fitter",622,G__G__MathFit_173_0_1, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fitter",622,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitter), -1, 0, 1, 1, 4, 0, "u 'ROOT::Fit::Fitter' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitter), -1, 1, 1, 1, 4, 0, "u 'ROOT::Fit::Fitter' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fit",291,G__G__MathFit_173_0_4, 103, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::BinData' - 11 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fit",291,G__G__MathFit_173_0_5, 103, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::UnBinData' - 11 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitFCN",506,G__G__MathFit_173_0_6, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'ROOT::Math::IBaseFunctionMultiDim' 'ROOT::Math::IMultiGenFunction' 11 - fcn D - - 10 '0' params "
"h - - 0 '0' dataSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitFCN",506,G__G__MathFit_173_0_7, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'ROOT::Math::IGradientFunctionMultiDim' 'ROOT::Math::IMultiGradFunction' 11 - fcn D - - 10 '0' params "
"h - - 0 '0' dataSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitFCN",506,G__G__MathFit_173_0_8, 103, -1, -1, 0, 1, 1, 1, 0, "Y - 'ROOT::Fit::Fitter::MinuitFCN_t' 0 - fcn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LinearFit",894,G__G__MathFit_173_0_9, 103, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::BinData' - 11 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFunction",1138,G__G__MathFit_173_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::IParametricFunctionMultiDim' 'ROOT::Fit::Fitter::IModelFunction' 11 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFunction",1138,G__G__MathFit_173_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::IParametricFunctionOneDim' 'ROOT::Fit::Fitter::IModel1DFunction' 11 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFunction",1138,G__G__MathFit_173_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::IParametricGradFunctionMultiDim' 'ROOT::Fit::Fitter::IGradModelFunction' 11 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFunction",1138,G__G__MathFit_173_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::IParametricGradFunctionOneDim' 'ROOT::Fit::Fitter::IGradModel1DFunction' 11 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Result",639,G__G__MathFit_173_0_14, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitResult), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateHessErrors",1950,G__G__MathFit_173_0_15, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateMinosErrors",2065,G__G__MathFit_173_0_16, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Config",598,G__G__MathFit_173_0_17, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitConfig), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Config",598,G__G__MathFit_173_0_18, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitConfig), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBinFit",760,G__G__MathFit_173_0_19, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinimizer",1236,G__G__MathFit_173_0_20, 85, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLMinimizer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCN",503,G__G__MathFit_173_0_21, 85, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim), G__defined_typename("ROOT::Math::IMultiGenFunction"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoLeastSquareFit",1600,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 2, 0, "u 'ROOT::Fit::BinData' - 11 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoLikelihoodFit",1498,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 2, 0, "u 'ROOT::Fit::BinData' - 11 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoLikelihoodFit",1498,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 2, 0, "u 'ROOT::Fit::UnBinData' - 11 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoLinearFit",1073,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 2, 0, "u 'ROOT::Fit::BinData' - 11 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fit",291,G__G__MathFit_173_0_26, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Fit::BinData' - 11 - data u 'ROOT::Math::IParametricFunctionMultiDim' - 11 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fit",291,G__G__MathFit_173_0_27, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Fit::UnBinData' - 11 - data u 'ROOT::Math::IParametricFunctionMultiDim' - 11 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LikelihoodFit",1319,G__G__MathFit_173_0_28, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Fit::BinData' - 11 - data u 'ROOT::Math::IParametricFunctionMultiDim' - 11 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LikelihoodFit",1319,G__G__MathFit_173_0_29, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Fit::UnBinData' - 11 - data u 'ROOT::Math::IParametricFunctionMultiDim' - 11 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LikelihoodFit",1319,G__G__MathFit_173_0_30, 103, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::BinData' - 11 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LikelihoodFit",1319,G__G__MathFit_173_0_31, 103, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::UnBinData' - 11 - data", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Fitter", 748, G__G__MathFit_173_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void) {
   /* ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   G__memfunc_setup("LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>",4700,G__G__MathFit_177_0_1, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Fit::UnBinData' - 11 - data u 'ROOT::Math::IParametricFunctionMultiDim' 'ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction' 11 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>",4700,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR), -1, 0, 1, 1, 4, 0, "u 'ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR), -1, 1, 1, 1, 4, 0, "u 'ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim), G__defined_typename("ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::BaseFunction"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NFitPoints",1006,G__G__MathFit_177_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DataElement",1092,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 8, 
"D - - 10 - x h - - 0 - i "
"D - - 0 - g", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Gradient",814,G__G__MathFit_177_0_7, 121, -1, -1, 0, 2, 1, 1, 8, 
"D - - 10 - x D - - 0 - g", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Type",418,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgRcLcLType_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Data",378,G__G__MathFit_177_0_9, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ModelFunction",1335,G__G__MathFit_177_0_10, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim), G__defined_typename("ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoEval",571,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 8, "D - - 10 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoDerivative",1222,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 8, 
"D - - 10 - x h - - 0 - icoord", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>", 4826, G__G__MathFit_177_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void) {
   /* ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   G__memfunc_setup("LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>",5135,G__G__MathFit_178_0_1, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Fit::UnBinData' - 11 - data u 'ROOT::Math::IParametricFunctionMultiDim' 'ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction' 11 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>",5135,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR), -1, 0, 1, 1, 4, 0, "u 'ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR), -1, 1, 1, 1, 4, 0, "u 'ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim), G__defined_typename("ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::BaseFunction"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NFitPoints",1006,G__G__MathFit_178_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DataElement",1092,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 8, 
"D - - 10 - x h - - 0 - i "
"D - - 0 - g", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Gradient",814,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"D - - 10 - x D - - 0 - g", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Type",418,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgRcLcLType_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Data",378,G__G__MathFit_178_0_9, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ModelFunction",1335,G__G__MathFit_178_0_10, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim), G__defined_typename("ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoEval",571,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 8, "D - - 10 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoDerivative",1222,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 8, 
"D - - 10 - x h - - 0 - icoord", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>", 5261, G__G__MathFit_178_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR(void) {
   /* ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR));
   G__memfunc_setup("PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>",5157,G__G__MathFit_179_0_1, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Fit::BinData' - 11 - data u 'ROOT::Math::IParametricFunctionMultiDim' 'ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction' 11 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>",5157,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR), -1, 0, 1, 1, 4, 0, "u 'ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR), -1, 1, 1, 1, 4, 0, "u 'ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim), G__defined_typename("ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::BaseFunction"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NFitPoints",1006,G__G__MathFit_179_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DataElement",1092,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 8, 
"D - - 10 - x h - - 0 - i "
"D - - 0 - g", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Gradient",814,G__G__MathFit_179_0_7, 121, -1, -1, 0, 2, 1, 1, 8, 
"D - - 10 - x D - - 0 - g", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Type",418,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgRcLcLType_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Data",378,G__G__MathFit_179_0_9, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ModelFunction",1335,G__G__MathFit_179_0_10, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim), G__defined_typename("ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoEval",571,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 8, "D - - 10 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoDerivative",1222,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 8, 
"D - - 10 - x h - - 0 - icoord", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>", 5283, G__G__MathFit_179_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR(void) {
   /* ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR));
   G__memfunc_setup("PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>",5592,G__G__MathFit_180_0_1, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR), -1, 0, 2, 1, 1, 0, 
"u 'ROOT::Fit::BinData' - 11 - data u 'ROOT::Math::IParametricFunctionMultiDim' 'ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction' 11 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>",5592,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR), -1, 0, 1, 1, 4, 0, "u 'ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR), -1, 1, 1, 1, 4, 0, "u 'ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim), G__defined_typename("ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::BaseFunction"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NFitPoints",1006,G__G__MathFit_180_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DataElement",1092,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 8, 
"D - - 10 - x h - - 0 - i "
"D - - 0 - g", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Gradient",814,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"D - - 10 - x D - - 0 - g", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Type",418,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgRcLcLType_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Data",378,G__G__MathFit_180_0_9, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ModelFunction",1335,G__G__MathFit_180_0_10, 117, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim), G__defined_typename("ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoEval",571,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 8, "D - - 10 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoDerivative",1222,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 8, 
"D - - 10 - x h - - 0 - icoord", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>", 5718, G__G__MathFit_180_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncROOTcLcLFitcLcLSparseData(void) {
   /* ROOT::Fit::SparseData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLSparseData));
   G__memfunc_setup("SparseData",1000,G__G__MathFit_182_0_1, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLSparseData), -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - min u 'vector<double,allocator<double> >' 'vector<double>' 1 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SparseData",1000,G__G__MathFit_182_0_2, 105, G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLSparseData), -1, 0, 3, 1, 1, 0, 
"h - - 10 - dim D - - 0 - min "
"D - - 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NPoints",715,G__G__MathFit_182_0_3, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NDim",360,G__G__MathFit_182_0_4, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__MathFit_182_0_5, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - min u 'vector<double,allocator<double> >' 'vector<double>' 1 - max "
"d - - 10 - content d - - 10 '1.0' error", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPoint",810,G__G__MathFit_182_0_6, 121, -1, -1, 0, 5, 1, 1, 0, 
"h - - 10 - i u 'vector<double,allocator<double> >' 'vector<double>' 1 - min "
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - max d - - 1 - content "
"d - - 1 - error", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintList",937,G__G__MathFit_182_0_7, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBinData",947,G__G__MathFit_182_0_8, 121, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Fit::BinData' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBinDataIntegral",1769,G__G__MathFit_182_0_9, 121, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Fit::BinData' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBinDataNoZeros",1667,G__G__MathFit_182_0_10, 121, -1, -1, 0, 1, 1, 1, 8, "u 'ROOT::Fit::BinData' - 1 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SparseData", 1000, G__G__MathFit_182_0_11, (int) ('i'), G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLSparseData), -1, 0, 1, 1, 1, 0, "u 'ROOT::Fit::SparseData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SparseData", 1126, G__G__MathFit_182_0_12, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MathFit_182_0_13, (int) ('u'), G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLSparseData), -1, 1, 1, 1, 1, 0, "u 'ROOT::Fit::SparseData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__MathFit() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__MathFit() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__MathFit() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__MathFitLN_ROOT = { "ROOT" , 110 , -1 };
G__linked_taginfo G__G__MathFitLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFit = { "ROOT::Fit" , 110 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLDataOptions = { "ROOT::Fit::DataOptions" , 115 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLDataRange = { "ROOT::Fit::DataRange" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__G__MathFitLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR = { "vector<pair<double,double>,allocator<pair<double,double> > >" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<double,double>,allocator<pair<double,double> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_vectorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcOallocatorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRsPgRsPgR = { "vector<vector<pair<double,double>,allocator<pair<double,double> > >,allocator<vector<pair<double,double>,allocator<pair<double,double> > > > >" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_reverse_iteratorlEvectorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcOallocatorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<pair<double,double>,allocator<pair<double,double> > >,allocator<vector<pair<double,double>,allocator<pair<double,double> > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLFitData = { "ROOT::Fit::FitData" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLDataVector = { "ROOT::Fit::DataVector" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<double,allocator<double> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLDataWrapper = { "ROOT::Fit::DataWrapper" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR = { "vector<const double*,allocator<const double*> >" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_reverse_iteratorlEvectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<const double*,allocator<const double*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLBinData = { "ROOT::Fit::BinData" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLBinDatacLcLErrorType = { "ROOT::Fit::BinData::ErrorType" , 101 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLMath = { "ROOT::Math" , 110 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim = { "ROOT::Math::IBaseFunctionMultiDim" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLMathcLcLIGradientFunctionMultiDim = { "ROOT::Math::IGradientFunctionMultiDim" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLMathcLcLIGradientMultiDim = { "ROOT::Math::IGradientMultiDim" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR = { "ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgRcLcLType_t = { "ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::Type_t" , 101 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR = { "ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgRcLcLType_t = { "ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::Type_t" , 101 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionOneDim = { "ROOT::Math::IParametricFunctionOneDim" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLMathcLcLIParametricGradFunctionOneDim = { "ROOT::Math::IParametricGradFunctionOneDim" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim = { "ROOT::Math::IParametricFunctionMultiDim" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLMathcLcLIParametricGradFunctionMultiDim = { "ROOT::Math::IParametricGradFunctionMultiDim" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData = { "ROOT::Fit::UnBinData" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR = { "ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR = { "ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings = { "ROOT::Fit::ParameterSettings" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLMathcLcLMinimizerOptions = { "ROOT::Math::MinimizerOptions" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLMathcLcLMinimizer = { "ROOT::Math::Minimizer" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLFitConfig = { "ROOT::Fit::FitConfig" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_vectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgR = { "vector<ROOT::Fit::ParameterSettings,allocator<ROOT::Fit::ParameterSettings> >" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_reverse_iteratorlEvectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::Fit::ParameterSettings,allocator<ROOT::Fit::ParameterSettings> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLFitResult = { "ROOT::Fit::FitResult" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR = { "map<unsigned int,pair<double,double>,less<unsigned int>,allocator<pair<const unsigned int,pair<double,double> > > >" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLFitter = { "ROOT::Fit::Fitter" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_auto_ptrlEROOTcLcLFitcLcLFitResultgR = { "auto_ptr<ROOT::Fit::FitResult>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_auto_ptrlEROOTcLcLMathcLcLMinimizergR = { "auto_ptr<ROOT::Math::Minimizer>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_auto_ptrlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR = { "auto_ptr<ROOT::Math::IBaseFunctionMultiDim>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR = { "ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR = { "ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR = { "ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR = { "ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLProxyListBox = { "ROOT::Fit::ProxyListBox" , 99 , -1 };
G__linked_taginfo G__G__MathFitLN_ROOTcLcLFitcLcLSparseData = { "ROOT::Fit::SparseData" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__MathFit() {
  G__G__MathFitLN_ROOT.tagnum = -1 ;
  G__G__MathFitLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__MathFitLN_string.tagnum = -1 ;
  G__G__MathFitLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__MathFitLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFit.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLDataOptions.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLDataRange.tagnum = -1 ;
  G__G__MathFitLN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__G__MathFitLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR.tagnum = -1 ;
  G__G__MathFitLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MathFitLN_vectorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcOallocatorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__MathFitLN_reverse_iteratorlEvectorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcOallocatorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLFitData.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLDataVector.tagnum = -1 ;
  G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__G__MathFitLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLDataWrapper.tagnum = -1 ;
  G__G__MathFitLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR.tagnum = -1 ;
  G__G__MathFitLN_reverse_iteratorlEvectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLBinData.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLBinDatacLcLErrorType.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLMath.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLMathcLcLIGradientFunctionMultiDim.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLMathcLcLIGradientMultiDim.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgRcLcLType_t.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgRcLcLType_t.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionOneDim.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLMathcLcLIParametricGradFunctionOneDim.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLMathcLcLIParametricGradFunctionMultiDim.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLMathcLcLMinimizerOptions.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLMathcLcLMinimizer.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLFitConfig.tagnum = -1 ;
  G__G__MathFitLN_vectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgR.tagnum = -1 ;
  G__G__MathFitLN_reverse_iteratorlEvectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MathFitLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__MathFitLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLFitResult.tagnum = -1 ;
  G__G__MathFitLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__MathFitLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__G__MathFitLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLFitter.tagnum = -1 ;
  G__G__MathFitLN_auto_ptrlEROOTcLcLFitcLcLFitResultgR.tagnum = -1 ;
  G__G__MathFitLN_auto_ptrlEROOTcLcLMathcLcLMinimizergR.tagnum = -1 ;
  G__G__MathFitLN_auto_ptrlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLProxyListBox.tagnum = -1 ;
  G__G__MathFitLN_ROOTcLcLFitcLcLSparseData.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__MathFit() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOT);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_string);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFit),0,-1,0,(char*)NULL,G__setup_memvarROOTcLcLFit,G__setup_memfuncROOTcLcLFit);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataOptions),sizeof(ROOT::Fit::DataOptions),-1,256,(char*)NULL,G__setup_memvarROOTcLcLFitcLcLDataOptions,G__setup_memfuncROOTcLcLFitcLcLDataOptions);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLDataRange),sizeof(ROOT::Fit::DataRange),-1,34048,(char*)NULL,G__setup_memvarROOTcLcLFitcLcLDataRange,G__setup_memfuncROOTcLcLFitcLcLDataRange);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_pairlEdoublecOdoublegR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_vectorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcOallocatorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_reverse_iteratorlEvectorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcOallocatorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitData),sizeof(ROOT::Fit::FitData),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLFitcLcLFitData,G__setup_memfuncROOTcLcLFitcLcLFitData);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLFitcLcLDataVector);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLFitcLcLDataWrapper);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_reverse_iteratorlEvectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLBinData),sizeof(ROOT::Fit::BinData),-1,298752,(char*)NULL,G__setup_memvarROOTcLcLFitcLcLBinData,G__setup_memfuncROOTcLcLFitcLcLBinData);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLFitcLcLBinDatacLcLErrorType);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLMath);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLMathcLcLIBaseFunctionMultiDim);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLMathcLcLIGradientFunctionMultiDim);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLMathcLcLIGradientMultiDim);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIBaseFunctionMultiDimgRcLcLType_t);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLMathcLcLBasicFitMethodFunctionlEROOTcLcLMathcLcLIGradientFunctionMultiDimgRcLcLType_t);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionOneDim);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricGradFunctionOneDim);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricFunctionMultiDim);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLMathcLcLIParametricGradFunctionMultiDim);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLUnBinData),sizeof(ROOT::Fit::UnBinData),-1,298752,(char*)NULL,G__setup_memvarROOTcLcLFitcLcLUnBinData,G__setup_memfuncROOTcLcLFitcLcLUnBinData);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),sizeof(ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>),-1,99328,(char*)NULL,G__setup_memvarROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR,G__setup_memfuncROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),sizeof(ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>),-1,99328,(char*)NULL,G__setup_memvarROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR,G__setup_memfuncROOTcLcLFitcLcLChi2FCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLParameterSettings),sizeof(ROOT::Fit::ParameterSettings),-1,296192,(char*)NULL,G__setup_memvarROOTcLcLFitcLcLParameterSettings,G__setup_memfuncROOTcLcLFitcLcLParameterSettings);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLMathcLcLMinimizerOptions);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLMathcLcLMinimizer);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitConfig),sizeof(ROOT::Fit::FitConfig),-1,265984,(char*)NULL,G__setup_memvarROOTcLcLFitcLcLFitConfig,G__setup_memfuncROOTcLcLFitcLcLFitConfig);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_vectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_reverse_iteratorlEvectorlEROOTcLcLFitcLcLParameterSettingscOallocatorlEROOTcLcLFitcLcLParameterSettingsgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitResult),sizeof(ROOT::Fit::FitResult),-1,298752,(char*)NULL,G__setup_memvarROOTcLcLFitcLcLFitResult,G__setup_memfuncROOTcLcLFitcLcLFitResult);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLFitter),sizeof(ROOT::Fit::Fitter),-1,3840,(char*)NULL,G__setup_memvarROOTcLcLFitcLcLFitter,G__setup_memfuncROOTcLcLFitcLcLFitter);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_auto_ptrlEROOTcLcLFitcLcLFitResultgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_auto_ptrlEROOTcLcLMathcLcLMinimizergR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_auto_ptrlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),sizeof(ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>),-1,101888,(char*)NULL,G__setup_memvarROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR,G__setup_memfuncROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),sizeof(ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>),-1,101888,(char*)NULL,G__setup_memvarROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR,G__setup_memfuncROOTcLcLFitcLcLLogLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR),sizeof(ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>),-1,101888,(char*)NULL,G__setup_memvarROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR,G__setup_memfuncROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIBaseFunctionMultiDimgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR),sizeof(ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>),-1,101888,(char*)NULL,G__setup_memvarROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR,G__setup_memfuncROOTcLcLFitcLcLPoissonLikelihoodFCNlEROOTcLcLMathcLcLIGradientFunctionMultiDimgR);
   G__get_linked_tagnum_fwd(&G__G__MathFitLN_ROOTcLcLFitcLcLProxyListBox);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MathFitLN_ROOTcLcLFitcLcLSparseData),sizeof(ROOT::Fit::SparseData),-1,295936,(char*)NULL,G__setup_memvarROOTcLcLFitcLcLSparseData,G__setup_memfuncROOTcLcLFitcLcLSparseData);
}
extern "C" void G__cpp_setupG__MathFit(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__MathFit()");
  G__set_cpp_environmentG__MathFit();
  G__cpp_setup_tagtableG__MathFit();

  G__cpp_setup_inheritanceG__MathFit();

  G__cpp_setup_typetableG__MathFit();

  G__cpp_setup_memvarG__MathFit();

  G__cpp_setup_memfuncG__MathFit();
  G__cpp_setup_globalG__MathFit();
  G__cpp_setup_funcG__MathFit();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__MathFit();
  return;
}
class G__cpp_setup_initG__MathFit {
  public:
    G__cpp_setup_initG__MathFit() { G__add_setup_func("G__MathFit",(G__incsetup)(&G__cpp_setupG__MathFit)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__MathFit() { G__remove_setup_func("G__MathFit"); }
};
G__cpp_setup_initG__MathFit G__cpp_setup_initializerG__MathFit;

