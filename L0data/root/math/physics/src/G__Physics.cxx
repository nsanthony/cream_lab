//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:44:50 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__Physics.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TFeldmanCousins_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TFeldmanCousins(void *p = 0);
   static void *newArray_TFeldmanCousins(Long_t size, void *p);
   static void delete_TFeldmanCousins(void *p);
   static void deleteArray_TFeldmanCousins(void *p);
   static void destruct_TFeldmanCousins(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFeldmanCousins*)
   {
      ::TFeldmanCousins *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TFeldmanCousins >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TFeldmanCousins", ::TFeldmanCousins::Class_Version(), "include/TFeldmanCousins.h", 47,
                  typeid(::TFeldmanCousins), DefineBehavior(ptr, ptr),
                  &::TFeldmanCousins::Dictionary, isa_proxy, 4,
                  sizeof(::TFeldmanCousins) );
      instance.SetNew(&new_TFeldmanCousins);
      instance.SetNewArray(&newArray_TFeldmanCousins);
      instance.SetDelete(&delete_TFeldmanCousins);
      instance.SetDeleteArray(&deleteArray_TFeldmanCousins);
      instance.SetDestructor(&destruct_TFeldmanCousins);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFeldmanCousins*)
   {
      return GenerateInitInstanceLocal((::TFeldmanCousins*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFeldmanCousins*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TVector2_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TVector2(void *p = 0);
   static void *newArray_TVector2(Long_t size, void *p);
   static void delete_TVector2(void *p);
   static void deleteArray_TVector2(void *p);
   static void destruct_TVector2(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TVector2*)
   {
      ::TVector2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TVector2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TVector2", ::TVector2::Class_Version(), "include/TVector2.h", 18,
                  typeid(::TVector2), DefineBehavior(ptr, ptr),
                  &::TVector2::Dictionary, isa_proxy, 1,
                  sizeof(::TVector2) );
      instance.SetNew(&new_TVector2);
      instance.SetNewArray(&newArray_TVector2);
      instance.SetDelete(&delete_TVector2);
      instance.SetDeleteArray(&deleteArray_TVector2);
      instance.SetDestructor(&destruct_TVector2);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TVector2*)
   {
      return GenerateInitInstanceLocal((::TVector2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TVector2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TRotation_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TRotation(void *p = 0);
   static void *newArray_TRotation(Long_t size, void *p);
   static void delete_TRotation(void *p);
   static void deleteArray_TRotation(void *p);
   static void destruct_TRotation(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRotation*)
   {
      ::TRotation *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRotation >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRotation", ::TRotation::Class_Version(), "include/TRotation.h", 22,
                  typeid(::TRotation), DefineBehavior(ptr, ptr),
                  &::TRotation::Dictionary, isa_proxy, 4,
                  sizeof(::TRotation) );
      instance.SetNew(&new_TRotation);
      instance.SetNewArray(&newArray_TRotation);
      instance.SetDelete(&delete_TRotation);
      instance.SetDeleteArray(&deleteArray_TRotation);
      instance.SetDestructor(&destruct_TRotation);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRotation*)
   {
      return GenerateInitInstanceLocal((::TRotation*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRotation*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TVector3_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TVector3(void *p = 0);
   static void *newArray_TVector3(Long_t size, void *p);
   static void delete_TVector3(void *p);
   static void deleteArray_TVector3(void *p);
   static void destruct_TVector3(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TVector3*)
   {
      ::TVector3 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TVector3 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TVector3", ::TVector3::Class_Version(), "include/TVector3.h", 27,
                  typeid(::TVector3), DefineBehavior(ptr, ptr),
                  &::TVector3::Dictionary, isa_proxy, 1,
                  sizeof(::TVector3) );
      instance.SetNew(&new_TVector3);
      instance.SetNewArray(&newArray_TVector3);
      instance.SetDelete(&delete_TVector3);
      instance.SetDeleteArray(&deleteArray_TVector3);
      instance.SetDestructor(&destruct_TVector3);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TVector3*)
   {
      return GenerateInitInstanceLocal((::TVector3*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TVector3*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TQuaternion_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TQuaternion(void *p = 0);
   static void *newArray_TQuaternion(Long_t size, void *p);
   static void delete_TQuaternion(void *p);
   static void deleteArray_TQuaternion(void *p);
   static void destruct_TQuaternion(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TQuaternion*)
   {
      ::TQuaternion *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TQuaternion >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TQuaternion", ::TQuaternion::Class_Version(), "include/TQuaternion.h", 15,
                  typeid(::TQuaternion), DefineBehavior(ptr, ptr),
                  &::TQuaternion::Dictionary, isa_proxy, 4,
                  sizeof(::TQuaternion) );
      instance.SetNew(&new_TQuaternion);
      instance.SetNewArray(&newArray_TQuaternion);
      instance.SetDelete(&delete_TQuaternion);
      instance.SetDeleteArray(&deleteArray_TQuaternion);
      instance.SetDestructor(&destruct_TQuaternion);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TQuaternion*)
   {
      return GenerateInitInstanceLocal((::TQuaternion*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TQuaternion*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TLorentzRotation_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TLorentzRotation(void *p = 0);
   static void *newArray_TLorentzRotation(Long_t size, void *p);
   static void delete_TLorentzRotation(void *p);
   static void deleteArray_TLorentzRotation(void *p);
   static void destruct_TLorentzRotation(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TLorentzRotation*)
   {
      ::TLorentzRotation *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLorentzRotation >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLorentzRotation", ::TLorentzRotation::Class_Version(), "include/TLorentzRotation.h", 24,
                  typeid(::TLorentzRotation), DefineBehavior(ptr, ptr),
                  &::TLorentzRotation::Dictionary, isa_proxy, 4,
                  sizeof(::TLorentzRotation) );
      instance.SetNew(&new_TLorentzRotation);
      instance.SetNewArray(&newArray_TLorentzRotation);
      instance.SetDelete(&delete_TLorentzRotation);
      instance.SetDeleteArray(&deleteArray_TLorentzRotation);
      instance.SetDestructor(&destruct_TLorentzRotation);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TLorentzRotation*)
   {
      return GenerateInitInstanceLocal((::TLorentzRotation*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLorentzRotation*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TLorentzVector_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TLorentzVector(void *p = 0);
   static void *newArray_TLorentzVector(Long_t size, void *p);
   static void delete_TLorentzVector(void *p);
   static void deleteArray_TLorentzVector(void *p);
   static void destruct_TLorentzVector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TLorentzVector*)
   {
      ::TLorentzVector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLorentzVector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLorentzVector", ::TLorentzVector::Class_Version(), "include/TLorentzVector.h", 38,
                  typeid(::TLorentzVector), DefineBehavior(ptr, ptr),
                  &::TLorentzVector::Dictionary, isa_proxy, 1,
                  sizeof(::TLorentzVector) );
      instance.SetNew(&new_TLorentzVector);
      instance.SetNewArray(&newArray_TLorentzVector);
      instance.SetDelete(&delete_TLorentzVector);
      instance.SetDeleteArray(&deleteArray_TLorentzVector);
      instance.SetDestructor(&destruct_TLorentzVector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TLorentzVector*)
   {
      return GenerateInitInstanceLocal((::TLorentzVector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLorentzVector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TGenPhaseSpace_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TGenPhaseSpace(void *p = 0);
   static void *newArray_TGenPhaseSpace(Long_t size, void *p);
   static void delete_TGenPhaseSpace(void *p);
   static void deleteArray_TGenPhaseSpace(void *p);
   static void destruct_TGenPhaseSpace(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGenPhaseSpace*)
   {
      ::TGenPhaseSpace *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGenPhaseSpace >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGenPhaseSpace", ::TGenPhaseSpace::Class_Version(), "include/TGenPhaseSpace.h", 15,
                  typeid(::TGenPhaseSpace), DefineBehavior(ptr, ptr),
                  &::TGenPhaseSpace::Dictionary, isa_proxy, 4,
                  sizeof(::TGenPhaseSpace) );
      instance.SetNew(&new_TGenPhaseSpace);
      instance.SetNewArray(&newArray_TGenPhaseSpace);
      instance.SetDelete(&delete_TGenPhaseSpace);
      instance.SetDeleteArray(&deleteArray_TGenPhaseSpace);
      instance.SetDestructor(&destruct_TGenPhaseSpace);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGenPhaseSpace*)
   {
      return GenerateInitInstanceLocal((::TGenPhaseSpace*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGenPhaseSpace*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TRobustEstimator_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TRobustEstimator(void *p = 0);
   static void *newArray_TRobustEstimator(Long_t size, void *p);
   static void delete_TRobustEstimator(void *p);
   static void deleteArray_TRobustEstimator(void *p);
   static void destruct_TRobustEstimator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRobustEstimator*)
   {
      ::TRobustEstimator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRobustEstimator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRobustEstimator", ::TRobustEstimator::Class_Version(), "include/TRobustEstimator.h", 23,
                  typeid(::TRobustEstimator), DefineBehavior(ptr, ptr),
                  &::TRobustEstimator::Dictionary, isa_proxy, 4,
                  sizeof(::TRobustEstimator) );
      instance.SetNew(&new_TRobustEstimator);
      instance.SetNewArray(&newArray_TRobustEstimator);
      instance.SetDelete(&delete_TRobustEstimator);
      instance.SetDeleteArray(&deleteArray_TRobustEstimator);
      instance.SetDestructor(&destruct_TRobustEstimator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRobustEstimator*)
   {
      return GenerateInitInstanceLocal((::TRobustEstimator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRobustEstimator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TRolke_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TRolke(void *p = 0);
   static void *newArray_TRolke(Long_t size, void *p);
   static void delete_TRolke(void *p);
   static void deleteArray_TRolke(void *p);
   static void destruct_TRolke(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRolke*)
   {
      ::TRolke *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRolke >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRolke", ::TRolke::Class_Version(), "include/TRolke.h", 34,
                  typeid(::TRolke), DefineBehavior(ptr, ptr),
                  &::TRolke::Dictionary, isa_proxy, 4,
                  sizeof(::TRolke) );
      instance.SetNew(&new_TRolke);
      instance.SetNewArray(&newArray_TRolke);
      instance.SetDelete(&delete_TRolke);
      instance.SetDeleteArray(&deleteArray_TRolke);
      instance.SetDestructor(&destruct_TRolke);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRolke*)
   {
      return GenerateInitInstanceLocal((::TRolke*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRolke*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TFeldmanCousins::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFeldmanCousins::Class_Name()
{
   return "TFeldmanCousins";
}

//______________________________________________________________________________
const char *TFeldmanCousins::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFeldmanCousins*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFeldmanCousins::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFeldmanCousins*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFeldmanCousins::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFeldmanCousins*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFeldmanCousins::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFeldmanCousins*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVector2::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVector2::Class_Name()
{
   return "TVector2";
}

//______________________________________________________________________________
const char *TVector2::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVector2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVector2::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVector2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVector2::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVector2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVector2::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVector2*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRotation::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRotation::Class_Name()
{
   return "TRotation";
}

//______________________________________________________________________________
const char *TRotation::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRotation*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRotation::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRotation*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRotation::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRotation*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRotation::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRotation*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVector3::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVector3::Class_Name()
{
   return "TVector3";
}

//______________________________________________________________________________
const char *TVector3::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVector3*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVector3::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVector3*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVector3::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVector3*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVector3::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVector3*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TQuaternion::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TQuaternion::Class_Name()
{
   return "TQuaternion";
}

//______________________________________________________________________________
const char *TQuaternion::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQuaternion*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TQuaternion::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQuaternion*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TQuaternion::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQuaternion*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TQuaternion::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQuaternion*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLorentzRotation::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLorentzRotation::Class_Name()
{
   return "TLorentzRotation";
}

//______________________________________________________________________________
const char *TLorentzRotation::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TLorentzRotation*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLorentzRotation::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TLorentzRotation*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLorentzRotation::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TLorentzRotation*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLorentzRotation::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TLorentzRotation*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLorentzVector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLorentzVector::Class_Name()
{
   return "TLorentzVector";
}

//______________________________________________________________________________
const char *TLorentzVector::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TLorentzVector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLorentzVector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TLorentzVector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLorentzVector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TLorentzVector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLorentzVector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TLorentzVector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGenPhaseSpace::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGenPhaseSpace::Class_Name()
{
   return "TGenPhaseSpace";
}

//______________________________________________________________________________
const char *TGenPhaseSpace::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGenPhaseSpace*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGenPhaseSpace::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGenPhaseSpace*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGenPhaseSpace::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGenPhaseSpace*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGenPhaseSpace::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGenPhaseSpace*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRobustEstimator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRobustEstimator::Class_Name()
{
   return "TRobustEstimator";
}

//______________________________________________________________________________
const char *TRobustEstimator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRobustEstimator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRobustEstimator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRobustEstimator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRobustEstimator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRobustEstimator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRobustEstimator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRobustEstimator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRolke::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRolke::Class_Name()
{
   return "TRolke";
}

//______________________________________________________________________________
const char *TRolke::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRolke*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRolke::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRolke*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRolke::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRolke*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRolke::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRolke*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TLorentzVector::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLorentzVector.
      TClass *R__cl = ::TLorentzVector::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fP", &fP);
      fP.ShowMembers(R__insp, strcat(R__parent,"fP.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fE", &fE);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TLorentzVector(void *p) {
      return  p ? new(p) ::TLorentzVector : new ::TLorentzVector;
   }
   static void *newArray_TLorentzVector(Long_t nElements, void *p) {
      return p ? new(p) ::TLorentzVector[nElements] : new ::TLorentzVector[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLorentzVector(void *p) {
      delete ((::TLorentzVector*)p);
   }
   static void deleteArray_TLorentzVector(void *p) {
      delete [] ((::TLorentzVector*)p);
   }
   static void destruct_TLorentzVector(void *p) {
      typedef ::TLorentzVector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLorentzVector

//______________________________________________________________________________
void TLorentzRotation::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLorentzRotation.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TLorentzRotation::Class(),this);
   } else {
      R__b.WriteClassBuffer(TLorentzRotation::Class(),this);
   }
}

//______________________________________________________________________________
void TLorentzRotation::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLorentzRotation.
      TClass *R__cl = ::TLorentzRotation::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fxx", &fxx);
      R__insp.Inspect(R__cl, R__parent, "fxy", &fxy);
      R__insp.Inspect(R__cl, R__parent, "fxz", &fxz);
      R__insp.Inspect(R__cl, R__parent, "fxt", &fxt);
      R__insp.Inspect(R__cl, R__parent, "fyx", &fyx);
      R__insp.Inspect(R__cl, R__parent, "fyy", &fyy);
      R__insp.Inspect(R__cl, R__parent, "fyz", &fyz);
      R__insp.Inspect(R__cl, R__parent, "fyt", &fyt);
      R__insp.Inspect(R__cl, R__parent, "fzx", &fzx);
      R__insp.Inspect(R__cl, R__parent, "fzy", &fzy);
      R__insp.Inspect(R__cl, R__parent, "fzz", &fzz);
      R__insp.Inspect(R__cl, R__parent, "fzt", &fzt);
      R__insp.Inspect(R__cl, R__parent, "ftx", &ftx);
      R__insp.Inspect(R__cl, R__parent, "fty", &fty);
      R__insp.Inspect(R__cl, R__parent, "ftz", &ftz);
      R__insp.Inspect(R__cl, R__parent, "ftt", &ftt);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TLorentzRotation(void *p) {
      return  p ? new(p) ::TLorentzRotation : new ::TLorentzRotation;
   }
   static void *newArray_TLorentzRotation(Long_t nElements, void *p) {
      return p ? new(p) ::TLorentzRotation[nElements] : new ::TLorentzRotation[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLorentzRotation(void *p) {
      delete ((::TLorentzRotation*)p);
   }
   static void deleteArray_TLorentzRotation(void *p) {
      delete [] ((::TLorentzRotation*)p);
   }
   static void destruct_TLorentzRotation(void *p) {
      typedef ::TLorentzRotation current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLorentzRotation

//______________________________________________________________________________
void TVector3::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TVector3.
      TClass *R__cl = ::TVector3::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fX", &fX);
      R__insp.Inspect(R__cl, R__parent, "fY", &fY);
      R__insp.Inspect(R__cl, R__parent, "fZ", &fZ);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TVector3(void *p) {
      return  p ? new(p) ::TVector3 : new ::TVector3;
   }
   static void *newArray_TVector3(Long_t nElements, void *p) {
      return p ? new(p) ::TVector3[nElements] : new ::TVector3[nElements];
   }
   // Wrapper around operator delete
   static void delete_TVector3(void *p) {
      delete ((::TVector3*)p);
   }
   static void deleteArray_TVector3(void *p) {
      delete [] ((::TVector3*)p);
   }
   static void destruct_TVector3(void *p) {
      typedef ::TVector3 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVector3

//______________________________________________________________________________
void TVector2::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TVector2.
      TClass *R__cl = ::TVector2::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fX", &fX);
      R__insp.Inspect(R__cl, R__parent, "fY", &fY);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TVector2(void *p) {
      return  p ? new(p) ::TVector2 : new ::TVector2;
   }
   static void *newArray_TVector2(Long_t nElements, void *p) {
      return p ? new(p) ::TVector2[nElements] : new ::TVector2[nElements];
   }
   // Wrapper around operator delete
   static void delete_TVector2(void *p) {
      delete ((::TVector2*)p);
   }
   static void deleteArray_TVector2(void *p) {
      delete [] ((::TVector2*)p);
   }
   static void destruct_TVector2(void *p) {
      typedef ::TVector2 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVector2

//______________________________________________________________________________
void TRotation::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRotation.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TRotation::Class(),this);
   } else {
      R__b.WriteClassBuffer(TRotation::Class(),this);
   }
}

//______________________________________________________________________________
void TRotation::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TRotation.
      TClass *R__cl = ::TRotation::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fxx", &fxx);
      R__insp.Inspect(R__cl, R__parent, "fxy", &fxy);
      R__insp.Inspect(R__cl, R__parent, "fxz", &fxz);
      R__insp.Inspect(R__cl, R__parent, "fyx", &fyx);
      R__insp.Inspect(R__cl, R__parent, "fyy", &fyy);
      R__insp.Inspect(R__cl, R__parent, "fyz", &fyz);
      R__insp.Inspect(R__cl, R__parent, "fzx", &fzx);
      R__insp.Inspect(R__cl, R__parent, "fzy", &fzy);
      R__insp.Inspect(R__cl, R__parent, "fzz", &fzz);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRotation(void *p) {
      return  p ? new(p) ::TRotation : new ::TRotation;
   }
   static void *newArray_TRotation(Long_t nElements, void *p) {
      return p ? new(p) ::TRotation[nElements] : new ::TRotation[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRotation(void *p) {
      delete ((::TRotation*)p);
   }
   static void deleteArray_TRotation(void *p) {
      delete [] ((::TRotation*)p);
   }
   static void destruct_TRotation(void *p) {
      typedef ::TRotation current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRotation

//______________________________________________________________________________
void TGenPhaseSpace::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGenPhaseSpace.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TGenPhaseSpace::Class(),this);
   } else {
      R__b.WriteClassBuffer(TGenPhaseSpace::Class(),this);
   }
}

//______________________________________________________________________________
void TGenPhaseSpace::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGenPhaseSpace.
      TClass *R__cl = ::TGenPhaseSpace::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNt", &fNt);
      R__insp.Inspect(R__cl, R__parent, "fMass[18]", fMass);
      R__insp.Inspect(R__cl, R__parent, "fBeta[3]", fBeta);
      R__insp.Inspect(R__cl, R__parent, "fTeCmTm", &fTeCmTm);
      R__insp.Inspect(R__cl, R__parent, "fWtMax", &fWtMax);
      R__insp.Inspect(R__cl, R__parent, "fDecPro[18]", fDecPro);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TGenPhaseSpace(void *p) {
      return  p ? new(p) ::TGenPhaseSpace : new ::TGenPhaseSpace;
   }
   static void *newArray_TGenPhaseSpace(Long_t nElements, void *p) {
      return p ? new(p) ::TGenPhaseSpace[nElements] : new ::TGenPhaseSpace[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGenPhaseSpace(void *p) {
      delete ((::TGenPhaseSpace*)p);
   }
   static void deleteArray_TGenPhaseSpace(void *p) {
      delete [] ((::TGenPhaseSpace*)p);
   }
   static void destruct_TGenPhaseSpace(void *p) {
      typedef ::TGenPhaseSpace current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGenPhaseSpace

//______________________________________________________________________________
void TFeldmanCousins::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFeldmanCousins.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TFeldmanCousins::Class(),this);
   } else {
      R__b.WriteClassBuffer(TFeldmanCousins::Class(),this);
   }
}

//______________________________________________________________________________
void TFeldmanCousins::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TFeldmanCousins.
      TClass *R__cl = ::TFeldmanCousins::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fCL", &fCL);
      R__insp.Inspect(R__cl, R__parent, "fUpperLimit", &fUpperLimit);
      R__insp.Inspect(R__cl, R__parent, "fLowerLimit", &fLowerLimit);
      R__insp.Inspect(R__cl, R__parent, "fNobserved", &fNobserved);
      R__insp.Inspect(R__cl, R__parent, "fNbackground", &fNbackground);
      R__insp.Inspect(R__cl, R__parent, "fMuMin", &fMuMin);
      R__insp.Inspect(R__cl, R__parent, "fMuMax", &fMuMax);
      R__insp.Inspect(R__cl, R__parent, "fMuStep", &fMuStep);
      R__insp.Inspect(R__cl, R__parent, "fNMuStep", &fNMuStep);
      R__insp.Inspect(R__cl, R__parent, "fNMax", &fNMax);
      R__insp.Inspect(R__cl, R__parent, "fQUICK", &fQUICK);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFeldmanCousins(void *p) {
      return  p ? new(p) ::TFeldmanCousins : new ::TFeldmanCousins;
   }
   static void *newArray_TFeldmanCousins(Long_t nElements, void *p) {
      return p ? new(p) ::TFeldmanCousins[nElements] : new ::TFeldmanCousins[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFeldmanCousins(void *p) {
      delete ((::TFeldmanCousins*)p);
   }
   static void deleteArray_TFeldmanCousins(void *p) {
      delete [] ((::TFeldmanCousins*)p);
   }
   static void destruct_TFeldmanCousins(void *p) {
      typedef ::TFeldmanCousins current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFeldmanCousins

//______________________________________________________________________________
void TRobustEstimator::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRobustEstimator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TRobustEstimator::Class(),this);
   } else {
      R__b.WriteClassBuffer(TRobustEstimator::Class(),this);
   }
}

//______________________________________________________________________________
void TRobustEstimator::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TRobustEstimator.
      TClass *R__cl = ::TRobustEstimator::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNvar", &fNvar);
      R__insp.Inspect(R__cl, R__parent, "fH", &fH);
      R__insp.Inspect(R__cl, R__parent, "fN", &fN);
      R__insp.Inspect(R__cl, R__parent, "fVarTemp", &fVarTemp);
      R__insp.Inspect(R__cl, R__parent, "fVecTemp", &fVecTemp);
      R__insp.Inspect(R__cl, R__parent, "fExact", &fExact);
      R__insp.Inspect(R__cl, R__parent, "fMean", &fMean);
      fMean.ShowMembers(R__insp, strcat(R__parent,"fMean.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCovariance", &fCovariance);
      fCovariance.ShowMembers(R__insp, strcat(R__parent,"fCovariance.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fInvcovariance", &fInvcovariance);
      fInvcovariance.ShowMembers(R__insp, strcat(R__parent,"fInvcovariance.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCorrelation", &fCorrelation);
      fCorrelation.ShowMembers(R__insp, strcat(R__parent,"fCorrelation.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRd", &fRd);
      fRd.ShowMembers(R__insp, strcat(R__parent,"fRd.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSd", &fSd);
      fSd.ShowMembers(R__insp, strcat(R__parent,"fSd.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fOut", &fOut);
      fOut.ShowMembers(R__insp, strcat(R__parent,"fOut.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fHyperplane", &fHyperplane);
      fHyperplane.ShowMembers(R__insp, strcat(R__parent,"fHyperplane.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fData", &fData);
      fData.ShowMembers(R__insp, strcat(R__parent,"fData.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRobustEstimator(void *p) {
      return  p ? new(p) ::TRobustEstimator : new ::TRobustEstimator;
   }
   static void *newArray_TRobustEstimator(Long_t nElements, void *p) {
      return p ? new(p) ::TRobustEstimator[nElements] : new ::TRobustEstimator[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRobustEstimator(void *p) {
      delete ((::TRobustEstimator*)p);
   }
   static void deleteArray_TRobustEstimator(void *p) {
      delete [] ((::TRobustEstimator*)p);
   }
   static void destruct_TRobustEstimator(void *p) {
      typedef ::TRobustEstimator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRobustEstimator

//______________________________________________________________________________
void TRolke::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRolke.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TRolke::Class(),this);
   } else {
      R__b.WriteClassBuffer(TRolke::Class(),this);
   }
}

//______________________________________________________________________________
void TRolke::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TRolke.
      TClass *R__cl = ::TRolke::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fCL", &fCL);
      R__insp.Inspect(R__cl, R__parent, "fUpperLimit", &fUpperLimit);
      R__insp.Inspect(R__cl, R__parent, "fLowerLimit", &fLowerLimit);
      R__insp.Inspect(R__cl, R__parent, "fBounding", &fBounding);
      R__insp.Inspect(R__cl, R__parent, "fNumWarningsDeprecated1", &fNumWarningsDeprecated1);
      R__insp.Inspect(R__cl, R__parent, "fNumWarningsDeprecated2", &fNumWarningsDeprecated2);
      R__insp.Inspect(R__cl, R__parent, "f_x", &f_x);
      R__insp.Inspect(R__cl, R__parent, "f_y", &f_y);
      R__insp.Inspect(R__cl, R__parent, "f_z", &f_z);
      R__insp.Inspect(R__cl, R__parent, "f_bm", &f_bm);
      R__insp.Inspect(R__cl, R__parent, "f_em", &f_em);
      R__insp.Inspect(R__cl, R__parent, "f_e", &f_e);
      R__insp.Inspect(R__cl, R__parent, "f_mid", &f_mid);
      R__insp.Inspect(R__cl, R__parent, "f_sde", &f_sde);
      R__insp.Inspect(R__cl, R__parent, "f_sdb", &f_sdb);
      R__insp.Inspect(R__cl, R__parent, "f_tau", &f_tau);
      R__insp.Inspect(R__cl, R__parent, "f_b", &f_b);
      R__insp.Inspect(R__cl, R__parent, "f_m", &f_m);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRolke(void *p) {
      return  p ? new(p) ::TRolke : new ::TRolke;
   }
   static void *newArray_TRolke(Long_t nElements, void *p) {
      return p ? new(p) ::TRolke[nElements] : new ::TRolke[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRolke(void *p) {
      delete ((::TRolke*)p);
   }
   static void deleteArray_TRolke(void *p) {
      delete [] ((::TRolke*)p);
   }
   static void destruct_TRolke(void *p) {
      typedef ::TRolke current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRolke

//______________________________________________________________________________
void TQuaternion::Streamer(TBuffer &R__b)
{
   // Stream an object of class TQuaternion.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TQuaternion::Class(),this);
   } else {
      R__b.WriteClassBuffer(TQuaternion::Class(),this);
   }
}

//______________________________________________________________________________
void TQuaternion::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TQuaternion.
      TClass *R__cl = ::TQuaternion::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRealPart", &fRealPart);
      R__insp.Inspect(R__cl, R__parent, "fVectorPart", &fVectorPart);
      fVectorPart.ShowMembers(R__insp, strcat(R__parent,"fVectorPart.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TQuaternion(void *p) {
      return  p ? new(p) ::TQuaternion : new ::TQuaternion;
   }
   static void *newArray_TQuaternion(Long_t nElements, void *p) {
      return p ? new(p) ::TQuaternion[nElements] : new ::TQuaternion[nElements];
   }
   // Wrapper around operator delete
   static void delete_TQuaternion(void *p) {
      delete ((::TQuaternion*)p);
   }
   static void deleteArray_TQuaternion(void *p) {
      delete [] ((::TQuaternion*)p);
   }
   static void destruct_TQuaternion(void *p) {
      typedef ::TQuaternion current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TQuaternion

/********************************************************
* math/physics/src/G__Physics.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__Physics();

extern "C" void G__set_cpp_environmentG__Physics() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TFeldmanCousins.h");
  G__add_compiledheader("TGenPhaseSpace.h");
  G__add_compiledheader("TLorentzRotation.h");
  G__add_compiledheader("TLorentzVector.h");
  G__add_compiledheader("TQuaternion.h");
  G__add_compiledheader("TRobustEstimator.h");
  G__add_compiledheader("TRolke.h");
  G__add_compiledheader("TRotation.h");
  G__add_compiledheader("TVector2.h");
  G__add_compiledheader("TVector3.h");
  G__cpp_reset_tagtableG__Physics();
}
#include <new>
extern "C" int G__cpp_dllrevG__Physics() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TFeldmanCousins */
static int G__G__Physics_106_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFeldmanCousins* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFeldmanCousins((Double_t) G__double(libp->para[0]), *((TString*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) TFeldmanCousins((Double_t) G__double(libp->para[0]), *((TString*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFeldmanCousins((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) TFeldmanCousins((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TFeldmanCousins[n];
       } else {
         p = new((void*) gvp) TFeldmanCousins[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TFeldmanCousins;
       } else {
         p = new((void*) gvp) TFeldmanCousins;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TFeldmanCousins));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TFeldmanCousins*) G__getstructoffset())->CalculateUpperLimit((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TFeldmanCousins*) G__getstructoffset())->CalculateLowerLimit((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TFeldmanCousins*) G__getstructoffset())->GetUpperLimit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TFeldmanCousins*) G__getstructoffset())->GetLowerLimit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TFeldmanCousins*) G__getstructoffset())->GetNobserved());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TFeldmanCousins*) G__getstructoffset())->GetNbackground());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TFeldmanCousins*) G__getstructoffset())->GetCL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TFeldmanCousins*) G__getstructoffset())->GetMuMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TFeldmanCousins*) G__getstructoffset())->GetMuMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TFeldmanCousins*) G__getstructoffset())->GetMuStep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TFeldmanCousins*) G__getstructoffset())->GetNMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFeldmanCousins*) G__getstructoffset())->SetNobserved((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFeldmanCousins*) G__getstructoffset())->SetNbackground((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFeldmanCousins*) G__getstructoffset())->SetCL((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TFeldmanCousins*) G__getstructoffset())->SetMuMin((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TFeldmanCousins*) G__getstructoffset())->SetMuMin();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TFeldmanCousins*) G__getstructoffset())->SetMuMax((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TFeldmanCousins*) G__getstructoffset())->SetMuMax();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TFeldmanCousins*) G__getstructoffset())->SetMuStep((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TFeldmanCousins*) G__getstructoffset())->SetMuStep();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TFeldmanCousins::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFeldmanCousins::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TFeldmanCousins::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TFeldmanCousins::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFeldmanCousins*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFeldmanCousins::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFeldmanCousins::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFeldmanCousins::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_106_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFeldmanCousins::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Physics_106_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TFeldmanCousins* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TFeldmanCousins(*(TFeldmanCousins*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TFeldmanCousins));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFeldmanCousins G__TTFeldmanCousins;
static int G__G__Physics_106_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFeldmanCousins*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFeldmanCousins*) (soff+(sizeof(TFeldmanCousins)*i)))->~G__TTFeldmanCousins();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFeldmanCousins*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFeldmanCousins*) (soff))->~G__TTFeldmanCousins();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Physics_106_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFeldmanCousins* dest = (TFeldmanCousins*) G__getstructoffset();
   *dest = *(TFeldmanCousins*) libp->para[0].ref;
   const TFeldmanCousins& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVector2 */
static int G__G__Physics_107_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TVector2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TVector2[n];
     } else {
       p = new((void*) gvp) TVector2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TVector2;
     } else {
       p = new((void*) gvp) TVector2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TVector2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TVector2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TVector2((Double_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TVector2((Double_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TVector2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TVector2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TVector2((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) TVector2((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TVector2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2& obj = ((TVector2*) G__getstructoffset())->operator=(*(TVector2*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2& obj = ((TVector2*) G__getstructoffset())->operator+=(*(TVector2*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2& obj = ((TVector2*) G__getstructoffset())->operator-=(*(TVector2*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TVector2*) G__getstructoffset())->operator*=(*(TVector2*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2& obj = ((TVector2*) G__getstructoffset())->operator*=((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2& obj = ((TVector2*) G__getstructoffset())->operator/=((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector2*) G__getstructoffset())->Set(*(TVector2*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector2*) G__getstructoffset())->Set((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector2*) G__getstructoffset())->Set((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector2*) G__getstructoffset())->Mod2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector2*) G__getstructoffset())->Mod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector2*) G__getstructoffset())->Px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector2*) G__getstructoffset())->Py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector2*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector2*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector2*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector2*) G__getstructoffset())->DeltaPhi(*(TVector2*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector2*) G__getstructoffset())->SetMagPhi((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2* pobj;
         const TVector2 xobj = ((const TVector2*) G__getstructoffset())->Unit();
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2* pobj;
         const TVector2 xobj = ((const TVector2*) G__getstructoffset())->Ort();
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2* pobj;
         const TVector2 xobj = ((const TVector2*) G__getstructoffset())->Proj(*(TVector2*) libp->para[0].ref);
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2* pobj;
         const TVector2 xobj = ((const TVector2*) G__getstructoffset())->Norm(*(TVector2*) libp->para[0].ref);
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2* pobj;
         const TVector2 xobj = ((const TVector2*) G__getstructoffset())->Rotate((Double_t) G__double(libp->para[0]));
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TVector2::Phi_0_2pi((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TVector2::Phi_mpi_pi((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TVector2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVector2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TVector2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TVector2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVector2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVector2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVector2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVector2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_107_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TVector2*) G__getstructoffset())->operator*=(*(TVector2*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Physics_107_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TVector2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TVector2(*(TVector2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TVector2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVector2 G__TTVector2;
static int G__G__Physics_107_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TVector2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TVector2*) (soff+(sizeof(TVector2)*i)))->~G__TTVector2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TVector2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TVector2*) (soff))->~G__TTVector2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRotation */
static int G__G__Physics_142_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRotation* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRotation[n];
     } else {
       p = new((void*) gvp) TRotation[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRotation;
     } else {
       p = new((void*) gvp) TRotation;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TRotation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRotation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TRotation(*(TRotation*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TRotation(*(TRotation*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TRotation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRotation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TRotation(*(TQuaternion*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TRotation(*(TQuaternion*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TRotation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->XX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->XY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->XZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->YX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->YY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->YZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->ZX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->ZY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->ZZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation::TRotationRow* pobj;
         const TRotation::TRotationRow xobj = ((const TRotation*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         pobj = new TRotation::TRotationRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->operator()((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->operator=(*(TRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TRotation*) G__getstructoffset())->operator==(*(TRotation*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TRotation*) G__getstructoffset())->operator!=(*(TRotation*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TRotation*) G__getstructoffset())->IsIdentity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TRotation*) G__getstructoffset())->operator*(*(TVector3*) libp->para[0].ref);
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation* pobj;
         const TRotation xobj = ((const TRotation*) G__getstructoffset())->operator*(*(TRotation*) libp->para[0].ref);
         pobj = new TRotation(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->operator*=(*(TRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->Transform(*(TRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation* pobj;
         const TRotation xobj = ((const TRotation*) G__getstructoffset())->Inverse();
         pobj = new TRotation(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->Invert();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->RotateX((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->RotateY((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->RotateZ((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->Rotate((Double_t) G__double(libp->para[0]), *(TVector3*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->Rotate((Double_t) G__double(libp->para[0]), (const TVector3*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->RotateAxes(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(TVector3*) libp->para[2].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->PhiX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->PhiY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->PhiZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->ThetaX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->ThetaY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->ThetaZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TRotation*) G__getstructoffset())->AngleAxis(*(Double_t*) G__Doubleref(&libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->SetToIdentity();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->SetXEulerAngles((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRotation*) G__getstructoffset())->SetXPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRotation*) G__getstructoffset())->SetXTheta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRotation*) G__getstructoffset())->SetXPsi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->RotateXEulerAngles((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->GetXPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->GetXTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->GetXPsi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->SetYEulerAngles((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRotation*) G__getstructoffset())->SetYPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRotation*) G__getstructoffset())->SetYTheta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRotation*) G__getstructoffset())->SetYPsi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->RotateYEulerAngles((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->GetYPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->GetYTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRotation*) G__getstructoffset())->GetYPsi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->SetXAxis(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->SetXAxis(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->SetYAxis(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->SetYAxis(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->SetZAxis(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRotation& obj = ((TRotation*) G__getstructoffset())->SetZAxis(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TRotation*) G__getstructoffset())->MakeBasis(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(TVector3*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRotation::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRotation::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRotation::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRotation::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRotation*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRotation::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRotation::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRotation::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_142_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRotation::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRotation G__TTRotation;
static int G__G__Physics_142_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRotation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRotation*) (soff+(sizeof(TRotation)*i)))->~G__TTRotation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRotation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRotation*) (soff))->~G__TTRotation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVector3 */
static int G__G__Physics_143_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TVector3* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TVector3(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) TVector3(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TVector3((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) TVector3((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TVector3((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) TVector3((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TVector3[n];
       } else {
         p = new((void*) gvp) TVector3[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TVector3;
       } else {
         p = new((void*) gvp) TVector3;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TVector3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TVector3* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TVector3((const Double_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TVector3((const Double_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TVector3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TVector3* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TVector3((const Float_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TVector3((const Float_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TVector3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TVector3* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TVector3(*(TVector3*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TVector3(*(TVector3*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TVector3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->operator()((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->operator[]((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((TVector3*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((TVector3*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->SetX((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->SetY((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->SetZ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->SetXYZ((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->SetPtEtaPhi((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->SetPtThetaPhi((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TVector3*) G__getstructoffset())->GetXYZ((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TVector3*) G__getstructoffset())->GetXYZ((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->CosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Mag2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Mag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->SetPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->SetTheta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->SetMag((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Perp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Perp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->SetPerp((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Perp2(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Pt(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Perp(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->DeltaPhi(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->DeltaR(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->DrEtaPhi(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2* pobj;
         const TVector2 xobj = ((const TVector3*) G__getstructoffset())->EtaPhiVector();
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->SetMagThetaPhi((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((TVector3*) G__getstructoffset())->operator=(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TVector3*) G__getstructoffset())->operator==(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TVector3*) G__getstructoffset())->operator!=(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((TVector3*) G__getstructoffset())->operator+=(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((TVector3*) G__getstructoffset())->operator-=(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TVector3*) G__getstructoffset())->operator-();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((TVector3*) G__getstructoffset())->operator*=((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TVector3*) G__getstructoffset())->Unit();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TVector3*) G__getstructoffset())->Orthogonal();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Dot(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TVector3*) G__getstructoffset())->Cross(*(TVector3*) libp->para[0].ref);
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Angle(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->PseudoRapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVector3*) G__getstructoffset())->Eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->RotateX((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->RotateY((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->RotateZ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->RotateUz(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->Rotate((Double_t) G__double(libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((TVector3*) G__getstructoffset())->operator*=(*(TRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((TVector3*) G__getstructoffset())->Transform(*(TRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2* pobj;
         const TVector2 xobj = ((const TVector3*) G__getstructoffset())->XYvector();
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TVector3::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVector3::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TVector3::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TVector3::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVector3*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVector3::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVector3::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVector3::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_143_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVector3::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVector3 G__TTVector3;
static int G__G__Physics_143_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TVector3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TVector3*) (soff+(sizeof(TVector3)*i)))->~G__TTVector3();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TVector3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TVector3*) (soff))->~G__TTVector3();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TQuaternion */
static int G__G__Physics_144_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQuaternion* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQuaternion(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TQuaternion(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQuaternion(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) TQuaternion(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQuaternion((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) TQuaternion((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQuaternion((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) TQuaternion((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TQuaternion[n];
       } else {
         p = new((void*) gvp) TQuaternion[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TQuaternion;
       } else {
         p = new((void*) gvp) TQuaternion;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQuaternion* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQuaternion(*(TVector3*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) TQuaternion(*(TVector3*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQuaternion(*(TVector3*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) TQuaternion(*(TVector3*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQuaternion* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQuaternion((const Double_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TQuaternion((const Double_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQuaternion* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQuaternion((const Float_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TQuaternion((const Float_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQuaternion* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQuaternion(*(TQuaternion*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TQuaternion(*(TQuaternion*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TQuaternion*) G__getstructoffset())->operator()((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TQuaternion*) G__getstructoffset())->operator[]((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((TQuaternion*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((TQuaternion*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->SetRXYZ((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->SetRV((Double_t) G__double(libp->para[0]), *(TVector3*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->SetAxisQAngle(*(TVector3*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TQuaternion*) G__getstructoffset())->GetQAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->SetQAngle((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TQuaternion*) G__getstructoffset())->GetRXYZ((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TQuaternion*) G__getstructoffset())->GetRXYZ((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->operator=((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TQuaternion*) G__getstructoffset())->operator==((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TQuaternion*) G__getstructoffset())->operator!=((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->operator+=((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->operator-=((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->operator*=((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->operator/=((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->operator*((Double_t) G__double(libp->para[0]));
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->operator+((Double_t) G__double(libp->para[0]));
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->operator-((Double_t) G__double(libp->para[0]));
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->operator/((Double_t) G__double(libp->para[0]));
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->operator=(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TQuaternion*) G__getstructoffset())->operator==(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TQuaternion*) G__getstructoffset())->operator!=(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->operator+=(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->operator-=(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->MultiplyLeft(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->operator*=(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->DivideLeft(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->operator/=(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->operator+(*(TVector3*) libp->para[0].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->operator-(*(TVector3*) libp->para[0].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->LeftProduct(*(TVector3*) libp->para[0].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->operator*(*(TVector3*) libp->para[0].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->LeftQuotient(*(TVector3*) libp->para[0].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->operator/(*(TVector3*) libp->para[0].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->operator=(*(TQuaternion*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TQuaternion*) G__getstructoffset())->operator==(*(TQuaternion*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TQuaternion*) G__getstructoffset())->operator!=(*(TQuaternion*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->operator+=(*(TQuaternion*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->operator-=(*(TQuaternion*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->MultiplyLeft(*(TQuaternion*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->operator*=(*(TQuaternion*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->DivideLeft(*(TQuaternion*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->operator/=(*(TQuaternion*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->operator+(*(TQuaternion*) libp->para[0].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->operator-(*(TQuaternion*) libp->para[0].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->LeftProduct(*(TQuaternion*) libp->para[0].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->operator*(*(TQuaternion*) libp->para[0].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->LeftQuotient(*(TQuaternion*) libp->para[0].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->operator/(*(TQuaternion*) libp->para[0].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TQuaternion*) G__getstructoffset())->Norm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TQuaternion*) G__getstructoffset())->Norm2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TQuaternion*) G__getstructoffset())->QMag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TQuaternion*) G__getstructoffset())->QMag2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion& obj = ((TQuaternion*) G__getstructoffset())->Normalize();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->operator-();
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->Conjugate();
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQuaternion* pobj;
         const TQuaternion xobj = ((const TQuaternion*) G__getstructoffset())->Invert();
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TQuaternion*) G__getstructoffset())->Rotate(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TQuaternion*) G__getstructoffset())->Rotation(*(TVector3*) libp->para[0].ref);
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TQuaternion::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQuaternion::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TQuaternion::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TQuaternion::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQuaternion*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQuaternion::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQuaternion::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQuaternion::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_144_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQuaternion::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TQuaternion G__TTQuaternion;
static int G__G__Physics_144_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TQuaternion*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TQuaternion*) (soff+(sizeof(TQuaternion)*i)))->~G__TTQuaternion();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TQuaternion*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TQuaternion*) (soff))->~G__TTQuaternion();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLorentzRotation */
static int G__G__Physics_146_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLorentzRotation* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLorentzRotation[n];
     } else {
       p = new((void*) gvp) TLorentzRotation[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLorentzRotation;
     } else {
       p = new((void*) gvp) TLorentzRotation;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLorentzRotation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLorentzRotation(*(TRotation*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TLorentzRotation(*(TRotation*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLorentzRotation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLorentzRotation(*(TLorentzRotation*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TLorentzRotation(*(TLorentzRotation*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLorentzRotation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLorentzRotation(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) TLorentzRotation(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLorentzRotation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLorentzRotation(*(TVector3*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TLorentzRotation(*(TVector3*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->XX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->XY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->XZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->XT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->YX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->YY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->YZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->YT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->ZX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->ZY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->ZZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->ZT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->TX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->TY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->TZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->TT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation::TLorentzRotationRow* pobj;
         const TLorentzRotation::TLorentzRotationRow xobj = ((const TLorentzRotation*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         pobj = new TLorentzRotation::TLorentzRotationRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzRotation*) G__getstructoffset())->operator()((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation& obj = ((TLorentzRotation*) G__getstructoffset())->operator=(*(TLorentzRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation& obj = ((TLorentzRotation*) G__getstructoffset())->operator=(*(TRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLorentzRotation*) G__getstructoffset())->operator==(*(TLorentzRotation*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLorentzRotation*) G__getstructoffset())->operator!=(*(TLorentzRotation*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLorentzRotation*) G__getstructoffset())->IsIdentity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TLorentzRotation*) G__getstructoffset())->VectorMultiplication(*(TLorentzVector*) libp->para[0].ref);
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TLorentzRotation*) G__getstructoffset())->operator*(*(TLorentzVector*) libp->para[0].ref);
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation* pobj;
         const TLorentzRotation xobj = ((const TLorentzRotation*) G__getstructoffset())->MatrixMultiplication(*(TLorentzRotation*) libp->para[0].ref);
         pobj = new TLorentzRotation(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation* pobj;
         const TLorentzRotation xobj = ((const TLorentzRotation*) G__getstructoffset())->operator*(*(TLorentzRotation*) libp->para[0].ref);
         pobj = new TLorentzRotation(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation& obj = ((TLorentzRotation*) G__getstructoffset())->operator*=(*(TLorentzRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation& obj = ((TLorentzRotation*) G__getstructoffset())->Transform(*(TLorentzRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation& obj = ((TLorentzRotation*) G__getstructoffset())->Transform(*(TRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation* pobj;
         const TLorentzRotation xobj = ((const TLorentzRotation*) G__getstructoffset())->Inverse();
         pobj = new TLorentzRotation(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation& obj = ((TLorentzRotation*) G__getstructoffset())->Invert();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation& obj = ((TLorentzRotation*) G__getstructoffset())->Boost((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation& obj = ((TLorentzRotation*) G__getstructoffset())->Boost(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation& obj = ((TLorentzRotation*) G__getstructoffset())->RotateX((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation& obj = ((TLorentzRotation*) G__getstructoffset())->RotateY((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation& obj = ((TLorentzRotation*) G__getstructoffset())->RotateZ((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation& obj = ((TLorentzRotation*) G__getstructoffset())->Rotate((Double_t) G__double(libp->para[0]), *(TVector3*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzRotation& obj = ((TLorentzRotation*) G__getstructoffset())->Rotate((Double_t) G__double(libp->para[0]), (const TVector3*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLorentzRotation::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLorentzRotation::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLorentzRotation::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLorentzRotation::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzRotation*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLorentzRotation::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLorentzRotation::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLorentzRotation::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_146_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLorentzRotation::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLorentzRotation G__TTLorentzRotation;
static int G__G__Physics_146_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLorentzRotation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLorentzRotation*) (soff+(sizeof(TLorentzRotation)*i)))->~G__TTLorentzRotation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLorentzRotation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLorentzRotation*) (soff))->~G__TTLorentzRotation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLorentzVector */
static int G__G__Physics_147_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLorentzVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLorentzVector(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TLorentzVector(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLorentzVector(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) TLorentzVector(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLorentzVector((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) TLorentzVector((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLorentzVector((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) TLorentzVector((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TLorentzVector[n];
       } else {
         p = new((void*) gvp) TLorentzVector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TLorentzVector;
       } else {
         p = new((void*) gvp) TLorentzVector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLorentzVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLorentzVector((const Double_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TLorentzVector((const Double_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLorentzVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLorentzVector((const Float_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TLorentzVector((const Float_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLorentzVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLorentzVector(*(TVector3*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) TLorentzVector(*(TVector3*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLorentzVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLorentzVector(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TLorentzVector(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->T());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetX((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetY((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetZ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetT((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->P());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->E());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetPx((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetPy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetPz((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetE((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLorentzVector*) G__getstructoffset())->Vect();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetVect(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->CosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Rho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetTheta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetRho((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetPxPyPzE((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetXYZT((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetXYZM((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetPtEtaPhiM((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetPtEtaPhiE((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLorentzVector*) G__getstructoffset())->GetXYZT((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TLorentzVector*) G__getstructoffset())->GetXYZT((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->operator[]((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((TLorentzVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((TLorentzVector*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((TLorentzVector*) G__getstructoffset())->operator=(*(TLorentzVector*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TLorentzVector*) G__getstructoffset())->operator+(*(TLorentzVector*) libp->para[0].ref);
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((TLorentzVector*) G__getstructoffset())->operator+=(*(TLorentzVector*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TLorentzVector*) G__getstructoffset())->operator-(*(TLorentzVector*) libp->para[0].ref);
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((TLorentzVector*) G__getstructoffset())->operator-=(*(TLorentzVector*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TLorentzVector*) G__getstructoffset())->operator-();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const TLorentzVector*) G__getstructoffset())->operator*((Double_t) G__double(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((TLorentzVector*) G__getstructoffset())->operator*=((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLorentzVector*) G__getstructoffset())->operator==(*(TLorentzVector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TLorentzVector*) G__getstructoffset())->operator!=(*(TLorentzVector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Perp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Perp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetPerp((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Perp2(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Pt(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Perp(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Et2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Et());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Et2(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Et(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->DeltaPhi(*(TLorentzVector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->DeltaR(*(TLorentzVector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->DrEtaPhi(*(TLorentzVector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector2* pobj;
         TVector2 xobj = ((TLorentzVector*) G__getstructoffset())->EtaPhiVector();
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Angle(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Mag2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->M2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Mag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->M());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Mt2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Mt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Beta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Gamma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Dot(*(TLorentzVector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->operator*(*(TLorentzVector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetVectMag(*(TVector3*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->SetVectM(*(TVector3*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Plus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Minus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TLorentzVector*) G__getstructoffset())->BoostVector();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->Boost((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->Boost(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Rapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->Eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TLorentzVector*) G__getstructoffset())->PseudoRapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->RotateX((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->RotateY((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->RotateZ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->RotateUz(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->Rotate((Double_t) G__double(libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((TLorentzVector*) G__getstructoffset())->operator*=(*(TRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((TLorentzVector*) G__getstructoffset())->Transform(*(TRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((TLorentzVector*) G__getstructoffset())->operator*=(*(TLorentzRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((TLorentzVector*) G__getstructoffset())->Transform(*(TLorentzRotation*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLorentzVector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLorentzVector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLorentzVector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLorentzVector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLorentzVector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLorentzVector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLorentzVector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLorentzVector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_147_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLorentzVector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLorentzVector G__TTLorentzVector;
static int G__G__Physics_147_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLorentzVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLorentzVector*) (soff+(sizeof(TLorentzVector)*i)))->~G__TTLorentzVector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLorentzVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLorentzVector*) (soff))->~G__TTLorentzVector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGenPhaseSpace */
static int G__G__Physics_149_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGenPhaseSpace* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGenPhaseSpace[n];
     } else {
       p = new((void*) gvp) TGenPhaseSpace[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGenPhaseSpace;
     } else {
       p = new((void*) gvp) TGenPhaseSpace;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TGenPhaseSpace));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_149_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGenPhaseSpace* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TGenPhaseSpace(*(TGenPhaseSpace*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TGenPhaseSpace(*(TGenPhaseSpace*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TGenPhaseSpace));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_149_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((TGenPhaseSpace*) G__getstructoffset())->SetDecay(*(TLorentzVector*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Option_t*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((TGenPhaseSpace*) G__getstructoffset())->SetDecay(*(TLorentzVector*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_149_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TGenPhaseSpace*) G__getstructoffset())->Generate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_149_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TGenPhaseSpace*) G__getstructoffset())->GetDecay((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_149_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TGenPhaseSpace*) G__getstructoffset())->GetNt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_149_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TGenPhaseSpace*) G__getstructoffset())->GetWtMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_149_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGenPhaseSpace::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_149_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGenPhaseSpace::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_149_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGenPhaseSpace::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_149_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGenPhaseSpace::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_149_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGenPhaseSpace*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_149_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGenPhaseSpace::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_149_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGenPhaseSpace::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_149_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGenPhaseSpace::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_149_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGenPhaseSpace::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGenPhaseSpace G__TTGenPhaseSpace;
static int G__G__Physics_149_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGenPhaseSpace*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGenPhaseSpace*) (soff+(sizeof(TGenPhaseSpace)*i)))->~G__TTGenPhaseSpace();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGenPhaseSpace*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGenPhaseSpace*) (soff))->~G__TTGenPhaseSpace();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Physics_149_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGenPhaseSpace* dest = (TGenPhaseSpace*) G__getstructoffset();
   *dest = *(TGenPhaseSpace*) libp->para[0].ref;
   const TGenPhaseSpace& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRobustEstimator */
static int G__G__Physics_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRobustEstimator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRobustEstimator[n];
     } else {
       p = new((void*) gvp) TRobustEstimator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRobustEstimator;
     } else {
       p = new((void*) gvp) TRobustEstimator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TRobustEstimator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRobustEstimator* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRobustEstimator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TRobustEstimator(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRobustEstimator((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TRobustEstimator((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TRobustEstimator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRobustEstimator*) G__getstructoffset())->AddColumn((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRobustEstimator*) G__getstructoffset())->AddRow((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRobustEstimator*) G__getstructoffset())->Evaluate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((TRobustEstimator*) G__getstructoffset())->EvaluateUni((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TRobustEstimator*) G__getstructoffset())->EvaluateUni((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRobustEstimator*) G__getstructoffset())->GetBDPoint());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRobustEstimator*) G__getstructoffset())->GetCovariance(*(TMatrixDSym*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TRobustEstimator*) G__getstructoffset())->GetCovariance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRobustEstimator*) G__getstructoffset())->GetCorrelation(*(TMatrixDSym*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TRobustEstimator*) G__getstructoffset())->GetCorrelation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRobustEstimator*) G__getstructoffset())->GetHyperplane(*(TVectorD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TRobustEstimator*) G__getstructoffset())->GetHyperplane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRobustEstimator*) G__getstructoffset())->GetNHyp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRobustEstimator*) G__getstructoffset())->GetMean(*(TVectorD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TRobustEstimator*) G__getstructoffset())->GetMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRobustEstimator*) G__getstructoffset())->GetRDistances(*(TVectorD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TRobustEstimator*) G__getstructoffset())->GetRDistances());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TRobustEstimator*) G__getstructoffset())->GetNumberObservations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TRobustEstimator*) G__getstructoffset())->GetNvar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TRobustEstimator*) G__getstructoffset())->GetOuliers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRobustEstimator*) G__getstructoffset())->GetNOut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRobustEstimator*) G__getstructoffset())->GetChiQuant((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRobustEstimator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRobustEstimator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRobustEstimator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRobustEstimator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRobustEstimator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRobustEstimator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRobustEstimator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRobustEstimator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_193_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRobustEstimator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Physics_193_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRobustEstimator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRobustEstimator(*(TRobustEstimator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TRobustEstimator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRobustEstimator G__TTRobustEstimator;
static int G__G__Physics_193_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRobustEstimator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRobustEstimator*) (soff+(sizeof(TRobustEstimator)*i)))->~G__TTRobustEstimator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRobustEstimator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRobustEstimator*) (soff))->~G__TTRobustEstimator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Physics_193_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRobustEstimator* dest = (TRobustEstimator*) G__getstructoffset();
   *dest = *(TRobustEstimator*) libp->para[0].ref;
   const TRobustEstimator& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRolke */
static int G__G__Physics_194_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRolke* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRolke((Double_t) G__double(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TRolke((Double_t) G__double(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRolke((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) TRolke((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TRolke[n];
       } else {
         p = new((void*) gvp) TRolke[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TRolke;
       } else {
         p = new((void*) gvp) TRolke;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TRolke));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRolke*) G__getstructoffset())->GetCL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRolke*) G__getstructoffset())->SetCL((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRolke*) G__getstructoffset())->SetCLSigmas((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRolke*) G__getstructoffset())->SetPoissonBkgBinomEff((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRolke*) G__getstructoffset())->SetPoissonBkgGaussEff((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRolke*) G__getstructoffset())->SetGaussBkgGaussEff((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRolke*) G__getstructoffset())->SetPoissonBkgKnownEff((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRolke*) G__getstructoffset())->SetGaussBkgKnownEff((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRolke*) G__getstructoffset())->SetKnownBkgBinomEff((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRolke*) G__getstructoffset())->SetKnownBkgGaussEff((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRolke*) G__getstructoffset())->CalculateInterval(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Int_t) G__int(libp->para[11])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TRolke*) G__getstructoffset())->GetLimits(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRolke*) G__getstructoffset())->GetUpperLimit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRolke*) G__getstructoffset())->GetLowerLimit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((TRolke*) G__getstructoffset())->GetSensitivity(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TRolke*) G__getstructoffset())->GetSensitivity(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((TRolke*) G__getstructoffset())->GetLimitsQuantile(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((TRolke*) G__getstructoffset())->GetLimitsQuantile(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TRolke*) G__getstructoffset())->GetLimitsML(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((TRolke*) G__getstructoffset())->GetCriticalNumber(*(Int_t*) G__Intref(&libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TRolke*) G__getstructoffset())->GetCriticalNumber(*(Int_t*) G__Intref(&libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TRolke*) G__getstructoffset())->GetBounding());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRolke*) G__getstructoffset())->SetBounding((const bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRolke*) G__getstructoffset())->SetSwitch((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRolke::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRolke::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRolke::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRolke::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRolke*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRolke::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRolke::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRolke::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics_194_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRolke::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Physics_194_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRolke* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRolke(*(TRolke*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PhysicsLN_TRolke));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRolke G__TTRolke;
static int G__G__Physics_194_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRolke*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRolke*) (soff+(sizeof(TRolke)*i)))->~G__TTRolke();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRolke*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRolke*) (soff))->~G__TTRolke();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Physics_194_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRolke* dest = (TRolke*) G__getstructoffset();
   *dest = *(TRolke*) libp->para[0].ref;
   const TRolke& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__G__Physics__0_304(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector2* pobj;
         TVector2 xobj = operator+(*(TVector2*) libp->para[0].ref, *(TVector2*) libp->para[1].ref);
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_307(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector2* pobj;
         TVector2 xobj = operator-(*(TVector2*) libp->para[0].ref, *(TVector2*) libp->para[1].ref);
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_309(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) operator*(*(TVector2*) libp->para[0].ref, *(TVector2*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_310(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector2* pobj;
         TVector2 xobj = operator*(*(TVector2*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_311(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector2* pobj;
         TVector2 xobj = operator*((Double_t) G__double(libp->para[0]), *(TVector2*) libp->para[1].ref);
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_312(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector2* pobj;
         TVector2 xobj = operator/(*(TVector2*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_315(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = operator+(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref);
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_316(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = operator-(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref);
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_317(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) operator*(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_318(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = operator*(*(TVector3*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_319(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = operator*((Double_t) G__double(libp->para[0]), *(TVector3*) libp->para[1].ref);
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_320(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = operator*(*(TMatrix*) libp->para[0].ref, *(TVector3*) libp->para[1].ref);
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_321(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = operator*((Double_t) G__double(libp->para[0]), *(TLorentzVector*) libp->para[1].ref);
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_322(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TQuaternion* pobj;
         TQuaternion xobj = operator+((Double_t) G__double(libp->para[0]), *(TQuaternion*) libp->para[1].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_323(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TQuaternion* pobj;
         TQuaternion xobj = operator-((Double_t) G__double(libp->para[0]), *(TQuaternion*) libp->para[1].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_324(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TQuaternion* pobj;
         TQuaternion xobj = operator*((Double_t) G__double(libp->para[0]), *(TQuaternion*) libp->para[1].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_325(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TQuaternion* pobj;
         TQuaternion xobj = operator/((Double_t) G__double(libp->para[0]), *(TQuaternion*) libp->para[1].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_326(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TQuaternion* pobj;
         TQuaternion xobj = operator+(*(TVector3*) libp->para[0].ref, *(TQuaternion*) libp->para[1].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_327(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TQuaternion* pobj;
         TQuaternion xobj = operator-(*(TVector3*) libp->para[0].ref, *(TQuaternion*) libp->para[1].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_328(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TQuaternion* pobj;
         TQuaternion xobj = operator*(*(TVector3*) libp->para[0].ref, *(TQuaternion*) libp->para[1].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Physics__0_329(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TQuaternion* pobj;
         TQuaternion xobj = operator/(*(TVector3*) libp->para[0].ref, *(TQuaternion*) libp->para[1].ref);
         pobj = new TQuaternion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* TFeldmanCousins */

/* TVector2 */

/* TRotation */

/* TVector3 */

/* TQuaternion */

/* TLorentzRotation */

/* TLorentzVector */

/* TGenPhaseSpace */

/* TRobustEstimator */

/* TRolke */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Physics {
 public:
  G__Sizep2memfuncG__Physics(): p(&G__Sizep2memfuncG__Physics::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Physics::*p)();
};

size_t G__get_sizep2memfuncG__Physics()
{
  G__Sizep2memfuncG__Physics a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Physics() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PhysicsLN_TFeldmanCousins))) {
     TFeldmanCousins *G__Lderived;
     G__Lderived=(TFeldmanCousins*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TFeldmanCousins),G__get_linked_tagnum(&G__G__PhysicsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PhysicsLN_TVector2))) {
     TVector2 *G__Lderived;
     G__Lderived=(TVector2*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TVector2),G__get_linked_tagnum(&G__G__PhysicsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PhysicsLN_TRotation))) {
     TRotation *G__Lderived;
     G__Lderived=(TRotation*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TRotation),G__get_linked_tagnum(&G__G__PhysicsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PhysicsLN_TVector3))) {
     TVector3 *G__Lderived;
     G__Lderived=(TVector3*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TVector3),G__get_linked_tagnum(&G__G__PhysicsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion))) {
     TQuaternion *G__Lderived;
     G__Lderived=(TQuaternion*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion),G__get_linked_tagnum(&G__G__PhysicsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation))) {
     TLorentzRotation *G__Lderived;
     G__Lderived=(TLorentzRotation*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation),G__get_linked_tagnum(&G__G__PhysicsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector))) {
     TLorentzVector *G__Lderived;
     G__Lderived=(TLorentzVector*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector),G__get_linked_tagnum(&G__G__PhysicsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PhysicsLN_TGenPhaseSpace))) {
     TGenPhaseSpace *G__Lderived;
     G__Lderived=(TGenPhaseSpace*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TGenPhaseSpace),G__get_linked_tagnum(&G__G__PhysicsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PhysicsLN_TRobustEstimator))) {
     TRobustEstimator *G__Lderived;
     G__Lderived=(TRobustEstimator*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TRobustEstimator),G__get_linked_tagnum(&G__G__PhysicsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PhysicsLN_TRolke))) {
     TRolke *G__Lderived;
     G__Lderived=(TRolke*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TRolke),G__get_linked_tagnum(&G__G__PhysicsLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Physics() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__PhysicsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__PhysicsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__PhysicsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__PhysicsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__PhysicsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__PhysicsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorD",117,G__get_linked_tagnum(&G__G__PhysicsLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrix",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixDSym",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TFeldmanCousins */
static void G__setup_memvarTFeldmanCousins(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TFeldmanCousins));
   { TFeldmanCousins *p; p=(TFeldmanCousins*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCL=",0,"confidence level as a fraction [e.g. 90% = 0.9]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUpperLimit=",0,"the calculated upper limit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLowerLimit=",0,"the calculated lower limit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fNobserved=",0,"input number of observed events");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fNbackground=",0,"input number of background events");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMuMin=",0,"minimum value of signal to use in calculating the tables");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMuMax=",0,"maximum value of signal to use in calculating the tables");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMuStep=",0,"the step in signal to use when generating tables");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNMuStep=",0,"= (int)(fMuStep)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNMax=",0,"= (int)(fMuMax)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fQUICK=",0,"take a short cut to speed up the process of generating a");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVector2 */
static void G__setup_memvarTVector2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TVector2));
   { TVector2 *p; p=(TVector2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fX=",0,"components of the vector");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRotation */
static void G__setup_memvarTRotation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TRotation));
   { TRotation *p; p=(TRotation*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fxx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fxy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fxz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fyx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fyy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fyz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fzx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fzy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fzz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVector3 */
static void G__setup_memvarTVector3(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TVector3));
   { TVector3 *p; p=(TVector3*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TQuaternion */
static void G__setup_memvarTQuaternion(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion));
   { TQuaternion *p; p=(TQuaternion*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fRealPart)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fRealPart=",0,"Real part");
   G__memvar_setup((void*)((long)(&p->fVectorPart)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TVector3),-1,-1,1,"fVectorPart=",0,"vector part");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLorentzRotation */
static void G__setup_memvarTLorentzRotation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation));
   { TLorentzRotation *p; p=(TLorentzRotation*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fxx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fxy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fxz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fxt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fyx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fyy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fyz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fyt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fzx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fzy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fzz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fzt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"ftx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fty=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"ftz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"ftt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLorentzVector */
static void G__setup_memvarTLorentzVector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector));
   { TLorentzVector *p; p=(TLorentzVector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TVector3),-1,-1,4,"fP=",0,"3 vector component");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fE=",0,"time or energy of (x,y,z,t) or (px,py,pz,e)");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVectorcLcLdA),-1,-2,1,"kX=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVectorcLcLdA),-1,-2,1,"kY=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVectorcLcLdA),-1,-2,1,"kZ=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVectorcLcLdA),-1,-2,1,"kT=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVectorcLcLdA),-1,-2,1,"kNUM_COORDINATES=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVectorcLcLdA),-1,-2,1,"kSIZE=4",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGenPhaseSpace */
static void G__setup_memvarTGenPhaseSpace(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TGenPhaseSpace));
   { TGenPhaseSpace *p; p=(TGenPhaseSpace*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNt=",0,"number of decay particles");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMass[18]=",0,"masses of particles");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBeta[3]=",0,"betas of decaying particle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTeCmTm=",0,"total energy in the C.M. minus the total mass");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fWtMax=",0,"maximum weigth ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector),-1,-1,4,"fDecPro[18]=",0,"kinematics of the generated particles ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRobustEstimator */
static void G__setup_memvarTRobustEstimator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TRobustEstimator));
   { TRobustEstimator *p; p=(TRobustEstimator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNvar=",0,"number of variables");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fH=",0,"algorithm parameter, determining the subsample size");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fN=",0,"number of observations");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fVarTemp=",0,"number of variables already added to the data matrix");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fVecTemp=",0,"number of observations already added to the data matrix");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fExact=",0,"if there was an exact fit, stores the number of points on a hyperplane ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fMean=",0,"location estimate (mean values)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"fCovariance=",0,"covariance matrix estimate");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"fInvcovariance=",0,"inverse of the covariance matrix");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"fCorrelation=",0,"correlation matrix");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fRd=",0,"array of robust distances, size n");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fSd=",0,"array of standard deviations");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TArrayI),-1,-1,2,"fOut=",0,"array of indexes of ouliers, size <0.5*n");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fHyperplane=",0,"in case more than fH observations lie on a hyperplane");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,2,"fData=",0,"the original data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRolke */
static void G__setup_memvarTRolke(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TRolke));
   { TRolke *p; p=(TRolke*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCL=",0,"confidence level as a fraction [0.9 for 90% ]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fUpperLimit=",0,"the calculated upper limit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLowerLimit=",0,"the calculated lower limit");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fBounding=",0,"false for unbounded likelihood");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumWarningsDeprecated1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumWarningsDeprecated2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"f_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"f_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"f_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"f_bm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"f_em=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"f_e=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"f_mid=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"f_sde=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"f_sdb=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"f_tau=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"f_b=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"f_m=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PhysicsLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Physics() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTFeldmanCousins(void) {
   /* TFeldmanCousins */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TFeldmanCousins));
   G__memfunc_setup("Prob",403,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 2, 0, 
"i - 'Int_t' 0 - N d - 'Double_t' 0 - mu "
"d - 'Double_t' 0 - B", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindLimitsFromTable",1903,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "d - 'Double_t' 0 - mu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFeldmanCousins",1519,G__G__Physics_106_0_3, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TFeldmanCousins), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '0.9' newCL u 'TString' - 0 '\"\"' options", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateUpperLimit",1945,G__G__Physics_106_0_4, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - Nobserved d - 'Double_t' 0 - Nbackground", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateLowerLimit",1942,G__G__Physics_106_0_5, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - Nobserved d - 'Double_t' 0 - Nbackground", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpperLimit",1323,G__G__Physics_106_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLowerLimit",1320,G__G__Physics_106_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNobserved",1224,G__G__Physics_106_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbackground",1422,G__G__Physics_106_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCL",431,G__G__Physics_106_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuMin",774,G__G__Physics_106_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuMax",776,G__G__Physics_106_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuStep",894,G__G__Physics_106_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNMax",660,G__G__Physics_106_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNobserved",1236,G__G__Physics_106_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - NObs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNbackground",1434,G__G__Physics_106_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Nbg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCL",443,G__G__Physics_106_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - newCL", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMuMin",786,G__G__Physics_106_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0.0' newMin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMuMax",788,G__G__Physics_106_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '50.0' newMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMuStep",906,G__G__Physics_106_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0.005' newMuStep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Physics_106_0_21, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TFeldmanCousins::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Physics_106_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFeldmanCousins::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Physics_106_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TFeldmanCousins::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Physics_106_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TFeldmanCousins::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Physics_106_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Physics_106_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFeldmanCousins::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Physics_106_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFeldmanCousins::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Physics_106_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFeldmanCousins::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Physics_106_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFeldmanCousins::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TFeldmanCousins", 1519, G__G__Physics_106_0_33, (int) ('i'), G__get_linked_tagnum(&G__G__PhysicsLN_TFeldmanCousins), -1, 0, 1, 1, 1, 0, "u 'TFeldmanCousins' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TFeldmanCousins", 1645, G__G__Physics_106_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Physics_106_0_35, (int) ('u'), G__get_linked_tagnum(&G__G__PhysicsLN_TFeldmanCousins), -1, 1, 1, 1, 1, 0, "u 'TFeldmanCousins' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVector2(void) {
   /* TVector2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TVector2));
   G__memfunc_setup("TVector2",761,G__G__Physics_107_0_1, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TVector2",761,G__G__Physics_107_0_2, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TVector2",761,G__G__Physics_107_0_3, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - x0 d - 'Double_t' 0 - y0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Physics_107_0_4, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 1, 1, 1, 1, 0, "u 'TVector2' - 41 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Physics_107_0_5, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 1, 1, 1, 1, 0, "u 'TVector2' - 41 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Physics_107_0_6, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 1, 1, 1, 1, 0, "u 'TVector2' - 41 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Physics_107_0_7, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'TVector2' - 41 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Physics_107_0_8, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Physics_107_0_9, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__G__Physics_107_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector2' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__G__Physics_107_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - x0 d - 'Double_t' 0 - y0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__G__Physics_107_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - x0 f - - 0 - y0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mod2",338,G__G__Physics_107_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mod",288,G__G__Physics_107_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Px",200,G__G__Physics_107_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Py",201,G__G__Physics_107_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__G__Physics_107_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__G__Physics_107_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__G__Physics_107_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaPhi",779,G__G__Physics_107_0_20, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector2' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMagPhi",866,G__G__Physics_107_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - mag d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Physics_107_0_22, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ort",309,G__G__Physics_107_0_23, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Proj",411,G__G__Physics_107_0_24, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 1, 1, 1, 8, "u 'TVector2' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Norm",412,G__G__Physics_107_0_25, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 1, 1, 1, 8, "u 'TVector2' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rotate",623,G__G__Physics_107_0_26, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 1, 1, 1, 8, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi_0_2pi",794,G__G__Physics_107_0_27, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - x", "returns phi angle in the interval", (void*) G__func2void( (Double_t (*)(Double_t))(&TVector2::Phi_0_2pi) ), 0);
   G__memfunc_setup("Phi_mpi_pi",1022,G__G__Physics_107_0_28, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&TVector2::Phi_mpi_pi) ), 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Physics_107_0_30, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TVector2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Physics_107_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVector2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Physics_107_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TVector2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Physics_107_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TVector2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Physics_107_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Physics_107_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVector2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Physics_107_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVector2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Physics_107_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVector2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Physics_107_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVector2::DeclFileLine) ), 0);
   G__memfunc_setup("operator*=",979,G__G__Physics_107_0_42, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'TVector2' - 11 - v", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TVector2", 761, G__G__Physics_107_0_43, (int) ('i'), G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 1, 1, 1, 0, "u 'TVector2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TVector2", 887, G__G__Physics_107_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRotation(void) {
   /* TRotation */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TRotation));
   G__memfunc_setup("TRotation",932,G__G__Physics_142_0_1, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRotation",932,G__G__Physics_142_0_2, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 0, 1, 1, 1, 0, "u 'TRotation' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRotation",932,G__G__Physics_142_0_3, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 0, 1, 1, 1, 0, "u 'TQuaternion' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XX",176,G__G__Physics_142_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XY",177,G__G__Physics_142_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XZ",178,G__G__Physics_142_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YX",177,G__G__Physics_142_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YY",178,G__G__Physics_142_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YZ",179,G__G__Physics_142_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZX",178,G__G__Physics_142_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZY",179,G__G__Physics_142_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZZ",180,G__G__Physics_142_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Physics_142_0_13, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotationcLcLTRotationRow), -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Physics_142_0_14, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - - 0 - - i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Physics_142_0_15, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 1, 1, 1, 0, "u 'TRotation' - 11 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Physics_142_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TRotation' - 11 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Physics_142_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TRotation' - 11 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIdentity",1030,G__G__Physics_142_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__G__Physics_142_0_19, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 1, 1, 1, 8, "u 'TVector3' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__G__Physics_142_0_20, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 0, 1, 1, 1, 8, "u 'TRotation' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Physics_142_0_21, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 1, 1, 1, 0, "u 'TRotation' - 11 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Transform",956,G__G__Physics_142_0_22, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 1, 1, 1, 0, "u 'TRotation' - 11 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Physics_142_0_23, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Physics_142_0_24, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateX",711,G__G__Physics_142_0_25, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateY",712,G__G__Physics_142_0_26, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateZ",713,G__G__Physics_142_0_27, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rotate",623,G__G__Physics_142_0_28, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - u 'TVector3' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rotate",623,G__G__Physics_142_0_29, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 2, 1, 1, 0, 
"d - 'Double_t' 0 - psi U 'TVector3' - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateAxes",1024,G__G__Physics_142_0_30, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 3, 1, 1, 0, 
"u 'TVector3' - 11 - newX u 'TVector3' - 11 - newY "
"u 'TVector3' - 11 - newZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PhiX",377,G__G__Physics_142_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PhiY",378,G__G__Physics_142_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PhiZ",379,G__G__Physics_142_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ThetaX",590,G__G__Physics_142_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ThetaY",591,G__G__Physics_142_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ThetaZ",592,G__G__Physics_142_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AngleAxis",892,G__G__Physics_142_0_37, 121, -1, -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 1 - - u 'TVector3' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetToIdentity",1337,G__G__Physics_142_0_38, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXEulerAngles",1499,G__G__Physics_142_0_39, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 3, 1, 1, 0, 
"d - 'Double_t' 0 - phi d - 'Double_t' 0 - theta "
"d - 'Double_t' 0 - psi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXPhi",677,G__G__Physics_142_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXTheta",890,G__G__Physics_142_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXPsi",688,G__G__Physics_142_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateXEulerAngles",1822,G__G__Physics_142_0_43, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 3, 1, 1, 0, 
"d - 'Double_t' 0 - phi d - 'Double_t' 0 - theta "
"d - 'Double_t' 0 - psi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXPhi",665,G__G__Physics_142_0_44, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXTheta",878,G__G__Physics_142_0_45, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXPsi",676,G__G__Physics_142_0_46, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYEulerAngles",1500,G__G__Physics_142_0_47, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 3, 1, 1, 0, 
"d - 'Double_t' 0 - phi d - 'Double_t' 0 - theta "
"d - 'Double_t' 0 - psi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYPhi",678,G__G__Physics_142_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYTheta",891,G__G__Physics_142_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYPsi",689,G__G__Physics_142_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateYEulerAngles",1823,G__G__Physics_142_0_51, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 3, 1, 1, 0, 
"d - 'Double_t' 0 - phi d - 'Double_t' 0 - theta "
"d - 'Double_t' 0 - psi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYPhi",666,G__G__Physics_142_0_52, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYTheta",879,G__G__Physics_142_0_53, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYPsi",677,G__G__Physics_142_0_54, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXAxis",793,G__G__Physics_142_0_55, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXAxis",793,G__G__Physics_142_0_56, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 2, 1, 1, 0, 
"u 'TVector3' - 11 - axis u 'TVector3' - 11 - xyPlane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYAxis",794,G__G__Physics_142_0_57, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYAxis",794,G__G__Physics_142_0_58, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 2, 1, 1, 0, 
"u 'TVector3' - 11 - axis u 'TVector3' - 11 - yzPlane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZAxis",795,G__G__Physics_142_0_59, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZAxis",795,G__G__Physics_142_0_60, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 1, 2, 1, 1, 0, 
"u 'TVector3' - 11 - axis u 'TVector3' - 11 - zxPlane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeBasis",880,G__G__Physics_142_0_61, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'TVector3' - 1 - xAxis u 'TVector3' - 1 - yAxis "
"u 'TVector3' - 1 - zAxis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRotation",932,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TRotation), -1, 0, 9, 1, 2, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Physics_142_0_63, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRotation::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Physics_142_0_64, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRotation::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Physics_142_0_65, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRotation::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Physics_142_0_66, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRotation::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Physics_142_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Physics_142_0_71, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRotation::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Physics_142_0_72, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRotation::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Physics_142_0_73, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRotation::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Physics_142_0_74, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRotation::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRotation", 1058, G__G__Physics_142_0_75, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVector3(void) {
   /* TVector3 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TVector3));
   G__memfunc_setup("TVector3",762,G__G__Physics_143_0_1, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 '0.0' x d - 'Double_t' 0 '0.0' y "
"d - 'Double_t' 0 '0.0' z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TVector3",762,G__G__Physics_143_0_2, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TVector3",762,G__G__Physics_143_0_3, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 1, 1, 1, 0, "F - 'Float_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TVector3",762,G__G__Physics_143_0_4, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Physics_143_0_5, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Physics_143_0_6, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Physics_143_0_7, 100, -1, G__defined_typename("Double_t"), 1, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Physics_143_0_8, 100, -1, G__defined_typename("Double_t"), 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__G__Physics_143_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__G__Physics_143_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__G__Physics_143_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__G__Physics_143_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__G__Physics_143_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z",90,G__G__Physics_143_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Px",200,G__G__Physics_143_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Py",201,G__G__Physics_143_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pz",202,G__G__Physics_143_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,G__G__Physics_143_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY",389,G__G__Physics_143_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - yy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ",390,G__G__Physics_143_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - zz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXYZ",567,G__G__Physics_143_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - xx d - 'Double_t' 0 - yy "
"d - 'Double_t' 0 - zz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPtEtaPhi",1067,G__G__Physics_143_0_22, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - pt d - 'Double_t' 0 - eta "
"d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPtThetaPhi",1287,G__G__Physics_143_0_23, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - pt d - 'Double_t' 0 - theta "
"d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXYZ",555,G__G__Physics_143_0_24, 121, -1, -1, 0, 1, 1, 1, 8, "D - 'Double_t' 0 - carray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXYZ",555,G__G__Physics_143_0_25, 121, -1, -1, 0, 1, 1, 1, 8, "F - 'Float_t' 0 - carray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__G__Physics_143_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Theta",502,G__G__Physics_143_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CosTheta",795,G__G__Physics_143_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mag2",327,G__G__Physics_143_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mag",277,G__G__Physics_143_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__G__Physics_143_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTheta",802,G__G__Physics_143_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMag",577,G__G__Physics_143_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Perp2",457,G__G__Physics_143_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pt",196,G__G__Physics_143_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Perp",407,G__G__Physics_143_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPerp",707,G__G__Physics_143_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Perp2",457,G__G__Physics_143_0_38, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pt",196,G__G__Physics_143_0_39, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Perp",407,G__G__Physics_143_0_40, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaPhi",779,G__G__Physics_143_0_41, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaR",572,G__G__Physics_143_0_42, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrEtaPhi",753,G__G__Physics_143_0_43, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EtaPhiVector",1198,G__G__Physics_143_0_44, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMagThetaPhi",1368,G__G__Physics_143_0_45, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - mag d - 'Double_t' 0 - theta "
"d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Physics_143_0_46, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Physics_143_0_47, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Physics_143_0_48, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Physics_143_0_49, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Physics_143_0_50, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__G__Physics_143_0_51, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Physics_143_0_52, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unit",416,G__G__Physics_143_0_53, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Orthogonal",1053,G__G__Physics_143_0_54, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dot",295,G__G__Physics_143_0_55, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cross",522,G__G__Physics_143_0_56, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 1, 1, 1, 8, "u 'TVector3' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Angle",487,G__G__Physics_143_0_57, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PseudoRapidity",1462,G__G__Physics_143_0_58, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta",282,G__G__Physics_143_0_59, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateX",711,G__G__Physics_143_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateY",712,G__G__Physics_143_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateZ",713,G__G__Physics_143_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateUz",830,G__G__Physics_143_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rotate",623,G__G__Physics_143_0_64, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - u 'TVector3' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Physics_143_0_65, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 1, 1, 1, 1, 0, "u 'TRotation' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Transform",956,G__G__Physics_143_0_66, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 1, 1, 1, 1, 0, "u 'TRotation' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XYvector",836,G__G__Physics_143_0_67, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Physics_143_0_69, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TVector3::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Physics_143_0_70, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVector3::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Physics_143_0_71, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TVector3::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Physics_143_0_72, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TVector3::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Physics_143_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Physics_143_0_77, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVector3::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Physics_143_0_78, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVector3::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Physics_143_0_79, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVector3::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Physics_143_0_80, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVector3::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TVector3", 888, G__G__Physics_143_0_81, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTQuaternion(void) {
   /* TQuaternion */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion));
   G__memfunc_setup("TQuaternion",1146,G__G__Physics_144_0_1, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 '0' real d - 'Double_t' 0 '0' X "
"d - 'Double_t' 0 '0' Y d - 'Double_t' 0 '0' Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQuaternion",1146,G__G__Physics_144_0_2, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - vector d - 'Double_t' 0 '0' real", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQuaternion",1146,G__G__Physics_144_0_3, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQuaternion",1146,G__G__Physics_144_0_4, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 0, "F - 'Float_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQuaternion",1146,G__G__Physics_144_0_5, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 0, "u 'TQuaternion' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Physics_144_0_6, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Physics_144_0_7, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Physics_144_0_8, 100, -1, G__defined_typename("Double_t"), 1, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Physics_144_0_9, 100, -1, G__defined_typename("Double_t"), 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRXYZ",649,G__G__Physics_144_0_10, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 4, 1, 1, 0, 
"d - 'Double_t' 0 - r d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRV",468,G__G__Physics_144_0_11, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 2, 1, 1, 0, 
"d - 'Double_t' 0 - r u 'TVector3' - 1 - vect", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAxisQAngle",1273,G__G__Physics_144_0_12, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 2, 1, 1, 0, 
"u 'TVector3' - 1 - v d - 'Double_t' 0 - QAngle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQAngle",856,G__G__Physics_144_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQAngle",868,G__G__Physics_144_0_14, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRXYZ",637,G__G__Physics_144_0_15, 121, -1, -1, 0, 1, 1, 1, 8, "D - 'Double_t' 0 - carray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRXYZ",637,G__G__Physics_144_0_16, 121, -1, -1, 0, 1, 1, 1, 8, "F - 'Float_t' 0 - carray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Physics_144_0_17, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Physics_144_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Physics_144_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Physics_144_0_20, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - real", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Physics_144_0_21, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - real", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Physics_144_0_22, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - real", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Physics_144_0_23, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - real", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__G__Physics_144_0_24, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 8, "d - 'Double_t' 0 - real", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__G__Physics_144_0_25, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 8, "d - 'Double_t' 0 - real", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__G__Physics_144_0_26, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 8, "d - 'Double_t' 0 - real", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/",923,G__G__Physics_144_0_27, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 8, "d - 'Double_t' 0 - real", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Physics_144_0_28, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - vect", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Physics_144_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - V", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Physics_144_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - V", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Physics_144_0_31, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - vect", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Physics_144_0_32, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - vect", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MultiplyLeft",1259,G__G__Physics_144_0_33, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - vector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Physics_144_0_34, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - vector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DivideLeft",992,G__G__Physics_144_0_35, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - vector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Physics_144_0_36, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - vector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__G__Physics_144_0_37, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 8, "u 'TVector3' - 11 - vector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__G__Physics_144_0_38, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 8, "u 'TVector3' - 11 - vector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LeftProduct",1132,G__G__Physics_144_0_39, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 8, "u 'TVector3' - 11 - vector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__G__Physics_144_0_40, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 8, "u 'TVector3' - 11 - vector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LeftQuotient",1252,G__G__Physics_144_0_41, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 8, "u 'TVector3' - 11 - vector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/",923,G__G__Physics_144_0_42, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 8, "u 'TVector3' - 11 - vector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Physics_144_0_43, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "u 'TQuaternion' - 11 - quat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Physics_144_0_44, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TQuaternion' - 11 - Q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Physics_144_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TQuaternion' - 11 - Q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Physics_144_0_46, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "u 'TQuaternion' - 11 - quaternion", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Physics_144_0_47, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "u 'TQuaternion' - 11 - quaternion", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MultiplyLeft",1259,G__G__Physics_144_0_48, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "u 'TQuaternion' - 11 - quaternion", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Physics_144_0_49, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "u 'TQuaternion' - 11 - quaternion", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DivideLeft",992,G__G__Physics_144_0_50, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "u 'TQuaternion' - 11 - quaternion", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__G__Physics_144_0_51, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 1, 1, 1, 0, "u 'TQuaternion' - 11 - quaternion", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__G__Physics_144_0_52, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 8, "u 'TQuaternion' - 11 - quaternion", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__G__Physics_144_0_53, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 8, "u 'TQuaternion' - 11 - quaternion", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LeftProduct",1132,G__G__Physics_144_0_54, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 8, "u 'TQuaternion' - 11 - quaternion", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__G__Physics_144_0_55, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 8, "u 'TQuaternion' - 11 - quaternion", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LeftQuotient",1252,G__G__Physics_144_0_56, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 8, "u 'TQuaternion' - 11 - quaternion", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/",923,G__G__Physics_144_0_57, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 1, 1, 1, 8, "u 'TQuaternion' - 11 - quaternion", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Norm",412,G__G__Physics_144_0_58, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "quaternion magnitude", (void*) NULL, 0);
   G__memfunc_setup("Norm2",462,G__G__Physics_144_0_59, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "quaternion squared magnitude", (void*) NULL, 0);
   G__memfunc_setup("QMag",358,G__G__Physics_144_0_60, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "quaternion magnitude", (void*) NULL, 0);
   G__memfunc_setup("QMag2",408,G__G__Physics_144_0_61, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "quaternion squared magnitude", (void*) NULL, 0);
   G__memfunc_setup("Normalize",945,G__G__Physics_144_0_62, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 1, 0, 1, 1, 0, "", "normalize quaternion", (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__G__Physics_144_0_63, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 0, 1, 1, 8, "", "Unary minus.", (void*) NULL, 0);
   G__memfunc_setup("Conjugate",928,G__G__Physics_144_0_64, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Physics_144_0_65, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rotate",623,G__G__Physics_144_0_66, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TVector3' - 1 - vect", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rotation",848,G__G__Physics_144_0_67, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 1, 1, 1, 8, "u 'TVector3' - 11 - vect", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Physics_144_0_69, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TQuaternion::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Physics_144_0_70, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQuaternion::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Physics_144_0_71, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TQuaternion::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Physics_144_0_72, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TQuaternion::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Physics_144_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Physics_144_0_77, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQuaternion::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Physics_144_0_78, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQuaternion::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Physics_144_0_79, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQuaternion::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Physics_144_0_80, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQuaternion::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TQuaternion", 1272, G__G__Physics_144_0_81, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLorentzRotation(void) {
   /* TLorentzRotation */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation));
   G__memfunc_setup("TLorentzRotation",1682,G__G__Physics_146_0_1, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLorentzRotation",1682,G__G__Physics_146_0_2, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 0, 1, 1, 1, 0, "u 'TRotation' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLorentzRotation",1682,G__G__Physics_146_0_3, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 0, 1, 1, 1, 0, "u 'TLorentzRotation' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLorentzRotation",1682,G__G__Physics_146_0_4, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLorentzRotation",1682,G__G__Physics_146_0_5, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XX",176,G__G__Physics_146_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XY",177,G__G__Physics_146_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XZ",178,G__G__Physics_146_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XT",172,G__G__Physics_146_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YX",177,G__G__Physics_146_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YY",178,G__G__Physics_146_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YZ",179,G__G__Physics_146_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YT",173,G__G__Physics_146_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZX",178,G__G__Physics_146_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZY",179,G__G__Physics_146_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZZ",180,G__G__Physics_146_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZT",174,G__G__Physics_146_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TX",172,G__G__Physics_146_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TY",173,G__G__Physics_146_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TZ",174,G__G__Physics_146_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TT",168,G__G__Physics_146_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Physics_146_0_22, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotationcLcLTLorentzRotationRow), -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Physics_146_0_23, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - - 0 - - i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Physics_146_0_24, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 1, 1, 1, 1, 0, "u 'TLorentzRotation' - 11 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Physics_146_0_25, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 1, 1, 1, 1, 0, "u 'TRotation' - 11 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Physics_146_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TLorentzRotation' - 11 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Physics_146_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TLorentzRotation' - 11 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIdentity",1030,G__G__Physics_146_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VectorMultiplication",2113,G__G__Physics_146_0_29, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__G__Physics_146_0_30, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MatrixMultiplication",2115,G__G__Physics_146_0_31, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 0, 1, 1, 1, 8, "u 'TLorentzRotation' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__G__Physics_146_0_32, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 0, 1, 1, 1, 8, "u 'TLorentzRotation' - 11 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Physics_146_0_33, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 1, 1, 1, 1, 0, "u 'TLorentzRotation' - 11 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Transform",956,G__G__Physics_146_0_34, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 1, 1, 1, 1, 0, "u 'TLorentzRotation' - 11 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Transform",956,G__G__Physics_146_0_35, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 1, 1, 1, 1, 0, "u 'TRotation' - 11 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inverse",732,G__G__Physics_146_0_36, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Invert",632,G__G__Physics_146_0_37, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Boost",519,G__G__Physics_146_0_38, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 1, 3, 1, 1, 0, 
"d - 'Double_t' 0 - bx d - 'Double_t' 0 - by "
"d - 'Double_t' 0 - bz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Boost",519,G__G__Physics_146_0_39, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateX",711,G__G__Physics_146_0_40, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateY",712,G__G__Physics_146_0_41, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateZ",713,G__G__Physics_146_0_42, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rotate",623,G__G__Physics_146_0_43, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 1, 2, 1, 1, 0, 
"d - 'Double_t' 0 - angle u 'TVector3' - 11 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rotate",623,G__G__Physics_146_0_44, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 1, 2, 1, 1, 0, 
"d - 'Double_t' 0 - angle U 'TVector3' - 10 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBoost",819,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLorentzRotation",1682,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation), -1, 0, 16, 1, 2, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Physics_146_0_47, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLorentzRotation::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Physics_146_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLorentzRotation::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Physics_146_0_49, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLorentzRotation::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Physics_146_0_50, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLorentzRotation::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Physics_146_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Physics_146_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLorentzRotation::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Physics_146_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLorentzRotation::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Physics_146_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLorentzRotation::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Physics_146_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLorentzRotation::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TLorentzRotation", 1808, G__G__Physics_146_0_59, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLorentzVector(void) {
   /* TLorentzVector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector));
   G__memfunc_setup("TLorentzVector",1461,G__G__Physics_147_0_1, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 '0.0' x d - 'Double_t' 0 '0.0' y "
"d - 'Double_t' 0 '0.0' z d - 'Double_t' 0 '0.0' t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLorentzVector",1461,G__G__Physics_147_0_2, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - carray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLorentzVector",1461,G__G__Physics_147_0_3, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "F - 'Float_t' 10 - carray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLorentzVector",1461,G__G__Physics_147_0_4, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - vector3 d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLorentzVector",1461,G__G__Physics_147_0_5, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - lorentzvector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__G__Physics_147_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__G__Physics_147_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z",90,G__G__Physics_147_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("T",84,G__G__Physics_147_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,G__G__Physics_147_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY",389,G__G__Physics_147_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ",390,G__G__Physics_147_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetT",384,G__G__Physics_147_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Px",200,G__G__Physics_147_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Py",201,G__G__Physics_147_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pz",202,G__G__Physics_147_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("P",80,G__G__Physics_147_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E",69,G__G__Physics_147_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy",618,G__G__Physics_147_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPx",500,G__G__Physics_147_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPy",501,G__G__Physics_147_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPz",502,G__G__Physics_147_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetE",369,G__G__Physics_147_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Vect",402,G__G__Physics_147_0_24, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVect",702,G__G__Physics_147_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Theta",502,G__G__Physics_147_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CosTheta",795,G__G__Physics_147_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__G__Physics_147_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "returns phi from -pi to pi", (void*) NULL, 0);
   G__memfunc_setup("Rho",297,G__G__Physics_147_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTheta",802,G__G__Physics_147_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - th", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__G__Physics_147_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRho",597,G__G__Physics_147_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - rho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPxPyPzE",972,G__G__Physics_147_0_33, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXYZT",651,G__G__Physics_147_0_34, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXYZM",644,G__G__Physics_147_0_35, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPtEtaPhiM",1144,G__G__Physics_147_0_36, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - pt d - 'Double_t' 0 - eta "
"d - 'Double_t' 0 - phi d - 'Double_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPtEtaPhiE",1136,G__G__Physics_147_0_37, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - pt d - 'Double_t' 0 - eta "
"d - 'Double_t' 0 - phi d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXYZT",639,G__G__Physics_147_0_38, 121, -1, -1, 0, 1, 1, 1, 8, "D - 'Double_t' 0 - carray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXYZT",639,G__G__Physics_147_0_39, 121, -1, -1, 0, 1, 1, 1, 8, "F - 'Float_t' 0 - carray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Physics_147_0_40, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Physics_147_0_41, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__G__Physics_147_0_42, 100, -1, G__defined_typename("Double_t"), 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__Physics_147_0_43, 100, -1, G__defined_typename("Double_t"), 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Physics_147_0_44, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 1, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__G__Physics_147_0_45, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__G__Physics_147_0_46, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 1, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__G__Physics_147_0_47, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__G__Physics_147_0_48, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 1, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__G__Physics_147_0_49, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__G__Physics_147_0_50, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 0, 1, 1, 1, 8, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Physics_147_0_51, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__G__Physics_147_0_52, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__G__Physics_147_0_53, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Perp2",457,G__G__Physics_147_0_54, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pt",196,G__G__Physics_147_0_55, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Perp",407,G__G__Physics_147_0_56, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPerp",707,G__G__Physics_147_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Perp2",457,G__G__Physics_147_0_58, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pt",196,G__G__Physics_147_0_59, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Perp",407,G__G__Physics_147_0_60, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Et2",235,G__G__Physics_147_0_61, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Et",185,G__G__Physics_147_0_62, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Et2",235,G__G__Physics_147_0_63, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Et",185,G__G__Physics_147_0_64, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaPhi",779,G__G__Physics_147_0_65, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaR",572,G__G__Physics_147_0_66, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrEtaPhi",753,G__G__Physics_147_0_67, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EtaPhiVector",1198,G__G__Physics_147_0_68, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Angle",487,G__G__Physics_147_0_69, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mag2",327,G__G__Physics_147_0_70, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("M2",127,G__G__Physics_147_0_71, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mag",277,G__G__Physics_147_0_72, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("M",77,G__G__Physics_147_0_73, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mt2",243,G__G__Physics_147_0_74, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mt",193,G__G__Physics_147_0_75, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Beta",380,G__G__Physics_147_0_76, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gamma",483,G__G__Physics_147_0_77, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dot",295,G__G__Physics_147_0_78, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__G__Physics_147_0_79, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVectMag",979,G__G__Physics_147_0_80, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - spatial d - 'Double_t' 0 - magnitude", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVectM",779,G__G__Physics_147_0_81, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - spatial d - 'Double_t' 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Plus",420,G__G__Physics_147_0_82, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Minus",524,G__G__Physics_147_0_83, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BoostVector",1146,G__G__Physics_147_0_84, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Boost",519,G__G__Physics_147_0_85, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Boost",519,G__G__Physics_147_0_86, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rapidity",838,G__G__Physics_147_0_87, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta",282,G__G__Physics_147_0_88, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PseudoRapidity",1462,G__G__Physics_147_0_89, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateX",711,G__G__Physics_147_0_90, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateY",712,G__G__Physics_147_0_91, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateZ",713,G__G__Physics_147_0_92, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RotateUz",830,G__G__Physics_147_0_93, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 1 - newUzVector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rotate",623,G__G__Physics_147_0_94, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - a u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Physics_147_0_95, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 1, 1, 1, 1, 0, "u 'TRotation' - 11 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Transform",956,G__G__Physics_147_0_96, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 1, 1, 1, 1, 0, "u 'TRotation' - 11 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__G__Physics_147_0_97, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 1, 1, 1, 1, 0, "u 'TLorentzRotation' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Transform",956,G__G__Physics_147_0_98, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 1, 1, 1, 1, 0, "u 'TLorentzRotation' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Physics_147_0_99, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLorentzVector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Physics_147_0_100, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLorentzVector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Physics_147_0_101, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLorentzVector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Physics_147_0_102, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLorentzVector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Physics_147_0_106, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Physics_147_0_107, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLorentzVector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Physics_147_0_108, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLorentzVector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Physics_147_0_109, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLorentzVector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Physics_147_0_110, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLorentzVector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TLorentzVector", 1587, G__G__Physics_147_0_111, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGenPhaseSpace(void) {
   /* TGenPhaseSpace */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TGenPhaseSpace));
   G__memfunc_setup("PDK",223,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 4, 0, 
"d - 'Double_t' 0 - a d - 'Double_t' 0 - b "
"d - 'Double_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGenPhaseSpace",1355,G__G__Physics_149_0_2, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TGenPhaseSpace), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGenPhaseSpace",1355,G__G__Physics_149_0_3, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TGenPhaseSpace), -1, 0, 1, 1, 1, 0, "u 'TGenPhaseSpace' - 11 - gen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDecay",786,G__G__Physics_149_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"u 'TLorentzVector' - 1 - P i - 'Int_t' 0 - nt "
"D - 'Double_t' 0 - mass C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Generate",811,G__G__Physics_149_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDecay",774,G__G__Physics_149_0_6, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNt",482,G__G__Physics_149_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWtMax",785,G__G__Physics_149_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Physics_149_0_9, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGenPhaseSpace::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Physics_149_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGenPhaseSpace::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Physics_149_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGenPhaseSpace::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Physics_149_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGenPhaseSpace::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Physics_149_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Physics_149_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGenPhaseSpace::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Physics_149_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGenPhaseSpace::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Physics_149_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGenPhaseSpace::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Physics_149_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGenPhaseSpace::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGenPhaseSpace", 1481, G__G__Physics_149_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Physics_149_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__PhysicsLN_TGenPhaseSpace), -1, 1, 1, 1, 1, 0, "u 'TGenPhaseSpace' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRobustEstimator(void) {
   /* TRobustEstimator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TRobustEstimator));
   G__memfunc_setup("AddToSscp",869,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'TMatrixT<double>' 'TMatrixD' 1 - sscp u 'TVectorT<double>' 'TVectorD' 1 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearSscp",896,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'TMatrixT<double>' 'TMatrixD' 1 - sscp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Classic",706,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Covar",507,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 0, 
"u 'TMatrixT<double>' 'TMatrixD' 1 - sscp u 'TVectorT<double>' 'TVectorD' 1 - m "
"u 'TMatrixTSym<double>' 'TMatrixDSym' 1 - cov u 'TVectorT<double>' 'TVectorD' 1 - sd "
"i - 'Int_t' 0 - nvec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Correl",615,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateSubset",1226,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 7, 1, 2, 0, 
"i - 'Int_t' 0 - ntotal i - 'Int_t' 0 - htotal "
"i - 'Int_t' 0 - p I - 'Int_t' 0 - index "
"u 'TMatrixT<double>' 'TMatrixD' 1 - data u 'TMatrixT<double>' 'TMatrixD' 1 - sscp "
"D - 'Double_t' 0 - ndist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateOrtSubset",1535,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 2, 0, 
"u 'TMatrixT<double>' 'TMatrixD' 1 - dat I - 'Int_t' 0 - index "
"i - 'Int_t' 0 - hmerged i - 'Int_t' 0 - nmerged "
"u 'TMatrixT<double>' 'TMatrixD' 1 - sscp D - 'Double_t' 0 - ndist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CStep",479,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 6, 1, 2, 0, 
"i - 'Int_t' 0 - ntotal i - 'Int_t' 0 - htotal "
"I - 'Int_t' 0 - index u 'TMatrixT<double>' 'TMatrixD' 1 - data "
"u 'TMatrixT<double>' 'TMatrixD' 1 - sscp D - 'Double_t' 0 - ndist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exact",501,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "D - 'Double_t' 0 - ndist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exact2",551,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 8, 1, 2, 0, 
"u 'TMatrixT<double>' 'TMatrixD' 1 - mstockbig u 'TMatrixT<double>' 'TMatrixD' 1 - cstockbig "
"u 'TMatrixT<double>' 'TMatrixD' 1 - hyperplane D - 'Double_t' 0 - deti "
"i - 'Int_t' 0 - nbest i - 'Int_t' 0 - kgroup "
"u 'TMatrixT<double>' 'TMatrixD' 1 - sscp D - 'Double_t' 0 - ndist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Partition",954,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - nmini I - 'Int_t' 0 - indsubdat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RDist",486,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TMatrixT<double>' 'TMatrixD' 1 - sscp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RDraw",480,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"I - 'Int_t' 0 - subdat i - 'Int_t' 0 - ngroup "
"I - 'Int_t' 0 - indsubdat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KOrdStat",780,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 2, 0, 
"i - 'Int_t' 0 - ntotal D - 'Double_t' 0 - arr "
"i - 'Int_t' 0 - k I - 'Int_t' 0 - work", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRobustEstimator",1675,G__G__Physics_193_0_15, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TRobustEstimator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRobustEstimator",1675,G__G__Physics_193_0_16, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TRobustEstimator), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - nvectors i - 'Int_t' 0 - nvariables "
"i - 'Int_t' 0 '0' hh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddColumn",887,G__G__Physics_193_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - col", "adds a column to the data matrix", (void*) NULL, 0);
   G__memfunc_setup("AddRow",577,G__G__Physics_193_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - row", "adds a row to the data matrix", (void*) NULL, 0);
   G__memfunc_setup("Evaluate",823,G__G__Physics_193_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvaluateUni",1123,G__G__Physics_193_0_20, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - nvectors D - 'Double_t' 0 - data "
"d - 'Double_t' 1 - mean d - 'Double_t' 1 - sigma "
"i - 'Int_t' 0 '0' hh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBDPoint",944,G__G__Physics_193_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "returns the breakdown point of the algorithm", (void*) NULL, 0);
   G__memfunc_setup("GetCovariance",1307,G__G__Physics_193_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMatrixTSym<double>' 'TMatrixDSym' 1 - matr", "returns robust covariance matrix estimate", (void*) NULL, 0);
   G__memfunc_setup("GetCovariance",1307,G__G__Physics_193_0_23, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSymlEdoublegR), G__defined_typename("TMatrixDSym"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrelation",1442,G__G__Physics_193_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMatrixTSym<double>' 'TMatrixDSym' 1 - matr", "returns robust correlation matrix estimate", (void*) NULL, 0);
   G__memfunc_setup("GetCorrelation",1442,G__G__Physics_193_0_25, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TMatrixTSymlEdoublegR), G__defined_typename("TMatrixDSym"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHyperplane",1336,G__G__Physics_193_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - vec", "if the data lies on a hyperplane, returns this hyperplane", (void*) NULL, 0);
   G__memfunc_setup("GetHyperplane",1336,G__G__Physics_193_0_27, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 0, 0, 1, 1, 9, "", "if the data lies on a hyperplane, returns this hyperplane", (void*) NULL, 0);
   G__memfunc_setup("GetNHyp",671,G__G__Physics_193_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "returns the number of points on a hyperplane", (void*) NULL, 0);
   G__memfunc_setup("GetMean",673,G__G__Physics_193_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - means", "returns robust mean vector estimate", (void*) NULL, 0);
   G__memfunc_setup("GetMean",673,G__G__Physics_193_0_30, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 0, 0, 1, 1, 9, "", "returns robust mean vector estimate", (void*) NULL, 0);
   G__memfunc_setup("GetRDistances",1296,G__G__Physics_193_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - rdist", "returns robust distances of all observations", (void*) NULL, 0);
   G__memfunc_setup("GetRDistances",1296,G__G__Physics_193_0_32, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 0, 0, 1, 1, 9, "", "returns robust distances of all observations", (void*) NULL, 0);
   G__memfunc_setup("GetNumberObservations",2184,G__G__Physics_193_0_33, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNvar",695,G__G__Physics_193_0_34, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOuliers",1027,G__G__Physics_193_0_35, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TArrayI), -1, 0, 0, 1, 1, 9, "", "returns an array of outlier indexes", (void*) NULL, 0);
   G__memfunc_setup("GetNOut",678,G__G__Physics_193_0_36, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "returns the number of points outside the tolerance ellipsoid.", (void*) NULL, 0);
   G__memfunc_setup("GetChiQuant",1085,G__G__Physics_193_0_37, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Physics_193_0_38, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRobustEstimator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Physics_193_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRobustEstimator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Physics_193_0_40, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRobustEstimator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Physics_193_0_41, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRobustEstimator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Physics_193_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Physics_193_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRobustEstimator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Physics_193_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRobustEstimator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Physics_193_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRobustEstimator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Physics_193_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRobustEstimator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TRobustEstimator", 1675, G__G__Physics_193_0_50, (int) ('i'), G__get_linked_tagnum(&G__G__PhysicsLN_TRobustEstimator), -1, 0, 1, 1, 1, 0, "u 'TRobustEstimator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRobustEstimator", 1801, G__G__Physics_193_0_51, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Physics_193_0_52, (int) ('u'), G__get_linked_tagnum(&G__G__PhysicsLN_TRobustEstimator), -1, 1, 1, 1, 1, 0, "u 'TRobustEstimator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRolke(void) {
   /* TRolke */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TRolke));
   G__memfunc_setup("Interval",837,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 12, 1, 4, 0, 
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y "
"i - 'Int_t' 0 - z d - 'Double_t' 0 - bm "
"d - 'Double_t' 0 - em d - 'Double_t' 0 - e "
"i - 'Int_t' 0 - mid d - 'Double_t' 0 - sde "
"d - 'Double_t' 0 - sdb d - 'Double_t' 0 - tau "
"d - 'Double_t' 0 - b i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Likelihood",1028,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 13, 1, 4, 0, 
"d - 'Double_t' 0 - mu i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y i - 'Int_t' 0 - z "
"d - 'Double_t' 0 - bm d - 'Double_t' 0 - em "
"i - 'Int_t' 0 - mid d - 'Double_t' 0 - sde "
"d - 'Double_t' 0 - sdb d - 'Double_t' 0 - tau "
"d - 'Double_t' 0 - b i - 'Int_t' 0 - m "
"i - 'Int_t' 0 - what", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvalLikeMod1",1118,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 7, 1, 4, 0, 
"d - 'Double_t' 0 - mu i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y i - 'Int_t' 0 - z "
"d - 'Double_t' 0 - tau i - 'Int_t' 0 - m "
"i - 'Int_t' 0 - what", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LikeMod1",726,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 8, 1, 4, 0, 
"d - 'Double_t' 0 - mu d - 'Double_t' 0 - b "
"d - 'Double_t' 0 - e i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y i - 'Int_t' 0 - z "
"d - 'Double_t' 0 - tau i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProfLikeMod1",1133,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 8, 1, 4, 0, 
"d - 'Double_t' 0 - mu d - 'Double_t' 1 - b "
"d - 'Double_t' 1 - e i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y i - 'Int_t' 0 - z "
"d - 'Double_t' 0 - tau i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LikeGradMod1",1108,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 7, 1, 4, 0, 
"d - 'Double_t' 0 - e d - 'Double_t' 0 - mu "
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y "
"i - 'Int_t' 0 - z d - 'Double_t' 0 - tau "
"i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvalLikeMod2",1119,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 7, 1, 4, 0, 
"d - 'Double_t' 0 - mu i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y d - 'Double_t' 0 - em "
"d - 'Double_t' 0 - sde d - 'Double_t' 0 - tau "
"i - 'Int_t' 0 - what", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LikeMod2",727,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 8, 1, 4, 0, 
"d - 'Double_t' 0 - mu d - 'Double_t' 0 - b "
"d - 'Double_t' 0 - e i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y d - 'Double_t' 0 - em "
"d - 'Double_t' 0 - tau d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvalLikeMod3",1120,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 7, 1, 4, 0, 
"d - 'Double_t' 0 - mu i - 'Int_t' 0 - x "
"d - 'Double_t' 0 - bm d - 'Double_t' 0 - em "
"d - 'Double_t' 0 - sde d - 'Double_t' 0 - sdb "
"i - 'Int_t' 0 - what", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LikeMod3",728,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 8, 1, 4, 0, 
"d - 'Double_t' 0 - mu d - 'Double_t' 0 - b "
"d - 'Double_t' 0 - e i - 'Int_t' 0 - x "
"d - 'Double_t' 0 - bm d - 'Double_t' 0 - em "
"d - 'Double_t' 0 - u d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvalLikeMod4",1121,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 4, 0, 
"d - 'Double_t' 0 - mu i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y d - 'Double_t' 0 - tau "
"i - 'Int_t' 0 - what", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LikeMod4",729,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 4, 0, 
"d - 'Double_t' 0 - mu d - 'Double_t' 0 - b "
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y "
"d - 'Double_t' 0 - tau", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvalLikeMod5",1122,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 4, 0, 
"d - 'Double_t' 0 - mu i - 'Int_t' 0 - x "
"d - 'Double_t' 0 - bm d - 'Double_t' 0 - sdb "
"i - 'Int_t' 0 - what", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LikeMod5",730,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 4, 0, 
"d - 'Double_t' 0 - mu d - 'Double_t' 0 - b "
"i - 'Int_t' 0 - x d - 'Double_t' 0 - bm "
"d - 'Double_t' 0 - u", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvalLikeMod6",1123,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 6, 1, 4, 0, 
"d - 'Double_t' 0 - mu i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - z d - 'Double_t' 0 - b "
"i - 'Int_t' 0 - m i - 'Int_t' 0 - what", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LikeMod6",731,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 6, 1, 4, 0, 
"d - 'Double_t' 0 - mu d - 'Double_t' 0 - b "
"d - 'Double_t' 0 - e i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - z i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvalLikeMod7",1124,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 6, 1, 4, 0, 
"d - 'Double_t' 0 - mu i - 'Int_t' 0 - x "
"d - 'Double_t' 0 - em d - 'Double_t' 0 - sde "
"d - 'Double_t' 0 - b i - 'Int_t' 0 - what", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LikeMod7",732,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 6, 1, 4, 0, 
"d - 'Double_t' 0 - mu d - 'Double_t' 0 - b "
"d - 'Double_t' 0 - e i - 'Int_t' 0 - x "
"d - 'Double_t' 0 - em d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvalPolynomial",1452,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 4, 0, 
"d - 'Double_t' 0 - x I - 'Int_t' 10 - coef "
"i - 'Int_t' 0 - N", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvalMonomial",1220,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 4, 0, 
"d - 'Double_t' 0 - x I - 'Int_t' 10 - coef "
"i - 'Int_t' 0 - N", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LogFactorial",1207,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeInterval",1570,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 12, 1, 4, 0, 
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y "
"i - 'Int_t' 0 - z d - 'Double_t' 0 - bm "
"d - 'Double_t' 0 - em d - 'Double_t' 0 - e "
"i - 'Int_t' 0 - mid d - 'Double_t' 0 - sde "
"d - 'Double_t' 0 - sdb d - 'Double_t' 0 - tau "
"d - 'Double_t' 0 - b i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetModelParameters",1841,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 12, 1, 4, 0, 
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y "
"i - 'Int_t' 0 - z d - 'Double_t' 0 - bm "
"d - 'Double_t' 0 - em d - 'Double_t' 0 - e "
"i - 'Int_t' 0 - mid d - 'Double_t' 0 - sde "
"d - 'Double_t' 0 - sdb d - 'Double_t' 0 - tau "
"d - 'Double_t' 0 - b i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetModelParameters",1841,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBackground",1312,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRolke",593,G__G__Physics_194_0_26, 105, G__get_linked_tagnum(&G__G__PhysicsLN_TRolke), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '0.9' CL C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCL",431,G__G__Physics_194_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCL",443,G__G__Physics_194_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - CL", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCLSigmas",1055,G__G__Physics_194_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - CLsigmas", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPoissonBkgBinomEff",2097,G__G__Physics_194_0_30, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y "
"i - 'Int_t' 0 - z d - 'Double_t' 0 - tau "
"i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPoissonBkgGaussEff",2111,G__G__Physics_194_0_31, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y "
"d - 'Double_t' 0 - em d - 'Double_t' 0 - tau "
"d - 'Double_t' 0 - sde", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGaussBkgGaussEff",1879,G__G__Physics_194_0_32, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - x d - 'Double_t' 0 - bm "
"d - 'Double_t' 0 - em d - 'Double_t' 0 - sde "
"d - 'Double_t' 0 - sdb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPoissonBkgKnownEff",2121,G__G__Physics_194_0_33, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y "
"d - 'Double_t' 0 - tau d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGaussBkgKnownEff",1889,G__G__Physics_194_0_34, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - x d - 'Double_t' 0 - bm "
"d - 'Double_t' 0 - sdb d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetKnownBkgBinomEff",1875,G__G__Physics_194_0_35, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - x i - 'Int_t' 0 - z "
"i - 'Int_t' 0 - m d - 'Double_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetKnownBkgGaussEff",1889,G__G__Physics_194_0_36, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - x d - 'Double_t' 0 - em "
"d - 'Double_t' 0 - sde d - 'Double_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateInterval",1747,G__G__Physics_194_0_37, 100, -1, G__defined_typename("Double_t"), 0, 12, 1, 1, 0, 
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y "
"i - 'Int_t' 0 - z d - 'Double_t' 0 - bm "
"d - 'Double_t' 0 - em d - 'Double_t' 0 - e "
"i - 'Int_t' 0 - mid d - 'Double_t' 0 - sde "
"d - 'Double_t' 0 - sdb d - 'Double_t' 0 - tau "
"d - 'Double_t' 0 - b i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLimits",914,G__G__Physics_194_0_38, 103, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - low d - 'Double_t' 1 - high", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpperLimit",1323,G__G__Physics_194_0_39, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLowerLimit",1320,G__G__Physics_194_0_40, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSensitivity",1483,G__G__Physics_194_0_41, 103, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 1 - low d - 'Double_t' 1 - high "
"d - 'Double_t' 0 '0.00001' pPrecision", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLimitsQuantile",1749,G__G__Physics_194_0_42, 103, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 1 - low d - 'Double_t' 1 - high "
"i - 'Int_t' 1 - out_x d - 'Double_t' 0 '0.5' integral", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLimitsML",1067,G__G__Physics_194_0_43, 103, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 1 - low d - 'Double_t' 1 - high "
"i - 'Int_t' 1 - out_x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCriticalNumber",1716,G__G__Physics_194_0_44, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - ncrit i - 'Int_t' 0 '-1' maxtry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBounding",1110,G__G__Physics_194_0_45, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBounding",1122,G__G__Physics_194_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 10 - bnd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSwitch",926,G__G__Physics_194_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - bnd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Physics_194_0_49, 85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRolke::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Physics_194_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRolke::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Physics_194_0_51, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRolke::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Physics_194_0_52, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRolke::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PhysicsLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Physics_194_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Physics_194_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRolke::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Physics_194_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRolke::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Physics_194_0_59, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRolke::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Physics_194_0_60, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRolke::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TRolke", 593, G__G__Physics_194_0_61, (int) ('i'), G__get_linked_tagnum(&G__G__PhysicsLN_TRolke), -1, 0, 1, 1, 1, 0, "u 'TRolke' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRolke", 719, G__G__Physics_194_0_62, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Physics_194_0_63, (int) ('u'), G__get_linked_tagnum(&G__G__PhysicsLN_TRolke), -1, 1, 1, 1, 1, 0, "u 'TRolke' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Physics() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Physics() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
   G__memfunc_setup("operator+", 919, G__G__Physics__0_304, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 2, 1, 1, 0, 
"u 'TVector2' - 11 - v1 u 'TVector2' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func3() {
   G__memfunc_setup("operator-", 921, G__G__Physics__0_307, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 2, 1, 1, 0, 
"u 'TVector2' - 11 - v1 u 'TVector2' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__G__Physics__0_309, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"u 'TVector2' - 11 - v1 u 'TVector2' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__G__Physics__0_310, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 2, 1, 1, 0, 
"u 'TVector2' - 11 - v d - 'Double_t' 0 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__G__Physics__0_311, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - s u 'TVector2' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator/", 923, G__G__Physics__0_312, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector2), -1, 0, 2, 1, 1, 0, 
"u 'TVector2' - 11 - v d - 'Double_t' 0 - s", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__G__Physics__0_315, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - - u 'TVector3' - 11 - -", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__G__Physics__0_316, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - - u 'TVector3' - 11 - -", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__G__Physics__0_317, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - - u 'TVector3' - 11 - -", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__G__Physics__0_318, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - - d - 'Double_t' 0 - a", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__G__Physics__0_319, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - a u 'TVector3' - 11 - -", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__G__Physics__0_320, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TVector3), -1, 0, 2, 1, 1, 0, 
"u 'TMatrixT<float>' 'TMatrix' 11 - - u 'TVector3' - 11 - -", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__G__Physics__0_321, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - a u 'TLorentzVector' - 11 - p", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__G__Physics__0_322, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - r u 'TQuaternion' - 11 - q", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__G__Physics__0_323, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - r u 'TQuaternion' - 11 - q", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__G__Physics__0_324, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - r u 'TQuaternion' - 11 - q", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator/", 923, G__G__Physics__0_325, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - r u 'TQuaternion' - 11 - q", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__G__Physics__0_326, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - V u 'TQuaternion' - 11 - Q", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__G__Physics__0_327, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - V u 'TQuaternion' - 11 - Q", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__G__Physics__0_328, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - V u 'TQuaternion' - 11 - Q", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator/", 923, G__G__Physics__0_329, 117, G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion), -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - V u 'TQuaternion' - 11 - Q", (char*) NULL
, (void*) NULL, 0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Physics() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__PhysicsLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TFeldmanCousins = { "TFeldmanCousins" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TVector2 = { "TVector2" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TRotation = { "TRotation" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TQuaternion = { "TQuaternion" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TRotationcLcLTRotationRow = { "TRotation::TRotationRow" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TLorentzRotation = { "TLorentzRotation" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TLorentzVectorcLcLdA = { "TLorentzVector::$" , 101 , -1 };
G__linked_taginfo G__G__PhysicsLN_TGenPhaseSpace = { "TGenPhaseSpace" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TLorentzRotationcLcLTLorentzRotationRow = { "TLorentzRotation::TLorentzRotationRow" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TRobustEstimator = { "TRobustEstimator" , 99 , -1 };
G__linked_taginfo G__G__PhysicsLN_TRolke = { "TRolke" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Physics() {
  G__G__PhysicsLN_TClass.tagnum = -1 ;
  G__G__PhysicsLN_TBuffer.tagnum = -1 ;
  G__G__PhysicsLN_TMemberInspector.tagnum = -1 ;
  G__G__PhysicsLN_TObject.tagnum = -1 ;
  G__G__PhysicsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__PhysicsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__PhysicsLN_TString.tagnum = -1 ;
  G__G__PhysicsLN_TFeldmanCousins.tagnum = -1 ;
  G__G__PhysicsLN_TVector2.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__PhysicsLN_TRotation.tagnum = -1 ;
  G__G__PhysicsLN_TVector3.tagnum = -1 ;
  G__G__PhysicsLN_TQuaternion.tagnum = -1 ;
  G__G__PhysicsLN_TRotationcLcLTRotationRow.tagnum = -1 ;
  G__G__PhysicsLN_TLorentzRotation.tagnum = -1 ;
  G__G__PhysicsLN_TLorentzVector.tagnum = -1 ;
  G__G__PhysicsLN_TLorentzVectorcLcLdA.tagnum = -1 ;
  G__G__PhysicsLN_TGenPhaseSpace.tagnum = -1 ;
  G__G__PhysicsLN_TLorentzRotationcLcLTLorentzRotationRow.tagnum = -1 ;
  G__G__PhysicsLN_TArrayI.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__G__PhysicsLN_TRobustEstimator.tagnum = -1 ;
  G__G__PhysicsLN_TRolke.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Physics() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TString);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TFeldmanCousins),sizeof(TFeldmanCousins),-1,292096,"calculate the CL upper limit using the Feldman-Cousins method",G__setup_memvarTFeldmanCousins,G__setup_memfuncTFeldmanCousins);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TVector2),sizeof(TVector2),-1,130304,"A 2D physics vector",G__setup_memvarTVector2,G__setup_memfuncTVector2);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTSparseDiaglEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TRotation),sizeof(TRotation),-1,327424,"Rotations of TVector3 objects",G__setup_memvarTRotation,G__setup_memfuncTRotation);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TVector3),sizeof(TVector3),-1,130816,"A 3D physics vector",G__setup_memvarTVector3,G__setup_memfuncTVector3);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TQuaternion),sizeof(TQuaternion),-1,327424,"a quaternion class",G__setup_memvarTQuaternion,G__setup_memfuncTQuaternion);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TRotationcLcLTRotationRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzRotation),sizeof(TLorentzRotation),-1,326400,"Lorentz transformations including boosts and rotations",G__setup_memvarTLorentzRotation,G__setup_memfuncTLorentzRotation);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TLorentzVector),sizeof(TLorentzVector),-1,130816,"A four vector with (-,-,-,+) metric",G__setup_memvarTLorentzVector,G__setup_memfuncTLorentzVector);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TLorentzVectorcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TGenPhaseSpace),sizeof(TGenPhaseSpace),-1,292608,"Simple Phase Space Generator",G__setup_memvarTGenPhaseSpace,G__setup_memfuncTGenPhaseSpace);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TLorentzRotationcLcLTLorentzRotationRow);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__PhysicsLN_TMatrixTSparseDiaglEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TRobustEstimator),sizeof(TRobustEstimator),-1,324864,"Minimum Covariance Determinant Estimator",G__setup_memvarTRobustEstimator,G__setup_memfuncTRobustEstimator);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PhysicsLN_TRolke),sizeof(TRolke),-1,292096,(char*)NULL,G__setup_memvarTRolke,G__setup_memfuncTRolke);
}
extern "C" void G__cpp_setupG__Physics(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Physics()");
  G__set_cpp_environmentG__Physics();
  G__cpp_setup_tagtableG__Physics();

  G__cpp_setup_inheritanceG__Physics();

  G__cpp_setup_typetableG__Physics();

  G__cpp_setup_memvarG__Physics();

  G__cpp_setup_memfuncG__Physics();
  G__cpp_setup_globalG__Physics();
  G__cpp_setup_funcG__Physics();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Physics();
  return;
}
class G__cpp_setup_initG__Physics {
  public:
    G__cpp_setup_initG__Physics() { G__add_setup_func("G__Physics",(G__incsetup)(&G__cpp_setupG__Physics)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Physics() { G__remove_setup_func("G__Physics"); }
};
G__cpp_setup_initG__Physics G__cpp_setup_initializerG__Physics;

