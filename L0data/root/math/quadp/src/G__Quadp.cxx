//
// File generated by core/utils/src/rootcint_tmp at Mon Apr 13 13:45:52 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__Quadp.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TQpVar_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TQpVar(void *p = 0);
   static void *newArray_TQpVar(Long_t size, void *p);
   static void delete_TQpVar(void *p);
   static void deleteArray_TQpVar(void *p);
   static void destruct_TQpVar(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TQpVar*)
   {
      ::TQpVar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TQpVar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TQpVar", ::TQpVar::Class_Version(), "include/TQpVar.h", 66,
                  typeid(::TQpVar), DefineBehavior(ptr, ptr),
                  &::TQpVar::Dictionary, isa_proxy, 4,
                  sizeof(::TQpVar) );
      instance.SetNew(&new_TQpVar);
      instance.SetNewArray(&newArray_TQpVar);
      instance.SetDelete(&delete_TQpVar);
      instance.SetDeleteArray(&deleteArray_TQpVar);
      instance.SetDestructor(&destruct_TQpVar);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TQpVar*)
   {
      return GenerateInitInstanceLocal((::TQpVar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TQpVar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TQpDataBase_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TQpDataBase(void *p);
   static void deleteArray_TQpDataBase(void *p);
   static void destruct_TQpDataBase(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TQpDataBase*)
   {
      ::TQpDataBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TQpDataBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TQpDataBase", ::TQpDataBase::Class_Version(), "include/TQpDataBase.h", 67,
                  typeid(::TQpDataBase), DefineBehavior(ptr, ptr),
                  &::TQpDataBase::Dictionary, isa_proxy, 4,
                  sizeof(::TQpDataBase) );
      instance.SetDelete(&delete_TQpDataBase);
      instance.SetDeleteArray(&deleteArray_TQpDataBase);
      instance.SetDestructor(&destruct_TQpDataBase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TQpDataBase*)
   {
      return GenerateInitInstanceLocal((::TQpDataBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TQpDataBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TQpDataDens_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TQpDataDens(void *p = 0);
   static void *newArray_TQpDataDens(Long_t size, void *p);
   static void delete_TQpDataDens(void *p);
   static void deleteArray_TQpDataDens(void *p);
   static void destruct_TQpDataDens(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TQpDataDens*)
   {
      ::TQpDataDens *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TQpDataDens >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TQpDataDens", ::TQpDataDens::Class_Version(), "include/TQpDataDens.h", 73,
                  typeid(::TQpDataDens), DefineBehavior(ptr, ptr),
                  &::TQpDataDens::Dictionary, isa_proxy, 4,
                  sizeof(::TQpDataDens) );
      instance.SetNew(&new_TQpDataDens);
      instance.SetNewArray(&newArray_TQpDataDens);
      instance.SetDelete(&delete_TQpDataDens);
      instance.SetDeleteArray(&deleteArray_TQpDataDens);
      instance.SetDestructor(&destruct_TQpDataDens);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TQpDataDens*)
   {
      return GenerateInitInstanceLocal((::TQpDataDens*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TQpDataDens*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TQpResidual_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TQpResidual(void *p = 0);
   static void *newArray_TQpResidual(Long_t size, void *p);
   static void delete_TQpResidual(void *p);
   static void deleteArray_TQpResidual(void *p);
   static void destruct_TQpResidual(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TQpResidual*)
   {
      ::TQpResidual *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TQpResidual >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TQpResidual", ::TQpResidual::Class_Version(), "include/TQpResidual.h", 70,
                  typeid(::TQpResidual), DefineBehavior(ptr, ptr),
                  &::TQpResidual::Dictionary, isa_proxy, 4,
                  sizeof(::TQpResidual) );
      instance.SetNew(&new_TQpResidual);
      instance.SetNewArray(&newArray_TQpResidual);
      instance.SetDelete(&delete_TQpResidual);
      instance.SetDeleteArray(&deleteArray_TQpResidual);
      instance.SetDestructor(&destruct_TQpResidual);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TQpResidual*)
   {
      return GenerateInitInstanceLocal((::TQpResidual*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TQpResidual*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TQpProbBase_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TQpProbBase(void *p);
   static void deleteArray_TQpProbBase(void *p);
   static void destruct_TQpProbBase(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TQpProbBase*)
   {
      ::TQpProbBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TQpProbBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TQpProbBase", ::TQpProbBase::Class_Version(), "include/TQpProbBase.h", 102,
                  typeid(::TQpProbBase), DefineBehavior(ptr, ptr),
                  &::TQpProbBase::Dictionary, isa_proxy, 4,
                  sizeof(::TQpProbBase) );
      instance.SetDelete(&delete_TQpProbBase);
      instance.SetDeleteArray(&deleteArray_TQpProbBase);
      instance.SetDestructor(&destruct_TQpProbBase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TQpProbBase*)
   {
      return GenerateInitInstanceLocal((::TQpProbBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TQpProbBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TQpLinSolverBase_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TQpLinSolverBase(void *p);
   static void deleteArray_TQpLinSolverBase(void *p);
   static void destruct_TQpLinSolverBase(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TQpLinSolverBase*)
   {
      ::TQpLinSolverBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TQpLinSolverBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TQpLinSolverBase", ::TQpLinSolverBase::Class_Version(), "include/TQpLinSolverBase.h", 79,
                  typeid(::TQpLinSolverBase), DefineBehavior(ptr, ptr),
                  &::TQpLinSolverBase::Dictionary, isa_proxy, 4,
                  sizeof(::TQpLinSolverBase) );
      instance.SetDelete(&delete_TQpLinSolverBase);
      instance.SetDeleteArray(&deleteArray_TQpLinSolverBase);
      instance.SetDestructor(&destruct_TQpLinSolverBase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TQpLinSolverBase*)
   {
      return GenerateInitInstanceLocal((::TQpLinSolverBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TQpLinSolverBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TQpSolverBase_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TQpSolverBase(void *p);
   static void deleteArray_TQpSolverBase(void *p);
   static void destruct_TQpSolverBase(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TQpSolverBase*)
   {
      ::TQpSolverBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TQpSolverBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TQpSolverBase", ::TQpSolverBase::Class_Version(), "include/TQpSolverBase.h", 86,
                  typeid(::TQpSolverBase), DefineBehavior(ptr, ptr),
                  &::TQpSolverBase::Dictionary, isa_proxy, 4,
                  sizeof(::TQpSolverBase) );
      instance.SetDelete(&delete_TQpSolverBase);
      instance.SetDeleteArray(&deleteArray_TQpSolverBase);
      instance.SetDestructor(&destruct_TQpSolverBase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TQpSolverBase*)
   {
      return GenerateInitInstanceLocal((::TQpSolverBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TQpSolverBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TGondzioSolver_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TGondzioSolver(void *p = 0);
   static void *newArray_TGondzioSolver(Long_t size, void *p);
   static void delete_TGondzioSolver(void *p);
   static void deleteArray_TGondzioSolver(void *p);
   static void destruct_TGondzioSolver(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGondzioSolver*)
   {
      ::TGondzioSolver *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGondzioSolver >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGondzioSolver", ::TGondzioSolver::Class_Version(), "include/TGondzioSolver.h", 56,
                  typeid(::TGondzioSolver), DefineBehavior(ptr, ptr),
                  &::TGondzioSolver::Dictionary, isa_proxy, 4,
                  sizeof(::TGondzioSolver) );
      instance.SetNew(&new_TGondzioSolver);
      instance.SetNewArray(&newArray_TGondzioSolver);
      instance.SetDelete(&delete_TGondzioSolver);
      instance.SetDeleteArray(&deleteArray_TGondzioSolver);
      instance.SetDestructor(&destruct_TGondzioSolver);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGondzioSolver*)
   {
      return GenerateInitInstanceLocal((::TGondzioSolver*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGondzioSolver*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMehrotraSolver_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TMehrotraSolver(void *p = 0);
   static void *newArray_TMehrotraSolver(Long_t size, void *p);
   static void delete_TMehrotraSolver(void *p);
   static void deleteArray_TMehrotraSolver(void *p);
   static void destruct_TMehrotraSolver(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMehrotraSolver*)
   {
      ::TMehrotraSolver *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMehrotraSolver >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMehrotraSolver", ::TMehrotraSolver::Class_Version(), "include/TMehrotraSolver.h", 56,
                  typeid(::TMehrotraSolver), DefineBehavior(ptr, ptr),
                  &::TMehrotraSolver::Dictionary, isa_proxy, 4,
                  sizeof(::TMehrotraSolver) );
      instance.SetNew(&new_TMehrotraSolver);
      instance.SetNewArray(&newArray_TMehrotraSolver);
      instance.SetDelete(&delete_TMehrotraSolver);
      instance.SetDeleteArray(&deleteArray_TMehrotraSolver);
      instance.SetDestructor(&destruct_TMehrotraSolver);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMehrotraSolver*)
   {
      return GenerateInitInstanceLocal((::TMehrotraSolver*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMehrotraSolver*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TQpDataSparse_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TQpDataSparse(void *p = 0);
   static void *newArray_TQpDataSparse(Long_t size, void *p);
   static void delete_TQpDataSparse(void *p);
   static void deleteArray_TQpDataSparse(void *p);
   static void destruct_TQpDataSparse(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TQpDataSparse*)
   {
      ::TQpDataSparse *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TQpDataSparse >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TQpDataSparse", ::TQpDataSparse::Class_Version(), "include/TQpDataSparse.h", 66,
                  typeid(::TQpDataSparse), DefineBehavior(ptr, ptr),
                  &::TQpDataSparse::Dictionary, isa_proxy, 4,
                  sizeof(::TQpDataSparse) );
      instance.SetNew(&new_TQpDataSparse);
      instance.SetNewArray(&newArray_TQpDataSparse);
      instance.SetDelete(&delete_TQpDataSparse);
      instance.SetDeleteArray(&deleteArray_TQpDataSparse);
      instance.SetDestructor(&destruct_TQpDataSparse);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TQpDataSparse*)
   {
      return GenerateInitInstanceLocal((::TQpDataSparse*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TQpDataSparse*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TQpProbDens_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TQpProbDens(void *p = 0);
   static void *newArray_TQpProbDens(Long_t size, void *p);
   static void delete_TQpProbDens(void *p);
   static void deleteArray_TQpProbDens(void *p);
   static void destruct_TQpProbDens(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TQpProbDens*)
   {
      ::TQpProbDens *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TQpProbDens >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TQpProbDens", ::TQpProbDens::Class_Version(), "include/TQpProbDens.h", 66,
                  typeid(::TQpProbDens), DefineBehavior(ptr, ptr),
                  &::TQpProbDens::Dictionary, isa_proxy, 4,
                  sizeof(::TQpProbDens) );
      instance.SetNew(&new_TQpProbDens);
      instance.SetNewArray(&newArray_TQpProbDens);
      instance.SetDelete(&delete_TQpProbDens);
      instance.SetDeleteArray(&deleteArray_TQpProbDens);
      instance.SetDestructor(&destruct_TQpProbDens);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TQpProbDens*)
   {
      return GenerateInitInstanceLocal((::TQpProbDens*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TQpProbDens*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TQpLinSolverDens_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TQpLinSolverDens(void *p = 0);
   static void *newArray_TQpLinSolverDens(Long_t size, void *p);
   static void delete_TQpLinSolverDens(void *p);
   static void deleteArray_TQpLinSolverDens(void *p);
   static void destruct_TQpLinSolverDens(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TQpLinSolverDens*)
   {
      ::TQpLinSolverDens *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TQpLinSolverDens >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TQpLinSolverDens", ::TQpLinSolverDens::Class_Version(), "include/TQpLinSolverDens.h", 65,
                  typeid(::TQpLinSolverDens), DefineBehavior(ptr, ptr),
                  &::TQpLinSolverDens::Dictionary, isa_proxy, 4,
                  sizeof(::TQpLinSolverDens) );
      instance.SetNew(&new_TQpLinSolverDens);
      instance.SetNewArray(&newArray_TQpLinSolverDens);
      instance.SetDelete(&delete_TQpLinSolverDens);
      instance.SetDeleteArray(&deleteArray_TQpLinSolverDens);
      instance.SetDestructor(&destruct_TQpLinSolverDens);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TQpLinSolverDens*)
   {
      return GenerateInitInstanceLocal((::TQpLinSolverDens*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TQpLinSolverDens*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TQpProbSparse_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TQpProbSparse(void *p = 0);
   static void *newArray_TQpProbSparse(Long_t size, void *p);
   static void delete_TQpProbSparse(void *p);
   static void deleteArray_TQpProbSparse(void *p);
   static void destruct_TQpProbSparse(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TQpProbSparse*)
   {
      ::TQpProbSparse *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TQpProbSparse >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TQpProbSparse", ::TQpProbSparse::Class_Version(), "include/TQpProbSparse.h", 66,
                  typeid(::TQpProbSparse), DefineBehavior(ptr, ptr),
                  &::TQpProbSparse::Dictionary, isa_proxy, 4,
                  sizeof(::TQpProbSparse) );
      instance.SetNew(&new_TQpProbSparse);
      instance.SetNewArray(&newArray_TQpProbSparse);
      instance.SetDelete(&delete_TQpProbSparse);
      instance.SetDeleteArray(&deleteArray_TQpProbSparse);
      instance.SetDestructor(&destruct_TQpProbSparse);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TQpProbSparse*)
   {
      return GenerateInitInstanceLocal((::TQpProbSparse*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TQpProbSparse*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TQpLinSolverSparse_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TQpLinSolverSparse(void *p = 0);
   static void *newArray_TQpLinSolverSparse(Long_t size, void *p);
   static void delete_TQpLinSolverSparse(void *p);
   static void deleteArray_TQpLinSolverSparse(void *p);
   static void destruct_TQpLinSolverSparse(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TQpLinSolverSparse*)
   {
      ::TQpLinSolverSparse *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TQpLinSolverSparse >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TQpLinSolverSparse", ::TQpLinSolverSparse::Class_Version(), "include/TQpLinSolverSparse.h", 65,
                  typeid(::TQpLinSolverSparse), DefineBehavior(ptr, ptr),
                  &::TQpLinSolverSparse::Dictionary, isa_proxy, 4,
                  sizeof(::TQpLinSolverSparse) );
      instance.SetNew(&new_TQpLinSolverSparse);
      instance.SetNewArray(&newArray_TQpLinSolverSparse);
      instance.SetDelete(&delete_TQpLinSolverSparse);
      instance.SetDeleteArray(&deleteArray_TQpLinSolverSparse);
      instance.SetDestructor(&destruct_TQpLinSolverSparse);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TQpLinSolverSparse*)
   {
      return GenerateInitInstanceLocal((::TQpLinSolverSparse*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TQpLinSolverSparse*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TQpVar::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TQpVar::Class_Name()
{
   return "TQpVar";
}

//______________________________________________________________________________
const char *TQpVar::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpVar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TQpVar::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpVar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TQpVar::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpVar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TQpVar::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpVar*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TQpDataBase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TQpDataBase::Class_Name()
{
   return "TQpDataBase";
}

//______________________________________________________________________________
const char *TQpDataBase::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpDataBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TQpDataBase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpDataBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TQpDataBase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpDataBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TQpDataBase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpDataBase*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TQpDataDens::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TQpDataDens::Class_Name()
{
   return "TQpDataDens";
}

//______________________________________________________________________________
const char *TQpDataDens::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpDataDens*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TQpDataDens::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpDataDens*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TQpDataDens::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpDataDens*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TQpDataDens::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpDataDens*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TQpResidual::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TQpResidual::Class_Name()
{
   return "TQpResidual";
}

//______________________________________________________________________________
const char *TQpResidual::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpResidual*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TQpResidual::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpResidual*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TQpResidual::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpResidual*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TQpResidual::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpResidual*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TQpProbBase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TQpProbBase::Class_Name()
{
   return "TQpProbBase";
}

//______________________________________________________________________________
const char *TQpProbBase::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpProbBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TQpProbBase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpProbBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TQpProbBase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpProbBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TQpProbBase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpProbBase*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TQpLinSolverBase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TQpLinSolverBase::Class_Name()
{
   return "TQpLinSolverBase";
}

//______________________________________________________________________________
const char *TQpLinSolverBase::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpLinSolverBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TQpLinSolverBase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpLinSolverBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TQpLinSolverBase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpLinSolverBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TQpLinSolverBase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpLinSolverBase*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TQpSolverBase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TQpSolverBase::Class_Name()
{
   return "TQpSolverBase";
}

//______________________________________________________________________________
const char *TQpSolverBase::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpSolverBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TQpSolverBase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpSolverBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TQpSolverBase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpSolverBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TQpSolverBase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpSolverBase*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGondzioSolver::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGondzioSolver::Class_Name()
{
   return "TGondzioSolver";
}

//______________________________________________________________________________
const char *TGondzioSolver::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGondzioSolver*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGondzioSolver::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGondzioSolver*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGondzioSolver::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGondzioSolver*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGondzioSolver::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGondzioSolver*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMehrotraSolver::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMehrotraSolver::Class_Name()
{
   return "TMehrotraSolver";
}

//______________________________________________________________________________
const char *TMehrotraSolver::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMehrotraSolver*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMehrotraSolver::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMehrotraSolver*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMehrotraSolver::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMehrotraSolver*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMehrotraSolver::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMehrotraSolver*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TQpDataSparse::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TQpDataSparse::Class_Name()
{
   return "TQpDataSparse";
}

//______________________________________________________________________________
const char *TQpDataSparse::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpDataSparse*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TQpDataSparse::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpDataSparse*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TQpDataSparse::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpDataSparse*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TQpDataSparse::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpDataSparse*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TQpProbDens::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TQpProbDens::Class_Name()
{
   return "TQpProbDens";
}

//______________________________________________________________________________
const char *TQpProbDens::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpProbDens*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TQpProbDens::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpProbDens*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TQpProbDens::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpProbDens*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TQpProbDens::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpProbDens*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TQpLinSolverDens::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TQpLinSolverDens::Class_Name()
{
   return "TQpLinSolverDens";
}

//______________________________________________________________________________
const char *TQpLinSolverDens::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpLinSolverDens*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TQpLinSolverDens::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpLinSolverDens*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TQpLinSolverDens::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpLinSolverDens*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TQpLinSolverDens::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpLinSolverDens*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TQpProbSparse::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TQpProbSparse::Class_Name()
{
   return "TQpProbSparse";
}

//______________________________________________________________________________
const char *TQpProbSparse::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpProbSparse*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TQpProbSparse::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpProbSparse*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TQpProbSparse::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpProbSparse*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TQpProbSparse::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpProbSparse*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TQpLinSolverSparse::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TQpLinSolverSparse::Class_Name()
{
   return "TQpLinSolverSparse";
}

//______________________________________________________________________________
const char *TQpLinSolverSparse::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpLinSolverSparse*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TQpLinSolverSparse::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TQpLinSolverSparse*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TQpLinSolverSparse::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpLinSolverSparse*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TQpLinSolverSparse::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TQpLinSolverSparse*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TQpSolverBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class TQpSolverBase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TQpSolverBase::Class(),this);
   } else {
      R__b.WriteClassBuffer(TQpSolverBase::Class(),this);
   }
}

//______________________________________________________________________________
void TQpSolverBase::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TQpSolverBase.
      TClass *R__cl = ::TQpSolverBase::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSys", &fSys);
      R__insp.Inspect(R__cl, R__parent, "fDnorm", &fDnorm);
      R__insp.Inspect(R__cl, R__parent, "fMutol", &fMutol);
      R__insp.Inspect(R__cl, R__parent, "fArtol", &fArtol);
      R__insp.Inspect(R__cl, R__parent, "fGamma_f", &fGamma_f);
      R__insp.Inspect(R__cl, R__parent, "fGamma_a", &fGamma_a);
      R__insp.Inspect(R__cl, R__parent, "fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__parent, "fMaxit", &fMaxit);
      R__insp.Inspect(R__cl, R__parent, "*fMu_history", &fMu_history);
      R__insp.Inspect(R__cl, R__parent, "*fRnorm_history", &fRnorm_history);
      R__insp.Inspect(R__cl, R__parent, "*fPhi_history", &fPhi_history);
      R__insp.Inspect(R__cl, R__parent, "*fPhi_min_history", &fPhi_min_history);
      R__insp.Inspect(R__cl, R__parent, "fIter", &fIter);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TQpSolverBase(void *p) {
      delete ((::TQpSolverBase*)p);
   }
   static void deleteArray_TQpSolverBase(void *p) {
      delete [] ((::TQpSolverBase*)p);
   }
   static void destruct_TQpSolverBase(void *p) {
      typedef ::TQpSolverBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TQpSolverBase

//______________________________________________________________________________
void TGondzioSolver::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGondzioSolver.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TGondzioSolver::Class(),this);
   } else {
      R__b.WriteClassBuffer(TGondzioSolver::Class(),this);
   }
}

//______________________________________________________________________________
void TGondzioSolver::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGondzioSolver.
      TClass *R__cl = ::TGondzioSolver::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fPrintlevel", &fPrintlevel);
      R__insp.Inspect(R__cl, R__parent, "fTsig", &fTsig);
      R__insp.Inspect(R__cl, R__parent, "fMaximum_correctors", &fMaximum_correctors);
      R__insp.Inspect(R__cl, R__parent, "fNumberGondzioCorrections", &fNumberGondzioCorrections);
      R__insp.Inspect(R__cl, R__parent, "fStepFactor0", &fStepFactor0);
      R__insp.Inspect(R__cl, R__parent, "fStepFactor1", &fStepFactor1);
      R__insp.Inspect(R__cl, R__parent, "fAcceptTol", &fAcceptTol);
      R__insp.Inspect(R__cl, R__parent, "fBeta_min", &fBeta_min);
      R__insp.Inspect(R__cl, R__parent, "fBeta_max", &fBeta_max);
      R__insp.Inspect(R__cl, R__parent, "*fCorrector_step", &fCorrector_step);
      R__insp.Inspect(R__cl, R__parent, "*fStep", &fStep);
      R__insp.Inspect(R__cl, R__parent, "*fCorrector_resid", &fCorrector_resid);
      R__insp.Inspect(R__cl, R__parent, "*fFactory", &fFactory);
      TQpSolverBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TGondzioSolver(void *p) {
      return  p ? new(p) ::TGondzioSolver : new ::TGondzioSolver;
   }
   static void *newArray_TGondzioSolver(Long_t nElements, void *p) {
      return p ? new(p) ::TGondzioSolver[nElements] : new ::TGondzioSolver[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGondzioSolver(void *p) {
      delete ((::TGondzioSolver*)p);
   }
   static void deleteArray_TGondzioSolver(void *p) {
      delete [] ((::TGondzioSolver*)p);
   }
   static void destruct_TGondzioSolver(void *p) {
      typedef ::TGondzioSolver current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGondzioSolver

//______________________________________________________________________________
void TMehrotraSolver::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMehrotraSolver.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMehrotraSolver::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMehrotraSolver::Class(),this);
   }
}

//______________________________________________________________________________
void TMehrotraSolver::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMehrotraSolver.
      TClass *R__cl = ::TMehrotraSolver::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fPrintlevel", &fPrintlevel);
      R__insp.Inspect(R__cl, R__parent, "fTsig", &fTsig);
      R__insp.Inspect(R__cl, R__parent, "*fStep", &fStep);
      R__insp.Inspect(R__cl, R__parent, "*fFactory", &fFactory);
      TQpSolverBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TMehrotraSolver(void *p) {
      return  p ? new(p) ::TMehrotraSolver : new ::TMehrotraSolver;
   }
   static void *newArray_TMehrotraSolver(Long_t nElements, void *p) {
      return p ? new(p) ::TMehrotraSolver[nElements] : new ::TMehrotraSolver[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMehrotraSolver(void *p) {
      delete ((::TMehrotraSolver*)p);
   }
   static void deleteArray_TMehrotraSolver(void *p) {
      delete [] ((::TMehrotraSolver*)p);
   }
   static void destruct_TMehrotraSolver(void *p) {
      typedef ::TMehrotraSolver current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMehrotraSolver

//______________________________________________________________________________
void TQpLinSolverBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class TQpLinSolverBase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TQpLinSolverBase::Class(),this);
   } else {
      R__b.WriteClassBuffer(TQpLinSolverBase::Class(),this);
   }
}

//______________________________________________________________________________
void TQpLinSolverBase::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TQpLinSolverBase.
      TClass *R__cl = ::TQpLinSolverBase::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNomegaInv", &fNomegaInv);
      fNomegaInv.ShowMembers(R__insp, strcat(R__parent,"fNomegaInv.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRhs", &fRhs);
      fRhs.ShowMembers(R__insp, strcat(R__parent,"fRhs.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fNx", &fNx);
      R__insp.Inspect(R__cl, R__parent, "fMy", &fMy);
      R__insp.Inspect(R__cl, R__parent, "fMz", &fMz);
      R__insp.Inspect(R__cl, R__parent, "fDd", &fDd);
      fDd.ShowMembers(R__insp, strcat(R__parent,"fDd.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDq", &fDq);
      fDq.ShowMembers(R__insp, strcat(R__parent,"fDq.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fXupIndex", &fXupIndex);
      fXupIndex.ShowMembers(R__insp, strcat(R__parent,"fXupIndex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCupIndex", &fCupIndex);
      fCupIndex.ShowMembers(R__insp, strcat(R__parent,"fCupIndex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fXloIndex", &fXloIndex);
      fXloIndex.ShowMembers(R__insp, strcat(R__parent,"fXloIndex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCloIndex", &fCloIndex);
      fCloIndex.ShowMembers(R__insp, strcat(R__parent,"fCloIndex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fNxup", &fNxup);
      R__insp.Inspect(R__cl, R__parent, "fNxlo", &fNxlo);
      R__insp.Inspect(R__cl, R__parent, "fMcup", &fMcup);
      R__insp.Inspect(R__cl, R__parent, "fMclo", &fMclo);
      R__insp.Inspect(R__cl, R__parent, "*fFactory", &fFactory);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TQpLinSolverBase(void *p) {
      delete ((::TQpLinSolverBase*)p);
   }
   static void deleteArray_TQpLinSolverBase(void *p) {
      delete [] ((::TQpLinSolverBase*)p);
   }
   static void destruct_TQpLinSolverBase(void *p) {
      typedef ::TQpLinSolverBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TQpLinSolverBase

//______________________________________________________________________________
void TQpLinSolverDens::Streamer(TBuffer &R__b)
{
   // Stream an object of class TQpLinSolverDens.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TQpLinSolverDens::Class(),this);
   } else {
      R__b.WriteClassBuffer(TQpLinSolverDens::Class(),this);
   }
}

//______________________________________________________________________________
void TQpLinSolverDens::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TQpLinSolverDens.
      TClass *R__cl = ::TQpLinSolverDens::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fKkt", &fKkt);
      fKkt.ShowMembers(R__insp, strcat(R__parent,"fKkt.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSolveLU", &fSolveLU);
      fSolveLU.ShowMembers(R__insp, strcat(R__parent,"fSolveLU.")); R__parent[R__ncp] = 0;
      TQpLinSolverBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TQpLinSolverDens(void *p) {
      return  p ? new(p) ::TQpLinSolverDens : new ::TQpLinSolverDens;
   }
   static void *newArray_TQpLinSolverDens(Long_t nElements, void *p) {
      return p ? new(p) ::TQpLinSolverDens[nElements] : new ::TQpLinSolverDens[nElements];
   }
   // Wrapper around operator delete
   static void delete_TQpLinSolverDens(void *p) {
      delete ((::TQpLinSolverDens*)p);
   }
   static void deleteArray_TQpLinSolverDens(void *p) {
      delete [] ((::TQpLinSolverDens*)p);
   }
   static void destruct_TQpLinSolverDens(void *p) {
      typedef ::TQpLinSolverDens current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TQpLinSolverDens

//______________________________________________________________________________
void TQpLinSolverSparse::Streamer(TBuffer &R__b)
{
   // Stream an object of class TQpLinSolverSparse.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TQpLinSolverSparse::Class(),this);
   } else {
      R__b.WriteClassBuffer(TQpLinSolverSparse::Class(),this);
   }
}

//______________________________________________________________________________
void TQpLinSolverSparse::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TQpLinSolverSparse.
      TClass *R__cl = ::TQpLinSolverSparse::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fKkt", &fKkt);
      fKkt.ShowMembers(R__insp, strcat(R__parent,"fKkt.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSolveSparse", &fSolveSparse);
      fSolveSparse.ShowMembers(R__insp, strcat(R__parent,"fSolveSparse.")); R__parent[R__ncp] = 0;
      TQpLinSolverBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TQpLinSolverSparse(void *p) {
      return  p ? new(p) ::TQpLinSolverSparse : new ::TQpLinSolverSparse;
   }
   static void *newArray_TQpLinSolverSparse(Long_t nElements, void *p) {
      return p ? new(p) ::TQpLinSolverSparse[nElements] : new ::TQpLinSolverSparse[nElements];
   }
   // Wrapper around operator delete
   static void delete_TQpLinSolverSparse(void *p) {
      delete ((::TQpLinSolverSparse*)p);
   }
   static void deleteArray_TQpLinSolverSparse(void *p) {
      delete [] ((::TQpLinSolverSparse*)p);
   }
   static void destruct_TQpLinSolverSparse(void *p) {
      typedef ::TQpLinSolverSparse current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TQpLinSolverSparse

//______________________________________________________________________________
void TQpResidual::Streamer(TBuffer &R__b)
{
   // Stream an object of class TQpResidual.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TQpResidual::Class(),this);
   } else {
      R__b.WriteClassBuffer(TQpResidual::Class(),this);
   }
}

//______________________________________________________________________________
void TQpResidual::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TQpResidual.
      TClass *R__cl = ::TQpResidual::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fResidualNorm", &fResidualNorm);
      R__insp.Inspect(R__cl, R__parent, "fDualityGap", &fDualityGap);
      R__insp.Inspect(R__cl, R__parent, "fNx", &fNx);
      R__insp.Inspect(R__cl, R__parent, "fMy", &fMy);
      R__insp.Inspect(R__cl, R__parent, "fMz", &fMz);
      R__insp.Inspect(R__cl, R__parent, "fNxup", &fNxup);
      R__insp.Inspect(R__cl, R__parent, "fNxlo", &fNxlo);
      R__insp.Inspect(R__cl, R__parent, "fMcup", &fMcup);
      R__insp.Inspect(R__cl, R__parent, "fMclo", &fMclo);
      R__insp.Inspect(R__cl, R__parent, "fXupIndex", &fXupIndex);
      fXupIndex.ShowMembers(R__insp, strcat(R__parent,"fXupIndex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fXloIndex", &fXloIndex);
      fXloIndex.ShowMembers(R__insp, strcat(R__parent,"fXloIndex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCupIndex", &fCupIndex);
      fCupIndex.ShowMembers(R__insp, strcat(R__parent,"fCupIndex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCloIndex", &fCloIndex);
      fCloIndex.ShowMembers(R__insp, strcat(R__parent,"fCloIndex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRQ", &fRQ);
      fRQ.ShowMembers(R__insp, strcat(R__parent,"fRQ.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRA", &fRA);
      fRA.ShowMembers(R__insp, strcat(R__parent,"fRA.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRC", &fRC);
      fRC.ShowMembers(R__insp, strcat(R__parent,"fRC.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRz", &fRz);
      fRz.ShowMembers(R__insp, strcat(R__parent,"fRz.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRv", &fRv);
      fRv.ShowMembers(R__insp, strcat(R__parent,"fRv.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRw", &fRw);
      fRw.ShowMembers(R__insp, strcat(R__parent,"fRw.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRt", &fRt);
      fRt.ShowMembers(R__insp, strcat(R__parent,"fRt.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRu", &fRu);
      fRu.ShowMembers(R__insp, strcat(R__parent,"fRu.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRgamma", &fRgamma);
      fRgamma.ShowMembers(R__insp, strcat(R__parent,"fRgamma.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRphi", &fRphi);
      fRphi.ShowMembers(R__insp, strcat(R__parent,"fRphi.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRlambda", &fRlambda);
      fRlambda.ShowMembers(R__insp, strcat(R__parent,"fRlambda.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRpi", &fRpi);
      fRpi.ShowMembers(R__insp, strcat(R__parent,"fRpi.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TQpResidual(void *p) {
      return  p ? new(p) ::TQpResidual : new ::TQpResidual;
   }
   static void *newArray_TQpResidual(Long_t nElements, void *p) {
      return p ? new(p) ::TQpResidual[nElements] : new ::TQpResidual[nElements];
   }
   // Wrapper around operator delete
   static void delete_TQpResidual(void *p) {
      delete ((::TQpResidual*)p);
   }
   static void deleteArray_TQpResidual(void *p) {
      delete [] ((::TQpResidual*)p);
   }
   static void destruct_TQpResidual(void *p) {
      typedef ::TQpResidual current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TQpResidual

//______________________________________________________________________________
void TQpVar::Streamer(TBuffer &R__b)
{
   // Stream an object of class TQpVar.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TQpVar::Class(),this);
   } else {
      R__b.WriteClassBuffer(TQpVar::Class(),this);
   }
}

//______________________________________________________________________________
void TQpVar::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TQpVar.
      TClass *R__cl = ::TQpVar::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNx", &fNx);
      R__insp.Inspect(R__cl, R__parent, "fMy", &fMy);
      R__insp.Inspect(R__cl, R__parent, "fMz", &fMz);
      R__insp.Inspect(R__cl, R__parent, "fNxup", &fNxup);
      R__insp.Inspect(R__cl, R__parent, "fNxlo", &fNxlo);
      R__insp.Inspect(R__cl, R__parent, "fMcup", &fMcup);
      R__insp.Inspect(R__cl, R__parent, "fMclo", &fMclo);
      R__insp.Inspect(R__cl, R__parent, "fXloIndex", &fXloIndex);
      fXloIndex.ShowMembers(R__insp, strcat(R__parent,"fXloIndex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fXupIndex", &fXupIndex);
      fXupIndex.ShowMembers(R__insp, strcat(R__parent,"fXupIndex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCupIndex", &fCupIndex);
      fCupIndex.ShowMembers(R__insp, strcat(R__parent,"fCupIndex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCloIndex", &fCloIndex);
      fCloIndex.ShowMembers(R__insp, strcat(R__parent,"fCloIndex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fNComplementaryVariables", &fNComplementaryVariables);
      R__insp.Inspect(R__cl, R__parent, "fX", &fX);
      fX.ShowMembers(R__insp, strcat(R__parent,"fX.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fS", &fS);
      fS.ShowMembers(R__insp, strcat(R__parent,"fS.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fY", &fY);
      fY.ShowMembers(R__insp, strcat(R__parent,"fY.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fZ", &fZ);
      fZ.ShowMembers(R__insp, strcat(R__parent,"fZ.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fV", &fV);
      fV.ShowMembers(R__insp, strcat(R__parent,"fV.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPhi", &fPhi);
      fPhi.ShowMembers(R__insp, strcat(R__parent,"fPhi.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fW", &fW);
      fW.ShowMembers(R__insp, strcat(R__parent,"fW.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fGamma", &fGamma);
      fGamma.ShowMembers(R__insp, strcat(R__parent,"fGamma.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fT", &fT);
      fT.ShowMembers(R__insp, strcat(R__parent,"fT.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLambda", &fLambda);
      fLambda.ShowMembers(R__insp, strcat(R__parent,"fLambda.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fU", &fU);
      fU.ShowMembers(R__insp, strcat(R__parent,"fU.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPi", &fPi);
      fPi.ShowMembers(R__insp, strcat(R__parent,"fPi.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TQpVar(void *p) {
      return  p ? new(p) ::TQpVar : new ::TQpVar;
   }
   static void *newArray_TQpVar(Long_t nElements, void *p) {
      return p ? new(p) ::TQpVar[nElements] : new ::TQpVar[nElements];
   }
   // Wrapper around operator delete
   static void delete_TQpVar(void *p) {
      delete ((::TQpVar*)p);
   }
   static void deleteArray_TQpVar(void *p) {
      delete [] ((::TQpVar*)p);
   }
   static void destruct_TQpVar(void *p) {
      typedef ::TQpVar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TQpVar

//______________________________________________________________________________
void TQpDataBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class TQpDataBase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TQpDataBase::Class(),this);
   } else {
      R__b.WriteClassBuffer(TQpDataBase::Class(),this);
   }
}

//______________________________________________________________________________
void TQpDataBase::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TQpDataBase.
      TClass *R__cl = ::TQpDataBase::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNx", &fNx);
      R__insp.Inspect(R__cl, R__parent, "fMy", &fMy);
      R__insp.Inspect(R__cl, R__parent, "fMz", &fMz);
      R__insp.Inspect(R__cl, R__parent, "fG", &fG);
      fG.ShowMembers(R__insp, strcat(R__parent,"fG.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fBa", &fBa);
      fBa.ShowMembers(R__insp, strcat(R__parent,"fBa.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fXupBound", &fXupBound);
      fXupBound.ShowMembers(R__insp, strcat(R__parent,"fXupBound.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fXupIndex", &fXupIndex);
      fXupIndex.ShowMembers(R__insp, strcat(R__parent,"fXupIndex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fXloBound", &fXloBound);
      fXloBound.ShowMembers(R__insp, strcat(R__parent,"fXloBound.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fXloIndex", &fXloIndex);
      fXloIndex.ShowMembers(R__insp, strcat(R__parent,"fXloIndex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCupBound", &fCupBound);
      fCupBound.ShowMembers(R__insp, strcat(R__parent,"fCupBound.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCupIndex", &fCupIndex);
      fCupIndex.ShowMembers(R__insp, strcat(R__parent,"fCupIndex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCloBound", &fCloBound);
      fCloBound.ShowMembers(R__insp, strcat(R__parent,"fCloBound.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCloIndex", &fCloIndex);
      fCloIndex.ShowMembers(R__insp, strcat(R__parent,"fCloIndex.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TQpDataBase(void *p) {
      delete ((::TQpDataBase*)p);
   }
   static void deleteArray_TQpDataBase(void *p) {
      delete [] ((::TQpDataBase*)p);
   }
   static void destruct_TQpDataBase(void *p) {
      typedef ::TQpDataBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TQpDataBase

//______________________________________________________________________________
void TQpDataDens::Streamer(TBuffer &R__b)
{
   // Stream an object of class TQpDataDens.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TQpDataDens::Class(),this);
   } else {
      R__b.WriteClassBuffer(TQpDataDens::Class(),this);
   }
}

//______________________________________________________________________________
void TQpDataDens::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TQpDataDens.
      TClass *R__cl = ::TQpDataDens::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fQ", &fQ);
      fQ.ShowMembers(R__insp, strcat(R__parent,"fQ.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fA", &fA);
      fA.ShowMembers(R__insp, strcat(R__parent,"fA.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fC", &fC);
      fC.ShowMembers(R__insp, strcat(R__parent,"fC.")); R__parent[R__ncp] = 0;
      TQpDataBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TQpDataDens(void *p) {
      return  p ? new(p) ::TQpDataDens : new ::TQpDataDens;
   }
   static void *newArray_TQpDataDens(Long_t nElements, void *p) {
      return p ? new(p) ::TQpDataDens[nElements] : new ::TQpDataDens[nElements];
   }
   // Wrapper around operator delete
   static void delete_TQpDataDens(void *p) {
      delete ((::TQpDataDens*)p);
   }
   static void deleteArray_TQpDataDens(void *p) {
      delete [] ((::TQpDataDens*)p);
   }
   static void destruct_TQpDataDens(void *p) {
      typedef ::TQpDataDens current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TQpDataDens

//______________________________________________________________________________
void TQpDataSparse::Streamer(TBuffer &R__b)
{
   // Stream an object of class TQpDataSparse.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TQpDataSparse::Class(),this);
   } else {
      R__b.WriteClassBuffer(TQpDataSparse::Class(),this);
   }
}

//______________________________________________________________________________
void TQpDataSparse::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TQpDataSparse.
      TClass *R__cl = ::TQpDataSparse::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fQ", &fQ);
      fQ.ShowMembers(R__insp, strcat(R__parent,"fQ.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fA", &fA);
      fA.ShowMembers(R__insp, strcat(R__parent,"fA.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fC", &fC);
      fC.ShowMembers(R__insp, strcat(R__parent,"fC.")); R__parent[R__ncp] = 0;
      TQpDataBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TQpDataSparse(void *p) {
      return  p ? new(p) ::TQpDataSparse : new ::TQpDataSparse;
   }
   static void *newArray_TQpDataSparse(Long_t nElements, void *p) {
      return p ? new(p) ::TQpDataSparse[nElements] : new ::TQpDataSparse[nElements];
   }
   // Wrapper around operator delete
   static void delete_TQpDataSparse(void *p) {
      delete ((::TQpDataSparse*)p);
   }
   static void deleteArray_TQpDataSparse(void *p) {
      delete [] ((::TQpDataSparse*)p);
   }
   static void destruct_TQpDataSparse(void *p) {
      typedef ::TQpDataSparse current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TQpDataSparse

//______________________________________________________________________________
void TQpProbBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class TQpProbBase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TQpProbBase::Class(),this);
   } else {
      R__b.WriteClassBuffer(TQpProbBase::Class(),this);
   }
}

//______________________________________________________________________________
void TQpProbBase::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TQpProbBase.
      TClass *R__cl = ::TQpProbBase::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNx", &fNx);
      R__insp.Inspect(R__cl, R__parent, "fMy", &fMy);
      R__insp.Inspect(R__cl, R__parent, "fMz", &fMz);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TQpProbBase(void *p) {
      delete ((::TQpProbBase*)p);
   }
   static void deleteArray_TQpProbBase(void *p) {
      delete [] ((::TQpProbBase*)p);
   }
   static void destruct_TQpProbBase(void *p) {
      typedef ::TQpProbBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TQpProbBase

//______________________________________________________________________________
void TQpProbDens::Streamer(TBuffer &R__b)
{
   // Stream an object of class TQpProbDens.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TQpProbDens::Class(),this);
   } else {
      R__b.WriteClassBuffer(TQpProbDens::Class(),this);
   }
}

//______________________________________________________________________________
void TQpProbDens::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TQpProbDens.
      TClass *R__cl = ::TQpProbDens::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TQpProbBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TQpProbDens(void *p) {
      return  p ? new(p) ::TQpProbDens : new ::TQpProbDens;
   }
   static void *newArray_TQpProbDens(Long_t nElements, void *p) {
      return p ? new(p) ::TQpProbDens[nElements] : new ::TQpProbDens[nElements];
   }
   // Wrapper around operator delete
   static void delete_TQpProbDens(void *p) {
      delete ((::TQpProbDens*)p);
   }
   static void deleteArray_TQpProbDens(void *p) {
      delete [] ((::TQpProbDens*)p);
   }
   static void destruct_TQpProbDens(void *p) {
      typedef ::TQpProbDens current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TQpProbDens

//______________________________________________________________________________
void TQpProbSparse::Streamer(TBuffer &R__b)
{
   // Stream an object of class TQpProbSparse.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TQpProbSparse::Class(),this);
   } else {
      R__b.WriteClassBuffer(TQpProbSparse::Class(),this);
   }
}

//______________________________________________________________________________
void TQpProbSparse::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TQpProbSparse.
      TClass *R__cl = ::TQpProbSparse::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TQpProbBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TQpProbSparse(void *p) {
      return  p ? new(p) ::TQpProbSparse : new ::TQpProbSparse;
   }
   static void *newArray_TQpProbSparse(Long_t nElements, void *p) {
      return p ? new(p) ::TQpProbSparse[nElements] : new ::TQpProbSparse[nElements];
   }
   // Wrapper around operator delete
   static void delete_TQpProbSparse(void *p) {
      delete ((::TQpProbSparse*)p);
   }
   static void deleteArray_TQpProbSparse(void *p) {
      delete [] ((::TQpProbSparse*)p);
   }
   static void destruct_TQpProbSparse(void *p) {
      typedef ::TQpProbSparse current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TQpProbSparse

/********************************************************
* math/quadp/src/G__Quadp.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__Quadp();

extern "C" void G__set_cpp_environmentG__Quadp() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TGondzioSolver.h");
  G__add_compiledheader("TMehrotraSolver.h");
  G__add_compiledheader("TQpDataBase.h");
  G__add_compiledheader("TQpDataDens.h");
  G__add_compiledheader("TQpDataSparse.h");
  G__add_compiledheader("TQpLinSolverBase.h");
  G__add_compiledheader("TQpLinSolverDens.h");
  G__add_compiledheader("TQpLinSolverSparse.h");
  G__add_compiledheader("TQpProbBase.h");
  G__add_compiledheader("TQpProbDens.h");
  G__add_compiledheader("TQpProbSparse.h");
  G__add_compiledheader("TQpResidual.h");
  G__add_compiledheader("TQpSolverBase.h");
  G__add_compiledheader("TQpVar.h");
  G__cpp_reset_tagtableG__Quadp();
}
#include <new>
extern "C" int G__cpp_dllrevG__Quadp() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TQpVar */
static int G__G__Quadp_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpVar* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQpVar[n];
     } else {
       p = new((void*) gvp) TQpVar[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQpVar;
     } else {
       p = new((void*) gvp) TQpVar;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpVar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpVar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 16
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpVar(
*(TVectorD*) libp->para[0].ref, *(TVectorD*) libp->para[1].ref
, *(TVectorD*) libp->para[2].ref, *(TVectorD*) libp->para[3].ref
, *(TVectorD*) libp->para[4].ref, *(TVectorD*) libp->para[5].ref
, *(TVectorD*) libp->para[6].ref, *(TVectorD*) libp->para[7].ref
, *(TVectorD*) libp->para[8].ref, *(TVectorD*) libp->para[9].ref
, *(TVectorD*) libp->para[10].ref, *(TVectorD*) libp->para[11].ref
, *(TVectorD*) libp->para[12].ref, *(TVectorD*) libp->para[13].ref
, *(TVectorD*) libp->para[14].ref, *(TVectorD*) libp->para[15].ref);
   } else {
     p = new((void*) gvp) TQpVar(
*(TVectorD*) libp->para[0].ref, *(TVectorD*) libp->para[1].ref
, *(TVectorD*) libp->para[2].ref, *(TVectorD*) libp->para[3].ref
, *(TVectorD*) libp->para[4].ref, *(TVectorD*) libp->para[5].ref
, *(TVectorD*) libp->para[6].ref, *(TVectorD*) libp->para[7].ref
, *(TVectorD*) libp->para[8].ref, *(TVectorD*) libp->para[9].ref
, *(TVectorD*) libp->para[10].ref, *(TVectorD*) libp->para[11].ref
, *(TVectorD*) libp->para[12].ref, *(TVectorD*) libp->para[13].ref
, *(TVectorD*) libp->para[14].ref, *(TVectorD*) libp->para[15].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpVar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpVar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpVar(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *(TVectorD*) libp->para[3].ref
, *(TVectorD*) libp->para[4].ref, *(TVectorD*) libp->para[5].ref
, *(TVectorD*) libp->para[6].ref);
   } else {
     p = new((void*) gvp) TQpVar(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *(TVectorD*) libp->para[3].ref
, *(TVectorD*) libp->para[4].ref, *(TVectorD*) libp->para[5].ref
, *(TVectorD*) libp->para[6].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpVar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpVar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpVar(*(TQpVar*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TQpVar(*(TQpVar*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpVar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TQpVar*) G__getstructoffset())->GetMu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TQpVar*) G__getstructoffset())->MuStep((TQpVar*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpVar*) G__getstructoffset())->Saxpy((TQpVar*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpVar*) G__getstructoffset())->Negate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TQpVar*) G__getstructoffset())->StepBound((TQpVar*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TQpVar*) G__getstructoffset())->FindBlocking((TQpVar*) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Int_t*) G__Intref(&libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpVar*) G__getstructoffset())->InteriorPoint((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpVar*) G__getstructoffset())->ShiftBoundVariables((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TQpVar*) G__getstructoffset())->IsInteriorPoint());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TQpVar*) G__getstructoffset())->Violation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TQpVar*) G__getstructoffset())->Norm1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TQpVar*) G__getstructoffset())->NormInf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TQpVar*) G__getstructoffset())->ValidNonZeroPattern());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQpVar& obj = ((TQpVar*) G__getstructoffset())->operator=(*(TQpVar*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TQpVar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpVar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TQpVar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TQpVar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpVar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpVar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpVar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpVar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_170_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpVar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TQpVar G__TTQpVar;
static int G__G__Quadp_170_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TQpVar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TQpVar*) (soff+(sizeof(TQpVar)*i)))->~G__TTQpVar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TQpVar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TQpVar*) (soff))->~G__TTQpVar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TQpDataBase */
static int G__G__Quadp_172_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpDataBase*) G__getstructoffset())->PutQIntoAt(*(TMatrixDBase*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpDataBase*) G__getstructoffset())->PutAIntoAt(*(TMatrixDBase*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpDataBase*) G__getstructoffset())->PutCIntoAt(*(TMatrixDBase*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpDataBase*) G__getstructoffset())->Qmult((Double_t) G__double(libp->para[0]), *(TVectorD*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), *(TVectorD*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpDataBase*) G__getstructoffset())->Amult((Double_t) G__double(libp->para[0]), *(TVectorD*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), *(TVectorD*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpDataBase*) G__getstructoffset())->Cmult((Double_t) G__double(libp->para[0]), *(TVectorD*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), *(TVectorD*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpDataBase*) G__getstructoffset())->ATransmult((Double_t) G__double(libp->para[0]), *(TVectorD*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), *(TVectorD*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpDataBase*) G__getstructoffset())->CTransmult((Double_t) G__double(libp->para[0]), *(TVectorD*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), *(TVectorD*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpDataBase*) G__getstructoffset())->GetDiagonalOfQ(*(TVectorD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVectorD& obj = ((TQpDataBase*) G__getstructoffset())->GetG();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVectorD& obj = ((TQpDataBase*) G__getstructoffset())->GetBa();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVectorD& obj = ((TQpDataBase*) G__getstructoffset())->GetXupperBound();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVectorD& obj = ((TQpDataBase*) G__getstructoffset())->GetiXupperBound();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVectorD& obj = ((TQpDataBase*) G__getstructoffset())->GetXlowerBound();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVectorD& obj = ((TQpDataBase*) G__getstructoffset())->GetiXlowerBound();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVectorD& obj = ((TQpDataBase*) G__getstructoffset())->GetSupperBound();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVectorD& obj = ((TQpDataBase*) G__getstructoffset())->GetiSupperBound();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVectorD& obj = ((TQpDataBase*) G__getstructoffset())->GetSlowerBound();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVectorD& obj = ((TQpDataBase*) G__getstructoffset())->GetiSlowerBound();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TQpDataBase*) G__getstructoffset())->DataNorm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpDataBase*) G__getstructoffset())->DataRandom(*(TVectorD*) libp->para[0].ref, *(TVectorD*) libp->para[1].ref
, *(TVectorD*) libp->para[2].ref, *(TVectorD*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TQpDataBase*) G__getstructoffset())->ObjectiveValue((TQpVar*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQpDataBase& obj = ((TQpDataBase*) G__getstructoffset())->operator=(*(TQpDataBase*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TQpDataBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpDataBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TQpDataBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TQpDataBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpDataBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpDataBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpDataBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpDataBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_172_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpDataBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TQpDataBase G__TTQpDataBase;
static int G__G__Quadp_172_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TQpDataBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TQpDataBase*) (soff+(sizeof(TQpDataBase)*i)))->~G__TTQpDataBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TQpDataBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TQpDataBase*) (soff))->~G__TTQpDataBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TQpDataDens */
static int G__G__Quadp_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpDataDens* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQpDataDens[n];
     } else {
       p = new((void*) gvp) TQpDataDens[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQpDataDens;
     } else {
       p = new((void*) gvp) TQpDataDens;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpDataDens));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpDataDens* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpDataDens(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TQpDataDens(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpDataDens));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpDataDens* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 13
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpDataDens(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, *(TVectorD*) libp->para[2].ref, *(TVectorD*) libp->para[3].ref
, *(TVectorD*) libp->para[4].ref, *(TVectorD*) libp->para[5].ref
, *(TMatrixD*) libp->para[6].ref, *(TVectorD*) libp->para[7].ref
, *(TMatrixD*) libp->para[8].ref, *(TVectorD*) libp->para[9].ref
, *(TVectorD*) libp->para[10].ref, *(TVectorD*) libp->para[11].ref
, *(TVectorD*) libp->para[12].ref);
   } else {
     p = new((void*) gvp) TQpDataDens(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSym*) libp->para[1].ref
, *(TVectorD*) libp->para[2].ref, *(TVectorD*) libp->para[3].ref
, *(TVectorD*) libp->para[4].ref, *(TVectorD*) libp->para[5].ref
, *(TMatrixD*) libp->para[6].ref, *(TVectorD*) libp->para[7].ref
, *(TMatrixD*) libp->para[8].ref, *(TVectorD*) libp->para[9].ref
, *(TVectorD*) libp->para[10].ref, *(TVectorD*) libp->para[11].ref
, *(TVectorD*) libp->para[12].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpDataDens));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpDataDens* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpDataDens(*(TQpDataDens*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TQpDataDens(*(TQpDataDens*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpDataDens));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_173_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQpDataDens& obj = ((TQpDataDens*) G__getstructoffset())->operator=(*(TQpDataDens*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_173_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TQpDataDens::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_173_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpDataDens::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_173_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TQpDataDens::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_173_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TQpDataDens::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_173_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpDataDens*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_173_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpDataDens::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_173_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpDataDens::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_173_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpDataDens::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_173_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpDataDens::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TQpDataDens G__TTQpDataDens;
static int G__G__Quadp_173_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TQpDataDens*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TQpDataDens*) (soff+(sizeof(TQpDataDens)*i)))->~G__TTQpDataDens();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TQpDataDens*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TQpDataDens*) (soff))->~G__TTQpDataDens();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TQpResidual */
static int G__G__Quadp_174_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpResidual* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQpResidual[n];
     } else {
       p = new((void*) gvp) TQpResidual[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQpResidual;
     } else {
       p = new((void*) gvp) TQpResidual;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpResidual));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpResidual* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpResidual(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *(TVectorD*) libp->para[3].ref
, *(TVectorD*) libp->para[4].ref, *(TVectorD*) libp->para[5].ref
, *(TVectorD*) libp->para[6].ref);
   } else {
     p = new((void*) gvp) TQpResidual(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *(TVectorD*) libp->para[3].ref
, *(TVectorD*) libp->para[4].ref, *(TVectorD*) libp->para[5].ref
, *(TVectorD*) libp->para[6].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpResidual));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpResidual* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpResidual(*(TQpResidual*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TQpResidual(*(TQpResidual*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpResidual));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TQpResidual*) G__getstructoffset())->GetResidualNorm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TQpResidual*) G__getstructoffset())->GetDualityGap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpResidual*) G__getstructoffset())->CalcResids((TQpDataBase*) G__int(libp->para[0]), (TQpVar*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpResidual*) G__getstructoffset())->Add_r3_xz_alpha((TQpVar*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpResidual*) G__getstructoffset())->Set_r3_xz_alpha((TQpVar*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpResidual*) G__getstructoffset())->Clear_r3();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpResidual*) G__getstructoffset())->Clear_r1r2();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpResidual*) G__getstructoffset())->Project_r3((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TQpResidual*) G__getstructoffset())->ValidNonZeroPattern());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQpResidual& obj = ((TQpResidual*) G__getstructoffset())->operator=(*(TQpResidual*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TQpResidual::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpResidual::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TQpResidual::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TQpResidual::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpResidual*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpResidual::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpResidual::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpResidual::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_174_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpResidual::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TQpResidual G__TTQpResidual;
static int G__G__Quadp_174_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TQpResidual*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TQpResidual*) (soff+(sizeof(TQpResidual)*i)))->~G__TTQpResidual();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TQpResidual*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TQpResidual*) (soff))->~G__TTQpResidual();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TQpProbBase */
static int G__G__Quadp_175_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TQpProbBase*) G__getstructoffset())->MakeData(
*(TVectorD*) libp->para[0].ref, *(TMatrixDBase*) libp->para[1].ref
, *(TVectorD*) libp->para[2].ref, *(TVectorD*) libp->para[3].ref
, *(TVectorD*) libp->para[4].ref, *(TVectorD*) libp->para[5].ref
, *(TMatrixDBase*) libp->para[6].ref, *(TVectorD*) libp->para[7].ref
, *(TMatrixDBase*) libp->para[8].ref, *(TVectorD*) libp->para[9].ref
, *(TVectorD*) libp->para[10].ref, *(TVectorD*) libp->para[11].ref
, *(TVectorD*) libp->para[12].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_175_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TQpProbBase*) G__getstructoffset())->MakeResiduals((const TQpDataBase*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_175_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TQpProbBase*) G__getstructoffset())->MakeVariables((const TQpDataBase*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_175_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TQpProbBase*) G__getstructoffset())->MakeLinSys((const TQpDataBase*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_175_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpProbBase*) G__getstructoffset())->JoinRHS(*(TVectorD*) libp->para[0].ref, *(TVectorD*) libp->para[1].ref
, *(TVectorD*) libp->para[2].ref, *(TVectorD*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_175_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpProbBase*) G__getstructoffset())->SeparateVars(*(TVectorD*) libp->para[0].ref, *(TVectorD*) libp->para[1].ref
, *(TVectorD*) libp->para[2].ref, *(TVectorD*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_175_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQpProbBase& obj = ((TQpProbBase*) G__getstructoffset())->operator=(*(TQpProbBase*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_175_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TQpProbBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_175_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpProbBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_175_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TQpProbBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_175_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TQpProbBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_175_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpProbBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_175_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpProbBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_175_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpProbBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_175_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpProbBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_175_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpProbBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TQpProbBase G__TTQpProbBase;
static int G__G__Quadp_175_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TQpProbBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TQpProbBase*) (soff+(sizeof(TQpProbBase)*i)))->~G__TTQpProbBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TQpProbBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TQpProbBase*) (soff))->~G__TTQpProbBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TQpLinSolverBase */
static int G__G__Quadp_176_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpLinSolverBase*) G__getstructoffset())->Factor((TQpDataBase*) G__int(libp->para[0]), (TQpVar*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpLinSolverBase*) G__getstructoffset())->Solve((TQpDataBase*) G__int(libp->para[0]), (TQpVar*) G__int(libp->para[1])
, (TQpResidual*) G__int(libp->para[2]), (TQpVar*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpLinSolverBase*) G__getstructoffset())->JoinRHS(*(TVectorD*) libp->para[0].ref, *(TVectorD*) libp->para[1].ref
, *(TVectorD*) libp->para[2].ref, *(TVectorD*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpLinSolverBase*) G__getstructoffset())->SeparateVars(*(TVectorD*) libp->para[0].ref, *(TVectorD*) libp->para[1].ref
, *(TVectorD*) libp->para[2].ref, *(TVectorD*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpLinSolverBase*) G__getstructoffset())->SolveXYZS(*(TVectorD*) libp->para[0].ref, *(TVectorD*) libp->para[1].ref
, *(TVectorD*) libp->para[2].ref, *(TVectorD*) libp->para[3].ref
, *(TVectorD*) libp->para[4].ref, (TQpDataBase*) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpLinSolverBase*) G__getstructoffset())->SolveCompressed(*(TVectorD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpLinSolverBase*) G__getstructoffset())->PutXDiagonal(*(TVectorD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpLinSolverBase*) G__getstructoffset())->PutZDiagonal(*(TVectorD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpLinSolverBase*) G__getstructoffset())->ComputeDiagonals(
*(TVectorD*) libp->para[0].ref, *(TVectorD*) libp->para[1].ref
, *(TVectorD*) libp->para[2].ref, *(TVectorD*) libp->para[3].ref
, *(TVectorD*) libp->para[4].ref, *(TVectorD*) libp->para[5].ref
, *(TVectorD*) libp->para[6].ref, *(TVectorD*) libp->para[7].ref
, *(TVectorD*) libp->para[8].ref, *(TVectorD*) libp->para[9].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQpLinSolverBase& obj = ((TQpLinSolverBase*) G__getstructoffset())->operator=(*(TQpLinSolverBase*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TQpLinSolverBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpLinSolverBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TQpLinSolverBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TQpLinSolverBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpLinSolverBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpLinSolverBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpLinSolverBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpLinSolverBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_176_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpLinSolverBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TQpLinSolverBase G__TTQpLinSolverBase;
static int G__G__Quadp_176_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TQpLinSolverBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TQpLinSolverBase*) (soff+(sizeof(TQpLinSolverBase)*i)))->~G__TTQpLinSolverBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TQpLinSolverBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TQpLinSolverBase*) (soff))->~G__TTQpLinSolverBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TQpSolverBase */
static int G__G__Quadp_178_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpSolverBase*) G__getstructoffset())->Start((TQpProbBase*) G__int(libp->para[0]), (TQpVar*) G__int(libp->para[1])
, (TQpDataBase*) G__int(libp->para[2]), (TQpResidual*) G__int(libp->para[3])
, (TQpVar*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpSolverBase*) G__getstructoffset())->DefStart((TQpProbBase*) G__int(libp->para[0]), (TQpVar*) G__int(libp->para[1])
, (TQpDataBase*) G__int(libp->para[2]), (TQpResidual*) G__int(libp->para[3])
, (TQpVar*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpSolverBase*) G__getstructoffset())->SteveStart((TQpProbBase*) G__int(libp->para[0]), (TQpVar*) G__int(libp->para[1])
, (TQpDataBase*) G__int(libp->para[2]), (TQpResidual*) G__int(libp->para[3])
, (TQpVar*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpSolverBase*) G__getstructoffset())->DumbStart((TQpProbBase*) G__int(libp->para[0]), (TQpVar*) G__int(libp->para[1])
, (TQpDataBase*) G__int(libp->para[2]), (TQpResidual*) G__int(libp->para[3])
, (TQpVar*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TQpSolverBase*) G__getstructoffset())->Solve((TQpDataBase*) G__int(libp->para[0]), (TQpVar*) G__int(libp->para[1])
, (TQpResidual*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TQpSolverBase*) G__getstructoffset())->FinalStepLength((TQpVar*) G__int(libp->para[0]), (TQpVar*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpSolverBase*) G__getstructoffset())->DoMonitor(
(TQpDataBase*) G__int(libp->para[0]), (TQpVar*) G__int(libp->para[1])
, (TQpResidual*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpSolverBase*) G__getstructoffset())->DefMonitor(
(TQpDataBase*) G__int(libp->para[0]), (TQpVar*) G__int(libp->para[1])
, (TQpResidual*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TQpSolverBase*) G__getstructoffset())->DoStatus((TQpDataBase*) G__int(libp->para[0]), (TQpVar*) G__int(libp->para[1])
, (TQpResidual*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TQpSolverBase*) G__getstructoffset())->DefStatus((TQpDataBase*) G__int(libp->para[0]), (TQpVar*) G__int(libp->para[1])
, (TQpResidual*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TQpSolverBase*) G__getstructoffset())->GetLinearSystem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpSolverBase*) G__getstructoffset())->SetMuTol((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TQpSolverBase*) G__getstructoffset())->GetMuTol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpSolverBase*) G__getstructoffset())->SetArTol((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TQpSolverBase*) G__getstructoffset())->GetArTol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TQpSolverBase*) G__getstructoffset())->DataNorm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQpSolverBase& obj = ((TQpSolverBase*) G__getstructoffset())->operator=(*(TQpSolverBase*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TQpSolverBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpSolverBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TQpSolverBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TQpSolverBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpSolverBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpSolverBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpSolverBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpSolverBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_178_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpSolverBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TQpSolverBase G__TTQpSolverBase;
static int G__G__Quadp_178_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TQpSolverBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TQpSolverBase*) (soff+(sizeof(TQpSolverBase)*i)))->~G__TTQpSolverBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TQpSolverBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TQpSolverBase*) (soff))->~G__TTQpSolverBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGondzioSolver */
static int G__G__Quadp_179_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGondzioSolver* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGondzioSolver[n];
     } else {
       p = new((void*) gvp) TGondzioSolver[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGondzioSolver;
     } else {
       p = new((void*) gvp) TGondzioSolver;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TGondzioSolver));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_179_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGondzioSolver* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGondzioSolver(
(TQpProbBase*) G__int(libp->para[0]), (TQpDataBase*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TGondzioSolver(
(TQpProbBase*) G__int(libp->para[0]), (TQpDataBase*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGondzioSolver((TQpProbBase*) G__int(libp->para[0]), (TQpDataBase*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TGondzioSolver((TQpProbBase*) G__int(libp->para[0]), (TQpDataBase*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TGondzioSolver));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_179_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGondzioSolver* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TGondzioSolver(*(TGondzioSolver*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TGondzioSolver(*(TGondzioSolver*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TGondzioSolver));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_179_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGondzioSolver*) G__getstructoffset())->Reset_parameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_179_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TGondzioSolver& obj = ((TGondzioSolver*) G__getstructoffset())->operator=(*(TGondzioSolver*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_179_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGondzioSolver::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_179_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGondzioSolver::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_179_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGondzioSolver::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_179_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGondzioSolver::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_179_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGondzioSolver*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_179_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGondzioSolver::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_179_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGondzioSolver::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_179_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGondzioSolver::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_179_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGondzioSolver::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGondzioSolver G__TTGondzioSolver;
static int G__G__Quadp_179_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGondzioSolver*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGondzioSolver*) (soff+(sizeof(TGondzioSolver)*i)))->~G__TTGondzioSolver();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGondzioSolver*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGondzioSolver*) (soff))->~G__TTGondzioSolver();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMehrotraSolver */
static int G__G__Quadp_180_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMehrotraSolver* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMehrotraSolver[n];
     } else {
       p = new((void*) gvp) TMehrotraSolver[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMehrotraSolver;
     } else {
       p = new((void*) gvp) TMehrotraSolver;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TMehrotraSolver));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_180_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMehrotraSolver* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMehrotraSolver(
(TQpProbBase*) G__int(libp->para[0]), (TQpDataBase*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TMehrotraSolver(
(TQpProbBase*) G__int(libp->para[0]), (TQpDataBase*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMehrotraSolver((TQpProbBase*) G__int(libp->para[0]), (TQpDataBase*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TMehrotraSolver((TQpProbBase*) G__int(libp->para[0]), (TQpDataBase*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TMehrotraSolver));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_180_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMehrotraSolver* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMehrotraSolver(*(TMehrotraSolver*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TMehrotraSolver(*(TMehrotraSolver*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TMehrotraSolver));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_180_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMehrotraSolver& obj = ((TMehrotraSolver*) G__getstructoffset())->operator=(*(TMehrotraSolver*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_180_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMehrotraSolver::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_180_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMehrotraSolver::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_180_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMehrotraSolver::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_180_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMehrotraSolver::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_180_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMehrotraSolver*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_180_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMehrotraSolver::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_180_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMehrotraSolver::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_180_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMehrotraSolver::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_180_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMehrotraSolver::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMehrotraSolver G__TTMehrotraSolver;
static int G__G__Quadp_180_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMehrotraSolver*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMehrotraSolver*) (soff+(sizeof(TMehrotraSolver)*i)))->~G__TTMehrotraSolver();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMehrotraSolver*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMehrotraSolver*) (soff))->~G__TTMehrotraSolver();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TQpDataSparse */
static int G__G__Quadp_181_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpDataSparse* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQpDataSparse[n];
     } else {
       p = new((void*) gvp) TQpDataSparse[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQpDataSparse;
     } else {
       p = new((void*) gvp) TQpDataSparse;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpDataSparse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_181_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpDataSparse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpDataSparse(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TQpDataSparse(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpDataSparse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_181_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpDataSparse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 13
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpDataSparse(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSparse*) libp->para[1].ref
, *(TVectorD*) libp->para[2].ref, *(TVectorD*) libp->para[3].ref
, *(TVectorD*) libp->para[4].ref, *(TVectorD*) libp->para[5].ref
, *(TMatrixDSparse*) libp->para[6].ref, *(TVectorD*) libp->para[7].ref
, *(TMatrixDSparse*) libp->para[8].ref, *(TVectorD*) libp->para[9].ref
, *(TVectorD*) libp->para[10].ref, *(TVectorD*) libp->para[11].ref
, *(TVectorD*) libp->para[12].ref);
   } else {
     p = new((void*) gvp) TQpDataSparse(
*(TVectorD*) libp->para[0].ref, *(TMatrixDSparse*) libp->para[1].ref
, *(TVectorD*) libp->para[2].ref, *(TVectorD*) libp->para[3].ref
, *(TVectorD*) libp->para[4].ref, *(TVectorD*) libp->para[5].ref
, *(TMatrixDSparse*) libp->para[6].ref, *(TVectorD*) libp->para[7].ref
, *(TMatrixDSparse*) libp->para[8].ref, *(TVectorD*) libp->para[9].ref
, *(TVectorD*) libp->para[10].ref, *(TVectorD*) libp->para[11].ref
, *(TVectorD*) libp->para[12].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpDataSparse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_181_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpDataSparse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpDataSparse(*(TQpDataSparse*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TQpDataSparse(*(TQpDataSparse*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpDataSparse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_181_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpDataSparse*) G__getstructoffset())->SetNonZeros((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_181_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQpDataSparse& obj = ((TQpDataSparse*) G__getstructoffset())->operator=(*(TQpDataSparse*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_181_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TQpDataSparse::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_181_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpDataSparse::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_181_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TQpDataSparse::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_181_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TQpDataSparse::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_181_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpDataSparse*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_181_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpDataSparse::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_181_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpDataSparse::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_181_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpDataSparse::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_181_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpDataSparse::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TQpDataSparse G__TTQpDataSparse;
static int G__G__Quadp_181_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TQpDataSparse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TQpDataSparse*) (soff+(sizeof(TQpDataSparse)*i)))->~G__TTQpDataSparse();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TQpDataSparse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TQpDataSparse*) (soff))->~G__TTQpDataSparse();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TQpProbDens */
static int G__G__Quadp_182_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpProbDens* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQpProbDens[n];
     } else {
       p = new((void*) gvp) TQpProbDens[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQpProbDens;
     } else {
       p = new((void*) gvp) TQpProbDens;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpProbDens));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_182_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpProbDens* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpProbDens(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TQpProbDens(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpProbDens));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_182_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpProbDens* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpProbDens(*(TQpProbDens*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TQpProbDens(*(TQpProbDens*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpProbDens));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_182_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TQpProbDens*) G__getstructoffset())->MakeData(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Bool_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Bool_t*) G__int(libp->para[5])
, (Double_t*) G__int(libp->para[6]), (Double_t*) G__int(libp->para[7])
, (Double_t*) G__int(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Bool_t*) G__int(libp->para[10]), (Double_t*) G__int(libp->para[11])
, (Bool_t*) G__int(libp->para[12])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_182_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpProbDens*) G__getstructoffset())->MakeRandomData(libp->para[0].ref ? *(TQpDataDens**) libp->para[0].ref : *(TQpDataDens**) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(TQpVar**) libp->para[1].ref : *(TQpVar**) (&G__Mlong(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_182_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQpProbDens& obj = ((TQpProbDens*) G__getstructoffset())->operator=(*(TQpProbDens*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_182_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TQpProbDens::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_182_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpProbDens::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_182_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TQpProbDens::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_182_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TQpProbDens::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_182_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpProbDens*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_182_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpProbDens::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_182_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpProbDens::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_182_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpProbDens::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_182_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpProbDens::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TQpProbDens G__TTQpProbDens;
static int G__G__Quadp_182_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TQpProbDens*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TQpProbDens*) (soff+(sizeof(TQpProbDens)*i)))->~G__TTQpProbDens();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TQpProbDens*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TQpProbDens*) (soff))->~G__TTQpProbDens();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TQpLinSolverDens */
static int G__G__Quadp_187_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpLinSolverDens* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQpLinSolverDens[n];
     } else {
       p = new((void*) gvp) TQpLinSolverDens[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQpLinSolverDens;
     } else {
       p = new((void*) gvp) TQpLinSolverDens;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverDens));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_187_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpLinSolverDens* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpLinSolverDens((TQpProbDens*) G__int(libp->para[0]), (TQpDataDens*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TQpLinSolverDens((TQpProbDens*) G__int(libp->para[0]), (TQpDataDens*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverDens));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_187_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpLinSolverDens* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpLinSolverDens(*(TQpLinSolverDens*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TQpLinSolverDens(*(TQpLinSolverDens*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverDens));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_187_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQpLinSolverDens& obj = ((TQpLinSolverDens*) G__getstructoffset())->operator=(*(TQpLinSolverDens*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_187_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TQpLinSolverDens::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_187_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpLinSolverDens::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_187_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TQpLinSolverDens::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_187_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TQpLinSolverDens::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_187_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpLinSolverDens*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_187_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpLinSolverDens::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_187_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpLinSolverDens::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_187_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpLinSolverDens::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_187_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpLinSolverDens::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TQpLinSolverDens G__TTQpLinSolverDens;
static int G__G__Quadp_187_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TQpLinSolverDens*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TQpLinSolverDens*) (soff+(sizeof(TQpLinSolverDens)*i)))->~G__TTQpLinSolverDens();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TQpLinSolverDens*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TQpLinSolverDens*) (soff))->~G__TTQpLinSolverDens();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TQpProbSparse */
static int G__G__Quadp_188_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpProbSparse* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQpProbSparse[n];
     } else {
       p = new((void*) gvp) TQpProbSparse[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQpProbSparse;
     } else {
       p = new((void*) gvp) TQpProbSparse;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpProbSparse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_188_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpProbSparse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpProbSparse(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TQpProbSparse(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpProbSparse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_188_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpProbSparse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpProbSparse(*(TQpProbSparse*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TQpProbSparse(*(TQpProbSparse*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpProbSparse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_188_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpProbSparse*) G__getstructoffset())->MakeRandomData(libp->para[0].ref ? *(TQpDataSparse**) libp->para[0].ref : *(TQpDataSparse**) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(TQpVar**) libp->para[1].ref : *(TQpVar**) (&G__Mlong(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_188_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQpProbSparse& obj = ((TQpProbSparse*) G__getstructoffset())->operator=(*(TQpProbSparse*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_188_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TQpProbSparse::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_188_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpProbSparse::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_188_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TQpProbSparse::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_188_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TQpProbSparse::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_188_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpProbSparse*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_188_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpProbSparse::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_188_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpProbSparse::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_188_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpProbSparse::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_188_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpProbSparse::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TQpProbSparse G__TTQpProbSparse;
static int G__G__Quadp_188_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TQpProbSparse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TQpProbSparse*) (soff+(sizeof(TQpProbSparse)*i)))->~G__TTQpProbSparse();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TQpProbSparse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TQpProbSparse*) (soff))->~G__TTQpProbSparse();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TQpLinSolverSparse */
static int G__G__Quadp_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpLinSolverSparse* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQpLinSolverSparse[n];
     } else {
       p = new((void*) gvp) TQpLinSolverSparse[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TQpLinSolverSparse;
     } else {
       p = new((void*) gvp) TQpLinSolverSparse;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverSparse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_193_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpLinSolverSparse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpLinSolverSparse((TQpProbSparse*) G__int(libp->para[0]), (TQpDataSparse*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TQpLinSolverSparse((TQpProbSparse*) G__int(libp->para[0]), (TQpDataSparse*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverSparse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TQpLinSolverSparse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TQpLinSolverSparse(*(TQpLinSolverSparse*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TQpLinSolverSparse(*(TQpLinSolverSparse*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverSparse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_193_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TQpLinSolverSparse& obj = ((TQpLinSolverSparse*) G__getstructoffset())->operator=(*(TQpLinSolverSparse*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_193_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TQpLinSolverSparse::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_193_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpLinSolverSparse::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TQpLinSolverSparse::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TQpLinSolverSparse::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TQpLinSolverSparse*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpLinSolverSparse::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpLinSolverSparse::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_193_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TQpLinSolverSparse::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Quadp_193_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TQpLinSolverSparse::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TQpLinSolverSparse G__TTQpLinSolverSparse;
static int G__G__Quadp_193_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TQpLinSolverSparse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TQpLinSolverSparse*) (soff+(sizeof(TQpLinSolverSparse)*i)))->~G__TTQpLinSolverSparse();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TQpLinSolverSparse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TQpLinSolverSparse*) (soff))->~G__TTQpLinSolverSparse();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TQpVar */

/* TQpDataBase */

/* TQpDataDens */

/* TQpResidual */

/* TQpProbBase */

/* TQpLinSolverBase */

/* TQpSolverBase */

/* TGondzioSolver */

/* TMehrotraSolver */

/* TQpDataSparse */

/* TQpProbDens */

/* TQpLinSolverDens */

/* TQpProbSparse */

/* TQpLinSolverSparse */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Quadp {
 public:
  G__Sizep2memfuncG__Quadp(): p(&G__Sizep2memfuncG__Quadp::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Quadp::*p)();
};

size_t G__get_sizep2memfuncG__Quadp()
{
  G__Sizep2memfuncG__Quadp a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Quadp() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__QuadpLN_TQpVar))) {
     TQpVar *G__Lderived;
     G__Lderived=(TQpVar*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpVar),G__get_linked_tagnum(&G__G__QuadpLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataBase))) {
     TQpDataBase *G__Lderived;
     G__Lderived=(TQpDataBase*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataBase),G__get_linked_tagnum(&G__G__QuadpLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataDens))) {
     TQpDataDens *G__Lderived;
     G__Lderived=(TQpDataDens*)0x1000;
     {
       TQpDataBase *G__Lpbase=(TQpDataBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataDens),G__get_linked_tagnum(&G__G__QuadpLN_TQpDataBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataDens),G__get_linked_tagnum(&G__G__QuadpLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__QuadpLN_TQpResidual))) {
     TQpResidual *G__Lderived;
     G__Lderived=(TQpResidual*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpResidual),G__get_linked_tagnum(&G__G__QuadpLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbBase))) {
     TQpProbBase *G__Lderived;
     G__Lderived=(TQpProbBase*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbBase),G__get_linked_tagnum(&G__G__QuadpLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverBase))) {
     TQpLinSolverBase *G__Lderived;
     G__Lderived=(TQpLinSolverBase*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverBase),G__get_linked_tagnum(&G__G__QuadpLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__QuadpLN_TQpSolverBase))) {
     TQpSolverBase *G__Lderived;
     G__Lderived=(TQpSolverBase*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpSolverBase),G__get_linked_tagnum(&G__G__QuadpLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__QuadpLN_TGondzioSolver))) {
     TGondzioSolver *G__Lderived;
     G__Lderived=(TGondzioSolver*)0x1000;
     {
       TQpSolverBase *G__Lpbase=(TQpSolverBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TGondzioSolver),G__get_linked_tagnum(&G__G__QuadpLN_TQpSolverBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TGondzioSolver),G__get_linked_tagnum(&G__G__QuadpLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__QuadpLN_TMehrotraSolver))) {
     TMehrotraSolver *G__Lderived;
     G__Lderived=(TMehrotraSolver*)0x1000;
     {
       TQpSolverBase *G__Lpbase=(TQpSolverBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TMehrotraSolver),G__get_linked_tagnum(&G__G__QuadpLN_TQpSolverBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TMehrotraSolver),G__get_linked_tagnum(&G__G__QuadpLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataSparse))) {
     TQpDataSparse *G__Lderived;
     G__Lderived=(TQpDataSparse*)0x1000;
     {
       TQpDataBase *G__Lpbase=(TQpDataBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataSparse),G__get_linked_tagnum(&G__G__QuadpLN_TQpDataBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataSparse),G__get_linked_tagnum(&G__G__QuadpLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbDens))) {
     TQpProbDens *G__Lderived;
     G__Lderived=(TQpProbDens*)0x1000;
     {
       TQpProbBase *G__Lpbase=(TQpProbBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbDens),G__get_linked_tagnum(&G__G__QuadpLN_TQpProbBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbDens),G__get_linked_tagnum(&G__G__QuadpLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverDens))) {
     TQpLinSolverDens *G__Lderived;
     G__Lderived=(TQpLinSolverDens*)0x1000;
     {
       TQpLinSolverBase *G__Lpbase=(TQpLinSolverBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverDens),G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverDens),G__get_linked_tagnum(&G__G__QuadpLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbSparse))) {
     TQpProbSparse *G__Lderived;
     G__Lderived=(TQpProbSparse*)0x1000;
     {
       TQpProbBase *G__Lpbase=(TQpProbBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbSparse),G__get_linked_tagnum(&G__G__QuadpLN_TQpProbBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbSparse),G__get_linked_tagnum(&G__G__QuadpLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverSparse))) {
     TQpLinSolverSparse *G__Lderived;
     G__Lderived=(TQpLinSolverSparse*)0x1000;
     {
       TQpLinSolverBase *G__Lpbase=(TQpLinSolverBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverSparse),G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverSparse),G__get_linked_tagnum(&G__G__QuadpLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Quadp() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__G__QuadpLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__QuadpLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__QuadpLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__QuadpLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__QuadpLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__QuadpLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixDBase",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorD",117,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixD",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixDSym",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixDSparse",117,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TQpVar */
static void G__setup_memvarTQpVar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpVar));
   { TQpVar *p; p=(TQpVar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNx=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMy=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMz=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNxup=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNxlo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMcup=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMclo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fXloIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fXupIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fCupIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fCloIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNComplementaryVariables)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNComplementaryVariables=",0,"number of complementary primal-dual variables.");
   G__memvar_setup((void*)((long)(&p->fX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fS)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fV)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fV=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPhi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fW)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fW=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fGamma)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fGamma=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fT)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fLambda)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fLambda=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fU)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fU=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fPi=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__QuadpLN_TQpVarcLcLEVarBlock),-1,-2,1,"kno_block=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__QuadpLN_TQpVarcLcLEVarBlock),-1,-2,1,"kt_block=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__QuadpLN_TQpVarcLcLEVarBlock),-1,-2,1,"klambda_block=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__QuadpLN_TQpVarcLcLEVarBlock),-1,-2,1,"ku_block=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__QuadpLN_TQpVarcLcLEVarBlock),-1,-2,1,"kpi_block=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__QuadpLN_TQpVarcLcLEVarBlock),-1,-2,1,"kv_block=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__QuadpLN_TQpVarcLcLEVarBlock),-1,-2,1,"kgamma_block=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__QuadpLN_TQpVarcLcLEVarBlock),-1,-2,1,"kw_block=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__QuadpLN_TQpVarcLcLEVarBlock),-1,-2,1,"kphi_block=8",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TQpDataBase */
static void G__setup_memvarTQpDataBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataBase));
   { TQpDataBase *p; p=(TQpDataBase*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fNx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMy)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMz)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fG)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fG=",0,"linear part of Objective function");
   G__memvar_setup((void*)((long)(&p->fBa)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fBa=",0,"vector of equality constraint");
   G__memvar_setup((void*)((long)(&p->fXupBound)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fXupBound=",0,"Bounds on variables");
   G__memvar_setup((void*)((long)(&p->fXupIndex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fXupIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fXloBound)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fXloBound=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fXloIndex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fXloIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCupBound)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fCupBound=",0,"Inequality constraints");
   G__memvar_setup((void*)((long)(&p->fCupIndex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fCupIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCloBound)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fCloBound=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCloIndex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fCloIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TQpDataDens */
static void G__setup_memvarTQpDataDens(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataDens));
   { TQpDataDens *p; p=(TQpDataDens*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"fQ=",0,"Quadratic part of Objective function");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,2,"fA=",0,"Equality constraints");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,2,"fC=",0,"Inequality constraints");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TQpResidual */
static void G__setup_memvarTQpResidual(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpResidual));
   { TQpResidual *p; p=(TQpResidual*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fResidualNorm=",0,"The norm of the residuals, ommiting the complementariy conditions");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDualityGap=",0,"A quantity that measures progress toward feasibility. In terms");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNx=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMy=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fNxup=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fNxlo=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMcup=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMclo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fXupIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fXloIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fCupIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fCloIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRQ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fRQ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRA)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fRA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fRC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRz)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fRz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRv)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fRv=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRw)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fRw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRt)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fRt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRu)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fRu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRgamma)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fRgamma=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRphi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fRphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRlambda)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fRlambda=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRpi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"fRpi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TQpProbBase */
static void G__setup_memvarTQpProbBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbBase));
   { TQpProbBase *p; p=(TQpProbBase*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fNx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNx=",0,"number of elements in x");
   G__memvar_setup((void*)((long)(&p->fMy)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMy=",0,"number of rows in A and b");
   G__memvar_setup((void*)((long)(&p->fMz)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMz=",0,"number of rows in C");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TQpLinSolverBase */
static void G__setup_memvarTQpLinSolverBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverBase));
   { TQpLinSolverBase *p; p=(TQpLinSolverBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fNomegaInv=",0,"stores a critical diagonal matrix as a vector");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fRhs=",0,"right-hand side of the system");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNx=",0,"dimensions of the vectors in the general QP formulation");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMy=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMz=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fDd=",0,"temporary storage vectors");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fDq=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fXupIndex=",0,"index matrices for the upper and lower bounds on x and Cx");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fCupIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fXloIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,2,"fCloIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNxup=",0,"dimensions of the upper and lower bound vectors");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNxlo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMcup=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMclo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TQpProbBase),-1,-1,2,"fFactory=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TQpSolverBase */
static void G__setup_memvarTQpSolverBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpSolverBase));
   { TQpSolverBase *p; p=(TQpSolverBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverBase),-1,-1,2,"fSys=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDnorm=",0,"norm of problem data");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMutol=",0,"termination parameters");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fArtol=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGamma_f=",0,"parameters associated with the step length heuristic");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGamma_a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi=",0,"merit function, defined as the sum of the complementarity gap");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxit=",0,"maximum number of  iterations allowed");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMu_history=",0,"[fMaxit] history of values of mu obtained on all iterations to date");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRnorm_history=",0,"[fMaxit] history of values of residual norm obtained on all iterations to date");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi_history=",0,"[fMaxit] history of values of phi obtained on all iterations to date");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi_min_history=",0,"[fMaxit] the i-th entry of this array contains the minimum value of phi");
   G__memvar_setup((void*)((long)(&p->fIter)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIter=",0,"iteration counter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGondzioSolver */
static void G__setup_memvarTGondzioSolver(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__QuadpLN_TGondzioSolver));
   { TGondzioSolver *p; p=(TGondzioSolver*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPrintlevel=",0,"parameter in range [0,100] determines verbosity. (Higher value");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTsig=",0,"exponent in Mehrotra's centering parameter, which is usually");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaximum_correctors=",0,"maximum number of Gondzio corrector steps");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumberGondzioCorrections=",0,"actual number of Gondzio corrections needed");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fStepFactor0=",0,"various parameters associated with Gondzio correction");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fStepFactor1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAcceptTol=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBeta_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBeta_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TQpVar),-1,-1,2,"fCorrector_step=",0,"storage for step vectors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TQpVar),-1,-1,2,"fStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TQpResidual),-1,-1,2,"fCorrector_resid=",0,"storage for residual vectors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TQpProbBase),-1,-1,2,"fFactory=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMehrotraSolver */
static void G__setup_memvarTMehrotraSolver(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__QuadpLN_TMehrotraSolver));
   { TMehrotraSolver *p; p=(TMehrotraSolver*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPrintlevel=",0,"parameter in range [0,100] determines verbosity. (Higher value");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTsig=",0,"exponent in Mehrotra's centering parameter, which is usually");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TQpVar),-1,-1,2,"fStep=",0,"storage for step vectors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TQpProbBase),-1,-1,2,"fFactory=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TQpDataSparse */
static void G__setup_memvarTQpDataSparse(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataSparse));
   { TQpDataSparse *p; p=(TQpDataSparse*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTSparselEdoublegR),G__defined_typename("TMatrixDSparse"),-1,2,"fQ=",0,"quadratic part of Objective function");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTSparselEdoublegR),G__defined_typename("TMatrixDSparse"),-1,2,"fA=",0,"Equality constraints");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTSparselEdoublegR),G__defined_typename("TMatrixDSparse"),-1,2,"fC=",0,"Inequality constraints");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TQpProbDens */
static void G__setup_memvarTQpProbDens(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbDens));
   { TQpProbDens *p; p=(TQpProbDens*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TQpLinSolverDens */
static void G__setup_memvarTQpLinSolverDens(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverDens));
   { TQpLinSolverDens *p; p=(TQpLinSolverDens*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"fKkt=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TDecompLU),-1,-1,2,"fSolveLU=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TQpProbSparse */
static void G__setup_memvarTQpProbSparse(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbSparse));
   { TQpProbSparse *p; p=(TQpProbSparse*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TQpLinSolverSparse */
static void G__setup_memvarTQpLinSolverSparse(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverSparse));
   { TQpLinSolverSparse *p; p=(TQpLinSolverSparse*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TMatrixTSparselEdoublegR),G__defined_typename("TMatrixDSparse"),-1,2,"fKkt=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TDecompSparse),-1,-1,2,"fSolveSparse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__QuadpLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Quadp() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTQpVar(void) {
   /* TQpVar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpVar));
   G__memfunc_setup("StepBound",916,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 2, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - v u 'TVectorT<double>' 'TVectorD' 1 - dir "
"d - 'Double_t' 0 - maxStep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindBlocking",1194,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 10, 3, 2, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - w u 'TVectorT<double>' 'TVectorD' 1 - wstep "
"u 'TVectorT<double>' 'TVectorD' 1 - u u 'TVectorT<double>' 'TVectorD' 1 - ustep "
"d - 'Double_t' 0 - maxStep d - 'Double_t' 1 - w_elt "
"d - 'Double_t' 1 - wstep_elt d - 'Double_t' 1 - u_elt "
"d - 'Double_t' 1 - ustep_elt i - - 1 - first_or_second", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindBlockingSub",1492,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 15, 3, 2, 0, 
"i - 'Int_t' 0 - n D - 'Double_t' 0 - w "
"i - 'Int_t' 0 - incw D - 'Double_t' 0 - wstep "
"i - 'Int_t' 0 - incwstep D - 'Double_t' 0 - u "
"i - 'Int_t' 0 - incu D - 'Double_t' 0 - ustep "
"i - 'Int_t' 0 - incustep d - 'Double_t' 0 - maxStep "
"d - 'Double_t' 1 - w_elt d - 'Double_t' 1 - wstep_elt "
"d - 'Double_t' 1 - u_elt d - 'Double_t' 1 - ustep_elt "
"i - 'Int_t' 1 - first_or_second", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpVar",574,G__G__Quadp_170_0_4, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpVar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpVar",574,G__G__Quadp_170_0_5, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpVar), -1, 0, 16, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - x_in u 'TVectorT<double>' 'TVectorD' 1 - s_in "
"u 'TVectorT<double>' 'TVectorD' 1 - y_in u 'TVectorT<double>' 'TVectorD' 1 - z_in "
"u 'TVectorT<double>' 'TVectorD' 1 - v_in u 'TVectorT<double>' 'TVectorD' 1 - gamma_in "
"u 'TVectorT<double>' 'TVectorD' 1 - w_in u 'TVectorT<double>' 'TVectorD' 1 - phi_in "
"u 'TVectorT<double>' 'TVectorD' 1 - t_in u 'TVectorT<double>' 'TVectorD' 1 - lambda_in "
"u 'TVectorT<double>' 'TVectorD' 1 - u_in u 'TVectorT<double>' 'TVectorD' 1 - pi_in "
"u 'TVectorT<double>' 'TVectorD' 1 - ixlow_in u 'TVectorT<double>' 'TVectorD' 1 - ixupp_in "
"u 'TVectorT<double>' 'TVectorD' 1 - iclow_in u 'TVectorT<double>' 'TVectorD' 1 - icupp_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpVar",574,G__G__Quadp_170_0_6, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpVar), -1, 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - nx i - 'Int_t' 0 - my "
"i - 'Int_t' 0 - mz u 'TVectorT<double>' 'TVectorD' 1 - ixlow "
"u 'TVectorT<double>' 'TVectorD' 1 - ixupp u 'TVectorT<double>' 'TVectorD' 1 - iclow "
"u 'TVectorT<double>' 'TVectorD' 1 - icupp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpVar",574,G__G__Quadp_170_0_7, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpVar), -1, 0, 1, 1, 1, 0, "u 'TQpVar' - 11 - another", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMu",482,G__G__Quadp_170_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "compute complementarity gap, obtained by taking the", (void*) NULL, 1);
   G__memfunc_setup("MuStep",606,G__G__Quadp_170_0_9, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'TQpVar' - 0 - step d - 'Double_t' 0 - alpha", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Saxpy",533,G__G__Quadp_170_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TQpVar' - 0 - b d - 'Double_t' 0 - alpha", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Negate",596,G__G__Quadp_170_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", "negate the value of all the variables in this structure", (void*) NULL, 1);
   G__memfunc_setup("StepBound",916,G__G__Quadp_170_0_12, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "U 'TQpVar' - 0 - b", "calculate the largest alpha in (0,1] such that the", (void*) NULL, 1);
   G__memfunc_setup("FindBlocking",1194,G__G__Quadp_170_0_13, 100, -1, G__defined_typename("Double_t"), 0, 6, 1, 1, 0, 
"U 'TQpVar' - 0 - step d - 'Double_t' 1 - primalValue "
"d - 'Double_t' 1 - primalStep d - 'Double_t' 1 - dualValue "
"d - 'Double_t' 1 - dualStep i - 'Int_t' 1 - firstOrSecond", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InteriorPoint",1366,G__G__Quadp_170_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - alpha d - 'Double_t' 0 - beta", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShiftBoundVariables",1935,G__G__Quadp_170_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - alpha d - 'Double_t' 0 - beta", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInteriorPoint",1554,G__G__Quadp_170_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "check whether this is an interior point. Useful as a", (void*) NULL, 1);
   G__memfunc_setup("Violation",949,G__G__Quadp_170_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "The amount by which the current variables violate the", (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Norm1",461,G__G__Quadp_170_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "compute the 1-norm of the variables", (void*) NULL, 1);
   G__memfunc_setup("NormInf",697,G__G__Quadp_170_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "compute the inf-norm of the variables", (void*) NULL, 1);
   G__memfunc_setup("ValidNonZeroPattern",1945,G__G__Quadp_170_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__G__Quadp_170_0_22, 117, G__get_linked_tagnum(&G__G__QuadpLN_TQpVar), -1, 1, 1, 1, 1, 0, "u 'TQpVar' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Quadp_170_0_23, 85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TQpVar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Quadp_170_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpVar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Quadp_170_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TQpVar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Quadp_170_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TQpVar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Quadp_170_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Quadp_170_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpVar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Quadp_170_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpVar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Quadp_170_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpVar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Quadp_170_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpVar::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TQpVar", 700, G__G__Quadp_170_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTQpDataBase(void) {
   /* TQpDataBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataBase));
   G__memfunc_setup("RandomlyChooseBoundedVariables",3073,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 10, 3, 2, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - x u 'TVectorT<double>' 'TVectorD' 1 - dualx "
"u 'TVectorT<double>' 'TVectorD' 1 - blx u 'TVectorT<double>' 'TVectorD' 1 - ixlow "
"u 'TVectorT<double>' 'TVectorD' 1 - bux u 'TVectorT<double>' 'TVectorD' 1 - ixupp "
"d - 'Double_t' 1 - ix d - 'Double_t' 0 - percentLowerOnly "
"d - 'Double_t' 0 - percentUpperOnly d - 'Double_t' 0 - percentBound", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PutQIntoAt",985,G__G__Quadp_172_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - M i - 'Int_t' 0 - row "
"i - 'Int_t' 0 - col", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PutAIntoAt",969,G__G__Quadp_172_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - M i - 'Int_t' 0 - row "
"i - 'Int_t' 0 - col", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PutCIntoAt",971,G__G__Quadp_172_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - M i - 'Int_t' 0 - row "
"i - 'Int_t' 0 - col", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Qmult",531,G__G__Quadp_172_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - beta u 'TVectorT<double>' 'TVectorD' 1 - y "
"d - 'Double_t' 0 - alpha u 'TVectorT<double>' 'TVectorD' 11 - x", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Amult",515,G__G__Quadp_172_0_9, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - beta u 'TVectorT<double>' 'TVectorD' 1 - y "
"d - 'Double_t' 0 - alpha u 'TVectorT<double>' 'TVectorD' 11 - x", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Cmult",517,G__G__Quadp_172_0_10, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - beta u 'TVectorT<double>' 'TVectorD' 1 - y "
"d - 'Double_t' 0 - alpha u 'TVectorT<double>' 'TVectorD' 11 - x", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ATransmult",1035,G__G__Quadp_172_0_11, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - beta u 'TVectorT<double>' 'TVectorD' 1 - y "
"d - 'Double_t' 0 - alpha u 'TVectorT<double>' 'TVectorD' 11 - x", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("CTransmult",1037,G__G__Quadp_172_0_12, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - beta u 'TVectorT<double>' 'TVectorD' 1 - y "
"d - 'Double_t' 0 - alpha u 'TVectorT<double>' 'TVectorD' 11 - x", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetDiagonalOfQ",1349,G__G__Quadp_172_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - dQ", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetG",359,G__G__Quadp_172_0_14, 117, G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBa",451,G__G__Quadp_172_0_15, 117, G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXupperBound",1436,G__G__Quadp_172_0_16, 117, G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetiXupperBound",1541,G__G__Quadp_172_0_17, 117, G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXlowerBound",1433,G__G__Quadp_172_0_18, 117, G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetiXlowerBound",1538,G__G__Quadp_172_0_19, 117, G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSupperBound",1431,G__G__Quadp_172_0_20, 117, G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetiSupperBound",1536,G__G__Quadp_172_0_21, 117, G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSlowerBound",1428,G__G__Quadp_172_0_22, 117, G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetiSlowerBound",1533,G__G__Quadp_172_0_23, 117, G__get_linked_tagnum(&G__G__QuadpLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DataNorm",790,G__G__Quadp_172_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("DataRandom",987,G__G__Quadp_172_0_25, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - x u 'TVectorT<double>' 'TVectorD' 1 - y "
"u 'TVectorT<double>' 'TVectorD' 1 - z u 'TVectorT<double>' 'TVectorD' 1 - s", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ObjectiveValue",1432,G__G__Quadp_172_0_26, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "U 'TQpVar' - 0 - vars", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("operator=",937,G__G__Quadp_172_0_27, 117, G__get_linked_tagnum(&G__G__QuadpLN_TQpDataBase), -1, 1, 1, 1, 1, 0, "u 'TQpDataBase' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Quadp_172_0_28, 85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TQpDataBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Quadp_172_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpDataBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Quadp_172_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TQpDataBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Quadp_172_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TQpDataBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Quadp_172_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Quadp_172_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpDataBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Quadp_172_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpDataBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Quadp_172_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpDataBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Quadp_172_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpDataBase::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TQpDataBase", 1160, G__G__Quadp_172_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTQpDataDens(void) {
   /* TQpDataDens */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataDens));
   G__memfunc_setup("TQpDataDens",1049,G__G__Quadp_173_0_1, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpDataDens), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpDataDens",1049,G__G__Quadp_173_0_2, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpDataDens), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - nx i - 'Int_t' 0 - my "
"i - 'Int_t' 0 - mz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpDataDens",1049,G__G__Quadp_173_0_3, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpDataDens), -1, 0, 13, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - c u 'TMatrixTSym<double>' 'TMatrixDSym' 1 - Q "
"u 'TVectorT<double>' 'TVectorD' 1 - xlow u 'TVectorT<double>' 'TVectorD' 1 - ixlow "
"u 'TVectorT<double>' 'TVectorD' 1 - xupp u 'TVectorT<double>' 'TVectorD' 1 - ixupp "
"u 'TMatrixT<double>' 'TMatrixD' 1 - A u 'TVectorT<double>' 'TVectorD' 1 - bA "
"u 'TMatrixT<double>' 'TMatrixD' 1 - C u 'TVectorT<double>' 'TVectorD' 1 - clow "
"u 'TVectorT<double>' 'TVectorD' 1 - iclow u 'TVectorT<double>' 'TVectorD' 1 - cupp "
"u 'TVectorT<double>' 'TVectorD' 1 - icupp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpDataDens",1049,G__G__Quadp_173_0_4, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpDataDens), -1, 0, 1, 1, 1, 0, "u 'TQpDataDens' - 11 - another", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PutQIntoAt",985,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - M i - 'Int_t' 0 - row "
"i - 'Int_t' 0 - col", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PutAIntoAt",969,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - M i - 'Int_t' 0 - row "
"i - 'Int_t' 0 - col", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PutCIntoAt",971,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - M i - 'Int_t' 0 - row "
"i - 'Int_t' 0 - col", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Qmult",531,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - beta u 'TVectorT<double>' 'TVectorD' 1 - y "
"d - 'Double_t' 0 - alpha u 'TVectorT<double>' 'TVectorD' 11 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Amult",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - beta u 'TVectorT<double>' 'TVectorD' 1 - y "
"d - 'Double_t' 0 - alpha u 'TVectorT<double>' 'TVectorD' 11 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cmult",517,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - beta u 'TVectorT<double>' 'TVectorD' 1 - y "
"d - 'Double_t' 0 - alpha u 'TVectorT<double>' 'TVectorD' 11 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ATransmult",1035,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - beta u 'TVectorT<double>' 'TVectorD' 1 - y "
"d - 'Double_t' 0 - alpha u 'TVectorT<double>' 'TVectorD' 11 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CTransmult",1037,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - beta u 'TVectorT<double>' 'TVectorD' 1 - y "
"d - 'Double_t' 0 - alpha u 'TVectorT<double>' 'TVectorD' 11 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDiagonalOfQ",1349,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - dQ", "extract the diagonal of Q and put it in the vector dQ", (void*) NULL, 1);
   G__memfunc_setup("DataNorm",790,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DataRandom",987,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - x u 'TVectorT<double>' 'TVectorD' 1 - y "
"u 'TVectorT<double>' 'TVectorD' 1 - z u 'TVectorT<double>' 'TVectorD' 1 - s", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ObjectiveValue",1432,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "U 'TQpVar' - 0 - vars", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__G__Quadp_173_0_18, 117, G__get_linked_tagnum(&G__G__QuadpLN_TQpDataDens), -1, 1, 1, 1, 1, 0, "u 'TQpDataDens' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Quadp_173_0_19, 85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TQpDataDens::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Quadp_173_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpDataDens::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Quadp_173_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TQpDataDens::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Quadp_173_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TQpDataDens::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Quadp_173_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Quadp_173_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpDataDens::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Quadp_173_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpDataDens::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Quadp_173_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpDataDens::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Quadp_173_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpDataDens::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TQpDataDens", 1175, G__G__Quadp_173_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTQpResidual(void) {
   /* TQpResidual */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpResidual));
   G__memfunc_setup("GondzioProjection",1783,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 3, 2, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - v d - 'Double_t' 0 - rmin "
"d - 'Double_t' 0 - rmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpResidual",1102,G__G__Quadp_174_0_2, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpResidual), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpResidual",1102,G__G__Quadp_174_0_3, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpResidual), -1, 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - nx i - 'Int_t' 0 - my "
"i - 'Int_t' 0 - mz u 'TVectorT<double>' 'TVectorD' 1 - ixlow "
"u 'TVectorT<double>' 'TVectorD' 1 - ixupp u 'TVectorT<double>' 'TVectorD' 1 - iclow "
"u 'TVectorT<double>' 'TVectorD' 1 - icupp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpResidual",1102,G__G__Quadp_174_0_4, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpResidual), -1, 0, 1, 1, 1, 0, "u 'TQpResidual' - 11 - another", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResidualNorm",1525,G__G__Quadp_174_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDualityGap",1300,G__G__Quadp_174_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcResids",989,G__G__Quadp_174_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TQpDataBase' - 0 - problem U 'TQpVar' - 0 - vars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add_r3_xz_alpha",1475,G__G__Quadp_174_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TQpVar' - 0 - vars d - 'Double_t' 0 - alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set_r3_xz_alpha",1510,G__G__Quadp_174_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TQpVar' - 0 - vars d - 'Double_t' 0 - alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear_r3",747,G__G__Quadp_174_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", "set the complementarity component of the residuals", (void*) NULL, 0);
   G__memfunc_setup("Clear_r1r2",909,G__G__Quadp_174_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", "set the noncomplementarity components of the residual", (void*) NULL, 0);
   G__memfunc_setup("Project_r3",987,G__G__Quadp_174_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - rmin d - 'Double_t' 0 - rmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValidNonZeroPattern",1945,G__G__Quadp_174_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Quadp_174_0_14, 117, G__get_linked_tagnum(&G__G__QuadpLN_TQpResidual), -1, 1, 1, 1, 1, 0, "u 'TQpResidual' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Quadp_174_0_15, 85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TQpResidual::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Quadp_174_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpResidual::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Quadp_174_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TQpResidual::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Quadp_174_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TQpResidual::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Quadp_174_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Quadp_174_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpResidual::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Quadp_174_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpResidual::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Quadp_174_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpResidual::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Quadp_174_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpResidual::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TQpResidual", 1228, G__G__Quadp_174_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTQpProbBase(void) {
   /* TQpProbBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbBase));
   G__memfunc_setup("MakeData",760,G__G__Quadp_175_0_4, 85, G__get_linked_tagnum(&G__G__QuadpLN_TQpDataBase), -1, 0, 13, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - c u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - Q_in "
"u 'TVectorT<double>' 'TVectorD' 1 - xlo u 'TVectorT<double>' 'TVectorD' 1 - ixlo "
"u 'TVectorT<double>' 'TVectorD' 1 - xup u 'TVectorT<double>' 'TVectorD' 1 - ixup "
"u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - A_in u 'TVectorT<double>' 'TVectorD' 1 - bA "
"u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - C_in u 'TVectorT<double>' 'TVectorD' 1 - clo "
"u 'TVectorT<double>' 'TVectorD' 1 - iclo u 'TVectorT<double>' 'TVectorD' 1 - cup "
"u 'TVectorT<double>' 'TVectorD' 1 - icup", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("MakeResiduals",1322,G__G__Quadp_175_0_5, 85, G__get_linked_tagnum(&G__G__QuadpLN_TQpResidual), -1, 0, 1, 1, 1, 0, "U 'TQpDataBase' - 10 - data", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("MakeVariables",1303,G__G__Quadp_175_0_6, 85, G__get_linked_tagnum(&G__G__QuadpLN_TQpVar), -1, 0, 1, 1, 1, 0, "U 'TQpDataBase' - 10 - data", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("MakeLinSys",992,G__G__Quadp_175_0_7, 85, G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverBase), -1, 0, 1, 1, 1, 0, "U 'TQpDataBase' - 10 - data", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("JoinRHS",637,G__G__Quadp_175_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - rhs_in u 'TVectorT<double>' 'TVectorD' 1 - rhs1_in "
"u 'TVectorT<double>' 'TVectorD' 1 - rhs2_in u 'TVectorT<double>' 'TVectorD' 1 - rhs3_in", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SeparateVars",1233,G__G__Quadp_175_0_9, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - x_in u 'TVectorT<double>' 'TVectorD' 1 - y_in "
"u 'TVectorT<double>' 'TVectorD' 1 - z_in u 'TVectorT<double>' 'TVectorD' 1 - vars_in", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("operator=",937,G__G__Quadp_175_0_10, 117, G__get_linked_tagnum(&G__G__QuadpLN_TQpProbBase), -1, 1, 1, 1, 1, 0, "u 'TQpProbBase' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Quadp_175_0_11, 85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TQpProbBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Quadp_175_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpProbBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Quadp_175_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TQpProbBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Quadp_175_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TQpProbBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Quadp_175_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Quadp_175_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpProbBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Quadp_175_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpProbBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Quadp_175_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpProbBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Quadp_175_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpProbBase::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TQpProbBase", 1185, G__G__Quadp_175_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTQpLinSolverBase(void) {
   /* TQpLinSolverBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverBase));
   G__memfunc_setup("Factor",607,G__G__Quadp_176_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TQpDataBase' - 0 - prob U 'TQpVar' - 0 - vars", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Solve",521,G__G__Quadp_176_0_5, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TQpDataBase' - 0 - prob U 'TQpVar' - 0 - vars "
"U 'TQpResidual' - 0 - resids U 'TQpVar' - 0 - step", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("JoinRHS",637,G__G__Quadp_176_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - rhs u 'TVectorT<double>' 'TVectorD' 1 - rhs1 "
"u 'TVectorT<double>' 'TVectorD' 1 - rhs2 u 'TVectorT<double>' 'TVectorD' 1 - rhs3", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SeparateVars",1233,G__G__Quadp_176_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - vars1 u 'TVectorT<double>' 'TVectorD' 1 - vars2 "
"u 'TVectorT<double>' 'TVectorD' 1 - vars3 u 'TVectorT<double>' 'TVectorD' 1 - vars", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SolveXYZS",871,G__G__Quadp_176_0_8, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - stepx u 'TVectorT<double>' 'TVectorD' 1 - stepy "
"u 'TVectorT<double>' 'TVectorD' 1 - stepz u 'TVectorT<double>' 'TVectorD' 1 - steps "
"u 'TVectorT<double>' 'TVectorD' 1 - ztemp U 'TQpDataBase' - 0 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SolveCompressed",1566,G__G__Quadp_176_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - rhs", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PutXDiagonal",1200,G__G__Quadp_176_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - xdiag", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PutZDiagonal",1202,G__G__Quadp_176_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - zdiag", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ComputeDiagonals",1647,G__G__Quadp_176_0_12, 121, -1, -1, 0, 10, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - dd u 'TVectorT<double>' 'TVectorD' 1 - omega "
"u 'TVectorT<double>' 'TVectorD' 1 - t u 'TVectorT<double>' 'TVectorD' 1 - lambda "
"u 'TVectorT<double>' 'TVectorD' 1 - u u 'TVectorT<double>' 'TVectorD' 1 - pi "
"u 'TVectorT<double>' 'TVectorD' 1 - v u 'TVectorT<double>' 'TVectorD' 1 - gamma "
"u 'TVectorT<double>' 'TVectorD' 1 - w u 'TVectorT<double>' 'TVectorD' 1 - phi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__G__Quadp_176_0_13, 117, G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverBase), -1, 1, 1, 1, 1, 0, "u 'TQpLinSolverBase' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Quadp_176_0_14, 85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TQpLinSolverBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Quadp_176_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpLinSolverBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Quadp_176_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TQpLinSolverBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Quadp_176_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TQpLinSolverBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Quadp_176_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Quadp_176_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpLinSolverBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Quadp_176_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpLinSolverBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Quadp_176_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpLinSolverBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Quadp_176_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpLinSolverBase::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TQpLinSolverBase", 1708, G__G__Quadp_176_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTQpSolverBase(void) {
   /* TQpSolverBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpSolverBase));
   G__memfunc_setup("Start",526,G__G__Quadp_178_0_3, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TQpProbBase' - 0 - formulation U 'TQpVar' - 0 - iterate "
"U 'TQpDataBase' - 0 - prob U 'TQpResidual' - 0 - resid "
"U 'TQpVar' - 0 - step", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefStart",797,G__G__Quadp_178_0_4, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TQpProbBase' - 0 - formulation U 'TQpVar' - 0 - iterate "
"U 'TQpDataBase' - 0 - prob U 'TQpResidual' - 0 - resid "
"U 'TQpVar' - 0 - step", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SteveStart",1045,G__G__Quadp_178_0_5, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TQpProbBase' - 0 - formulation U 'TQpVar' - 0 - iterate "
"U 'TQpDataBase' - 0 - prob U 'TQpResidual' - 0 - resid "
"U 'TQpVar' - 0 - step", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DumbStart",918,G__G__Quadp_178_0_6, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TQpProbBase' - 0 - formulation U 'TQpVar' - 0 - iterate "
"U 'TQpDataBase' - 0 - prob U 'TQpResidual' - 0 - resid "
"U 'TQpVar' - 0 - step", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Solve",521,G__G__Quadp_178_0_7, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'TQpDataBase' - 0 - prob U 'TQpVar' - 0 - iterate "
"U 'TQpResidual' - 0 - resids", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FinalStepLength",1512,G__G__Quadp_178_0_8, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'TQpVar' - 0 - iterate U 'TQpVar' - 0 - step", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoMonitor",923,G__G__Quadp_178_0_9, 121, -1, -1, 0, 9, 1, 1, 0, 
"U 'TQpDataBase' - 0 - data U 'TQpVar' - 0 - vars "
"U 'TQpResidual' - 0 - resids d - 'Double_t' 0 - alpha "
"d - 'Double_t' 0 - sigma i - 'Int_t' 0 - i "
"d - 'Double_t' 0 - mu i - 'Int_t' 0 - stop_code "
"i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefMonitor",1015,G__G__Quadp_178_0_10, 121, -1, -1, 0, 9, 1, 1, 0, 
"U 'TQpDataBase' - 0 - data U 'TQpVar' - 0 - vars "
"U 'TQpResidual' - 0 - resids d - 'Double_t' 0 - alpha "
"d - 'Double_t' 0 - sigma i - 'Int_t' 0 - i "
"d - 'Double_t' 0 - mu i - 'Int_t' 0 - stop_code "
"i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("DoStatus",823,G__G__Quadp_178_0_11, 105, -1, G__defined_typename("Int_t"), 0, 6, 1, 1, 0, 
"U 'TQpDataBase' - 0 - data U 'TQpVar' - 0 - vars "
"U 'TQpResidual' - 0 - resids i - 'Int_t' 0 - i "
"d - 'Double_t' 0 - mu i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefStatus",915,G__G__Quadp_178_0_12, 105, -1, G__defined_typename("Int_t"), 0, 6, 1, 1, 0, 
"U 'TQpDataBase' - 0 - data U 'TQpVar' - 0 - vars "
"U 'TQpResidual' - 0 - resids i - 'Int_t' 0 - i "
"d - 'Double_t' 0 - mu i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLinearSystem",1536,G__G__Quadp_178_0_13, 85, G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMuTol",797,G__G__Quadp_178_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuTol",785,G__G__Quadp_178_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArTol",782,G__G__Quadp_178_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArTol",770,G__G__Quadp_178_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataNorm",790,G__G__Quadp_178_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Quadp_178_0_19, 117, G__get_linked_tagnum(&G__G__QuadpLN_TQpSolverBase), -1, 1, 1, 1, 1, 0, "u 'TQpSolverBase' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Quadp_178_0_20, 85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TQpSolverBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Quadp_178_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpSolverBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Quadp_178_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TQpSolverBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Quadp_178_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TQpSolverBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Quadp_178_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Quadp_178_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpSolverBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Quadp_178_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpSolverBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Quadp_178_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpSolverBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Quadp_178_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpSolverBase::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TQpSolverBase", 1417, G__G__Quadp_178_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGondzioSolver(void) {
   /* TGondzioSolver */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__QuadpLN_TGondzioSolver));
   G__memfunc_setup("TGondzioSolver",1449,G__G__Quadp_179_0_1, 105, G__get_linked_tagnum(&G__G__QuadpLN_TGondzioSolver), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGondzioSolver",1449,G__G__Quadp_179_0_2, 105, G__get_linked_tagnum(&G__G__QuadpLN_TGondzioSolver), -1, 0, 3, 1, 1, 0, 
"U 'TQpProbBase' - 0 - of U 'TQpDataBase' - 0 - prob "
"i - 'Int_t' 0 '0' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGondzioSolver",1449,G__G__Quadp_179_0_3, 105, G__get_linked_tagnum(&G__G__QuadpLN_TGondzioSolver), -1, 0, 1, 1, 1, 0, "u 'TGondzioSolver' - 11 - another", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Solve",521,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'TQpDataBase' - 0 - prob U 'TQpVar' - 0 - iterate "
"U 'TQpResidual' - 0 - resid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset_parameters",1686,G__G__Quadp_179_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", "reset parameters to their default values", (void*) NULL, 1);
   G__memfunc_setup("DefMonitor",1015,(G__InterfaceMethod) NULL,121, -1, -1, 0, 9, 1, 1, 0, 
"U 'TQpDataBase' - 0 - data U 'TQpVar' - 0 - vars "
"U 'TQpResidual' - 0 - resids d - 'Double_t' 0 - alpha "
"d - 'Double_t' 0 - sigma i - 'Int_t' 0 - i "
"d - 'Double_t' 0 - mu i - 'Int_t' 0 - status_code "
"i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__G__Quadp_179_0_7, 117, G__get_linked_tagnum(&G__G__QuadpLN_TGondzioSolver), -1, 1, 1, 1, 1, 0, "u 'TGondzioSolver' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Quadp_179_0_8, 85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGondzioSolver::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Quadp_179_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGondzioSolver::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Quadp_179_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGondzioSolver::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Quadp_179_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGondzioSolver::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Quadp_179_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Quadp_179_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGondzioSolver::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Quadp_179_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGondzioSolver::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Quadp_179_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGondzioSolver::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Quadp_179_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGondzioSolver::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGondzioSolver", 1575, G__G__Quadp_179_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMehrotraSolver(void) {
   /* TMehrotraSolver */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__QuadpLN_TMehrotraSolver));
   G__memfunc_setup("TMehrotraSolver",1553,G__G__Quadp_180_0_1, 105, G__get_linked_tagnum(&G__G__QuadpLN_TMehrotraSolver), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMehrotraSolver",1553,G__G__Quadp_180_0_2, 105, G__get_linked_tagnum(&G__G__QuadpLN_TMehrotraSolver), -1, 0, 3, 1, 1, 0, 
"U 'TQpProbBase' - 0 - of U 'TQpDataBase' - 0 - prob "
"i - 'Int_t' 0 '0' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMehrotraSolver",1553,G__G__Quadp_180_0_3, 105, G__get_linked_tagnum(&G__G__QuadpLN_TMehrotraSolver), -1, 0, 1, 1, 1, 0, "u 'TMehrotraSolver' - 11 - another", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Solve",521,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'TQpDataBase' - 0 - prob U 'TQpVar' - 0 - iterate "
"U 'TQpResidual' - 0 - resid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefMonitor",1015,(G__InterfaceMethod) NULL,121, -1, -1, 0, 9, 1, 1, 0, 
"U 'TQpDataBase' - 0 - data U 'TQpVar' - 0 - vars "
"U 'TQpResidual' - 0 - resids d - 'Double_t' 0 - alpha "
"d - 'Double_t' 0 - sigma i - 'Int_t' 0 - i "
"d - 'Double_t' 0 - mu i - 'Int_t' 0 - status_code "
"i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__G__Quadp_180_0_6, 117, G__get_linked_tagnum(&G__G__QuadpLN_TMehrotraSolver), -1, 1, 1, 1, 1, 0, "u 'TMehrotraSolver' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Quadp_180_0_7, 85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMehrotraSolver::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Quadp_180_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMehrotraSolver::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Quadp_180_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMehrotraSolver::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Quadp_180_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMehrotraSolver::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Quadp_180_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Quadp_180_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMehrotraSolver::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Quadp_180_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMehrotraSolver::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Quadp_180_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMehrotraSolver::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Quadp_180_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMehrotraSolver::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TMehrotraSolver", 1679, G__G__Quadp_180_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTQpDataSparse(void) {
   /* TQpDataSparse */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataSparse));
   G__memfunc_setup("TQpDataSparse",1277,G__G__Quadp_181_0_1, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpDataSparse), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpDataSparse",1277,G__G__Quadp_181_0_2, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpDataSparse), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - nx i - 'Int_t' 0 - my "
"i - 'Int_t' 0 - mz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpDataSparse",1277,G__G__Quadp_181_0_3, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpDataSparse), -1, 0, 13, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - c u 'TMatrixTSparse<double>' 'TMatrixDSparse' 1 - Q "
"u 'TVectorT<double>' 'TVectorD' 1 - xlow u 'TVectorT<double>' 'TVectorD' 1 - ixlow "
"u 'TVectorT<double>' 'TVectorD' 1 - xupp u 'TVectorT<double>' 'TVectorD' 1 - ixupp "
"u 'TMatrixTSparse<double>' 'TMatrixDSparse' 1 - A u 'TVectorT<double>' 'TVectorD' 1 - bA "
"u 'TMatrixTSparse<double>' 'TMatrixDSparse' 1 - C u 'TVectorT<double>' 'TVectorD' 1 - clow "
"u 'TVectorT<double>' 'TVectorD' 1 - iclow u 'TVectorT<double>' 'TVectorD' 1 - cupp "
"u 'TVectorT<double>' 'TVectorD' 1 - icupp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpDataSparse",1277,G__G__Quadp_181_0_4, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpDataSparse), -1, 0, 1, 1, 1, 0, "u 'TQpDataSparse' - 11 - another", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNonZeros",1130,G__G__Quadp_181_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - nnzQ i - 'Int_t' 0 - nnzA "
"i - 'Int_t' 0 - nnzC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PutQIntoAt",985,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - M i - 'Int_t' 0 - row "
"i - 'Int_t' 0 - col", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PutAIntoAt",969,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - M i - 'Int_t' 0 - row "
"i - 'Int_t' 0 - col", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PutCIntoAt",971,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - M i - 'Int_t' 0 - row "
"i - 'Int_t' 0 - col", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Qmult",531,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - beta u 'TVectorT<double>' 'TVectorD' 1 - y "
"d - 'Double_t' 0 - alpha u 'TVectorT<double>' 'TVectorD' 11 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Amult",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - beta u 'TVectorT<double>' 'TVectorD' 1 - y "
"d - 'Double_t' 0 - alpha u 'TVectorT<double>' 'TVectorD' 11 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cmult",517,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - beta u 'TVectorT<double>' 'TVectorD' 1 - y "
"d - 'Double_t' 0 - alpha u 'TVectorT<double>' 'TVectorD' 11 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ATransmult",1035,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - beta u 'TVectorT<double>' 'TVectorD' 1 - y "
"d - 'Double_t' 0 - alpha u 'TVectorT<double>' 'TVectorD' 11 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CTransmult",1037,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - beta u 'TVectorT<double>' 'TVectorD' 1 - y "
"d - 'Double_t' 0 - alpha u 'TVectorT<double>' 'TVectorD' 11 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDiagonalOfQ",1349,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - dQ", "extract the diagonal of Q and put it in the vector dQ", (void*) NULL, 1);
   G__memfunc_setup("DataNorm",790,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DataRandom",987,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - x u 'TVectorT<double>' 'TVectorD' 1 - y "
"u 'TVectorT<double>' 'TVectorD' 1 - z u 'TVectorT<double>' 'TVectorD' 1 - s", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ObjectiveValue",1432,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "U 'TQpVar' - 0 - vars", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__G__Quadp_181_0_19, 117, G__get_linked_tagnum(&G__G__QuadpLN_TQpDataSparse), -1, 1, 1, 1, 1, 0, "u 'TQpDataSparse' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Quadp_181_0_20, 85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TQpDataSparse::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Quadp_181_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpDataSparse::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Quadp_181_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TQpDataSparse::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Quadp_181_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TQpDataSparse::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Quadp_181_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Quadp_181_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpDataSparse::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Quadp_181_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpDataSparse::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Quadp_181_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpDataSparse::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Quadp_181_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpDataSparse::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TQpDataSparse", 1403, G__G__Quadp_181_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTQpProbDens(void) {
   /* TQpProbDens */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbDens));
   G__memfunc_setup("TQpProbDens",1074,G__G__Quadp_182_0_1, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpProbDens), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpProbDens",1074,G__G__Quadp_182_0_2, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpProbDens), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - nx i - 'Int_t' 0 - my "
"i - 'Int_t' 0 - mz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpProbDens",1074,G__G__Quadp_182_0_3, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpProbDens), -1, 0, 1, 1, 1, 0, "u 'TQpProbDens' - 11 - another", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeData",760,G__G__Quadp_182_0_4, 85, G__get_linked_tagnum(&G__G__QuadpLN_TQpDataBase), -1, 0, 13, 1, 1, 0, 
"D - 'Double_t' 0 - c D - 'Double_t' 0 - Q "
"D - 'Double_t' 0 - xlo G - 'Bool_t' 0 - ixlo "
"D - 'Double_t' 0 - xup G - 'Bool_t' 0 - ixup "
"D - 'Double_t' 0 - A D - 'Double_t' 0 - bA "
"D - 'Double_t' 0 - C D - 'Double_t' 0 - clo "
"G - 'Bool_t' 0 - iclo D - 'Double_t' 0 - cup "
"G - 'Bool_t' 0 - icup", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeData",760,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TQpDataBase), -1, 0, 13, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - c u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - Q_in "
"u 'TVectorT<double>' 'TVectorD' 1 - xlo u 'TVectorT<double>' 'TVectorD' 1 - ixlo "
"u 'TVectorT<double>' 'TVectorD' 1 - xup u 'TVectorT<double>' 'TVectorD' 1 - ixup "
"u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - A_in u 'TVectorT<double>' 'TVectorD' 1 - bA "
"u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - C_in u 'TVectorT<double>' 'TVectorD' 1 - clo "
"u 'TVectorT<double>' 'TVectorD' 1 - iclo u 'TVectorT<double>' 'TVectorD' 1 - cup "
"u 'TVectorT<double>' 'TVectorD' 1 - icup", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeResiduals",1322,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TQpResidual), -1, 0, 1, 1, 1, 0, "U 'TQpDataBase' - 10 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeVariables",1303,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TQpVar), -1, 0, 1, 1, 1, 0, "U 'TQpDataBase' - 10 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeLinSys",992,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverBase), -1, 0, 1, 1, 1, 0, "U 'TQpDataBase' - 10 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("JoinRHS",637,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - rhs_in u 'TVectorT<double>' 'TVectorD' 1 - rhs1_in "
"u 'TVectorT<double>' 'TVectorD' 1 - rhs2_in u 'TVectorT<double>' 'TVectorD' 1 - rhs3_in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SeparateVars",1233,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - x_in u 'TVectorT<double>' 'TVectorD' 1 - y_in "
"u 'TVectorT<double>' 'TVectorD' 1 - z_in u 'TVectorT<double>' 'TVectorD' 1 - vars_in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeRandomData",1369,G__G__Quadp_182_0_11, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TQpDataDens' - 1 - data U 'TQpVar' - 1 - soln "
"i - 'Int_t' 0 - nnzQ i - 'Int_t' 0 - nnzA "
"i - 'Int_t' 0 - nnzC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Quadp_182_0_12, 117, G__get_linked_tagnum(&G__G__QuadpLN_TQpProbDens), -1, 1, 1, 1, 1, 0, "u 'TQpProbDens' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Quadp_182_0_13, 85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TQpProbDens::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Quadp_182_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpProbDens::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Quadp_182_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TQpProbDens::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Quadp_182_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TQpProbDens::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Quadp_182_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Quadp_182_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpProbDens::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Quadp_182_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpProbDens::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Quadp_182_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpProbDens::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Quadp_182_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpProbDens::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TQpProbDens", 1200, G__G__Quadp_182_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTQpLinSolverDens(void) {
   /* TQpLinSolverDens */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverDens));
   G__memfunc_setup("TQpLinSolverDens",1597,G__G__Quadp_187_0_1, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverDens), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpLinSolverDens",1597,G__G__Quadp_187_0_2, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverDens), -1, 0, 2, 1, 1, 0, 
"U 'TQpProbDens' - 0 - factory U 'TQpDataDens' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpLinSolverDens",1597,G__G__Quadp_187_0_3, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverDens), -1, 0, 1, 1, 1, 0, "u 'TQpLinSolverDens' - 11 - another", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Factor",607,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TQpDataBase' - 0 - prob U 'TQpVar' - 0 - vars", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SolveCompressed",1566,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - rhs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PutXDiagonal",1200,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - xdiag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PutZDiagonal",1202,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - zdiag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__G__Quadp_187_0_8, 117, G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverDens), -1, 1, 1, 1, 1, 0, "u 'TQpLinSolverDens' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Quadp_187_0_9, 85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TQpLinSolverDens::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Quadp_187_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpLinSolverDens::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Quadp_187_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TQpLinSolverDens::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Quadp_187_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TQpLinSolverDens::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Quadp_187_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Quadp_187_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpLinSolverDens::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Quadp_187_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpLinSolverDens::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Quadp_187_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpLinSolverDens::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Quadp_187_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpLinSolverDens::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TQpLinSolverDens", 1723, G__G__Quadp_187_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTQpProbSparse(void) {
   /* TQpProbSparse */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbSparse));
   G__memfunc_setup("TQpProbSparse",1302,G__G__Quadp_188_0_1, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpProbSparse), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpProbSparse",1302,G__G__Quadp_188_0_2, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpProbSparse), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - nx i - 'Int_t' 0 - my "
"i - 'Int_t' 0 - mz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpProbSparse",1302,G__G__Quadp_188_0_3, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpProbSparse), -1, 0, 1, 1, 1, 0, "u 'TQpProbSparse' - 11 - another", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeData",760,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TQpDataBase), -1, 0, 13, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - c u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - Q_in "
"u 'TVectorT<double>' 'TVectorD' 1 - xlo u 'TVectorT<double>' 'TVectorD' 1 - ixlo "
"u 'TVectorT<double>' 'TVectorD' 1 - xup u 'TVectorT<double>' 'TVectorD' 1 - ixup "
"u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - A_in u 'TVectorT<double>' 'TVectorD' 1 - bA "
"u 'TMatrixTBase<double>' 'TMatrixDBase' 1 - C_in u 'TVectorT<double>' 'TVectorD' 1 - clo "
"u 'TVectorT<double>' 'TVectorD' 1 - iclo u 'TVectorT<double>' 'TVectorD' 1 - cup "
"u 'TVectorT<double>' 'TVectorD' 1 - icup", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeResiduals",1322,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TQpResidual), -1, 0, 1, 1, 1, 0, "U 'TQpDataBase' - 10 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeVariables",1303,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TQpVar), -1, 0, 1, 1, 1, 0, "U 'TQpDataBase' - 10 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeLinSys",992,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverBase), -1, 0, 1, 1, 1, 0, "U 'TQpDataBase' - 10 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("JoinRHS",637,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - rhs_in u 'TVectorT<double>' 'TVectorD' 1 - rhs1_in "
"u 'TVectorT<double>' 'TVectorD' 1 - rhs2_in u 'TVectorT<double>' 'TVectorD' 1 - rhs3_in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SeparateVars",1233,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 1 - x_in u 'TVectorT<double>' 'TVectorD' 1 - y_in "
"u 'TVectorT<double>' 'TVectorD' 1 - z_in u 'TVectorT<double>' 'TVectorD' 1 - vars_in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeRandomData",1369,G__G__Quadp_188_0_10, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TQpDataSparse' - 1 - data U 'TQpVar' - 1 - soln "
"i - 'Int_t' 0 - nnzQ i - 'Int_t' 0 - nnzA "
"i - 'Int_t' 0 - nnzC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__Quadp_188_0_11, 117, G__get_linked_tagnum(&G__G__QuadpLN_TQpProbSparse), -1, 1, 1, 1, 1, 0, "u 'TQpProbSparse' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Quadp_188_0_12, 85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TQpProbSparse::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Quadp_188_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpProbSparse::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Quadp_188_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TQpProbSparse::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Quadp_188_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TQpProbSparse::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Quadp_188_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Quadp_188_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpProbSparse::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Quadp_188_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpProbSparse::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Quadp_188_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpProbSparse::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Quadp_188_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpProbSparse::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TQpProbSparse", 1428, G__G__Quadp_188_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTQpLinSolverSparse(void) {
   /* TQpLinSolverSparse */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverSparse));
   G__memfunc_setup("TQpLinSolverSparse",1825,G__G__Quadp_193_0_1, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverSparse), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpLinSolverSparse",1825,G__G__Quadp_193_0_2, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverSparse), -1, 0, 2, 1, 1, 0, 
"U 'TQpProbSparse' - 0 - factory U 'TQpDataSparse' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TQpLinSolverSparse",1825,G__G__Quadp_193_0_3, 105, G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverSparse), -1, 0, 1, 1, 1, 0, "u 'TQpLinSolverSparse' - 11 - another", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Factor",607,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TQpDataBase' - 0 - prob U 'TQpVar' - 0 - vars", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SolveCompressed",1566,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - rhs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PutXDiagonal",1200,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - xdiag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PutZDiagonal",1202,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TVectorT<double>' 'TVectorD' 1 - zdiag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__G__Quadp_193_0_8, 117, G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverSparse), -1, 1, 1, 1, 1, 0, "u 'TQpLinSolverSparse' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Quadp_193_0_9, 85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TQpLinSolverSparse::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Quadp_193_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpLinSolverSparse::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Quadp_193_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TQpLinSolverSparse::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Quadp_193_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TQpLinSolverSparse::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__QuadpLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Quadp_193_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Quadp_193_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpLinSolverSparse::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Quadp_193_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpLinSolverSparse::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Quadp_193_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TQpLinSolverSparse::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Quadp_193_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TQpLinSolverSparse::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TQpLinSolverSparse", 1951, G__G__Quadp_193_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Quadp() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Quadp() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Quadp() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__QuadpLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TQpVar = { "TQpVar" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TQpVarcLcLEVarBlock = { "TQpVar::EVarBlock" , 101 , -1 };
G__linked_taginfo G__G__QuadpLN_TQpDataBase = { "TQpDataBase" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TQpDataDens = { "TQpDataDens" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TQpResidual = { "TQpResidual" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TQpProbBase = { "TQpProbBase" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TQpLinSolverBase = { "TQpLinSolverBase" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TQpSolverBase = { "TQpSolverBase" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TGondzioSolver = { "TGondzioSolver" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TMehrotraSolver = { "TMehrotraSolver" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TQpDataSparse = { "TQpDataSparse" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TQpProbDens = { "TQpProbDens" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TDecompLU = { "TDecompLU" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TQpLinSolverDens = { "TQpLinSolverDens" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TQpProbSparse = { "TQpProbSparse" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TDecompSparse = { "TDecompSparse" , 99 , -1 };
G__linked_taginfo G__G__QuadpLN_TQpLinSolverSparse = { "TQpLinSolverSparse" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Quadp() {
  G__G__QuadpLN_TClass.tagnum = -1 ;
  G__G__QuadpLN_TBuffer.tagnum = -1 ;
  G__G__QuadpLN_TMemberInspector.tagnum = -1 ;
  G__G__QuadpLN_TObject.tagnum = -1 ;
  G__G__QuadpLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__QuadpLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__QuadpLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__G__QuadpLN_TQpVar.tagnum = -1 ;
  G__G__QuadpLN_TQpVarcLcLEVarBlock.tagnum = -1 ;
  G__G__QuadpLN_TQpDataBase.tagnum = -1 ;
  G__G__QuadpLN_TQpDataDens.tagnum = -1 ;
  G__G__QuadpLN_TQpResidual.tagnum = -1 ;
  G__G__QuadpLN_TQpProbBase.tagnum = -1 ;
  G__G__QuadpLN_TQpLinSolverBase.tagnum = -1 ;
  G__G__QuadpLN_TQpSolverBase.tagnum = -1 ;
  G__G__QuadpLN_TGondzioSolver.tagnum = -1 ;
  G__G__QuadpLN_TMehrotraSolver.tagnum = -1 ;
  G__G__QuadpLN_TQpDataSparse.tagnum = -1 ;
  G__G__QuadpLN_TQpProbDens.tagnum = -1 ;
  G__G__QuadpLN_TDecompLU.tagnum = -1 ;
  G__G__QuadpLN_TQpLinSolverDens.tagnum = -1 ;
  G__G__QuadpLN_TQpProbSparse.tagnum = -1 ;
  G__G__QuadpLN_TDecompSparse.tagnum = -1 ;
  G__G__QuadpLN_TQpLinSolverSparse.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Quadp() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TMatrixTSparseDiaglEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpVar),sizeof(TQpVar),-1,327424,"Qp Variables class",G__setup_memvarTQpVar,G__setup_memfuncTQpVar);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TQpVarcLcLEVarBlock);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataBase),sizeof(TQpDataBase),-1,327436,"Qp Base Data class",G__setup_memvarTQpDataBase,G__setup_memfuncTQpDataBase);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataDens),sizeof(TQpDataDens),-1,327424,"Qp Data class for Dens formulation",G__setup_memvarTQpDataDens,G__setup_memfuncTQpDataDens);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpResidual),sizeof(TQpResidual),-1,327424,"Qp Residual class",G__setup_memvarTQpResidual,G__setup_memfuncTQpResidual);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbBase),sizeof(TQpProbBase),-1,327430,"Qp problem formulation base class",G__setup_memvarTQpProbBase,G__setup_memfuncTQpProbBase);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverBase),sizeof(TQpLinSolverBase),-1,327427,"Qp linear solver base class",G__setup_memvarTQpLinSolverBase,G__setup_memfuncTQpLinSolverBase);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpSolverBase),sizeof(TQpSolverBase),-1,294658,"Qp Solver class",G__setup_memvarTQpSolverBase,G__setup_memfuncTQpSolverBase);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__QuadpLN_TGondzioSolver),sizeof(TGondzioSolver),-1,327424,"Gondzio Qp Solver class",G__setup_memvarTGondzioSolver,G__setup_memfuncTGondzioSolver);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__QuadpLN_TMehrotraSolver),sizeof(TMehrotraSolver),-1,327424,"Mehrotra Qp Solver class",G__setup_memvarTMehrotraSolver,G__setup_memfuncTMehrotraSolver);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpDataSparse),sizeof(TQpDataSparse),-1,327424,"Qp Data class for Sparse formulation",G__setup_memvarTQpDataSparse,G__setup_memfuncTQpDataSparse);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbDens),sizeof(TQpProbDens),-1,327424,"Qp dens problem formulation class",G__setup_memvarTQpProbDens,G__setup_memfuncTQpProbDens);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TDecompLU);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverDens),sizeof(TQpLinSolverDens),-1,327424,"Qp linear solver class for Dens formulation",G__setup_memvarTQpLinSolverDens,G__setup_memfuncTQpLinSolverDens);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpProbSparse),sizeof(TQpProbSparse),-1,327424,"Qp sparse problem formulation class",G__setup_memvarTQpProbSparse,G__setup_memfuncTQpProbSparse);
   G__get_linked_tagnum_fwd(&G__G__QuadpLN_TDecompSparse);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__QuadpLN_TQpLinSolverSparse),sizeof(TQpLinSolverSparse),-1,327424,"Qp linear solver class for Sparse formulation",G__setup_memvarTQpLinSolverSparse,G__setup_memfuncTQpLinSolverSparse);
}
extern "C" void G__cpp_setupG__Quadp(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Quadp()");
  G__set_cpp_environmentG__Quadp();
  G__cpp_setup_tagtableG__Quadp();

  G__cpp_setup_inheritanceG__Quadp();

  G__cpp_setup_typetableG__Quadp();

  G__cpp_setup_memvarG__Quadp();

  G__cpp_setup_memfuncG__Quadp();
  G__cpp_setup_globalG__Quadp();
  G__cpp_setup_funcG__Quadp();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Quadp();
  return;
}
class G__cpp_setup_initG__Quadp {
  public:
    G__cpp_setup_initG__Quadp() { G__add_setup_func("G__Quadp",(G__incsetup)(&G__cpp_setupG__Quadp)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Quadp() { G__remove_setup_func("G__Quadp"); }
};
G__cpp_setup_initG__Quadp G__cpp_setup_initializerG__Quadp;

